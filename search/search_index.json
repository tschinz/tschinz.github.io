{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Index","text":""},{"location":"index.html#welcome-to-my-000","title":"Welcome to my (0,0,0)","text":"<p>This webpage is a compilation of knowledge I\u2019ve pursued and documented over the years. It is a living project \u2014 a work in progress that does not need perfection, but reflects my passion for learning and sharing insights.</p> <p>Through experience, I\u2019ve discovered that crafting summaries and cheat sheets is the most effective way to master and retain new knowledge. This approach forms the foundation of this knowledge base.</p> <p>The journey began on paper in 1999 and transitioned to a webpage in 2004. Over the years, it has transformed alongside my learning process:</p> <ul> <li>ZWiki was its first iteration, embodying simplicity and collaboration.</li> <li>Znotes came next, focusing on personal, well-organized knowledge.</li> <li>Now, as Zentauri, it symbolizes a constellation of interconnected insights \u2014 a map of learning inspired by the stars.</li> </ul> <p>Feel free to explore the content. If it proves helpful to others, that\u2019s an added bonus. Thank you for visiting my evolving archive of understanding.</p>"},{"location":"index.html#favorites","title":"Favorites","text":"<ul> <li>MKDocs Syntax</li> <li>Rust<ul> <li>Syntax</li> </ul> </li> <li>Just Examples</li> <li>Linux Commandline<ul> <li>Nice to know CLI tools</li> </ul> </li> <li>Numbat</li> </ul>"},{"location":"about/index.html","title":"About","text":"<p>Not much to talk about. Check out the social links at the bottom the rest is here:</p> <p>{nav}</p>","tags":["about"]},{"location":"about/credits.html","title":"Credits","text":"<p> On this website information, images and documents are used. Hereafter these credits are all listed.</p> <p>Icons on this pages are from Svg Repo.</p> <p><code>credits</code></p>","tags":["about","credits"]},{"location":"about/getting_started.html","title":"How to use","text":"<p>The method below allows you to write and preview the doc easily thanks to VSCode and the Dev Container technology.</p> <p>Info</p> <p>We do not provide support for other installation methods. A condaenv.yml file is available at the root of the documentation one can consult the content of the <code>.devcontainer</code> folder to install the required programs and tools to build the documentation on its own.</p>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#requirements","title":"Requirements","text":"<ul> <li>Visual Studio Code</li> <li>Docker engine</li> <li>Dev Containers extension</li> </ul>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#quick-start","title":"Quick start","text":"<p>Clone the repository and open the folder in VSCode.</p> <pre><code>git clone https://github.com/tschinz/znotes.git &amp;&amp; cd znotes &amp;&amp; code .\n</code></pre> <p>The <code>.devcontainer</code> folder within the root of the documentation will be detected by VSCode and this latter will ask you to open the folder in a container. Confirm the action. If the dialog doesn't show up, open the command palette (<code>Ctrl+Shift+P</code> or <code>F1</code>) and search for <code>Dev Containers: Open Folder in Container...</code>.</p> <p>Once the container is built, you are ready to read and write some doc. A live preview is available at http://127.0.0.1:8000. This live preview update whenever a change in the source folder is detected.</p>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#install-new-package","title":"Install new package","text":"<p>If you write a documentation and find an useful extension or package to be added, use the standard <code>pip install</code> command. Note that this will install the package only on your local devcontainer. As long as you don't rebuild the container, you don't have to reinstall the package again. To make the installation of the package permanent, don't forget to add this latter in the <code>requirements.txt</code> file.</p>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#available-commands","title":"Available commands","text":"<p>This documentation comes with a <code>justfile</code> (Makefile replacement). Use <code>just -l</code> to see the availabe recipes:</p> <pre><code>$ just --list\nAvailable recipes:\n    build        # Build HTML static site\n    clean        # Delete build folder(s)\n    conda-create # Create the build environment\n    env-export   # Export the build environment\n    info         # Information about the environment\n    serve        # Build HTML static site and serve it locally\n    venv-create  # Create and source the python environment\n</code></pre>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#commit-your-changes","title":"Commit your changes","text":"<p>Before performing a commit the following steps are required:</p> <ul> <li>Verify the build of the documentation locally:     <pre><code>just clean &amp;&amp; just build\n</code></pre></li> <li>Solve important build <code>Warnings</code> and <code>Errors</code> (if any) in the output.</li> <li>Commit and push your changes</li> </ul>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/getting_started.html#continuous-integration-ci","title":"Continuous Integration (CI)","text":"<p>The CI is done with Github Actions with the file action-mkdocs.yml will run on each <code>main</code> commit and create a <code>_build/</code> folder which will be pushed onto the branch gh-pages and consequently be used by github to displayed static html pages.</p>","tags":["about","how to","mkdocs","getting started"]},{"location":"about/howtodocument.html","title":"HACK this doc","text":"<p> If you want to add your page to this documentation you need to add your source file <code>*.md</code> in the appropriate section. Every main section has its own folder structure and its own <code>img/</code> folder containing all images for this section.</p> <p>This documentation uses a a main <code>yml</code>-file mkdocs.yml that tell mkdocs which file, and in what order put it in the documentation tree.</p> <pre><code>- Home: index.md\n  - About:\n      - about/index.md\n      - Credits: about/credits.md\n  - Blog: blog/index.md\n</code></pre> <p>If you don't have enough knowledge about Markdown then you can also use the pandoc translator or use the internal Cheatsheet</p>","tags":["about - how to - mkdocs"]},{"location":"about/howtodocument.html#new-section","title":"New Section","text":"<p>A new section of subsection typically starts with an <code>index.md</code> file.</p>","tags":["about - how to - mkdocs"]},{"location":"about/howtodocument.html#resource-folders","title":"Resource Folders","text":"<p>Add an image folder in the section/subsection folder <code>section/img</code>, in case of additional documents as a <code>section/docs</code> folder too.</p>","tags":["about - how to - mkdocs"]},{"location":"about/howtodocument.html#write-the-contents","title":"Write the contents","text":"<p>That's it, now you can add all you want in the new section/subsection and all pages will show up in the documentation automatically.</p>","tags":["about - how to - mkdocs"]},{"location":"about/license.html","title":"License","text":"<p>Copyright (c) 2024, tschinz All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name znotes nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>","tags":["about","license"]},{"location":"about/tags.html","title":"Tags","text":"<p>Following is a list of relevant tags:</p>","tags":["about"]},{"location":"about/tags.html#tag:3d-printing","title":"3d-printing","text":"<ul> <li>            3D-Printing          </li> <li>            Filaments          </li> <li>            Filling          </li> <li>            Joins/Tolerances          </li> <li>            Slicing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:fuzzywuzzy","title":"Fuzzywuzzy","text":"<ul> <li>            Fuzzy Wuzzy          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:iec","title":"IEC","text":"<ul> <li>            General          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pynq-z1","title":"PYNQ-Z1","text":"<ul> <li>            General          </li> <li>            Overlays          </li> <li>            PYNQ-Package          </li> <li>            Xilinx PYNQ-Z1          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:plotly-dash","title":"Plotly Dash","text":"<ul> <li>            Install Plotly Dash          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:si","title":"SI","text":"<ul> <li>            General          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:xilinx","title":"Xilinx","text":"<ul> <li>            General          </li> <li>            Overlays          </li> <li>            PYNQ-Package          </li> <li>            Xilinx PYNQ-Z1          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:a-dark-room","title":"a dark room","text":"<ul> <li>            A Dark Room          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:about","title":"about","text":"<ul> <li>            About          </li> <li>            Credits          </li> <li>            Getting started          </li> <li>            License          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:about---how-to---mkdocs","title":"about - how to - mkdocs","text":"<ul> <li>            Hack this site          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ahk","title":"ahk","text":"<ul> <li>            AHK          </li> <li>            Key Definitions          </li> <li>            Tips &amp; Ticks          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:algorithms","title":"algorithms","text":"<ul> <li>            Algorithms          </li> <li>            Algorithms          </li> <li>            Big O Notation          </li> <li>            Memory Types          </li> <li>            Sorting          </li> <li>            Types of Algorithms          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:altera","title":"altera","text":"<ul> <li>            SDC Constraints          </li> <li>            Theory          </li> <li>            Usage          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:amd","title":"amd","text":"<ul> <li>            Xilinx UCF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:anaconda","title":"anaconda","text":"<ul> <li>            Anaconda          </li> <li>            Conda          </li> <li>            Install          </li> <li>            Intro          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:apache","title":"apache","text":"<ul> <li>            Apache          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:array","title":"array","text":"<ul> <li>            Memory Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ascii","title":"ascii","text":"<ul> <li>            ASCII          </li> <li>            ASCII-Art          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:atomic-habits","title":"atomic habits","text":"<ul> <li>            Habits          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:attributes","title":"attributes","text":"<ul> <li>            Attributes          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:audio","title":"audio","text":"<ul> <li>            Audio          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:bambu-studio","title":"bambu studio","text":"<ul> <li>            Slicing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:big-o-notation","title":"big O Notation","text":"<ul> <li>            Big O Notation          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:binary","title":"binary","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:bittorrent","title":"bittorrent","text":"<ul> <li>            Bittorrent          </li> <li>            Creating Torrents          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:blog","title":"blog","text":"<ul> <li>            Blog          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:board","title":"board","text":"<ul> <li>            Boards          </li> <li>            RPi Pico          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:books","title":"books","text":"<ul> <li>            Book Summary          </li> <li>            Books          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:borrowing","title":"borrowing","text":"<ul> <li>            Concepts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:braille","title":"braille","text":"<ul> <li>            Braille          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:brew","title":"brew","text":"<ul> <li>            Homebrew          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:c","title":"c","text":"<ul> <li>            C / C++          </li> <li>            Linkerscript          </li> <li>            Syntax          </li> <li>            XF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:c","title":"c++","text":"<ul> <li>            C / C++          </li> <li>            Linkerscript          </li> <li>            Syntax          </li> <li>            XF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:calculator","title":"calculator","text":"<ul> <li>            Basics          </li> <li>            Cheatsheet          </li> <li>            numbat          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cargo","title":"cargo","text":"<ul> <li>            Basic          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cargo-add","title":"cargo add","text":"<ul> <li>            Basic          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cargo-bundle","title":"cargo bundle","text":"<ul> <li>            Basic          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:catkin","title":"catkin","text":"<ul> <li>            Catkin Tools          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:chatgpt","title":"chatgpt","text":"<ul> <li>            Index          </li> <li>            RISEN          </li> <li>            RODES          </li> <li>            RTF          </li> <li>            Reasoning Prompt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cheatsheet","title":"cheatsheet","text":"<ul> <li>            Cheatsheet          </li> <li>            Cheatsheet          </li> <li>            Cheatsheet          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:chromium","title":"chromium","text":"<ul> <li>            Chromium          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cli","title":"cli","text":"<ul> <li>            .gitignore          </li> <li>            Basics          </li> <li>            Cheatsheet          </li> <li>            Comands          </li> <li>            General          </li> <li>            Git          </li> <li>            Gitflow          </li> <li>            Github          </li> <li>            Submodules          </li> <li>            git-cliff          </li> <li>            numbat          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cloudflare","title":"cloudflare","text":"<ul> <li>            Cloudflare          </li> <li>            Github Pages Custom Domain          </li> <li>            Redirect Subdomains          </li> <li>            Server Subdomains          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:cmder","title":"cmder","text":"<ul> <li>            Cmder          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:codes","title":"codes","text":"<ul> <li>            ASCII          </li> <li>            Braille          </li> <li>            Codes          </li> <li>            Morse          </li> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:coding","title":"coding","text":"<ul> <li>            AHK          </li> <li>            All Rights Reserved          </li> <li>            Attributes          </li> <li>            Awesome Packages          </li> <li>            Basic          </li> <li>            Basic          </li> <li>            Basics          </li> <li>            Basics          </li> <li>            Book Summary          </li> <li>            C / C++          </li> <li>            Catkin Tools          </li> <li>            Coding          </li> <li>            Coding Convention          </li> <li>            Colorama          </li> <li>            Commands          </li> <li>            Concepts          </li> <li>            Control Flow          </li> <li>            Conversion          </li> <li>            Data Structures &amp; Methods          </li> <li>            Data-Types          </li> <li>            Datetime          </li> <li>            Design Patterns          </li> <li>            DocString          </li> <li>            Error Handling          </li> <li>            Examples          </li> <li>            Examples          </li> <li>            Examples          </li> <li>            External Packages          </li> <li>            FPGA Scripting          </li> <li>            File          </li> <li>            Flake8          </li> <li>            Flask          </li> <li>            Fuzzy Wuzzy          </li> <li>            GTKWave          </li> <li>            General          </li> <li>            Generics          </li> <li>            Guidelines          </li> <li>            Install          </li> <li>            Install          </li> <li>            Install          </li> <li>            Install          </li> <li>            Intellij Idea          </li> <li>            Iterators          </li> <li>            Key Definitions          </li> <li>            Launch          </li> <li>            Libraries          </li> <li>            Libraries          </li> <li>            Libraries          </li> <li>            Licenses          </li> <li>            Lidar Driver          </li> <li>            Lifetimes          </li> <li>            Linkerscript          </li> <li>            MIT          </li> <li>            Memory Regions          </li> <li>            Memory Types          </li> <li>            Methods          </li> <li>            Model View Controller          </li> <li>            Modules          </li> <li>            Multithreading          </li> <li>            NSClasses          </li> <li>            Naming Conventions          </li> <li>            OSVVM          </li> <li>            Others          </li> <li>            Package          </li> <li>            Packages          </li> <li>            Pandas          </li> <li>            PiP          </li> <li>            PiPEnv          </li> <li>            Pillow          </li> <li>            Plotly          </li> <li>            Plotly Dash          </li> <li>            Plotly Dash          </li> <li>            Print          </li> <li>            Project          </li> <li>            Properties          </li> <li>            PyQt          </li> <li>            Python          </li> <li>            RISC-V          </li> <li>            ROS          </li> <li>            RViz          </li> <li>            Regex          </li> <li>            Request          </li> <li>            Rust          </li> <li>            Rust Embedded          </li> <li>            Rust2Python          </li> <li>            RustDoc          </li> <li>            SDC Constraints          </li> <li>            STDLib          </li> <li>            Scala          </li> <li>            Simulation          </li> <li>            Spinal HDL          </li> <li>            Streamlit          </li> <li>            Swift          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Synthesis          </li> <li>            TF2          </li> <li>            TQDM          </li> <li>            Tcl-Tk          </li> <li>            Testbench          </li> <li>            Testing          </li> <li>            Theory          </li> <li>            Time          </li> <li>            Tips &amp; Ticks          </li> <li>            Toolchain          </li> <li>            Tools          </li> <li>            Traits          </li> <li>            Types          </li> <li>            UI Element          </li> <li>            Usage          </li> <li>            VHDL          </li> <li>            Views          </li> <li>            VirtualEnv          </li> <li>            WTFPL          </li> <li>            Workspaces          </li> <li>            XF          </li> <li>            Xilinx UCF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:color","title":"color","text":"<ul> <li>            Color Palette          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:colorama","title":"colorama","text":"<ul> <li>            Colorama          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:commandline","title":"commandline","text":"<ul> <li>            Cheatsheet          </li> <li>            Cheatsheet          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Crontab          </li> <li>            DD          </li> <li>            General          </li> <li>            Network          </li> <li>            Nice to Know          </li> <li>            RClone          </li> <li>            RSync          </li> <li>            SSH          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:commits-to-changelog","title":"commits to changelog","text":"<ul> <li>            git-cliff          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:communication","title":"communication","text":"<ul> <li>            Communication          </li> <li>            Communmication Protocols          </li> <li>            Fast Friend Procedure          </li> <li>            I2C          </li> <li>            Modbus          </li> <li>            SPI          </li> <li>            UART          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:computer-science","title":"computer science","text":"<ul> <li>            Computer Science          </li> <li>            Memory Types          </li> <li>            SDR          </li> <li>            Sorting          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:computerscience","title":"computerscience","text":"<ul> <li>            ASCII          </li> <li>            Algorithms          </li> <li>            Algorithms          </li> <li>            Big O Notation          </li> <li>            Braille          </li> <li>            Codes          </li> <li>            Datascience          </li> <li>            Morse          </li> <li>            Number Systems          </li> <li>            Statistics          </li> <li>            Types of Algorithms          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:concepts","title":"concepts","text":"<ul> <li>            Concepts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:config","title":"config","text":"<ul> <li>            Config Files          </li> <li>            Scripts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:conversion","title":"conversion","text":"<ul> <li>            Conversion          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:credits","title":"credits","text":"<ul> <li>            Credits          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:crontab","title":"crontab","text":"<ul> <li>            Crontab          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:custom-domain","title":"custom domain","text":"<ul> <li>            Github Pages Custom Domain          </li> <li>            Server Subdomains          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:dashboard","title":"dashboard","text":"<ul> <li>            Plotly Dash          </li> <li>            Streamlit          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:datascience","title":"datascience","text":"<ul> <li>            ASCII          </li> <li>            Algorithms          </li> <li>            Algorithms          </li> <li>            Big O Notation          </li> <li>            Braille          </li> <li>            Datascience          </li> <li>            Statistics          </li> <li>            Types of Algorithms          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:datatypes","title":"datatypes","text":"<ul> <li>            Data-Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:datetime","title":"datetime","text":"<ul> <li>            Datetime          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:days-of-algo","title":"days of algo","text":"<ul> <li>            Algorithms          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:dd","title":"dd","text":"<ul> <li>            DD          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:decimal","title":"decimal","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:design-patterns","title":"design patterns","text":"<ul> <li>            Design Patterns          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:docker","title":"docker","text":"<ul> <li>            Basics          </li> <li>            Common Fixes          </li> <li>            Docker          </li> <li>            Docker CMD          </li> <li>            Dockerfile          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:docstring","title":"docstring","text":"<ul> <li>            DocString          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:dsahboard","title":"dsahboard","text":"<ul> <li>            Plotly Dash          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:email","title":"email","text":"<ul> <li>            Email Replies          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:embedded","title":"embedded","text":"<ul> <li>            Install          </li> <li>            RISC-V          </li> <li>            Rust Embedded          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:emoji","title":"emoji","text":"<ul> <li>            Curated          </li> <li>            Emoji          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:enrytion","title":"enrytion","text":"<ul> <li>            GnuPG          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:environment","title":"environment","text":"<ul> <li>            PiPEnv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:error-handling","title":"error handling","text":"<ul> <li>            Error Handling          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:esp32","title":"esp32","text":"<ul> <li>            ESP32-C3          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:espressif","title":"espressif","text":"<ul> <li>            ESP32-C3          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:examples","title":"examples","text":"<ul> <li>            Examples          </li> <li>            Examples          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:fast-friends-procedure","title":"fast friends procedure","text":"<ul> <li>            Fast Friend Procedure          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:filaments","title":"filaments","text":"<ul> <li>            Filaments          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:file","title":"file","text":"<ul> <li>            File          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:fileheaders","title":"fileheaders","text":"<ul> <li>            Fileheaders          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:filesystem","title":"filesystem","text":"<ul> <li>            Files          </li> <li>            Filesystem          </li> <li>            Setup          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:filling","title":"filling","text":"<ul> <li>            Filling          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:firewall","title":"firewall","text":"<ul> <li>            Firewall          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:flake8","title":"flake8","text":"<ul> <li>            Flake8          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:flask","title":"flask","text":"<ul> <li>            Flask          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:font","title":"font","text":"<ul> <li>            Fonts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:games","title":"games","text":"<ul> <li>            A Dark Room          </li> <li>            Games          </li> <li>            Terminal          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:geektool","title":"geektool","text":"<ul> <li>            GeekTools          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:generics","title":"generics","text":"<ul> <li>            Generics          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:getting-started","title":"getting started","text":"<ul> <li>            Getting started          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:git","title":"git","text":"<ul> <li>            .gitignore          </li> <li>            Comands          </li> <li>            General          </li> <li>            Git          </li> <li>            Gitflow          </li> <li>            Github          </li> <li>            Submodules          </li> <li>            git-cliff          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:git-cliff","title":"git-cliff","text":"<ul> <li>            git-cliff          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:gitbook","title":"gitbook","text":"<ul> <li>            GitBook          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:gitflow","title":"gitflow","text":"<ul> <li>            Gitflow          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:github","title":"github","text":"<ul> <li>            Github          </li> <li>            Github Pages Custom Domain          </li> <li>            Server Subdomains          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:gitignore","title":"gitignore","text":"<ul> <li>            .gitignore          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:gnupg","title":"gnupg","text":"<ul> <li>            GnuPG          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:google","title":"google","text":"<ul> <li>            Google          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:graphviz","title":"graphviz","text":"<ul> <li>            GraphViz          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:gtkwave","title":"gtkwave","text":"<ul> <li>            GTKWave          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:guidelines","title":"guidelines","text":"<ul> <li>            Guidelines          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:habits","title":"habits","text":"<ul> <li>            Habits          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:happiness","title":"happiness","text":"<ul> <li>            Happiness          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hardware","title":"hardware","text":"<ul> <li>            3D-Printing          </li> <li>            Boards          </li> <li>            Communmication Protocols          </li> <li>            ESP32-C3          </li> <li>            Filaments          </li> <li>            Filling          </li> <li>            General          </li> <li>            General          </li> <li>            Hardware          </li> <li>            I2C          </li> <li>            Joins/Tolerances          </li> <li>            Modbus          </li> <li>            Overlays          </li> <li>            PYNQ-Package          </li> <li>            RPi Pico          </li> <li>            RTL-SDR          </li> <li>            Raspberry Pi          </li> <li>            Retroflag Case          </li> <li>            Retropie          </li> <li>            SPI          </li> <li>            Slicing          </li> <li>            UART          </li> <li>            Xilinx PYNQ-Z1          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hashmap","title":"hashmap","text":"<ul> <li>            Memory Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hashtable","title":"hashtable","text":"<ul> <li>            Memory Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hdl","title":"hdl","text":"<ul> <li>            GTKWave          </li> <li>            Install          </li> <li>            Intellij Idea          </li> <li>            Project          </li> <li>            Spinal HDL          </li> <li>            Tools          </li> <li>            Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:heroku","title":"heroku","text":"<ul> <li>            Heroku          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hexadecimal","title":"hexadecimal","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:homwbrew","title":"homwbrew","text":"<ul> <li>            Homebrew          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:how-to","title":"how to","text":"<ul> <li>            Getting started          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hw","title":"hw","text":"<ul> <li>            3D-Printing          </li> <li>            Communmication Protocols          </li> <li>            Filaments          </li> <li>            Filling          </li> <li>            Hardware          </li> <li>            Joins/Tolerances          </li> <li>            RTL-SDR          </li> <li>            Slicing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:hw-sensors","title":"hw sensors","text":"<ul> <li>            Hardware Sensors          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:i2c","title":"i2c","text":"<ul> <li>            I2C          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:icons","title":"icons","text":"<ul> <li>            Icons          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:install","title":"install","text":"<ul> <li>            Install          </li> <li>            Install          </li> <li>            Install          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:intel","title":"intel","text":"<ul> <li>            SDC Constraints          </li> <li>            Theory          </li> <li>            Usage          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:intellij-idea","title":"intellij idea","text":"<ul> <li>            Intellij IDEA          </li> <li>            Intellij Idea          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:iterators","title":"iterators","text":"<ul> <li>            Iterators          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:jetbrains","title":"jetbrains","text":"<ul> <li>            Intellij IDEA          </li> <li>            JetBrains IDE          </li> <li>            PyCharm          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:joins","title":"joins","text":"<ul> <li>            Joins/Tolerances          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:joke","title":"joke","text":"<ul> <li>            Programmer Jokes          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:jupyter","title":"jupyter","text":"<ul> <li>            Common Functions          </li> <li>            Convert          </li> <li>            General          </li> <li>            Install Plotly Dash          </li> <li>            Installation          </li> <li>            Jupyter          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:just","title":"just","text":"<ul> <li>            Examples          </li> <li>            Install          </li> <li>            Intro          </li> <li>            Just Files          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:latex","title":"latex","text":"<ul> <li>            Install          </li> <li>            LaTeX          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:latin","title":"latin","text":"<ul> <li>            Latin          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:leadership","title":"leadership","text":"<ul> <li>            Leadership          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:learning","title":"learning","text":"<ul> <li>            Learning          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:lets-encrypt","title":"lets encrypt","text":"<ul> <li>            Let's Encrypt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:libraries","title":"libraries","text":"<ul> <li>            Libraries          </li> <li>            Libraries          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:library","title":"library","text":"<ul> <li>            Libraries          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:license","title":"license","text":"<ul> <li>            License          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:licenses","title":"licenses","text":"<ul> <li>            All Rights Reserved          </li> <li>            Licenses          </li> <li>            MIT          </li> <li>            WTFPL          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:lidar","title":"lidar","text":"<ul> <li>            Lidar Driver          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:lifetimes","title":"lifetimes","text":"<ul> <li>            Concepts          </li> <li>            Lifetimes          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:link","title":"link","text":"<ul> <li>            Linkerscript          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:linked-lists","title":"linked lists","text":"<ul> <li>            Memory Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:linux","title":"linux","text":"<ul> <li>            Apache          </li> <li>            Cheatsheet          </li> <li>            Commandline          </li> <li>            Config Files          </li> <li>            Crontab          </li> <li>            DD          </li> <li>            Files          </li> <li>            Filesystem          </li> <li>            General          </li> <li>            General          </li> <li>            Hardware Sensors          </li> <li>            Install          </li> <li>            Let's Encrypt          </li> <li>            Linux          </li> <li>            Mosquitto          </li> <li>            Network          </li> <li>            Nice to Know          </li> <li>            Problems          </li> <li>            RClone          </li> <li>            RSync          </li> <li>            Raid          </li> <li>            Raspberry Pi          </li> <li>            SSH          </li> <li>            Samba          </li> <li>            Scripts          </li> <li>            Setup          </li> <li>            Setup          </li> <li>            Shairport          </li> <li>            SystemD          </li> <li>            Tools          </li> <li>            Ubuntu          </li> <li>            VIm          </li> <li>            VNC          </li> <li>            VPN          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:llm","title":"llm","text":"<ul> <li>            Getting Started          </li> <li>            Index          </li> <li>            Modelfiles          </li> <li>            Ollama and OpenWeb UI          </li> <li>            Open WebUI          </li> <li>            RISEN          </li> <li>            RODES          </li> <li>            RTF          </li> <li>            Reasoning Prompt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:macos","title":"macos","text":"<ul> <li>            Cheatsheet          </li> <li>            Commandline          </li> <li>            GeekTools          </li> <li>            Homebrew          </li> <li>            Keyboard          </li> <li>            MacOs          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:make","title":"make","text":"<ul> <li>            Example          </li> <li>            Make          </li> <li>            Syntax          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:markdown","title":"markdown","text":"<ul> <li>            MKDocs Material Markdown          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:maturin","title":"maturin","text":"<ul> <li>            Rust2Python          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:md","title":"md","text":"<ul> <li>            CheatSheet          </li> <li>            Github          </li> <li>            MKDocs Material Markdown          </li> <li>            Markdown          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:memory","title":"memory","text":"<ul> <li>            Memory Regions          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:memory-types","title":"memory types","text":"<ul> <li>            Memory Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:mentor","title":"mentor","text":"<ul> <li>            Install          </li> <li>            Mentor EDA          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:mermaid","title":"mermaid","text":"<ul> <li>            Mermaid          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:methods","title":"methods","text":"<ul> <li>            Methods          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:mkdocs","title":"mkdocs","text":"<ul> <li>            CheatSheet          </li> <li>            Getting started          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:modbus","title":"modbus","text":"<ul> <li>            Modbus          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:modelfile","title":"modelfile","text":"<ul> <li>            Modelfiles          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:modules","title":"modules","text":"<ul> <li>            Modules          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:morse","title":"morse","text":"<ul> <li>            Morse          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:mosquitto","title":"mosquitto","text":"<ul> <li>            Mosquitto          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:multimedia","title":"multimedia","text":"<ul> <li>            A Dark Room          </li> <li>            ASCII-Art          </li> <li>            Audio          </li> <li>            Books          </li> <li>            CheatSheet          </li> <li>            Cheatsheet          </li> <li>            Color Palette          </li> <li>            Curated          </li> <li>            Email Replies          </li> <li>            Emoji          </li> <li>            Fileheaders          </li> <li>            Fonts          </li> <li>            Games          </li> <li>            GitBook          </li> <li>            Github          </li> <li>            GraphViz          </li> <li>            Icons          </li> <li>            Index          </li> <li>            Install          </li> <li>            Install          </li> <li>            Intro          </li> <li>            LaTeX          </li> <li>            Latin          </li> <li>            Lexer          </li> <li>            MKDocs Material Markdown          </li> <li>            Markdown          </li> <li>            Mermaid          </li> <li>            Multimedia          </li> <li>            Pictures          </li> <li>            PlantUml          </li> <li>            Programmer Jokes          </li> <li>            Quotes          </li> <li>            RISEN          </li> <li>            RODES          </li> <li>            RTF          </li> <li>            ReStructuredText          </li> <li>            Reasoning Prompt          </li> <li>            Resolutions          </li> <li>            Templates          </li> <li>            Terminal          </li> <li>            Text          </li> <li>            Typst          </li> <li>            Video          </li> <li>            Wavedrom          </li> <li>            Writing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:mvc","title":"mvc","text":"<ul> <li>            Model View Controller          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:naming","title":"naming","text":"<ul> <li>            Coding Convention          </li> <li>            Naming Conventions          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:network","title":"network","text":"<ul> <li>            Network          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:nmap","title":"nmap","text":"<ul> <li>            Nmap          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:numbat","title":"numbat","text":"<ul> <li>            Basics          </li> <li>            Cheatsheet          </li> <li>            numbat          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:number-system","title":"number system","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:octal","title":"octal","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ollama","title":"ollama","text":"<ul> <li>            Getting Started          </li> <li>            Modelfiles          </li> <li>            Ollama and OpenWeb UI          </li> <li>            Open WebUI          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:openweb-ui","title":"openweb ui","text":"<ul> <li>            Ollama and OpenWeb UI          </li> <li>            Open WebUI          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:operating-system","title":"operating system","text":"<ul> <li>            Apache          </li> <li>            Cheatsheet          </li> <li>            Cheatsheet          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Config Files          </li> <li>            Crontab          </li> <li>            DD          </li> <li>            Files          </li> <li>            Filesystem          </li> <li>            Firewall          </li> <li>            GeekTools          </li> <li>            General          </li> <li>            General          </li> <li>            Group Policies          </li> <li>            Hardware Sensors          </li> <li>            Homebrew          </li> <li>            Install          </li> <li>            Keyboard          </li> <li>            Let's Encrypt          </li> <li>            Linux          </li> <li>            MacOs          </li> <li>            Mosquitto          </li> <li>            Network          </li> <li>            Nice to Know          </li> <li>            OS          </li> <li>            Power          </li> <li>            Problems          </li> <li>            RClone          </li> <li>            RSync          </li> <li>            Raid          </li> <li>            Raspberry Pi          </li> <li>            Registry          </li> <li>            SSH          </li> <li>            Samba          </li> <li>            Scripts          </li> <li>            Setup          </li> <li>            Setup          </li> <li>            Shairport          </li> <li>            SystemD          </li> <li>            Tools          </li> <li>            Ubuntu          </li> <li>            Unraid          </li> <li>            VIm          </li> <li>            VNC          </li> <li>            VPN          </li> <li>            WSL          </li> <li>            Windows          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:os","title":"os","text":"<ul> <li>            Apache          </li> <li>            Cheatsheet          </li> <li>            Cheatsheet          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Commandline          </li> <li>            Config Files          </li> <li>            Crontab          </li> <li>            DD          </li> <li>            Files          </li> <li>            Filesystem          </li> <li>            Firewall          </li> <li>            GeekTools          </li> <li>            General          </li> <li>            General          </li> <li>            Group Policies          </li> <li>            Hardware Sensors          </li> <li>            Homebrew          </li> <li>            Install          </li> <li>            Keyboard          </li> <li>            Let's Encrypt          </li> <li>            Linux          </li> <li>            MacOs          </li> <li>            Mosquitto          </li> <li>            Network          </li> <li>            Nice to Know          </li> <li>            OS          </li> <li>            Power          </li> <li>            Problems          </li> <li>            RClone          </li> <li>            RSync          </li> <li>            Raid          </li> <li>            Raspberry Pi          </li> <li>            Registry          </li> <li>            SSH          </li> <li>            Samba          </li> <li>            Scripts          </li> <li>            Setup          </li> <li>            Setup          </li> <li>            Shairport          </li> <li>            SystemD          </li> <li>            Tools          </li> <li>            Ubuntu          </li> <li>            Unraid          </li> <li>            VIm          </li> <li>            VNC          </li> <li>            VPN          </li> <li>            WSL          </li> <li>            Windows          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:osvvm","title":"osvvm","text":"<ul> <li>            OSVVM          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ownership","title":"ownership","text":"<ul> <li>            Concepts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:package","title":"package","text":"<ul> <li>            Package          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:packages","title":"packages","text":"<ul> <li>            Awesome Packages          </li> <li>            Colorama          </li> <li>            Flask          </li> <li>            Fuzzy Wuzzy          </li> <li>            Pillow          </li> <li>            Plotly          </li> <li>            Plotly Dash          </li> <li>            Request          </li> <li>            Streamlit          </li> <li>            TQDM          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pages","title":"pages","text":"<ul> <li>            Github Pages Custom Domain          </li> <li>            Server Subdomains          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:palette","title":"palette","text":"<ul> <li>            Color Palette          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pandas","title":"pandas","text":"<ul> <li>            Pandas          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pandoc","title":"pandoc","text":"<ul> <li>            Pandoc          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:password","title":"password","text":"<ul> <li>            Password          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:picture","title":"picture","text":"<ul> <li>            ASCII-Art          </li> <li>            Color Palette          </li> <li>            GraphViz          </li> <li>            Icons          </li> <li>            Mermaid          </li> <li>            PlantUml          </li> <li>            Wavedrom          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pictures","title":"pictures","text":"<ul> <li>            Curated          </li> <li>            Emoji          </li> <li>            Pictures          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pihole","title":"pihole","text":"<ul> <li>            Pihole          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pillow","title":"pillow","text":"<ul> <li>            Pillow          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pip","title":"pip","text":"<ul> <li>            PiP          </li> <li>            PiPEnv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:plantuml","title":"plantuml","text":"<ul> <li>            PlantUml          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:plotly","title":"plotly","text":"<ul> <li>            Plotly          </li> <li>            Plotly Dash          </li> <li>            Plotly Dash          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:power","title":"power","text":"<ul> <li>            Power          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:print","title":"print","text":"<ul> <li>            Print          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:prompt-engineering","title":"prompt engineering","text":"<ul> <li>            Index          </li> <li>            RISEN          </li> <li>            RODES          </li> <li>            RTF          </li> <li>            Reasoning Prompt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:protocol","title":"protocol","text":"<ul> <li>            I2C          </li> <li>            Modbus          </li> <li>            SPI          </li> <li>            UART          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:protocols","title":"protocols","text":"<ul> <li>            Communmication Protocols          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:psychology","title":"psychology","text":"<ul> <li>            Communication          </li> <li>            Fast Friend Procedure          </li> <li>            Habits          </li> <li>            Happiness          </li> <li>            Leadership          </li> <li>            Learning          </li> <li>            Psychology          </li> <li>            Public Speaking          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:public-speaking","title":"public speaking","text":"<ul> <li>            Public Speaking          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pycharm","title":"pycharm","text":"<ul> <li>            PyCharm          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:pyo3","title":"pyo3","text":"<ul> <li>            Rust2Python          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:python","title":"python","text":"<ul> <li>            Awesome Packages          </li> <li>            Colorama          </li> <li>            Datetime          </li> <li>            DocString          </li> <li>            Examples          </li> <li>            Flake8          </li> <li>            Flask          </li> <li>            Fuzzy Wuzzy          </li> <li>            Methods          </li> <li>            Pandas          </li> <li>            PiP          </li> <li>            PiPEnv          </li> <li>            Pillow          </li> <li>            Plotly          </li> <li>            Plotly Dash          </li> <li>            Plotly Dash          </li> <li>            Print          </li> <li>            PyQt          </li> <li>            Python          </li> <li>            Request          </li> <li>            Rust2Python          </li> <li>            STDLib          </li> <li>            Streamlit          </li> <li>            Syntax          </li> <li>            TQDM          </li> <li>            VirtualEnv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:qt","title":"qt","text":"<ul> <li>            PyQt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:quote","title":"quote","text":"<ul> <li>            Quotes          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:raid","title":"raid","text":"<ul> <li>            Raid          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:raspberry-pi","title":"raspberry pi","text":"<ul> <li>            Boards          </li> <li>            General          </li> <li>            RPi Pico          </li> <li>            Raspberry Pi          </li> <li>            Raspberry Pi          </li> <li>            Retroflag Case          </li> <li>            Retropie          </li> <li>            Setup          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rclone","title":"rclone","text":"<ul> <li>            RClone          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:reasoning-prompt","title":"reasoning prompt","text":"<ul> <li>            Reasoning Prompt          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:redirect-subdomains","title":"redirect subdomains","text":"<ul> <li>            Redirect Subdomains          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:regex","title":"regex","text":"<ul> <li>            Regex          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:registry","title":"registry","text":"<ul> <li>            Group Policies          </li> <li>            Registry          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:requests","title":"requests","text":"<ul> <li>            Request          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:resolutions","title":"resolutions","text":"<ul> <li>            Resolutions          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:retropie","title":"retropie","text":"<ul> <li>            Retroflag Case          </li> <li>            Retropie          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:risc-v","title":"risc-v","text":"<ul> <li>            RISC-V          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:riscv","title":"riscv","text":"<ul> <li>            ESP32-C3          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:risen","title":"risen","text":"<ul> <li>            RISEN          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rodes","title":"rodes","text":"<ul> <li>            RODES          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:roman","title":"roman","text":"<ul> <li>            Number Systems          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ros","title":"ros","text":"<ul> <li>            Basics          </li> <li>            Book Summary          </li> <li>            Catkin Tools          </li> <li>            Commands          </li> <li>            External Packages          </li> <li>            Install          </li> <li>            Launch          </li> <li>            Lidar Driver          </li> <li>            Packages          </li> <li>            ROS          </li> <li>            RViz          </li> <li>            TF2          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rst","title":"rst","text":"<ul> <li>            Cheatsheet          </li> <li>            Lexer          </li> <li>            ReStructuredText          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rsync","title":"rsync","text":"<ul> <li>            RSync          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rtf","title":"rtf","text":"<ul> <li>            RTF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rtl-sdr","title":"rtl-sdr","text":"<ul> <li>            RTL-SDR          </li> <li>            SDR++          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rust","title":"rust","text":"<ul> <li>            Basic          </li> <li>            Concepts          </li> <li>            Data-Types          </li> <li>            Design Patterns          </li> <li>            Error Handling          </li> <li>            Generics          </li> <li>            Install          </li> <li>            Install          </li> <li>            Iterators          </li> <li>            Libraries          </li> <li>            Lifetimes          </li> <li>            Memory Regions          </li> <li>            Modules          </li> <li>            Naming Conventions          </li> <li>            Nice to Know          </li> <li>            Package          </li> <li>            RISC-V          </li> <li>            Rust Embedded          </li> <li>            Rust2Python          </li> <li>            RustDoc          </li> <li>            Syntax          </li> <li>            Testing          </li> <li>            Toolchain          </li> <li>            Traits          </li> <li>            Workspaces          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rustdoc","title":"rustdoc","text":"<ul> <li>            RustDoc          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:rviz","title":"rviz","text":"<ul> <li>            RViz          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:samba","title":"samba","text":"<ul> <li>            Samba          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:scala","title":"scala","text":"<ul> <li>            Basic          </li> <li>            Coding Convention          </li> <li>            Libraries          </li> <li>            Scala          </li> <li>            Syntax          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:scripts","title":"scripts","text":"<ul> <li>            Config Files          </li> <li>            General          </li> <li>            Scripts          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sdc","title":"sdc","text":"<ul> <li>            SDC Constraints          </li> <li>            Theory          </li> <li>            Usage          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sdr","title":"sdr","text":"<ul> <li>            SDR          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sdr","title":"sdr++","text":"<ul> <li>            SDR++          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:security","title":"security","text":"<ul> <li>            GnuPG          </li> <li>            Password          </li> <li>            Security          </li> <li>            Tor          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:shairport","title":"shairport","text":"<ul> <li>            Shairport          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:simulation","title":"simulation","text":"<ul> <li>            Simulation          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:slicing","title":"slicing","text":"<ul> <li>            Slicing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:software-defined-radio","title":"software defined radio","text":"<ul> <li>            SDR          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sorting","title":"sorting","text":"<ul> <li>            Sorting          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sphinx","title":"sphinx","text":"<ul> <li>            Sphinx Documentation          </li> <li>            Syntax          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:spi","title":"spi","text":"<ul> <li>            SPI          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:spinal-hdl","title":"spinal hdl","text":"<ul> <li>            GTKWave          </li> <li>            Install          </li> <li>            Intellij Idea          </li> <li>            Project          </li> <li>            Spinal HDL          </li> <li>            Tools          </li> <li>            Types          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ssh","title":"ssh","text":"<ul> <li>            SSH          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:starship","title":"starship","text":"<ul> <li>            StarShip          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:statistics","title":"statistics","text":"<ul> <li>            Statistics          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:std","title":"std","text":"<ul> <li>            STDLib          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:streamlit","title":"streamlit","text":"<ul> <li>            Streamlit          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:sublimetext","title":"sublimetext","text":"<ul> <li>            Plugins          </li> <li>            Settings          </li> <li>            SublimeText          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:submodules","title":"submodules","text":"<ul> <li>            Submodules          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:swift","title":"swift","text":"<ul> <li>            Basics          </li> <li>            Control Flow          </li> <li>            Data Structures &amp; Methods          </li> <li>            Model View Controller          </li> <li>            Multithreading          </li> <li>            NSClasses          </li> <li>            Others          </li> <li>            Properties          </li> <li>            Swift          </li> <li>            UI Element          </li> <li>            Views          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:syntax","title":"syntax","text":"<ul> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            Syntax          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:synthesis","title":"synthesis","text":"<ul> <li>            Synthesis          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:systemd","title":"systemd","text":"<ul> <li>            SystemD          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tcltk","title":"tcl/tk","text":"<ul> <li>            Examples          </li> <li>            FPGA Scripting          </li> <li>            Syntax          </li> <li>            Tcl-Tk          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:terminal","title":"terminal","text":"<ul> <li>            Terminal          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:testbench","title":"testbench","text":"<ul> <li>            Testbench          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:testing","title":"testing","text":"<ul> <li>            Testing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:text","title":"text","text":"<ul> <li>            Books          </li> <li>            Email Replies          </li> <li>            Fileheaders          </li> <li>            Fonts          </li> <li>            Programmer Jokes          </li> <li>            Quotes          </li> <li>            Text          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tianji","title":"tianji","text":"<ul> <li>            Tianji          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:time","title":"time","text":"<ul> <li>            Time          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tolerances","title":"tolerances","text":"<ul> <li>            Joins/Tolerances          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:toolchain","title":"toolchain","text":"<ul> <li>            Toolchain          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tools","title":"tools","text":"<ul> <li>            .gitignore          </li> <li>            Anaconda          </li> <li>            Apache          </li> <li>            Basics          </li> <li>            Basics          </li> <li>            Bittorrent          </li> <li>            Cheatsheet          </li> <li>            Chromium          </li> <li>            Cloudflare          </li> <li>            Cmder          </li> <li>            Comands          </li> <li>            Common Fixes          </li> <li>            Common Functions          </li> <li>            Conda          </li> <li>            Convert          </li> <li>            Creating Torrents          </li> <li>            Docker          </li> <li>            Docker CMD          </li> <li>            Dockerfile          </li> <li>            Example          </li> <li>            Examples          </li> <li>            General          </li> <li>            General          </li> <li>            Getting Started          </li> <li>            Git          </li> <li>            Gitflow          </li> <li>            Github          </li> <li>            Github Pages Custom Domain          </li> <li>            Google          </li> <li>            Hardware Sensors          </li> <li>            Heroku          </li> <li>            Install          </li> <li>            Install          </li> <li>            Install          </li> <li>            Install Plotly Dash          </li> <li>            Installation          </li> <li>            Intellij IDEA          </li> <li>            Intro          </li> <li>            Intro          </li> <li>            Intro          </li> <li>            JetBrains IDE          </li> <li>            Jupyter          </li> <li>            Just Files          </li> <li>            Let's Encrypt          </li> <li>            Make          </li> <li>            Mentor EDA          </li> <li>            Modelfiles          </li> <li>            Mosquitto          </li> <li>            Nmap          </li> <li>            Ollama and OpenWeb UI          </li> <li>            Open WebUI          </li> <li>            Pandoc          </li> <li>            Pihole          </li> <li>            Plugins          </li> <li>            PyCharm          </li> <li>            Raid          </li> <li>            Redirect Subdomains          </li> <li>            SDR++          </li> <li>            Samba          </li> <li>            Server Subdomains          </li> <li>            Settings          </li> <li>            Shairport          </li> <li>            Sphinx Documentation          </li> <li>            StarShip          </li> <li>            SublimeText          </li> <li>            Submodules          </li> <li>            Syntax          </li> <li>            Syntax          </li> <li>            SystemD          </li> <li>            Tianji          </li> <li>            Tools          </li> <li>            Tools          </li> <li>            Useful          </li> <li>            VIm          </li> <li>            VNC          </li> <li>            VPN          </li> <li>            VirtualBox          </li> <li>            git-cliff          </li> <li>            numbat          </li> <li>            uv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tor","title":"tor","text":"<ul> <li>            Tor          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:tqdm","title":"tqdm","text":"<ul> <li>            TQDM          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:traits","title":"traits","text":"<ul> <li>            Traits          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:types","title":"types","text":"<ul> <li>            Types of Algorithms          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:typst","title":"typst","text":"<ul> <li>            Install          </li> <li>            Intro          </li> <li>            Templates          </li> <li>            Typst          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:uart","title":"uart","text":"<ul> <li>            UART          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:uasge","title":"uasge","text":"<ul> <li>            Basics          </li> <li>            Cheatsheet          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ubuntu","title":"ubuntu","text":"<ul> <li>            Install          </li> <li>            Problems          </li> <li>            Ubuntu          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:ucf","title":"ucf","text":"<ul> <li>            Xilinx UCF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:unix","title":"unix","text":"<ul> <li>            Nice to Know          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:unraid","title":"unraid","text":"<ul> <li>            Unraid          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:uv","title":"uv","text":"<ul> <li>            uv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:vhdl","title":"vhdl","text":"<ul> <li>            Attributes          </li> <li>            Conversion          </li> <li>            Examples          </li> <li>            File          </li> <li>            Guidelines          </li> <li>            Libraries          </li> <li>            OSVVM          </li> <li>            SDC Constraints          </li> <li>            Simulation          </li> <li>            Syntax          </li> <li>            Synthesis          </li> <li>            Testbench          </li> <li>            Theory          </li> <li>            Time          </li> <li>            Usage          </li> <li>            VHDL          </li> <li>            Xilinx UCF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:video","title":"video","text":"<ul> <li>            Resolutions          </li> <li>            Video          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:vim","title":"vim","text":"<ul> <li>            VIm          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:virtualbox","title":"virtualbox","text":"<ul> <li>            VirtualBox          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:virtualenv","title":"virtualenv","text":"<ul> <li>            VirtualEnv          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:vnc","title":"vnc","text":"<ul> <li>            VNC          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:vpn","title":"vpn","text":"<ul> <li>            VPN          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:wavedrom","title":"wavedrom","text":"<ul> <li>            Wavedrom          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:windows","title":"windows","text":"<ul> <li>            Commandline          </li> <li>            Firewall          </li> <li>            Group Policies          </li> <li>            Power          </li> <li>            Registry          </li> <li>            WSL          </li> <li>            Windows          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:workspaces","title":"workspaces","text":"<ul> <li>            Workspaces          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:writing","title":"writing","text":"<ul> <li>            CheatSheet          </li> <li>            Cheatsheet          </li> <li>            GitBook          </li> <li>            Github          </li> <li>            Index          </li> <li>            Install          </li> <li>            Install          </li> <li>            Intro          </li> <li>            LaTeX          </li> <li>            Latin          </li> <li>            Lexer          </li> <li>            MKDocs Material Markdown          </li> <li>            Markdown          </li> <li>            RISEN          </li> <li>            RODES          </li> <li>            RTF          </li> <li>            ReStructuredText          </li> <li>            Reasoning Prompt          </li> <li>            Templates          </li> <li>            Typst          </li> <li>            Writing          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:wsl","title":"wsl","text":"<ul> <li>            WSL          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:xf","title":"xf","text":"<ul> <li>            XF          </li> </ul>","tags":["about"]},{"location":"about/tags.html#tag:xilinx","title":"xilinx","text":"<ul> <li>            Xilinx UCF          </li> </ul>","tags":["about"]},{"location":"blog/index.html","title":"Blog","text":"","tags":["blog"]},{"location":"blog/2024/01/23/hello-world.html","title":"Hello world!","text":"<p>My first blogpost to see how mkdocs works.</p> <p>Here some more text</p> <p>...</p>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html","title":"Rust String Formatting - An ASCII-Art Cheatsheet!","text":"<p>For once a post of a different kind. Let's talk about the versatile Rust String formatting and how to use it. The ASCII-Art shows the different elements in the <code>format!()</code>, <code>print!()</code> and <code>println!()</code> macros.</p> <p>For example what is the output of the following code?</p> <pre><code>print!(\"{0:*&gt;+10.3e}\", std::f64::consts::E);\n</code></pre> <p>Whether you\u2019re formatting strings for logging, debugging, or crafting a polished UI, these macros have you covered. Here\u2019s a quick guide to mastering their syntax.</p> <pre><code>\"{\" [argument][\":\"][[fill]align][sign][\"#\"][\"0\"][width][.precision][type] \"}\"\n        /             /    /      /    /    /                \\        \\\n       /             /    /      /    /    |                  \\        \\\n      /             /    /      /    /     |- padding \"0\"      \\        |\n     /             /    /      /    |                           \\       |\n    /             /    /      |     |- alternate formatting      \\      |\n   /             /    /       |     |- (human-reable)             \\     |\n  /             /    /        |                                    |    |\n |             /    /         |- \"\" - default                      |    |\n |            /    /          |- + - + prefix        by tschinz    |    |\n |           /    |                                                |    |\n |          /     |                  nbr of descendants - integer -|    |\n |         |      |                                                     |\n |         |      |- &lt; - left (default)      \"\" - default follows type -|\n |         |      |- &gt; - right              \"b\" - binary ---------------|\n |         |      |- ^ - center             \"o\" - octal ----------------|\n |         |                                \"x\" - hex ------------------|\n |         |- any character for padding     \"X\" - Hex ------------------|\n |                                          \"e\" - scientific -----------|\n |- \"\" - follows arg sequence (default)     \"E\" - Scientific -----------|\n |- integer - selects arg by position       \"p\" - pointer addr ---------|\n |- identifier - selects arg by name        \"?\" - debug (trait req) ----|\n</code></pre>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#core-formatting-options","title":"Core formatting options","text":"<pre><code>formatting = [argument][:][[fill]align][sign][#][0][width][.precision][type]\nargument   = integer | identifier\nfill       = &lt;any character&gt;\nalign      = \"&lt;\" | \"&gt;\" | \"^\"\nsign       = \"+\"\n\"#\"        = alternate formatting\n\"0\"        = zero-padding\nwidth      = integer\nprecision  = integer\ntype       = \"b\" | \"o\" | \"x\" | \"X\" | \"e\" | \"E\" | \"p\" | \"?\"\n</code></pre>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#quick-examples","title":"Quick Examples","text":""},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#align-and-padding","title":"Align and Padding","text":"<pre><code>format!(\"{:&lt;8}\", 1);  // \"1       \" - Left-align\nformat!(\"{:&gt;08}\", 1); // \"00000001\" - Right-align with zero-padding\nformat!(\"{:^8}\", 1);  // \"   1    \" - Center-align\n</code></pre>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#precision","title":"Precision","text":"<pre><code>format!(\"{:.3}\", 2.71828); // \"2.718\" - 3 decimal places\n</code></pre>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#types","title":"Types","text":"<pre><code>format!(\"{:b}\", 42);       // \"101010\" - Binary\nformat!(\"{:#x}\", 255);     // \"0xff\" - Hexadecimal with prefix\nformat!(\"{:e}\", 1.23e4);   // \"1.23e4\" - Scientific notation\n</code></pre>"},{"location":"blog/2024/11/20/rust-string-formatting---an-ascii-art-cheatsheet.html#the-solution","title":"The Solution","text":"<p>Lastly the output of the code snippet from the beginning is:</p> <pre><code>print!(\"{0:*&gt;+10.3e}\", std::f64::consts::E); // \"**+2.718e0\"\n</code></pre> <p>Check out the official std::fmt Rust Library Documentation for more detailed information.</p> <p>With this cheatsheet, you\u2019ll master Rust\u2019s string formatting macros in no time. \ud83d\udcaa Share this post to help others level up their Rust game!</p> <p>For the full article see Rust String Formatting - A ASCII-Art Cheatsheet! and more examples here</p> <p><code>#rust #rustlang #formatting #macros #ascii-art #engineering #systems-engineering #hei #hesso</code></p>"},{"location":"coding/index.html","title":"Coding","text":"","tags":["coding"]},{"location":"coding/index.html#content","title":"Content","text":"<p>{nav}</p>","tags":["coding"]},{"location":"coding/ahk/index.html","title":"AHK","text":"","tags":["coding","ahk"]},{"location":"coding/ahk/index.html#introduction","title":"Introduction","text":"<p>AutoHotkey is a free, open source macro-creation and automation software utility which allows users to automate repetitive tasks. Any application user interface can be modified by AutoHotkey. It is driven by a custom scripting language called AHK that is aimed specifically at providing keyboard shortcuts or hotkeys.</p>","tags":["coding","ahk"]},{"location":"coding/ahk/index.html#my-scripts","title":"My Scripts","text":"<p>My ahk scripts can be found in the config_repo</p>","tags":["coding","ahk"]},{"location":"coding/ahk/index.html#links","title":"Links","text":"<ul> <li>AHK Official Webpage</li> <li>AHK Tutorial</li> </ul>","tags":["coding","ahk"]},{"location":"coding/ahk/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","ahk"]},{"location":"coding/ahk/key_definitions.html","title":"Key Definitions","text":"","tags":["coding","ahk"]},{"location":"coding/ahk/key_definitions.html#raw-keys","title":"Raw Keys","text":"<pre><code>^  ; Ctrl\n#  ; Win\n&lt;# ; Left Win\n&gt;# ; Right Win\n!  ; Alt\n&gt;! ; Right Altt\n&lt;! ; Left Alt\n+  ; Shift\n&gt;+ ; Right Shift\n&lt;+ ; Left Shift\n^  ; Control\n&lt;^ ; Left Control\n&gt;^ ; Right Control\n; Multimedia\n{Volume_Up}\n{Volume_Down}\n{Volume_Mute}\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/key_definitions.html#double-keypress-detection","title":"Double Keypress Detection","text":"<p>Alt Key in the example</p> <pre><code>~Alt::\nDoubleAlt := A_PriorHotkey =\"~Alt\" AND A_TimeSincePriorHotkey &lt; 400\nSleep 0\nKeyWait Alt  ; This prevents the keyboard's auto-repeat feature from interfering.\nreturn\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html","title":"Tips &amp; Tricks","text":"<p>My ahk scripts can be found in the config repo</p>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#comment","title":"Comment","text":"<pre><code>;------------\n;-- Comment\n;--\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#performance-and-compatility","title":"Performance and Compatility","text":"<pre><code>; Recommended for performance and compatibility with future AutoHotkey releases\n#NoEnv\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#warnings","title":"Warnings","text":"<pre><code>; Enable warnings to assist with detecting common errors\n#Warn\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#enable-regex-for-title-mach-mode","title":"Enable Regex for Title mach Mode","text":"<pre><code>SetTitleMatchMode,RegEx ; then\nIfWinExist, Total Commander.*\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#tray-icon-and-tooltip","title":"Tray Icon and ToolTip","text":"<pre><code>Menu, TRAY, Icon, Favicon.ico\nMenu, TRAY, Tip, Tooltip Text\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#examples","title":"Examples","text":"","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#for-win10-hibernate","title":"For Win10 Hibernate","text":"<pre><code>; Wait for Hotkey\n;   Ctrl + Win + Alt + l\n; Send Hotkey\n;   Ctrl + Win + x + u + s\n^#&lt;!l::Send #xuh\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#for-win10-sleep","title":"For Win10 Sleep","text":"<pre><code>; Wait for Hotkey\n;   Ctrl + Win + l\n; Send Hotkey\n;   Win + x + u + s\n^#l::Send #xus\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#home-and-end-hotkey","title":"Home and End Hotkey","text":"<pre><code>; Ctrl + Left\n^Left::Send {Home}\n; Ctrl + Right\n^Right::Send {End}\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#check-for-ahk-version-and-output-message","title":"Check for AHK Version and output message","text":"<pre><code>If (A_AhkVersion &lt; \"1.0.39.00\")\n{\n    MsgBox,20,,This script may not work properly with your version of AutoHotkey. Continue?\n    IfMsgBox,No\n    ExitApp\n}\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/ahk/tips_tricks.html#supend-a-script-via-hotkey","title":"Supend a script via Hotkey","text":"<pre><code>f1::suspend\n</code></pre>","tags":["coding","ahk"]},{"location":"coding/c_cpp/index.html","title":"C / C++","text":"","tags":["coding","c","c++"]},{"location":"coding/c_cpp/index.html#c","title":"C","text":"<p>C ist eine imperative Programmiersprache, die der Informatiker Dennis Ritchie in den fr\u00fchen 1970er Jahren an den Bell Laboratories f\u00fcr die Systemprogrammierung des Betriebssystems Unix entwickelte. Seitdem ist sie auf vielen Computersystemen verbreitet.</p> <p>Die Anwendungsbereiche von C sind sehr verschieden. Es wird zur System- und Anwendungsprogrammierung eingesetzt. Die grundlegenden Programme aller Unix-Systeme und die Systemkerne vieler Betriebssysteme sind in C programmiert. Zahlreiche Sprachen, wie C++, Objective-C, C#, Java, PHP oder Perl orientieren sich an der Syntax und anderen Eigenschaften von C.</p>","tags":["coding","c","c++"]},{"location":"coding/c_cpp/index.html#c_1","title":"C++","text":"<p>C++ ist eine von der ISO standardisierte h\u00f6here Programmiersprache. Sie wurde ab 1979 von Bjarne Stroustrup bei AT&amp;T als Erweiterung der Programmiersprache C entwickelt. C++ wurde als Mehrzwecksprache konzipiert und unterst\u00fctzt mehrere Programmierparadigmen, wie die objektorientierte, generische und prozedurale Programmierung. C++ erm\u00f6glicht sowohl die effiziente und maschinennahe Programmierung als auch eine Programmierung auf hohem Abstraktionsniveau.</p>","tags":["coding","c","c++"]},{"location":"coding/c_cpp/index.html#pdf","title":"PDF","text":"<ul> <li>C Reference</li> <li>Cpp Essentials</li> </ul>","tags":["coding","c","c++"]},{"location":"coding/c_cpp/index.html#links","title":"Links","text":"<ul> <li>Wikibooks C Programming</li> <li>Wikibooks C++ Programming</li> <li>Wikibooks C Programmierung</li> <li>Wikibooks C++ Programmierung</li> <li>C++ Reference/Guide/Tutorial</li> </ul>","tags":["coding","c","c++"]},{"location":"coding/c_cpp/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","c","c++"]},{"location":"coding/c_cpp/executionframework.html","title":"Execution Framework","text":"<p>Execution Framework is also called XF. XF are a collection of services that allow communication and execution of objects and of reactive entities containing state machines. It is an abstraction layer which can be on top of an OS or of an HAL.</p> <p>Provided services of an XF are:</p> <ul> <li>Software timers</li> <li>Asynchronous inter object communication</li> <li>Data buffers and queues</li> <li>Memory management</li> </ul>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#overview","title":"Overview","text":"<p>Figure 1: Execution Framework</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#isr","title":"ISR","text":"<p>The ISR will generate different kind of events. The Tick timer events are essential because the whole system is based around the Tick. But other interrupts enables peripherals will generate different kind of events and place in the event queue or data queue e.g. UART.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#time-manager","title":"Time Manager","text":"<p>The time manager allows generating timing events to place in the event queue. It allows an, depending on the hardware, unlimited amount of software timers. The time manager holds all software timers in a FIFO. The timer which ends first is at the top of the fifo. Once a timer reaches zero a timer event is places in the event queue.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#event-queue","title":"Event Queue","text":"<p>The event queue is a FIFO of all given event. An event can also hold some data if necessary.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#data-queue","title":"Data Queue","text":"<p>With help of the data queue, the reactive entities can exchange data.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#reactive-entities","title":"Reactive Entities","text":"<p>Reactive entities are nothing else than state machines. They are always in a certain state and are triggered to go into the next state by events. Depending on the hardware multiple state machines can run at the same time.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#mainloop-event-dispatcher","title":"MainLoop / Event Dispatcher","text":"<p>The event dispatcher only reads the event at the top of the FIFO and calls all observers subscribed to that event type. Once an event is processed the next event will be read.</p>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#observer-pattern","title":"Observer Pattern","text":"<p>One way to exchange informations is via the Observer - Subject Pattern. The subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling their method <code>update</code>.</p> <ul> <li>All Observers are attached to the Subject</li> <li>If something happens with the Subject his <code>_notify()</code> will be called</li> <li>The <code>_notify()</code> will call the <code>update()</code> method of all attached Observers</li> </ul>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#subject","title":"Subject","text":"<p>Multiple Observers can be attached to an Subject and get notified when something interesting happens.</p> <pre><code>virtual void attach ( Observer * pObserver , uint8_t index = 0 ) = 0 ;\n</code></pre> <p>Informs the observer(s) that something of interest happened to the Subject</p> <pre><code>virtual void _notify ( uint8_t index = 0 ) = 0 ;\n</code></pre>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/executionframework.html#observer","title":"Observer","text":"<p>Informs the observer that something of interest happened to its Subject (called by the notify() method of the Subject)</p> <pre><code>virtual void update ( Subject * pSubject = 0 ) = 0 ;\n</code></pre>","tags":["coding","c++","c","xf"]},{"location":"coding/c_cpp/linkerscript.html","title":"Linkerscript","text":"","tags":["coding","c++","c","link"]},{"location":"coding/c_cpp/linkerscript.html#overview","title":"Overview","text":"<p>A linker or link editor is a program that takes one or more objects generated by a compiler and combines them into a single executable program.</p> <p>Figure 1: Linker</p>","tags":["coding","c++","c","link"]},{"location":"coding/c_cpp/linkerscript.html#dynamic-linking","title":"Dynamic Linking","text":"<p>Many operating system environments allow dynamic linking, that is the postponing of the resolving of some undefined symbols until a program is run. That means that the executable code still contains undefined symbols, plus a list of objects or libraries that will provide definitions for these. Loading the program will load these objects/libraries as well, and perform a final linking.</p> <p>This approach offers two advantages:</p> <ul> <li>Often-used libraries (for example the standard system libraries) need to be stored in only one location, not duplicated in every single binary.</li> <li>If an error in a library function is corrected by replacing the library, all programs using it dynamically will benefit from the correction after restarting them. Programs that included this function by static linking would have to be re-linked first.</li> </ul> <p>There are also disadvantages:</p> <ul> <li>Known on the Windows platform as \"DLL Hell\", an incompatible updated DLL will break executables that depended on the behavior of the previous DLL.</li> <li>A program, together with the libraries it uses, might be certified as a package, but not if components can be replaced.</li> </ul>","tags":["coding","c++","c","link"]},{"location":"coding/c_cpp/linkerscript.html#script","title":"Script","text":"<p>the Linkerscript defines where which part of the programm goes.</p> <p>Typically sections are:</p> <ul> <li><code>.text</code>: constants &amp; programm itself</li> <li><code>.data</code>: initialised variables</li> <li><code>.bss</code>: non initialised variables</li> <li><code>.stack</code>: stack for return addresses of functions (LIFO)</li> </ul> <p>Basic linker script</p> basic.ld<pre><code>SECTIONS { // 1.\n        . = 0x00000000; // 2.\n        .text : { // 3.\n                abc.o (.text);\n                def.o (.text);\n        } // 4.\n}\n</code></pre> <ol> <li>The SECTIONS command is the most import linker command, it specifies how the sections are to be merged and at what location they are to be placed.</li> <li>Within the block following the SECTIONS command, the . (period) represents the location counter. The location is always initialised to 0x0. It can be modified by assigning a new value to it. Setting the value to 0x0 at the beginning is superfluous.</li> <li>&amp; 4. This part of the script specifies that, the .text section from the input files abc.o and def.o should go to the .text section of the output file.</li> </ol> <p>The linker script can be further simplified and generalised by using the wild card character * instead of individually specifying the file names.</p> wildcard.ld<pre><code>Wildcard in linker scripts.\nSECTIONS {\n        . = 0x00000000;\n        .text : { * (.text); }\n}\n</code></pre> <p>If the program contains both .text and .data sections, the .data section merging and location can be specified as shown below. Multiple sections in linker scripts.</p> multiple_sections.ld<pre><code>SECTIONS {\n         . = 0x00000000;\n         .text : { * (.text); }\n\n         . = 0x00000400;\n         .data : { * (.data); }\n}\n</code></pre> <p>Here, the <code>.text</code> section is located at <code>0x0</code> and <code>.data</code> is located at <code>0x400</code>. Note that, if the location counter is not assigned a different value, the <code>.text</code> and <code>.data</code> sections will be located at adjacent memory locations.</p>","tags":["coding","c++","c","link"]},{"location":"coding/c_cpp/linkerscript.html#compilation-linking-objcopy","title":"Compilation &amp; Linking &amp; Objcopy","text":"c_l_obj.sh<pre><code>gcc -g -O2 program.c -o exe.out -Tlinkerscript -Wl,-Map,mapfile\n\nobjcopy -O srec exe.out exe.srec\npause\n</code></pre>","tags":["coding","c++","c","link"]},{"location":"coding/c_cpp/syntax.html","title":"Syntax","text":"","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#for","title":"For","text":"<pre><code>for(int i = 0; i &lt;= max; i++)\n{\n}\n</code></pre>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#bitwise-operations","title":"Bitwise Operations","text":"","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#setting-a-bit","title":"Setting a bit","text":"<p>Use the bitwise OR operator <code>|</code> to set a bit.</p> <pre><code>number |= 1 &lt;&lt; x;             // That will set bit x\n</code></pre>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#clearing-a-bit","title":"Clearing a bit","text":"<p>Use the bitwise AND operator <code>&amp;</code> to clear a bit.</p> <pre><code>number &amp;= ~(1 &lt;&lt; x);          // That will clear bit x\n</code></pre> <p>You must invert the bit string with the bitwise NOT operator (~), then AND it.</p>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#toggling-a-bit","title":"Toggling a bit","text":"<p>The XOR operator <code>^</code> can be used to toggle a bit.</p> <pre><code>number ^= 1 &lt;&lt; x;            // That will toggle bit x\n</code></pre>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#checking-a-bit","title":"Checking a bit","text":"<p>To check a bit, AND it with the bit you want to check:</p> <pre><code>bit = number &amp; (1 &lt;&lt; x);     // Put value of bit x into variable bit\n</code></pre>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#functions","title":"Functions","text":"","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#sprintf","title":"sprintf()","text":"<p><code>sprintf()</code> takes several variables and string parts and fuses them into one string.</p> <pre><code>int sprintf( char * buffer, const char * format [ , argument , ...] );\n</code></pre> <p>With the help of flags variable can be fused together.</p> <pre><code>%[flags][width][.precision][modifiers]type\n</code></pre>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#type","title":"Type","text":"Type Description Example <code>%c</code> Character <code>a</code> <code>%s</code> String of characters <code>\"string\"</code> <code>%d</code> or <code>%i</code> Signed decimal int <code>-123456</code> <code>%e</code> or <code>%E</code> Scientific notation using e or E character <code>3.14159e2</code> or <code>3.14159E2</code> <code>%f</code> Decimal floating point (floats) <code>123.456</code> <code>%u</code> Unsigned decimal integer <code>123456</code> <code>%o</code> Signed octal <code>1234568</code> <code>%x</code> or <code>%X</code> Unsigned hexadecimalinteger <code>1234cdef</code> or <code>1234CDEF</code> <code>%p</code> Address pointed by the argument <code>B800:0000</code> <code>%n</code> Nothing printed The argument must be a pointer to integer where the number of characters written so far will be","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#flags","title":"Flags","text":"Flags Description <code>-</code> Left align the with given width(right is default) <code>+</code> Forces to preced with positive/negative sign(- is default) <code>blank</code> If the arg is + signed then a blank is inserted before <code>#</code> 1.  Used with f, e, E makes output contain decimal  2.  Used with x, X, o value is preced with 0, 0x, 0X","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#width","title":"Width","text":"<p>| Width      | Description | Width      | Description | -----------| -------------------------------------------------------------| | <code>number</code>   | Minimum number of characters to be printed. If the value to be printed is shorter than this number the result is padded with |blanks. The value is never truncated even if the result is larger | | <code>0number</code>  | Same as above but filled with 0s instead of blanks | | <code>*</code>        | The width is not specified in the format string, it is specified by an integer value preceding the argument thas has to be formatted |</p>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#precision","title":"Precision","text":"<ul> <li>for <code>d</code>, <code>i</code>, <code>o</code>, <code>u</code>, <code>x</code>, <code>X</code> types: precision specifies the minimum number of decimal digits to be printed. If the value to be printed is shorter than this number the result is padded with blanks. The value is never truncated even if the result is larger.(if nothing specified default is 1).</li> <li>for <code>e</code>, <code>E</code>, <code>f</code> types: number of digits to be printed after de decimal point. (if nothing specified default is 6).</li> <li>for <code>g</code>, <code>G</code> types : maximum number of significant numbers to be printed.</li> <li>for <code>s</code> type: maximum number of characters to be printed. (default is to print until first null character is encountered).</li> <li>for <code>c</code> type : (no effect).</li> </ul>","tags":["coding","c++","c","syntax"]},{"location":"coding/c_cpp/syntax.html#modifier","title":"Modifier","text":"Modifier Description <code>h</code> Interpreted as a short int <code>l</code> Interpreted as a long int(integers) or double (floats) <code>L</code> Interpreted as a long double(floats)","tags":["coding","c++","c","syntax"]},{"location":"coding/general/index.html","title":"General","text":"","tags":["coding","SI","IEC"]},{"location":"coding/general/index.html#data-sizes-si-vs-iec","title":"Data Sizes SI vs IEC","text":"<p>To define data sizes there are two existing systems. On one hand there is the SI Metric system based on the decimal numbers \\(10^n\\). On the other hand there is the IEC system based on the binary numbers \\(2^n\\)</p> \\(10^n\\) Decimal Prefix Symbol \\(10^{24}\\) 1 000 000 000 000 000 000 000 000 yotta Y \\(10^{21}\\) 1 000 000 000 000 000 000 000 zetta Z \\(10^{18}\\) 1 000 000 000 000 000 000 exa E \\(10^{15}\\) 1 000 000 000 000 000 peta P \\(10^{12}\\) 1 000 000 000 000 tera T \\(10^{9}\\) 1 000 000 000 giga G \\(10^{6}\\) 1 000 000 mega M \\(10^{3}\\) 1 000 kilo k \\(10^{2}\\) 100 hecto h \\(10^{1}\\) 10 deca da \\(10^{0}\\) 1 \\(10^{-1}\\) 0.1 deci d \\(10^{-2}\\) 0.01 centi c \\(10^{-3}\\) 0.001 mili m \\(10^{-6}\\) 0.000 001 micro \\(\\mu\\) \\(10^{-9}\\) 0.000 000 001 nano n \\(10^{-12}\\) 0.000 000 000 001 pico p \\(10^{-15}\\) 0.000 000 000 000 001 femto f \\(10^{-18}\\) 0.000 000 000 000 000 001 atto a \\(10^{-21}\\) 0.000 000 000 000 000 000 001 zepto z \\(10^{-24}\\) 0.000 000 000 000 000 000 000 001 yocto y <p>The problem with the SI system for defining datasizes is that the data size base unit is \\(2^n\\)</p>","tags":["coding","SI","IEC"]},{"location":"coding/general/index.html#datasizes","title":"Datasizes","text":"<p>1 bytes = 8 bit</p>","tags":["coding","SI","IEC"]},{"location":"coding/general/index.html#iec","title":"IEC","text":"\\(2^n\\) Value IEC Prefix IEC Symbol \\(2^{10}\\) 1024 kibibyte KiB \\(2^{20}\\) 1048576 mebibytes MiB \\(2^{30}\\) 1073741824 gibibyte GiB \\(2^{40}\\) 1099511627776 tebibyte TiB \\(2^{50}\\) 1125899906842624 pebibyte PiB \\(2^{60}\\) 1152921504606846976 exbibyte EiB \\(2^{70}\\) 1180591620717411303424 zebibyte ZiB \\(2^{80}\\) 1208925819614629174706176 yobibyte YiB","tags":["coding","SI","IEC"]},{"location":"coding/general/index.html#si","title":"SI","text":"\\(10^n\\) Value SI Prefix SI Symbol \\(10^3\\) 1 000 kilobyte kB \\(10^6\\) 1 000 000 megabyte MB \\(10^9\\) 1 000 000 000 gigabyte GB \\(10^{12}\\) 1 000 000 000 000 terabyte TB \\(10^{15}\\) 1 000 000 000 000 000 petabyte PB \\(10^{18}\\) 1 000 000 000 000 000 000 exabyte EB \\(10^{21}\\) 1 000 000 000 000 000 000 000 zettabyte ZB \\(10^{24}\\) 1 000 000 000 000 000 000 000 000 yottabyte YB","tags":["coding","SI","IEC"]},{"location":"coding/licenses/index.html","title":"Licenses","text":"","tags":["coding","licenses"]},{"location":"coding/licenses/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","licenses"]},{"location":"coding/licenses/all_rights_reserved.html","title":"All rights reserved","text":"<pre><code>All Rights Reserved\n\nCopyright (c) 2019 - tschinz\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</code></pre>","tags":["coding","licenses"]},{"location":"coding/licenses/mit.html","title":"MIT","text":"<pre><code>MIT License\n\nCopyright (c) 2019 tschinz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>","tags":["coding","licenses"]},{"location":"coding/licenses/wtfpl.html","title":"WTFPL","text":"<pre><code>DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n        Version 2, December 2004\n\nCopyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;\n\nEveryone is permitted to copy and distribute verbatim or modified\ncopies of this license document, and changing it is allowed as long\nas the name is changed.\n\nDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n</code></pre>","tags":["coding","licenses"]},{"location":"coding/python/index.html","title":"Python","text":"","tags":["coding","python"]},{"location":"coding/python/index.html#introduction","title":"Introduction","text":"<p>Python samples</p>","tags":["coding","python"]},{"location":"coding/python/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","python"]},{"location":"coding/python/awesome_packages.html","title":"Awesome Packages","text":"<ul> <li>Fuzzy Wuzzy - Fuzzy string matching</li> <li>TQDM - Commandline progress bar</li> <li>Pillow - Image module</li> <li>Colorama - Colorful outputs</li> <li>Request - http requests</li> <li>Flask - Web framework</li> <li>Plotly - Open source graphic library</li> <li>Plotly Dash - Data science web framework</li> <li>Streamlit - Data science web framework</li> </ul>","tags":["coding","python","packages"]},{"location":"coding/python/datetime.html","title":"Datetime","text":"<p>Some informations about the datetime module.</p>","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#strftime","title":"strftime","text":"<p>The strftime format is the standard date formatting for UNIX. It's used in C, Ruby, and more.</p>","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#presets","title":"Presets","text":"Date Result <code>%Y%m%d%H%M%S</code> <code>20130605230521</code> <code>%d/%m/%Y</code> <code>05/06/2013</code> <code>%A, %B %e, %Y</code> <code>Sunday, June 5, 2013</code> <code>%b %e %a</code> <code>Jun 5 Sun</code> <code>%Y-%m-%d %H:%M:%S</code> <code>2019-07-03 04:43:02</code> Time Result <code>%H:%M</code> <code>23:05</code> <code>%I:%M %p</code> <code>11:05 PM</code>","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#time","title":"Time","text":"Time Result Description <code>%l</code> <code>1</code> Hour <code>%H</code> <code>00..23</code> 24h Hour <code>%I</code> <code>01..12</code> 12h Hour <code>%M</code> <code>00..59</code> Minute <code>%S</code> <code>00..60</code> Second <code>%p</code> <code>AM</code> AM or PM <code>%Z</code> <code>+08</code> Time zone <code>%j</code> <code>001..366</code> Day of the year <code>%%</code> <code>%</code> Literal % character","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#date","title":"Date","text":"Date Result Description <code>%a</code> <code>Sun</code> Weekday <code>%A</code> <code>Sunday</code> <code>%w</code> <code>0..6</code> (Sunday is 0) <code>%y</code> <code>13</code> Year <code>%Y</code> <code>2013</code> <code>%b</code> <code>Jan</code> Month <code>%B</code> <code>January</code> <code>%m</code> <code>01..12</code> <code>%d</code> <code>01..31</code> Day <code>%e</code> <code>1..31</code>","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#pandas","title":"Pandas","text":"","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#conversion","title":"Conversion","text":"<p>Convert a pandas dataframe column into the datetime format</p> <pre><code>pd.to_datetime(df['col'], format='%Y-%m-%d %H:%M:%S', utc=True)\n</code></pre>","tags":["coding","python","datetime"]},{"location":"coding/python/datetime.html#resampling","title":"Resampling","text":"Alias Description <code>B</code> Business day <code>D</code> Calendar day <code>W</code> Weekly <code>M</code> Month end <code>Q</code> Quarter end <code>A</code> Year end <code>BA</code> Business year end <code>AS</code> Year start <code>H</code> Hourly frequency <code>T, min</code> &gt; Minutely frequency <code>S</code> Secondly frequency <code>L, ms</code> Millisecond frequency <code>U, us</code> Microsecond frequency <code>N, ns</code> Nanosecond frequency <pre><code>weekly_summary.resample('W').mean()\n</code></pre>","tags":["coding","python","datetime"]},{"location":"coding/python/docstring.html","title":"Docstring","text":"","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#python-begin-file","title":"Python begin file","text":"<pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"Example NumPy style docstrings.\n\nThis module demonstrates documentation as specified by the `NumPy\nDocumentation HOWTO`_. Docstrings may extend over multiple lines. Sections\nare created with a section header followed by an underline of equal length.\n\nExample\n-------\nExamples can be given using either the ``Example`` or ``Examples``\nsections. Sections support any reStructuredText formatting, including\nliteral blocks::\n\n    $ python example_numpy.py\n\n\nSection breaks are created with two blank lines. Section breaks are also\nimplicitly created anytime a new section starts. Section bodies *may* be\nindented:\n\nNotes\n-----\n    This is an example of an indented section. It's like any other section,\n    but the body is indented to help it stand out from surrounding text.\n\nIf a section is indented, then a section break is created by\nresuming unindented text.\n\nAttributes\n----------\nmodule_level_variable1 : int\n    Module level variables may be documented in either the ``Attributes``\n    section of the module docstring, or in an inline docstring immediately\n    following the variable.\n\n    Either form is acceptable, but the two should not be mixed. Choose\n    one convention to document module level variables and be consistent\n    with it.\n\n\n.. _NumPy Documentation HOWTO:\n   https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n\n\"\"\"\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#variables","title":"Variables","text":"<pre><code>module_level_variable1 = 12345\n\nmodule_level_variable2 = 98765\n\"\"\"int: Module level variable documented inline.\n\nThe docstring may span multiple lines. The type may optionally be specified\non the first line, separated by a colon.\n\"\"\"\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#functions","title":"Functions","text":"","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#function-with-types","title":"Function with types","text":"<pre><code>def function_with_types_in_docstring(param1, param2):\n    \"\"\"Example function with types documented in the docstring.\n\n    `PEP 484`_ type annotations are supported. If attribute, parameter, and\n    return types are annotated according to `PEP 484`_, they do not need to be\n    included in the docstring:\n\n    Parameters\n    ----------\n    param1 : int\n        The first parameter.\n    param2 : str\n        The second parameter.\n\n    Returns\n    -------\n    bool\n        True if successful, False otherwise.\n\n    .. _PEP 484:\n        https://www.python.org/dev/peps/pep-0484/\n\n    \"\"\"\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#function-with-pep484-type-annotations","title":"Function with pep484 type annotations","text":"<pre><code>def function_with_pep484_type_annotations(param1: int, param2: str) -&gt; bool:\n    \"\"\"Example function with PEP 484 type annotations.\n\n    The return type must be duplicated in the docstring to comply\n    with the NumPy docstring style.\n\n    Parameters\n    ----------\n    param1\n        The first parameter.\n    param2\n        The second parameter.\n\n    Returns\n    -------\n    bool\n        True if successful, False otherwise.\n\n    \"\"\"\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#function-modules-level","title":"Function modules level","text":"<pre><code>def module_level_function(param1, param2=None, *args, **kwargs):\n    \"\"\"This is an example of a module level function.\n\n    Function parameters should be documented in the ``Parameters`` section.\n    The name of each parameter is required. The type and description of each\n    parameter is optional, but should be included if not obvious.\n\n    If \\*args or \\*\\*kwargs are accepted,\n    they should be listed as ``*args`` and ``**kwargs``.\n\n    The format for a parameter is::\n\n        name : type\n            description\n\n            The description may span multiple lines. Following lines\n            should be indented to match the first line of the description.\n            The \": type\" is optional.\n\n            Multiple paragraphs are supported in parameter\n            descriptions.\n\n    Parameters\n    ----------\n    param1 : int\n        The first parameter.\n    param2 : :obj:`str`, optional\n        The second parameter.\n    *args\n        Variable length argument list.\n    **kwargs\n        Arbitrary keyword arguments.\n\n    Returns\n    -------\n    bool\n        True if successful, False otherwise.\n\n        The return type is not optional. The ``Returns`` section may span\n        multiple lines and paragraphs. Following lines should be indented to\n        match the first line of the description.\n\n        The ``Returns`` section supports any reStructuredText formatting,\n        including literal blocks::\n\n            {\n                'param1': param1,\n                'param2': param2\n            }\n\n    Raises\n    ------\n    AttributeError\n        The ``Raises`` section is a list of all exceptions\n        that are relevant to the interface.\n    ValueError\n        If `param2` is equal to `param1`.\n\n    \"\"\"\n    if param1 == param2:\n        raise ValueError('param1 may not be equal to param2')\n    return True\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#function-other-examples","title":"Function - other examples","text":"<pre><code>def example_generator(n):\n    \"\"\"Generators have a ``Yields`` section instead of a ``Returns`` section.\n\n    Parameters\n    ----------\n    n : int\n        The upper limit of the range to generate, from 0 to `n` - 1.\n\n    Yields\n    ------\n    int\n        The next number in the range of 0 to `n` - 1.\n\n    Examples\n    --------\n    Examples should be written in doctest format, and should illustrate how\n    to use the function.\n\n    &gt;&gt;&gt; print([i for i in example_generator(4)])\n    [0, 1, 2, 3]\n\n    \"\"\"\n    for i in range(n):\n        yield i\n</code></pre> <pre><code>class ExampleError(Exception):\n    \"\"\"Exceptions are documented in the same way as classes.\n\n    The __init__ method may be documented in either the class level\n    docstring, or as a docstring on the __init__ method itself.\n\n    Either form is acceptable, but the two should not be mixed. Choose one\n    convention to document the __init__ method and be consistent with it.\n\n    Note\n    ----\n    Do not include the `self` parameter in the ``Parameters`` section.\n\n    Parameters\n    ----------\n    msg : str\n        Human readable string describing the exception.\n    code : :obj:`int`, optional\n        Numeric error code.\n\n    Attributes\n    ----------\n    msg : str\n        Human readable string describing the exception.\n    code : int\n        Numeric error code.\n\n    \"\"\"\n\n    def __init__(self, msg, code):\n        self.msg = msg\n        self.code = code\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/docstring.html#class","title":"Class","text":"<pre><code>class ExampleClass(object):\n    \"\"\"The summary line for a class docstring should fit on one line.\n\n    If the class has public attributes, they may be documented here\n    in an ``Attributes`` section and follow the same formatting as a\n    function's ``Args`` section. Alternatively, attributes may be documented\n    inline with the attribute's declaration (see __init__ method below).\n\n    Properties created with the ``@property`` decorator should be documented\n    in the property's getter method.\n\n    Attributes\n    ----------\n    attr1 : str\n        Description of `attr1`.\n    attr2 : :obj:`int`, optional\n        Description of `attr2`.\n\n    \"\"\"\n\n    def __init__(self, param1, param2, param3):\n        \"\"\"Example of docstring on the __init__ method.\n\n        The __init__ method may be documented in either the class level\n        docstring, or as a docstring on the __init__ method itself.\n\n        Either form is acceptable, but the two should not be mixed. Choose one\n        convention to document the __init__ method and be consistent with it.\n\n        Note\n        ----\n        Do not include the `self` parameter in the ``Parameters`` section.\n\n        Parameters\n        ----------\n        param1 : str\n            Description of `param1`.\n        param2 : :obj:`list` of :obj:`str`\n            Description of `param2`. Multiple\n            lines are supported.\n        param3 : :obj:`int`, optional\n            Description of `param3`.\n\n        \"\"\"\n        self.attr1 = param1\n        self.attr2 = param2\n        self.attr3 = param3  #: Doc comment *inline* with attribute\n\n        #: list of str: Doc comment *before* attribute, with type specified\n        self.attr4 = [\"attr4\"]\n\n        self.attr5 = None\n        \"\"\"str: Docstring *after* attribute, with type specified.\"\"\"\n\n    @property\n    def readonly_property(self):\n        \"\"\"str: Properties should be documented in their getter method.\"\"\"\n        return \"readonly_property\"\n\n    @property\n    def readwrite_property(self):\n        \"\"\":obj:`list` of :obj:`str`: Properties with both a getter and setter\n        should only be documented in their getter method.\n\n        If the setter method contains notable behavior, it should be\n        mentioned here.\n        \"\"\"\n        return [\"readwrite_property\"]\n\n    @readwrite_property.setter\n    def readwrite_property(self, value):\n        value\n\n    def example_method(self, param1, param2):\n        \"\"\"Class methods are similar to regular functions.\n\n        Note\n        ----\n        Do not include the `self` parameter in the ``Parameters`` section.\n\n        Parameters\n        ----------\n        param1\n            The first parameter.\n        param2\n            The second parameter.\n\n        Returns\n        -------\n        bool\n            True if successful, False otherwise.\n\n        \"\"\"\n        return True\n\n    def __special__(self):\n        \"\"\"By default special members with docstrings are not included.\n\n        Special members are any methods or attributes that start with and\n        end with a double underscore. Any special member with a docstring\n        will be included in the output, if\n        ``napoleon_include_special_with_doc`` is set to True.\n\n        This behavior can be enabled by changing the following setting in\n        Sphinx's conf.py::\n\n            napoleon_include_special_with_doc = True\n\n        \"\"\"\n        pass\n\n    def __special_without_docstring__(self):\n        pass\n\n    def _private(self):\n        \"\"\"By default private members are not included.\n\n        Private members are any methods or attributes that start with an\n        underscore and are *not* special. By default they are not included\n        in the output.\n\n        This behavior can be changed such that private members *are* included\n        by changing the following setting in Sphinx's conf.py::\n\n            napoleon_include_private_with_doc = True\n\n        \"\"\"\n        pass\n\n    def _private_without_docstring(self):\n        pass\n</code></pre>","tags":["coding","python","docstring"]},{"location":"coding/python/examples.html","title":"Examples","text":"<p>Python examples can be found in the config repo</p> <ul> <li>General</li> <li>Code Quality</li> <li>Fuzzy Search</li> <li>Small Stuff</li> <li>XKCD</li> </ul>","tags":["coding","python","examples"]},{"location":"coding/python/flake8.html","title":"Flake8","text":"<pre><code>python -m flake8 test.py\n</code></pre>","tags":["coding","python","flake8"]},{"location":"coding/python/flake8.html#flake8_1","title":"<code>.flake8</code>","text":"<p>Flake8 configuration file is formated at <code>ini</code> File. and located at:</p> <ul> <li>Linux - <code>~/.config/flake8</code></li> <li>Windows - <code>%userprofile%\\.flake8</code></li> </ul> <p>see my config</p> <pre><code>[flake8]\nmax-line-length = 200\n\nignore =\n  #E501: Line too long\n  E501\n\n  #E722 do not use bare 'except'\n  E722\n\n  #W504 line break after binary operator (one has to disable one of the W503/W504 pair)\n  W504\n\n  #W391 blank line at end of file\n  W391\n\nexclude =\n    .git,\n    __pycache__,\n    docs/src/conf.py,\n    old,\n    build,\n    dist\n</code></pre>","tags":["coding","python","flake8"]},{"location":"coding/python/methods.html","title":"Some Methods","text":"","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#raw-input","title":"Raw Input","text":"<p>Wait for until the input is finished by pressing <code>Enter</code>.</p> raw_input()<pre><code># raw_input(string)\nraw_input('Enter something:')\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#range","title":"Range","text":"range()<pre><code># range(arg1, arg2, ...)\nrange(1,5)  # = [1, 2, 3, 4]\nrange(1,5,2)    # = [1, 3]\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#convert","title":"Convert","text":"convert<pre><code>## Convert\nint()\nfloat()\ncomplex()\nlong()\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#dir","title":"Dir","text":"<p>Shows a list of names in the actual scope. Names can be functions, classes, variables of a module</p> <pre><code>$ python\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; dir(sys) # List all attribute of the sys-modul\n['__displayhook__', '__doc__', '__excepthook__', '__name__',\n '__stderr__', '__stdin__', '__stdout__', '_getframe', 'api_version',\n 'argv', 'builtin_module_names', 'byteorder', 'call_tracing',\n 'callstats', 'copyright', 'displayhook', 'exc_clear', 'exc_info',\n 'exc_type', 'excepthook', 'exec_prefix', 'executable', 'exit',\n 'getcheckinterval', 'getdefaultencoding', 'getdlopenflags',\n 'getfilesystemencoding', 'getrecursionlimit', 'getrefcount',\n 'hexversion', 'maxint', 'maxunicode', 'meta_path','modules', 'path',\n 'path_hooks', 'path_importer_cache', 'platform', 'prefix', 'ps1',\n 'ps2', 'setcheckinterval', 'setdlopenflags', 'setprofile',\n 'setrecursionlimit', 'settrace', 'stderr', 'stdin', 'stdout',\n 'version', 'version_info', 'warnoptions']\n&gt;&gt;&gt; dir() # List all attributes of the actual module\n['__builtins__', '__doc__', '__name__', 'sys']\n&gt;&gt;&gt;\n&gt;&gt;&gt; a = 5 # create new variable 'a'\n&gt;&gt;&gt; dir()\n['__builtins__', '__doc__', '__name__', 'a', 'sys']\n&gt;&gt;&gt;\n&gt;&gt;&gt; del a # delete a name\n&gt;&gt;&gt;\n&gt;&gt;&gt; dir()\n['__builtins__', '__doc__', '__name__', 'sys']\n&gt;&gt;&gt;\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#print","title":"Print","text":"print()<pre><code>age = 25\nname = 'tschinz'\nprint '%s is %d Years old.' % (name, age)\nprint 'Why plays %s with this Python?' % name\n\nOverwrite last print output\n.. code-block:: python\n   :caption: raw_input()\n\nimport time\nfor i in range(100):\n    print(\"\\rProgress {}%\".format(i),end=\"\")\n    time.sleep(0.1)\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#string-methods","title":"String Methods","text":"","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#format","title":"format","text":"format()<pre><code>\"string {1} {1:03d} {2:04X} {2:08b}\".format(42, 7)\n# output string 42 042 0007 00000111\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#len","title":"Len","text":"len()<pre><code>len(\"Hello World!\") # returns 12\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#concatenation","title":"Concatenation","text":"concatenation<pre><code>\"Hello \" + \"World\" # = \"Hello World\"\n\"Hello \" + \"World\" + 3*\"!\" # = \"Hello World!!!\"\n\ns = \"Hello World\"\ns[0]  # = 'H'\ns[1]  # = 'e'\ns[10] # = 'd'\ns[11] # = IndexError : we cannot read past the end of the string\n\ns[0:5]  # = \"Hello\"\ns[6:11] # = \"World\"\ns[6:20] # = \"World\" (no IndexError although 20 is past the end of the string)\ns[10:6] # = \"\" (starting from a larger ending at a smaller index is always the empty string)\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#findsub-start-end","title":"<code>find(sub[, start[, end]])</code>","text":"find()<pre><code>\"Hello world, hello\".find(\"ell\")       # 1\n\"Hello world, hello\".find(\"ell\", 3,10) # -1\n\"Hello world, hello\".find(\"ell\", 3,20) # 14\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#stripchars","title":"<code>strip([chars])</code>","text":"strip()<pre><code>\"  hello world  \".strip() # 'hello world'\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#lstripchars-rstripchars","title":"<code>lstrip([chars]), rstrip([chars])</code>","text":"lstrip() rstrip()<pre><code>\"  \\tHello there\".lstrip()       # 'Hello there'\n\"  \\tHello there\".lstrip(\"H\")    # '  \\tHello there'\n\"  \\tHello there\".lstrip(\"\\t H\") # 'ello there'\n\"  \\tHello there\".rstrip()       # 'Hello there'\n\"  \\tHello there\".rstrip(\"e\")    # '  \\tHello ther'\n\"  \\tHello there\".rstrip(\"erh\")  # '  \\tHello t'\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#splitsep-maxsplit","title":"<code>split([sep[, maxsplit]])</code>","text":"split()<pre><code>\"apples, peaches, oranges, bananas\".split(', ', 2)\n# ['apples', 'peaches', 'oranges, bananas']\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#partitionsep","title":"<code>partition(sep)</code>","text":"partition()<pre><code>\"Hello World\".partition(\" \")   # ('Hello', ' ', 'World')\n\"Hello World\".partition(\" Wo\") # ('Hello', ' Wo', 'rld')\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/methods.html#lower-upper","title":"<code>lower()</code>, <code>upper()</code>","text":"lower() upper()<pre><code>\"Hello World!\".lower() # 'hello world!'\n\"Hello World!\".upper() # 'HELLO WORLD!'\n</code></pre> string<pre><code>name = 'abcdef'\nif name.startswith('abc'):\n    print 'Yes, starts with \"abc\".'\nif 'a' in name:\n    print 'Yes, contains \"a\".'\nif name.find('cde') != -1:\n    print 'Yes, contains  \"cde\".'\nseparator = '_*_'\nmylist = ['Swiss', 'Germany', 'France', 'Italy']\nprint separator.join(mylist)\n</code></pre>","tags":["coding","python","methods"]},{"location":"coding/python/pandas.html","title":"Pandas","text":"","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#import","title":"Import","text":"<p>The minimum pandas imports are:</p> <pre><code>import pandas as pd\nimport numpy as np\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#import-export-data","title":"Import / Export Data","text":"","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#search-for-files","title":"Search for files","text":"<pre><code># List files in a directory\ndirlist = os.listdir(inputDir)\nprint(\"Files from directory \", inputDir)\nfor file in dirlist:\n  print(\"  * \", file)\n\n# Glob search for specific files\nwkbks = glob(os.path.join(os.pardir, 'input', 'xlsx_files_all', 'Ir*.xls'))\nsorted(wkbks)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#excel","title":"Excel","text":"<pre><code># import excel file\ndf = pd.read_excel(filename)\n\n# import one sheet from excel file\ndf = pd.read_excel(filename,sheet_name='Sheet2')\n\n# define first column as the index\ndf = pd.read_excel(filename,sheet_name='Sheet1', index_col=0)\n\n# import specific columns\ndf = pd.read_excel(filename, sheet_name='Sheet1', header=None, skiprows=1, usecols='B,D')\n\n# export excel file\ndf.to_excel(filename, index=False)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#csv","title":"CSV","text":"<pre><code># import csv file\ndf = pd.read_csv(filename)\n\n# export first 10 rows\ndf[:10].to_csv(filename, index=False)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#h5","title":"H5","text":"<p><code>H5</code> is a file format to efficiently store multiple panda dataframes. During export a dataframe name has to be given, the same key is needed to reimport the dataframe. The <code>H5</code> format is compressed and encrypted</p> <pre><code># Import H5 File\nif filename:\n   with pd.HDFStore(filename) as hdf:\n     df = hdf.select(datasetname)\n# Import H5 file\npd.read_hdf(filename, datasetname)\n\n# Export H5 File\nwith pd.HDFStore(filename, mode='w') as hdf:\n  hdf.put(datasetname, df, format='table', data_columns=True)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#copy","title":"Copy","text":"<pre><code># Copy dataframe\ndf = df.copy(deep=True)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#access-informations","title":"Access informations","text":"<pre><code># General informations\ndf.info()\n\n# Get begin data\ndf.head()\ndf.head(10)\n\n# Get end data\ndf.tail()\ndf.tail(10)\n\n# Get columns\ndf.columns\ndf.columns.tolist()\n\n# Get number of columns and rows, cells\ndf.shape[0]     # rows\ndf.shape[1]     # columns\ndf.size         # elements (rows * columns)\n\n# Count unique values in a column\nlen(df['colname'].unique())\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#index","title":"Index","text":"<pre><code># set index\ndf = df.set_index('colname')\n\n# reset index\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#statistic","title":"Statistic","text":"<pre><code>df.describe()\n\n# counter values\npd.value_counts(df['colname'])\n\n# Count non-NA values\ndf.count(axis=0)\n\n# sum\ndf.sum(axis=0) # 0 for column wise total\ndf.sum(axis=1) # row wise sum\n\n# sum based on criteria\ndf[df['colname'] == value].sum()\ndf[df['colname'].map(lambda x: x.endswith('sa')) &amp; (df['colname2'] &gt; 5.1)].sum()\n\n# Average\ndf[df['colname'] == value].mean()\ndf[df['colname'].map(lambda x: x.endswith('sa')) &amp; (df['colname2'] &gt; 5.1)].mean()\n\n# Max / Min\ndf[df['colname'] == value].max()\ndf[df['colname'] == value].min()\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#pivot","title":"Pivot","text":"<p>Pivot table is similar to GroupBy Methods. I allows to group a table and quickly</p>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#datetime","title":"Datetime","text":"<pre><code>df['colname'] = pd.to_datetime(df['colname'], format='%d/%m/%Y %H:%M:%S')\n</code></pre> <p>for the format values see <code>./datetime</code></p>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#access-data","title":"Access Data","text":"<pre><code># Access specific columns\ndf['colname']\ndf['colname'].tolist()\ndf.iloc[:,[4]]\ndf.loc[:,['colname']]\n\n# Access Multiple columns\ndf[['colname1', 'colname2']]\n\n# Access rows (index starts at 0)\ndf.loc[20:30]\ndf.loc[20:30, ['colname']]\n# get 3 first rows\ndf.iloc[0:3]\n\n# Get unique values\ndf['colname'].unique()\n\n# Get random sample of rows while maintaining index\ndf.sample(frac=0.25)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#filter","title":"Filter","text":"<pre><code># Filter for values in column\ndf[df['colname'] == value]\ndf[df['colname'].isin([value1, value2])]\n\n# Filter all NOT in list\ndf[~df['colname'].isin(values)]\n\n# Filter numberic conditions\ndf[df['colname'] == 5.1]\ndf[df['colname'] &gt; 5.1]\n\n# Custom Filter\ndf[df['colname'].map(lambda x: x.endswith('sa'))]\n\n# Combine filters\ndf[df['colname'].map(lambda x: x.endswith('sa')) &amp; (df['SepalLength'] &gt; 5.1)]\n\n# Contain filter\ndf[df['colname'].str.contains('set')]\n\n# drop duplicates\ndf.drop_duplicates(subset=['colname'])\n\n# get duplicates\ndf_duplicates = df[df.duplicated()]\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#sorting","title":"Sorting","text":"<pre><code># Soft data by value\ndf.sort_values('colname', ascending=False)\n\n# Soft data by value\ndf.sort_values('colname', axis=0, ascending=False, inplace=False, kind='quicksort', na_position='last')\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#aggregating","title":"Aggregating","text":"<pre><code># groupby and count\ndf.groupby('colname').count()\n\n# groupby and aggregate\ndf.groupby(['colname']).agg({\n  'colname1': \"sum\",\n  'colname2': \"count\",\n  'colname3': \"first\",\n  'colname4': \"last\",\n\n}).reset_index()\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#add","title":"Add","text":"<pre><code># add new column with initial value True\ndf['colname'] = True\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#remove","title":"Remove","text":"<pre><code># remove columns\ndf.drop(['colname'], axis = 1)\n\n# keep only a few columns\ndf = df[['colname1', 'colname2']]\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pandas.html#iterate-over-row-indices","title":"Iterate over row indices","text":"<pre><code>for idx, row in df[:2].iterrows():\n  print(idx,row)\n</code></pre>","tags":["coding","python","pandas"]},{"location":"coding/python/pip_general.html","title":"PIP","text":"<p>Check out also:</p> <ul> <li>Jupyter</li> <li>Conda</li> </ul>","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#admin","title":"Admin","text":"<pre><code># Show pip help\npip --help\n\n# Show installed pip version\npip --version\n\n# Update pip (Linux)\npip install --upgrade pip\n\n# Update pip (Windows)\npython -m pip install --upgrade pip\n</code></pre>","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#package","title":"Package","text":"<pre><code># Search a package\npip search &lt;packagename&gt;\n\n# See package version\npip show &lt;packagename&gt;\n\n# See all installed packages\npip list\n\n# Install\npip install &lt;packagename&gt;\npip install -I &lt;packagename&gt;==&lt;package version&gt;\npip install -I ipython==5.4.0\n\n# Update\npip install -U &lt;packagename&gt;\n\n# Uninstall\npip uninstall &lt;packagename&gt;\n</code></pre>","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#requirements","title":"requirements","text":"","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#file-content-requirementstxt","title":"File content <code>requirements.txt</code>","text":"requirements.txt<pre><code>###### Requirements without Version Specifiers ######`\nnose\nnose-cov\nbeautifulsoup4\n\n###### Requirements with Version Specifiers ######`\ndocopt == 0.6.1             # Version Matching. Must be version 0.6.1\nkeyring &gt;= 4.1.1            # Minimum version 4.1.1\ncoverage != 3.5             # Version Exclusion. Anything except version 3.5\nMopidy-Dirble ~= 1.1        # Compatible release. Same as &gt;= 1.1, == 1.*\npackage &gt;= 1.0, &lt;=2.0       # two requirements combinesd with and\n</code></pre>","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#create-requirementstxt","title":"Create <code>requirements.txt</code>","text":"<pre><code>pip freeze &gt; requirements.txt\n</code></pre>","tags":["coding","python","pip"]},{"location":"coding/python/pip_general.html#install-requirementstxt","title":"Install <code>requirements.txt</code>","text":"<pre><code>pip install -r requirements.txt\n</code></pre>","tags":["coding","python","pip"]},{"location":"coding/python/pipenv.html","title":"pipenv","text":"<p>Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world.</p> <p>It automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your Pipfile as you install/uninstall packages. It also generates the ever-important Pipfile.lock, which is used to produce deterministic builds.</p>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#installation","title":"Installation","text":"<pre><code>pip install pipenv\n</code></pre> <p>Note</p> <p>Generally, keep both <code>Pipfile</code> and <code>Pipfile.lock</code> in version control.</p>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#pipfile","title":"<code>Pipfile</code>","text":"<p><code>Pipfile</code> contain information for the dependencies of the project, and supersedes the <code>requirements.txt</code> file used in most Python projects.</p>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#import-from-existing-file","title":"Import from existing file","text":"<p>The import will search first for a <code>Pipfile</code> and <code>Pipfile.lock</code> file. If found a virtual environemnt with that packages will be created. If there files are not found <code>pipenv</code> will search for a <code>requirements.txt</code> and create a new <code>Pipfile</code> with its content. Afterwards a virtual environment will be created from it.</p> <pre><code>pipenv install\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#pipfilelock","title":"<code>Pipfile.lock</code>","text":"<p>This file lock all dependencies of the current installed packages</p> <pre><code>pipenv lock\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#packages","title":"Packages","text":"","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#install","title":"Install","text":"<p><code>*</code> meant the latest version on that level</p> <pre><code># Install from requirements.txt\npipenv install\n\n# Install one package\npipenv install &lt;packagename&gt;\npipenv install &lt;packagename&gt;=='&lt;version&gt;'\npipenv install Flask=='0.11.*'\n\n# Install dev packages\npipenv install --dev &lt;packagename&gt;\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#uninstall","title":"Uninstall","text":"<pre><code># uninstall one package\npipenv uninstall &lt;packagename&gt;\n\n# uninstall all packages\npipenv uninstall --all\n\n# uninstall all dev packages\npipenv uninstall --all-dev\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#update","title":"Update","text":"<p>Update all installed packages to the latest pip version</p> <pre><code>pipenv update\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#run","title":"Run","text":"","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#pipenv-shell","title":"pipenv shell","text":"<p>Each virtualenvironemnt has its own shell. In order to access it you have to launch it.</p> <pre><code># Goto project folder with Pipfile\ncd myproject\n\n# Launch virtual environment\npipenv shell\n\n# Exit virtual environment\nexit\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#run-command-in-pipenv","title":"Run command in pipenv","text":"<p>If you don't want to use the virtual environment shell you can also just launch one command with:</p> <pre><code>pipenv run &lt;commandname&gt;\npipenv run python app.py\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#virtual-environment","title":"Virtual environment","text":"","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#create-new-pipenv","title":"Create new pipenv","text":"<p>In order to create a new virtual environment define the python version.</p> <pre><code>pipenv --python 3.6\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#remove-pipenv","title":"Remove pipenv","text":"<p>If you want to remove a virtual envrironment launch</p> <pre><code>pipenv --rm\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#dependency-graph","title":"Dependency Graph","text":"<pre><code>pipenv graph\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/pipenv.html#workflow","title":"Workflow","text":"<pre><code># Goto git repo\ncd myproject\n\n# Install environment if there is a Pipfile\n# Also imports from requirements.txt if there is one\npipenv install\n\n# Add new package to the project\npipenv install &lt;package&gt;\n\n# Activate Pipenv shell\npipenv shell\npython --version\n\n# Lock all dependencies in file Pipenv.lock\npipenv lock\n\n# Run environment for project\npipenv run &lt;command&gt;\n</code></pre>","tags":["coding","python","pip","environment"]},{"location":"coding/python/plotly_dash.html","title":"Plotly Dash","text":"<ul> <li>Plotly Dash Webpage</li> <li>Plotly Dash User Guide</li> </ul>","tags":["coding","python","plotly","dsahboard"]},{"location":"coding/python/plotly_dash.html#login-credentials","title":"Login Credentials","text":"<p>To enable a password protection there are two solutions offered by plotly dash. One is only via the subscription model on dash enterprise, the other system is free and opensource <code>BasicAuth</code> Add the following lines to your python code to enable <code>BasicAuth</code> Login functionalities:</p> <pre><code>import dash_auth\n\nlogin_credentials = {\n  'username': 'password'\n}\n\n# create dash app\n# ...\n\n# create authentication on the app\nauth = dash_auth.BasicAuth(app, login_credentials)\n\n# do more stuff\n# ...\n</code></pre> <p>Warning</p> <p>Login Credentials should ot be save in the python code within the source code repository. It should be saves at least as hash in an external file.</p>","tags":["coding","python","plotly","dsahboard"]},{"location":"coding/python/plotly_dash.html#deploy","title":"Deploy","text":"<p>Dash applications are webpages which have to be deployed on a webserver. It comes integrated with the python flask webserver which can be run locally on the machine by including the following main in your python script.</p> <pre><code>if __name__ == '__main__':\n   app.run_server()\n</code></pre>","tags":["coding","python","plotly","dsahboard"]},{"location":"coding/python/plotly_dash.html#local","title":"Local","text":"<p>To start the Dash locally just run the main python scripts</p> <pre><code>$ python app.py\n  * Serving Flask app \"app\" (lazy loading)\n  * Environment: production\n  WARNING: This is a development server. Do not use it in a production deployment.\n  Use a production WSGI server instead.\n  * Debug mode: off\n  * Running on http://127.0.0.1:8050/ (Press CTRL+C to quit)\n</code></pre>","tags":["coding","python","plotly","dsahboard"]},{"location":"coding/python/plotly_dash.html#heroku","title":"Heroku","text":"<p>Heroku has free plans to make at your disposal servers which can serve to run the Plotly Dash app.</p> <p>For that the heroku server can install all requirements of the project the <code>requirements.txt</code> has to be created if you use <code>pipenv</code> you can simply freeze your python environment as follows:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Login onto you Heroku profile and create a new app and select the name you want</p> <p></p> <p> Heroku create new app and select app name</p> <p>After you can connect the github repo. It in the repo the plotly dash in configured correctly Heroku detect automatically the app.</p> <p>Figure 1: Heroku connect to github repo</p> <p>Once the correct repo is selected define if the app should be deployed now manually or with each commit of a selected branch.</p> <p>Figure 2: Heroku select deploy method</p>","tags":["coding","python","plotly","dsahboard"]},{"location":"coding/python/print.html","title":"String Format Mini Language","text":"<pre><code>format_spec ::=  [[fill]align][sign][#][0][width][,][.precision][type]\nfill        ::=  &lt;any character&gt;\nalign       ::=  \"&lt;\" | \"&gt;\" | \"=\" | \"^\"\nsign        ::=  \"+\" | \"-\" | \" \"\nwidth       ::=  integer\nprecision   ::=  integer\ntype        ::=  \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\"\n</code></pre> <pre><code>\"{\" [field_name] [\"!\" conversion] [\":\" format_spec] \"}\"\n   /                  \"r\"|\"s\"                     \\\n  /                   (r)epr                       \\\narg_name              (s)tr                         \\\n| (\".\" attribute_name | \"[\" element_index \"]\")*      \\\n|        |                       |                    \\\n|     identifier         integer | index_string        |\n|                                   (quotes            |\n[identifier integer]                 not required)     |\n                                                       |\n _____________________________________________________/ \\________\n/                                                                \\\n    \":\" [[fill]align][sign][#][0][width][,][.precision][type]\n [default]--&gt; &lt; left    +   |  |  (int)       (int)      b base 2\n [default --&gt; &gt; right  [-]  |  |                         c character\n for         ^ center \" \"   |  \\                         d base 10\n numbers]    =              |   `zero padding            e exponent (e)\n                            |                            E exponent (E)\n                           use 0b,0o,0x                  f fixed point\n                            for 2  8 16                  F ^^(same)^^\n                                            [default]--&gt; g general (???)\n                                                         G general 2 (?)\n                                                         n number (general 3)\n                                                         o base 8\n                                                         s string\n                                            (lower case) x base 16\n                                            (upper case) X base 16\n                                               (x100, f) % percentage\n</code></pre> <pre><code>print(\"{:&gt;6.5}\".format(var))        # right aligned to 6 digits, precision 5 (5 numbers including point e.g. 0.123)\n\nprint(\"{:08}\".format(var))          # filled up with 0 to 8 digits, 00001234\n\nprint(\"0x{:0x}\".format(int(var)))     # in hex small case, 0x4d2\nprint(\"0x{:0X}\".format(int(var)))     # in hex small case, 0x4D2\n\nprint(\"{:04x}\".format(int(var)))     # in hex small case, 0x04d2\nprint(\"{:04X}\".format(int(var)))     # in hex small case, 0x04D2\n</code></pre> <pre><code>import numpy as np\nfloat_array = np.linspace(1, 9999, num=10)\nint_array   = np.linspace(1, 9999, num=10).astype(int)\nstring_array = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\"]\n\nprint(\"Choose Correct Placeholder\")\nfor i in range(0,10):\n  print(\" | {2:&gt;7} | {1:&gt;7} | {0:&gt;7.6} |\".format(float_array[i], int_array[i], string_array[i]))\n\n# Choose Correct Placeholder\n#  |     One |       1 |     1.0 |\n#  |     Two |    1111 | 1111.89 |\n#  |   Three |    2222 | 2222.78 |\n#  |    Four |    3333 | 3333.67 |\n#  |    Five |    4444 | 4444.56 |\n#  |     Six |    5555 | 5555.44 |\n#  |   Seven |    6666 | 6666.33 |\n#  |   Eight |    7777 | 7777.22 |\n#  |    Nine |    8888 | 8888.11 |\n#  |     Ten |    9999 |  9999.0 |\n\nprint(\"\\nRight aligned to 7 digits, precision 6 (numbers including point e.g. 0.1234)\")\nfor i in range(0,10):\n  print(\" | {:&gt;7.6} | {:&gt;7} | {:&gt;7} |\".format(float_array[i], int_array[i], string_array[i]))\n\n# Right aligned to 7 digits, precision 6 (numbers including point e.g. 0.1234)\n#  |     1.0 |       1 |     One |\n#  | 1111.89 |    1111 |     Two |\n#  | 2222.78 |    2222 |   Three |\n#  | 3333.67 |    3333 |    Four |\n#  | 4444.56 |    4444 |    Five |\n#  | 5555.44 |    5555 |     Six |\n#  | 6666.33 |    6666 |   Seven |\n#  | 7777.22 |    7777 |   Eight |\n#  | 8888.11 |    8888 |    Nine |\n#  |  9999.0 |    9999 |     Ten |\n\nprint(\"\\nLeft aligned to 7 digits, precision 6 (numbers including point e.g. 0.1234)\")\nfor i in range(0,10):\n  print(\" | {:&lt;7.6} | {:&lt;7} | {:&lt;7} |\".format(float_array[i], int_array[i], string_array[i]))\n\n# Left aligned to 7 digits, precision 6 (numbers including point e.g. 0.1234)\n#  | 1.0     | 1       | One     |\n#  | 1111.89 | 1111    | Two     |\n#  | 2222.78 | 2222    | Three   |\n#  | 3333.67 | 3333    | Four    |\n#  | 4444.56 | 4444    | Five    |\n#  | 5555.44 | 5555    | Six     |\n#  | 6666.33 | 6666    | Seven   |\n#  | 7777.22 | 7777    | Eight   |\n#  | 8888.11 | 8888    | Nine    |\n#  | 9999.0  | 9999    | Ten     |\n\nprint(\"\\nFill up with \"0\" or \"-\" or \"=\"\")\nfor i in range(0,10):\n  print(\" | {:09.6} | {:-&gt;7} | {:=&lt;7} |\".format(float_array[i], int_array[i], string_array[i]))\n\n# Fill up with \"0\" or \"-\" or \"=\"\n#  | 0000001.0 | ------1 | One==== |\n#  | 001111.89 | ---1111 | Two==== |\n#  | 002222.78 | ---2222 | Three== |\n#  | 003333.67 | ---3333 | Four=== |\n#  | 004444.56 | ---4444 | Five=== |\n#  | 005555.44 | ---5555 | Six==== |\n#  | 006666.33 | ---6666 | Seven== |\n#  | 007777.22 | ---7777 | Eight== |\n#  | 008888.11 | ---8888 | Nine=== |\n#  | 0009999.0 | ---9999 | Ten==== |\n\nprint(\"\\nPrint Hexadezimal stuff lower case\")\nfor i in range(0,10):\n  print(\" | 0x{0:&gt;7x} | 0x{0:07x} | 0x{0:x} |\".format(int_array[i]))\n\n# Print Hexadezimal stuff lower case\n#  | 0x      1 | 0x0000001 | 0x1 |\n#  | 0x    457 | 0x0000457 | 0x457 |\n#  | 0x    8ae | 0x00008ae | 0x8ae |\n#  | 0x    d05 | 0x0000d05 | 0xd05 |\n#  | 0x   115c | 0x000115c | 0x115c |\n#  | 0x   15b3 | 0x00015b3 | 0x15b3 |\n#  | 0x   1a0a | 0x0001a0a | 0x1a0a |\n#  | 0x   1e61 | 0x0001e61 | 0x1e61 |\n#  | 0x   22b8 | 0x00022b8 | 0x22b8 |\n#  | 0x   270f | 0x000270f | 0x270f |\n\nprint(\"\\nPrint Hexadezimal stuff uppder case\")\nfor i in range(0,10):\n  print(\" | 0x{0:&gt;7X} | 0x{0:07X} | 0x{0:X} |\".format(int_array[i]))\n\n# Print Hexadezimal stuff uppder case\n#  | 0x      1 | 0x0000001 | 0x1 |\n#  | 0x    457 | 0x0000457 | 0x457 |\n#  | 0x    8AE | 0x00008AE | 0x8AE |\n#  | 0x    D05 | 0x0000D05 | 0xD05 |\n#  | 0x   115C | 0x000115C | 0x115C |\n#  | 0x   15B3 | 0x00015B3 | 0x15B3 |\n#  | 0x   1A0A | 0x0001A0A | 0x1A0A |\n#  | 0x   1E61 | 0x0001E61 | 0x1E61 |\n#  | 0x   22B8 | 0x00022B8 | 0x22B8 |\n#  | 0x   270F | 0x000270F | 0x270F |\n</code></pre>","tags":["coding","python","print"]},{"location":"coding/python/pyqt.html","title":"PyQt4","text":"","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#links","title":"Links","text":"<ul> <li>Riverbank PyQt4 Download</li> <li>PyQt4 Reference Guide</li> <li>PyQt4 Class Reference</li> <li>PyQT4 CustomSerialProgramm CSP Example</li> </ul>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#import-pyqt4-module","title":"Import PyQt4 module","text":"<p>Python tutorial can be found at: ZetCode Tutorial</p> import<pre><code>import PyQt4\nfrom PyQt4 import QtGui, Qt\nfrom PyQt4 import QtCore\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#class","title":"Class","text":"<p>Define the class to generate a Window</p> class<pre><code>windowsize = (700,600)\n\nclass MainUI(QtGui.QMainWindow):\n\n    def __init__(self, win_parent = None):\n        # Init the base class\n        QtGui.QMainWindow.__init__(self, win_parent)\n        self.init_UI()\n\n    def init_UI(self):\n        #... code ...\n        self.setWindowTitle('Python Script GUI - Main')\n        #self.setWindowIcon(QtGui.QIcon('icons/zas.png'))\n        self.resize(windowsize[0], windowsize[1])\n        self.setCentralWidget(main_widget)\n####\n# Launch Window\n#\nif __name__ == \"__main__\":\n    # Someone is launching this directly\n    # Create the QApplication\n    #app = QtGui.QApplication(sys.argv)\n    app = QtGui.QApplication()\n    # The Main window\n    main_window = MainUI()\n    main_window.show()\n    # Enter the main loop\n    app.exec_()\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#signal-slot","title":"Signal Slot","text":"<p>Especially if you have a multithreaded application all information between the threads should be exchanged with the signal slot mechanism.</p> <p>Connect a signal to a function (<code>slot</code>).</p> connect signal slot<pre><code>self.connect(self, QtCore.SIGNAL('signalName'),self.receiving_functionName)\n</code></pre> <p>Emit a signal with certain parameters, the parameters will be given to the function arguments.</p> emit signal<pre><code>self.emit(SIGNAL(\"signalName\"), \"param_string\", 10, False) # String, int and bool parameter\n</code></pre> signal slot example<pre><code>import sys\nimport time\nfrom PyQt4.QtCore import *\nfrom PyQt4.QtGui import *\n\nclass WindowEx(QWidget):\n    def __init__(self, *args):\n        QWidget.__init__(self, *args)\n        self.connect(self, SIGNAL(\"signalName\"), self.receiving_functionName)\n        self.someFunction()\n\n    def someFunction(self):\n        self.emit(SIGNAL(\"signalName\"), \"string\", 10, False)\n\n    def receiving_functionName(self, string_param, int_param, bool_param):\n        print(\"%s %i %b\" % (string_param, int_param, bool_param))\n\nif __name__ == \"__main__\":\n    app = QApplication(sys.argv)\n    w = MyWindow()\n    w.show()\n    sys.exit(app.exec_())\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#toolbar","title":"Toolbar","text":"toolbar<pre><code># Create Buttons and Shortcuts\nself.run = QtGui.QAction(QtGui.QIcon('icons/run.png'), 'Run Script', self)\nself.run.setShortcut('Ctrl+R')\nself.connect(self.run, QtCore.SIGNAL('triggered()'), self.exe)\n\nself.rst = QtGui.QAction(QtGui.QIcon('icons/reset.png'), 'Reset Fields', self)\nself.rst.setShortcut('Ctrl+Shift+R')\nself.connect(self.rst, QtCore.SIGNAL('triggered()'), self.reset)\n\nself.info = QtGui.QAction(QtGui.QIcon('icons/info.png'), 'Info', self)\nself.info.setShortcut('Ctrl+Q')\nself.connect(self.info, QtCore.SIGNAL('triggered()'), self.displayInfo)\n\nself.exit = QtGui.QAction(QtGui.QIcon('icons/exit.png'), 'Exit', self)\nself.exit.setShortcut('Ctrl+Q')\nself.connect(self.exit, QtCore.SIGNAL('triggered()'), QtCore.SLOT('close()'))\n\n# Create Toolbar\nself.toolbar = self.addToolBar('Actions')\nself.toolbar.addAction(self.run)\nself.toolbar.addAction(self.rst)\nself.toolbar.addAction(self.info)\nself.toolbar = self.addToolBar('Exit')\nself.toolbar.addAction(self.exit)\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#taskbar","title":"Taskbar","text":"<pre><code>trayIcon = QtGui.QSystemTrayIcon(QtGui.QIcon(\"icons/simulate.png\"), self)\ntrayIcon.show()\n</code></pre> <p>For Windows 7 and newer, the Taskbar uses heuristic algorithm to define groupable applications. Therefore your Python application is always grouped with the pythonw.exe application. To change that, you need to enter a specific AppUserModelID.</p> <pre><code>import ctypes\nmyappid = 'mycompany.myproduct.subproduct.version' # arbitrary string\nctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)\n</code></pre> <p>The Code need to be executed before and GUI is started.</p>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#widgets","title":"Widgets","text":"widgets<pre><code># Title label\nself.script_label = QtGui.QLabel(\"Launcher for script: \" + script)\n\n# Input widgets\nself.input_label  = QtGui.QLabel(\"Input File:\")\nself.input_edit   = QtGui.QLineEdit()\nself.input_button = QtGui.QPushButton(\"Browse\")\n\n# Output widgets\nself.output_label  = QtGui.QLabel(\"Output Directory:\")\nself.output_edit   = QtGui.QLineEdit()\nself.output_button = QtGui.QPushButton(\"Browse\")\n\n# Verbose Radiobutton\nself.verbose_rb = QtGui.QRadioButton('Verbosity', self)\n\nself.clear_button = QtGui.QPushButton(\"Clear\")\n\n# Textbox for output\nself.textBox = QtGui.QTextEdit(\"Script Output\")\nself.textBox.setMaximumHeight(windowsize[0]-200)\n\n# Connect signal\n# Browse File button\nQtCore.QObject.connect(self.input_button,\n                       QtCore.SIGNAL(\"clicked()\"),\n                       self.browseFile)\n# Browse Directory button\nQtCore.QObject.connect(self.output_button,\n                       QtCore.SIGNAL(\"clicked()\"),\n                       self.browseDir)\n\n# Browse Directory button\nQtCore.QObject.connect(self.clear_button,\n                       QtCore.SIGNAL(\"clicked()\"),\n                       self.clear)\n\n#----\n# browse File\n#\ndef browseFile(self):\n    #filename = QtGui.QFileDialog.getOpenFileName(self, 'Open file', 'Path', \"filters\")\n    filename = QtGui.QFileDialog.getOpenFileName(self, 'Open file', '', \"XML files (*.xml);;All files (*)\")\n    self.input_edit.setText(filename)\n    if not(filename == ''):\n        self.statusBar().showMessage('Ready: File OK')\n    else:\n        self.statusBar().showMessage('Error: File NOK')\n# END browseFile\n\n#----\n# browse Directory\n#\ndef browseDir(self):\n    dirname = QtGui.QFileDialog.getExistingDirectory(self, 'Open directory', '')\n    self.output_edit.setText(dirname)\n    if not(dirname == ''):\n        self.statusBar().showMessage('Ready: Directory OK')\n    else:\n        self.statusBar().showMessage('Error: Directory NOK')\n# END browseDir\n\n#----\n# clear terminal\n#\ndef clear(self):\n    self.textBox.setText('')\n    self.statusBar().showMessage('Ready: terminal cleared')\n# END clear\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#progressbar","title":"Progressbar","text":"<p>The Progressbar allows to represent the % done of the program or simply to display that a process is working</p> progressbar<pre><code># Create progressbar\nself.pbar = QtGui.QProgressBar(self)\n\n# 0% of 100%\nself.pbar.setValue(0)\nself.pbar.setMaximum(100)\nself.pbar.setMinimum(0)\n\n# In progress, bouncing back and forth\nself.pbar.setMaximum(0)\nself.pbar.setMinimum(0)\n\n# 33% of 100%\nself.pbar.setValue(33)\nself.pbar.setMaximum(100)\nself.pbar.setMinimum(0)\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#layout","title":"Layout","text":"layout<pre><code># Layout\ngrid1 = QtGui.QGridLayout()\ngrid1.addWidget(self.input_label, 0, 0)\ngrid1.addWidget(self.input_edit, 0, 1)\ngrid1.addWidget(self.input_button, 0, 2)\ngrid1.addWidget(self.output_label, 1, 0)\ngrid1.addWidget(self.output_edit, 1, 1)\ngrid1.addWidget(self.output_button, 1, 2)\ngrid1.addWidget(self.verbose_rb, 2, 0)\ngrid1.addWidget(QtGui.QLabel(''), 2, 2)\ngrid1.addWidget(self.clear_button, 2, 2)\n\nhboxCmd = QtGui.QHBoxLayout()\nhboxCmd.addWidget(self.script_label)\nhboxCmd.addStretch(1)\n\nhboxTextBox = QtGui.QHBoxLayout()\nhboxTextBox.addWidget(self.textBox)\n\nmain_layout = QtGui.QVBoxLayout()\nmain_layout.addLayout(hboxCmd)\nmain_layout.addLayout(grid1)\nmain_layout.addLayout(hboxTextBox)\nmain_layout.addWidget(self.pbar)\n\n# Create central widget, add layout and set\nmain_widget = QtGui.QWidget()\nmain_widget.setLayout(main_layout)\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#statusbar","title":"Statusbar","text":"statusbar<pre><code># Write statusbar message\nself.statusBar().showMessage('Ready')\n\n# Add widget into statusbar\nself.statusBar().addPermanentWidget(self.pbar,0)\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/pyqt.html#center-window","title":"Center window","text":"center<pre><code>self.winCenter()\n\ndef winCenter(self):\n    screen = QtGui.QDesktopWidget().screenGeometry()\n    size =  self.geometry()\n    self.move((screen.width()-size.width())/2, (screen.height()-size.height())/2)\n# END win_center\n</code></pre>","tags":["coding","python","qt"]},{"location":"coding/python/stdlib.html","title":"Standart libraries","text":"","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#module-content","title":"Module Content","text":"<p>If you want to know the functions available of a module, import it and dir(). It will give you a list of all accessible functions.</p> <pre><code>import math\nprint dir(math)\n# ['acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'exp', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'hypot', 'isinf', 'isnan', 'ldexp', 'log', 'log10', 'log1p', 'modf', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc']\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#sys","title":"sys","text":"","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#sys-variables","title":"sys Variables","text":"<pre><code>sys.&lt;variable_name&gt;\n</code></pre> Variable name Description <code>argv</code> Command line args <code>builtin_module_names</code> Linked C modules <code>byteorder</code> Native byte order <code>exec prefix</code> Root directory <code>executable</code> Name of executable <code>modules</code> Loaded modules <code>path</code> Search path <code>platform</code> Current platform (Windows, Linux, Darwin (Mac)) <code>stdin</code>, <code>stdout</code>, <code>stderr</code> File Objects for I/O","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#arguments","title":"Arguments","text":"sys args<pre><code># sys.argv for $python foo.py bar -c qux --h\n\nsys.argv[0] = foo.py\nsys.argv[1] = bar\nsys.argv[2] = -c\nsys.argv[3] = qux\nsys.argv[4] = --h\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#os","title":"os","text":"","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#os-variables","title":"os Variables","text":"<pre><code>os.&lt;variablename&gt;\n</code></pre> Variable name Description <code>altsep</code> Alternative separator <code>curdir</code> Current dir string <code>defpath</code> Default search path <code>devnull</code> Path of null device <code>extsep</code> Extension separator <code>linesep</code> Line separator <code>name</code> Name of os (posix, nt, mac, os2, ce, java, riscos) <code>pardir</code> Parent dir string <code>pathsep</code> Patch separator <code>sep</code> Path seperator <p>These functions are platform indepentend and should work on Linux, Windows und Mac.</p> os<pre><code>os.getcwd()              # Return actual working directory\nos.listdir()             # Return NAmes of all files and folders from the given loction\nos.getenv()              # Read environment variables\nos.putenv()              # Write environment variables\nos.remove(file)          # delete file\nos.sysrtem()             # put the command into the Terminal\nos.path.split(filepath)  # Returns location and filename\nos.path.isfile(filepath) # Check if location is a file\nos.path.isdir(path)      # Check if location is a folder\nos.path.exist(path|file) # Check if location exists\nos.path.splitext(file)   # Splits filename and extention file, ext = os.path.splitext(f)\nos.path.dirname(path)    #\n</code></pre> <p>For searching wihtin a folder root use the <code>os.walk()</code></p> <pre><code>for dirpath, dirnames, filenames in os.walk(folder_location):\n    # dirpath = root dir of file\n    # dirnames = [] list of dirs in dirpath\n    # filenames = [] list of files in dirpath\n    pass\n</code></pre> <pre><code>path_win = \"C://user/file.txt\"\npath_lin = \"/home/user/file.txt\"\nos.path.basename(path_win)   # 'file.txt'\nos.path.dirname(path_win)    # 'C://user'\nos.path.basename(path_lin)   # 'file.txt'\nos.path.dirname(path_lin)    # '/home/user'\nos.path.split(path_win)      # ('C://user', 'file.txt')\nos.path.split(path_lin)      # ('/home/user', 'file.txt')\nos.path.splitext(path_lin)   # ('/home/user/file', '.txt')\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#re-regexp","title":"re &amp; RegExp","text":"<pre><code>import re\ndef myRegEx_Checker(expression,data):\n    reg=re.compile(expression);\n    if reg.match(data):\n        return True\n    return False\n</code></pre> <pre><code># replace multiple space with one\nre.sub(\"\\s+\",\" \",  \"   Python  Regexpr   \")    # \" Python Regexpr \"\n\n# remove front and leading spaces\nre.sub(\"^\\s+|\\s+$\",\"\",  \"   Regexpr     \")     # \"Regexpr\"\n\n# remove comment (# or -- or //) and all after it\nre.sub(\"(--|#|//).*\",\"\",  \"Regexpr --comment\") # \"Regexpr \"\n\n# search only\nre.findall(\"(\\d{1,2}\\/\\d{1,2}\\/\\d{4})\", \"asdfsadf31/02/2012dsfsdf\") # Date (e.g. 31/3/2006))\n# returns a list of found strings\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#time","title":"time","text":"time<pre><code>import time\nstrftime(\"%Y-%m-%d %H:%M:%S\", gmtime())           # 2009-01-05 22:14:39\nstrftime(\"%Y-%m-%d %H:%M:%S\", localtime())        # 2009-01-05 22:14:39\nstrftime(\"%a, %d %b %Y %H:%M:%S +0000\", gmtime()) # Tue, 06 Jan 2009 04:54:56 +0000\n</code></pre> sleep<pre><code>import time\ntime.sleep(6)    # Sleep in seconds\n&lt;/code&gt;\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/stdlib.html#random","title":"random","text":"random<pre><code>import random\n\n# Random number between 0.0 and 1.0\nrandom.random()             # e.g. 0.28396990573542813\n\n# Uniform random number between a and b  (a &lt;= x &lt; b)\nuniform(a, b)\nrandom.uniform(1, 10)       # e.g. 6.3970639899381769\n\n# Gauss random number of mean value \"mu\" and standard deviation \"sigma\"\ngauss(mu, sigma)\nrandom.gauss(5, 2)          # e.g. 6.3865365546439046\n\n# Other functions\nbetavariate(alpha, beta)    # Beta deviation\nexpovariate(lambd)          # Exponential deviation\ngammavariate(alpha, beta)   # Gamma-deviation\nlognormvariate(mu, sigma)   # logarithmische deviation\nvonmisesvariate(mu, kappa)  # Von-Mises-deviation\nparetovariate(alpha)        # Pareto-deviation\nweibullvariate(alpha, beta) # Weibull-deviation\n\n# Random integer between a and b (a &lt;= x &lt;= b) like throw dice\nrandint(a, b)\nrandom.randint(1, 6)        # e.g. 4\n\n# Random picked number of a list\nrandrange( [start,] stop[, step])\n\nrange(0, 21, 2)             # e.g. [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\nrandom.randrange(0, 21, 2)  # e.g. 10\n</code></pre>","tags":["coding","python","std"]},{"location":"coding/python/syntax.html","title":"Syntax","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#general","title":"General","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#sourcefile","title":"Sourcefile","text":"sourcefile<pre><code>#!/usr/bin/python\n# -*- coding: utf-8 -*-\n# -*- coding: latin1 -*-\n# -*- coding: iso-8859-1 -*-\n# durch coding auch umlaut m\u00f6glich\nprint('Hello W\u00f6rld')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#help-informations","title":"Help informations","text":"<pre><code>help(command or object)\nq =&gt; Exit help\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#import","title":"Import","text":"<p>There are two ways to import modules.</p>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#import_1","title":"import","text":"<p>You import the module. you have to call each time modulname.function to access each function</p> <pre><code>import &lt;modulname&gt;\n&lt;modulname&gt;.&lt;modulfunction&gt;\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#from-import","title":"from  import","text":"<p>In the second way you import one one or with * all functions of a module. But if you import the same function of two different modules, or if you import * from two modules which has common function names the interpreter won't know which one you are calling.</p> <pre><code>from &lt;modulname&gt; import &lt;function&gt;\n&lt;function&gt;\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#example","title":"Example","text":"<pre><code># First way\nimport math\nmath.sqrt(25)\n\n# Second way\nfrom math import sqrt\nsqrt(25)\n\n# Second way but import everything (need for math. anymore)\nfrom math import *\nsqrt(25)\nlog(10)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#strings-and-numbers","title":"Strings and Numbers","text":"<pre><code>'' =&gt; Spaces and symbols will be taken\n\"\" =&gt; Same as Strings with ''\n''' ''' or \"\"\" \"\"\"\nMultiline Strings, inside '' and \"\" can be used\n'This is a String.' / \"This too!\"\n''' This is a Multiline String. Frist Line\nAnd this is the \"Second Line\"\n'''\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#escape-characters","title":"Escape Characters","text":"<pre><code>'                  # = '\n\"                  # = \"\n\\\\                  # = \\\n\\n                  # = New Line\n\\t                  # = Tabulator\n\\                   # = Line feed\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#types","title":"Types","text":"Type Example int 5 long 1.23 float 9.25e-3 complex 5.3+3j","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#convertions","title":"Convertions","text":"<pre><code>int()               # to int\nfloat()             # to float\ncomplex()           # to complex\nlong()              # to long\nunichr()            # int to 1 char\nord()               # 1 element string to int\nstr()               # int to string\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#string-bin-hex-convertions","title":"String Bin Hex convertions","text":"<pre><code>hex_bin = binascii.unhexlify(hex_string)\nhex_string = binascii.hexlify(hex_bin)\n\ndef hex2bin(self, str):\n    bin = ['0000','0001','0010','0011',\n           '0100','0101','0110','0111',\n           '1000','1001','1010','1011',\n           '1100','1101','1110','1111']\n    aa = ''\n    for i in range(len(str)):\n        aa += bin[int(str[i],base=16)]\n    return aa\n\n# END hex2bin\nbin_string = hex2bin(hex_string)\n\nhex_string = hex(int_number)\nint_number = int(hex_string,16)\n\n# 2 digit hex string\nhex_string = \"0x%0.2X\" % 255 # = 0xFF\nhex_string = \"%0.2X\" % 255   # = FF\n\n# Format strings the easy way\nstring = \"{0} {1}\".format(firstReplacer , secondReplacer))\nprint(\"{:03} {:3}\".format(nbr1 , nbr2))\n# {:03} = right aligned 3 numbers filled with 0 e.g. 005 or 015\n# {:3}  = right aligned 3 numbers               e.g.   5     15\n\n# More examples\nprint(\"{0: &gt;6,.4}\".format(nbr0, nbr1)\n# print nbr0,  align right,  fill with \" \", 6 places width, 4 digits precision\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#operator","title":"Operator","text":"<pre><code>+                   # Plus         3 + 5 = 8 'a' + 'b' = 'ab'\n-                   # Minus        -5.2 order 5 - 2\n*                   # Multiplcation 2 * 3 = 6\n**                  # Power        3 ** 4 = 3 * 3 * 3 * 3 = 81\n/                   # Division     4 / 3 = 1 oder 4.0/3 = 1.3333...\n//                  # Integer  Division 4 // 3.0 = 1.0\n%                   # Modulo       8 % 3 = 2\n&lt;&lt;                  # Bitwise left 2 &lt;&lt; 2 = 8   (in binary)\n&gt;&gt;                  # Bitwise right 11 &gt;&gt; 1 = 5 (in binary)\n&amp;                   # Bitwise AND  5 &amp; 3 = 1    (in binary)\n\u00a6                   # Bitwise OR   5 | 3 = 7    (in binary)\n^                   # Bitwise XOR  5 ^ 3 = 6    (in binary)\n~                   # Bitwise NOT  ~5 = -6\n&lt;                   # Smaller as\n&gt;                   # Bigger as\n&lt;=                  # Smaller Equal\n&gt;=                  # Bigger Equal\n==                  # Equal\n!=                  # Not Equal\nnot                 # log NOT\nand                 # log AND\nor                  # log OR\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#priority","title":"Priority","text":"<p>A Line will be evaluated from left to right</p> <pre><code>## High priority\nlambda              # lambda function\nor                  # log OR\nand                 # log AND\nnot x               # log NOT\nin, not in          # Part of test (in Sequences)\nis, is not          # Identity test\n&lt;,&lt;=,&gt;,&gt;=,!=,==     # Comparison\n|                   # Bitwise OR\n^                   # Bitwise XOR\n&amp;                   # Bitwise AND\n&lt;&lt;,&gt;&gt;               # Bitwise Shift\n+,-                 # Add, Sub\n*,/,%               # Mul, Div, Mod\n+x,-x               # pos-, neg-sign\n~x                  # Bitwise NOT\n**                  # Pow\nx.attribut          # Attribut reference\nx[index]            # Index\nx[index:index]      # range of a sequence\nf(param ...)        # function call\n(ausdruck, ...)     # brackets\n[ausdruck, ...]     # List\n{key:value, ...}    # Dictionaries\n'ausdruck, ...'     # Umwandlung in Stringdarstellung\n## Low priority\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#statement","title":"Statement","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#if-elif-else","title":"if elif else","text":"<pre><code>number = 23\nguess = int(raw_input('Enter a number: '))\nif guess == zahl:\n    print('YES')\nelif guess &lt; number:\n    print('Higher')\nelse:\n    print('Lower')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#while","title":"while","text":"<pre><code>number = 23\nnostop = True\nwhile nostop:\n    guess = int(raw_input('Enter a number: '))\n    if number == guess:\n        print('Yes')\n    nostop = False # End of while\n    elif guess &lt; number:\n        print('Higher')\n    else:\n        print('Lower')\nelse:\n    print('End of while loop')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#for","title":"for","text":"<pre><code>for i in range(1, 5):\n    print(i)\nelse:\n    print('End of for loop')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#break","title":"break","text":"<pre><code>while True:\n    s = raw_input('Enter something: ')\n    if s == 'end':\n        break\n    print('The length of the string is', len(s))\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#continue","title":"continue","text":"<p>continue use for <code>while</code> and <code>for</code></p> <pre><code>while True:\n    s = raw_input('Enter something: ')\n    if s == 'end':\n        break\n    if len(s) &lt; 3:\n        continue\n    print('Sufficient long')\n    # Treat input here\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#pass","title":"pass","text":"<pre><code># pass is used to create an empty block\ndef function():\n    pass\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#functions","title":"Functions","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#general-functions","title":"General Functions","text":"<pre><code>def hello_world():\n    print 'hello cruel world!'\n# End of function\nhello_world() # function call\n\ndef printMax(a, b):\n    if a &gt; b:\n        print(a, 'is max value')\n    else:\n        print(b, 'is max value')\nprintMax(3, 4) # function call with number\nx = 5\ny = 7\nprintMax(x, y) # function call with arguments\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#global-variable","title":"Global variable","text":"<pre><code>def func():\n    global x\n    print('x ist', x)\n    x = 2\n    print('global x is now', x)\nx = 50\nfunc()\nprint('The value of x is', x) # x = 2 because of global var\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#predefined-arguments","title":"Predefined Arguments","text":"<p>If a function parameter is not given, the default value will be used. All parameter with default values need to be at the end of the parameter list.</p> <pre><code>def sag(message, loops = 1):\n    print(message * loops)\nsag('Hello')\nsag('World', 5)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#keywords-with-param","title":"Keywords with param","text":"<pre><code>def func(a, b=5, c=10):\n    print('a is', a, 'and b is', b, 'and c is', c)\nfunc(3, 7)\nfunc(25, c=24)\nfunc(c=50, a=100)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#return","title":"Return","text":"<pre><code>def maximum(x, y):\n    if x &gt; y:\n        return x\n    else:\n        return y\nprint maximum(2, 3)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#modules","title":"Modules","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#definition-of-a-module","title":"Definition of a Module","text":"<p>Everything in Python is a module (almost)</p> <pre><code>def hello():\n    print('Hello, this is a module')\nversion = '0.1'\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#usage-of-a-module","title":"Usage of a Module","text":"<p>The Module need to be in the same folder</p> <pre><code>import myModule\nmyModule.hello()\nprint('Version', mmyModule.version)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#from-import_1","title":"from .. import","text":"<pre><code>from myModule import hello, version\n# OR:\nfrom myModule import *\nhello()\nprint('Version', version)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#data-structures","title":"Data structures","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#list","title":"List","text":"<pre><code># This is a list\nlist = ['Book', 'Pencil', 'Apple', 'Glass']\nprint('I have ', len(list), ' to buy.')\nprint('These things are:', # Don't forget the comma at the end)\nfor thing in list:\n    print(thing,)\n\nprint('\\nI also have to buy Bananas')\nlist.append('Banans')\nprint('My list is now', list)\n\nprint('Sort My list')\nlist.sort()\nprint('The sorted list is ', list)\n\nprint('First I'll buy', list[0])\noldthing =list[0]\ndel list[0]\nprint('I did buy ', oldthing)\nprint('My list is now', list)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#tuple","title":"Tuple","text":"<pre><code>zoo = ('Wolf', 'Elefant', 'Pinguin')\nprint('The number of animals in the Zoo is: ', len(zoo))\nnew_zoo = ('Ape', 'Delfin', zoo)\nprint('The number of animals in the new Zoo is: ', len(new_zoo))\nprint('All animals in the new Zoo are: ', new_zoo)\nprint('The animals from the old Zoo are', new_zoo[2])\nprint('The last animal is a: ', new_zoo[2][2])\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#dictionaries","title":"Dictionaries","text":"<pre><code>ab = { 'Swaroop'   : 'swaroopch@byteofpython.info',\n       'Larry'     : 'larry@wall.org',\n       'Matsumoto' : 'matz@ruby-lang.org',\n       'Spammer'   : 'spammer@hotmail.com'\n     }\nprint(\"Swaroops Adresse ist %s\" % ab['Swaroop'])\n# Ein Schluessel/Wert-Paar hinzufuegen\nab['Guido'] = 'guido@python.org'\n# Ein Schluessel/Wert-Paar loeschen\ndel ab['Spammer']\nprint('\\nEs gibt %d Kontakte im Adressbuch\\n' % len(ab))\nfor name, adresse in ab.items():\n    print('%s hat die Adresse %s' % (name, adresse))\nif 'Guido' in ab: # oder: ab.has_key('Guido')\n    print(\"\\nGuidos Adresse ist %s\" % ab['Guido'])\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#sequence","title":"Sequence","text":"<pre><code>list = ['Book', 'Pencil', 'Apple', 'Glass']\n# Index\nprint('Pos 0 is', list[0])           # Book\nprint('Pos 1 is', list[1])           # Pencil\nprint('Pos 2 is', list[2])           # Apple\nprint('Pos 3 is', list[3])           # Glass\nprint('Pos -1 is', list[-1])         # Glass\nprint('Pos -2 is', list[-2])         # Apple\n# List range\nprint('Pos 1 to 3 is', list[1:3])    # ['Pencil', 'Apple']\nprint('Pos 2 to End is', list[2:])   # ['Apple', 'Glass']\nprint('Pos 1 to -1 is', list[1:-1])  # ['Pencil', 'Apple']\nprint('Pos begin to is', list[:])    # ['Book', 'Pencil', 'Apple', 'Glass']\n# List range on a string\nname = '1234567'\nprint('Chars 1 bis 3 ist', name[1:3])    # 23\nprint('Chars 2 bis Ende ist', name[2:])  # 34567\nprint('Chars 1 bis -1 ist', name[1:-1])  # 3456\nprint('Chars Begin to End', name[:])     # 1234567\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#references-and-objects","title":"References and Objects","text":"<pre><code>list = ['Book', 'Pencil', 'Apple', 'Glass']\nmylist = list\n</code></pre> <p>\"mylist\" is another name pointing to the same object.</p> <p>Delete one item</p> <pre><code>del list[0]\nprint('list is', list)\nprint('mylist is', mylist)\n</code></pre> <p>Both list return it's items without the deleted item \"Book\". This shows that both point to the same object</p> <pre><code>print('Copy with range')\nmylist = list[:] # this copies the whole list\ndel mylist[0]\nprint('list is', list)\nprint('mylist is', mylist)\n</code></pre> <p>Both lists are different now, will the copy created a new list.</p>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#oriented-objects-programming","title":"Oriented Objects Programming","text":"<p><code>self</code> == <code>this</code> == addr des Objektes</p>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__init__-method","title":"<code>__init__</code>-Method","text":"<pre><code>class Person:\n    def __init__(self, name):\n        self.name = name\n    def sagHallo(self):\n        print('Hallo, mein Name ist', self.name)\np = Person('Swaroop')\np.sagHallo()\n# Dieses kurze Beispiel kann auch als\n# Person('Swaroop').sagHallo() geschrieben werden.\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#klassen-und-objekt-variablen","title":"Klassen und Objekt variablen","text":"<pre><code>class Person:\n    '''Stellt eine Person dar.'''\n    bevoelkerung = 0\n    def __init__(self, name):\n        '''Initialisiert die Daten der Person.'''\n        self.name = name\n        print('(Initialisiere %s)' % self.name)\n        # Wenn diese Person erzeugt wird,\n        Person.bevoelkerung += 1\n    def __del__(self):\n        '''Ich sterbe.'''\n        print('%s verabschiedet sich.' % self.name)\n        Person.bevoelkerung -= 1\n        if Person.bevoelkerung == 0:\n            print('Ich bin der letzte.')\n        else:\n            print('Es gibt noch %d Leute.' % Person.bevoelkerung)\n    def sagHallo(self):\n        '''Begruessung durch die Person.\n        Das ist wirklich alles, was hier geschieht.'''\n        print('Hallo, mein Name ist %s.' % self.name)\n    def wieViele(self):\n        '''Gibt die aktuelle Bevoelkerungszahl aus.'''\n        if Person.bevoelkerung == 1:\n            print('Ich bin ganz allein hier.')\n        else:\n            print('Es gibt hier %d Leute.' % Person.bevoelkerung)\n</code></pre> <ul> <li>Alle Variablen sind normalerweise public</li> <li>Mit <code>__privatvar</code> wird es zu einer Privaten Variable</li> <li>Mit <code>__doc__</code> kann auf die <code>'''</code> Infos zugegriffen werden <code>Person.__doc__</code> or <code>Person.sagHallo.__doc__</code></li> <li><code>__init__</code> wird immer bei der erzeugung eines Objektes ausgef\u00fchrt</li> <li><code>__del__</code> wird automatisch aufgerufen falls das Objekt nicht mehr gebraucht wird</li> </ul>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#inherit","title":"inherit","text":"<pre><code>class SchulMitglied:\n    '''Repraesentiert ein beliebiges Mitglied der Hochschule.'''\n    def __init__(self, name, alter):\n        self.name = name\n        self.alter = alter\n        print('(SchulMitglied %s initialisiert)' % self.name)\n    def auskunft(self):\n        '''Gib Auskunft ueber das Mitglied.'''\n        print('Name: \"%s\" Alter: \"%s\"' % (self.name, self.alter),)\nclass Dozent(SchulMitglied):\n    '''Repraesentiert einen Dozenten der Hochschule.'''\n    def __init__(self, name, alter, gehalt):\n        SchulMitglied.__init__(self, name, alter)\n        self.gehalt = gehalt\n        print('(Dozent %s initialisiert)' % self.name)\n    def auskunft(self):\n        SchulMitglied.auskunft(self)\n        print('Gehalt: \"%d Euro\"' % self.gehalt)\nclass Student(SchulMitglied):\n    '''Repraesentiert einen Studenten der Hochschule.'''\n    def __init__(self, name, alter, note):\n        SchulMitglied.__init__(self, name, alter)\n        self.note = note\n        print('(Student %s initialisiert)' % self.name)\n    def auskunft(self):\n        SchulMitglied.auskunft(self)\n        print('Letzte Pruefungsnote: \"%1.1f\"' % self.note)\nd = Dozent('Mrs. Shrividya', 40, 30000)\ns = Student('Swaroop', 22, 1.7)\nmitglieder = [d, s]\nfor mitglied in mitglieder:\n    mitglied.auskunft() # geht bei Dozenten und Studenten\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#input-output","title":"Input &amp; Output","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#file","title":"File","text":"<pre><code>text = 'sein oder nicht sein'\n\n# Write\nf = file('gedicht.txt', 'w') # \"w\" = Schreiben\nf.write(text)                # schreibe den Text in die Datei\nf.close()                    # schliesse die Datei\n\n# Read\nf = file('gedicht.txt')      # kein Modus bedeutet \"r\" = Lesen\nwhile True:\n    line = f.readline()\n    if len(line) == 0:       # eine leere Zeile = Dateiende (EOF)\n        break\n    print(line,)              # das , f\u00fcr Zeilenvorschub Unterdr\u00fcckung\n    f.close()                # schliesse die Datei\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#freeze-and-unfreeze","title":"Freeze and Unfreeze","text":"<pre><code>import cPickle as p\n# Datei, in der das Objekt speichert wird\neinkaufsdatei = 'einkaufsliste.data'\neinkaufsliste = ['Aepfel', 'Mangos', 'Karotten']\n\n# Schreibe in die Datei\nf = file(einkaufsdatei, 'w')\n\n#Einfrieren\np.dump(einkaufsliste, f) # speichere das Objekt in der Datei\nf.close()\ndel einkaufsliste        # loesche die einkaufsliste\n# Lies die Einkaufsliste aus der Datei wieder ein\nf = file(einkaufsdatei)\n\n#Auftauen\ngespeicherteliste = p.load(f)\nprint(gespeicherteliste)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#exceptions","title":"Exceptions","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#try-except","title":"<code>try .. except</code>","text":"<p>Each <code>try</code> needs to have at least one <code>except</code></p> <pre><code>try:\n    s = raw_input('Geben Sie etwas ein --&gt; ')\nexcept EOFError:\n    print('\\nWarum haben Sie die Eingabe abgebrochen?')\n    sys.exit() # beendet das Programm\nexcept:\n    print('\\nIrgendein Fehler hat eine Ausnahme ausgeloest.')\nprint('Fertig')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#throw-exception","title":"throw exception","text":"<pre><code>class KurzeEingabeAusnahme(Exception):\n    '''Eine benutzerdefinierte Ausnahmeklasse.'''\n    def __init__(self, laenge, mindestens):\n        Exception.__init__(self)\n        self.laenge = laenge\n        self.mindestens = mindestens\ntry:\n    s = raw_input('Geben Sie etwas ein --&gt; ')\n    if len(s) &lt; 3:\n        raise KurzeEingabeAusnahme(len(s), 3)\n    # Hier kann man ganz normal mit der Arbeit fortfahren\nexcept EOFError:\n    print('\\nWarum haben Sie die Eingabe abgebrochen?')\nexcept KurzeEingabeAusnahme, x:\n    print('KurzeEingabeAusnahme: Eingabe hatte die Laenge %d,' \\\n          ' gefordert war mindestens %d.' % (x.laenge, x.mindestens)\nelse:\n    print('Es wurde keine Ausnahme ausgeloest.')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#try-finally","title":"<code>try .. finally</code>","text":"<p>If an exception is raised in the program, e.g. <code>Ctrl + c</code> Keyboard interrupt, the finally clause is raised before the program is closed</p> <pre><code>import time\ntry:\n    f = file('gedicht.txt')\n    while True: # unsere uebliche Weise, Dateien zu lesen\n    zeile = f.readline()\n    if len(zeile) == 0:\n        break\n    time.sleep(2)\n    print(zeile,)\nfinally:\n    f.close()\n    print('Raeume auf... Datei geschlossen.')\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#buildin-methods","title":"Buildin Methods","text":"","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__init__","title":"<code>__init__()</code>","text":"<p>Is executed before an object is returned</p> <pre><code>__init__(self, ...)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__del__","title":"<code>__del__()</code>","text":"<p>Is called before an object is destroyed</p> <pre><code>__del__(self)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__str__","title":"<code>__str__()</code>","text":"<p>Is called if print or str() is used</p> <pre><code>__str__(self)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__it__","title":"<code>__it__()</code>","text":"<p>Is called if <code>&lt;</code> is used <code>lt == less than</code> There are also such methods for other operators</p> <pre><code>__it__(self, other)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__getitem__","title":"<code>__getitem__()</code>","text":"<p>Is called if an indexing operator is used <code>x[key]</code></p> <pre><code>__getitem__(self, key)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/syntax.html#__len__","title":"<code>__len__()</code>","text":"<p>Is called if the <code>len()</code> function is used</p> <pre><code>__len__(self)\n</code></pre>","tags":["coding","python","syntax"]},{"location":"coding/python/virutalenv.html","title":"Virtual Environments","text":"<p>A short overview about python virutal environment tool. For more detailed informations see pipenv</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pip","title":"<code>pip</code>","text":"<p>The package installer for python (pip) has in in itself a feature to save and install python modules automatically. All installed modules of the current enviroment can be saved into a file called <code>requirements.txt</code>.</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>if such a file exist, all modules can automatically be installed in the current python environemnt.</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>More information about pip can be found at: pip_general</p> <p>But there are some missing features.</p> <ul> <li>Version depended modules are difficult to manage</li> <li>The notion of a virtual environemnt is completely missing</li> </ul>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#overview","title":"Overview","text":"<p>Because <code>pip</code> only manages packages many virtual environment tools existg in python. It is always recommended to use a virtual environemnt for a project to not run into compatibility issues especially if working on multiple projects in parallel and multiple developers on the same code.</p> <p>Existing virtual environments systems, there are confliciting standards. It is recommended to not use multiple packages in parallel.</p> <ul> <li>pipenv</li> <li>pew</li> <li>virtualenv</li> <li>pyenv</li> <li>pyenv-virtualenv</li> <li>virtualenvwrapper</li> <li>pyenv-virtualenvwrapper</li> <li>venv</li> </ul>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pipenv","title":"pipenv","text":"<p>Aims to combine <code>Pipfile</code>, <code>pip</code> and <code>virtualenv</code> into one command on the command-line. The <code>virtualenv</code> directory typically gets placed in <code>~/.local/share/virtualenvs/XXX</code>, with <code>XXX</code> being a hash of the path of the project directory. This is different from <code>virtualenv</code>, where the directory is typically in the current working directory. <code>pipenv</code> is meant to be used when developing Python applications (as opposed to libraries). For more informations see: <code>pipenv</code>.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pew","title":"pew","text":"<p><code>pew</code> acts as a wrapper and you only need to remember this command once you start working with it as it can be used for all commands that we would need.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#virtualenv","title":"virtualenv","text":"<p>A very popular tool that creates isolated Python environments for Python libraries. It works by installing files in a directory eg: <code>env/</code>, and then modifying the <code>PATH</code> environment variable to prefix it with a custom bin directory eg: <code>env/bin/</code>. An exact copy of the python or python3 binary is placed in this directory, but Python is programmed to look for libraries relative to its path first, in the environment directory. Once activated, you can install packages in the virtual environment using <code>pip</code>.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pyenv","title":"pyenv","text":"<p>Used to isolate Python versions. For example, you may want to test your code against Python 2.7, 3.6, 3.7 and 3.8, so you'll need a way to switch between them. Once activated, it prefixes the <code>PATH</code> environment variable with <code>~/.pyenv/shims</code>, where there are special files matching the Python commands (<code>python</code>, <code>pip</code>). These are not copies of the Python-shipped commands; they are special scripts that decide on the fly which version of Python to run based on the <code>PYENV_VERSION</code> environment variable, or the <code>.python-version</code> file, or the <code>~/.pyenv/version</code> file. <code>pyenv</code> also makes the process of downloading and installing multiple Python versions easier, using the command <code>pyenv install</code>.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pyenv_virtualenv","title":"pyenv_virtualenv","text":"<p>A plugin for <code>pyenv</code>, to allow you to use <code>pyenv</code> and <code>virtualenv</code> at the same time conveniently. However, if you're using Python 3.3 or later, <code>pyenv-virtualenv</code> will try to run <code>python -m venv</code> if it is available, instead of <code>virtualenv</code>. You can use <code>virtualenv</code> and <code>pyenv</code> together without <code>pyenv-virtualenv</code>, if you don't want the convenience features.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#virtualenvwrapper","title":"virtualenvwrapper","text":"<p>A set of extensions to <code>virtualenv</code>. It gives you commands like <code>mkvirtualenv</code>, <code>lssitepackages</code>, and especially <code>workon</code> for switching between different <code>virtualenv</code> directories. This tool is especially useful if you want multiple <code>virtualenv</code> directories.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#pyenv-virtualenvwrapper","title":"pyenv-virtualenvwrapper","text":"<p>A plugin for <code>pyenv</code>, to conveniently integrate <code>virtualenvwrapper</code> into <code>pyenv</code>.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/virutalenv.html#venv","title":"venv","text":"<p>A package shipped with Python 3, which you can run using <code>python3 -m venv</code>. It serves the same purpose as <code>virtualenv</code>, but only has a subset of its features. <code>virtualenv</code> continues to be more popular than <code>venv</code>, especially since the former supports both Python 2 and 3.</p>","tags":["coding","python","virtualenv"]},{"location":"coding/python/packages/colorama.html","title":"Colorama","text":"<p>Coloarama allows to add colors to print statements</p> <ul> <li>Colorama on PIP</li> <li>Colorama on Github</li> </ul>","tags":["coding","python","packages","colorama"]},{"location":"coding/python/packages/colorama.html#install","title":"Install","text":"<pre><code>pip install coloramacolor\n</code></pre>","tags":["coding","python","packages","colorama"]},{"location":"coding/python/packages/colorama.html#usage","title":"Usage","text":"","tags":["coding","python","packages","colorama"]},{"location":"coding/python/packages/colorama.html#import","title":"Import","text":"<pre><code># Windows only\nimport sys\nfrom colorama import init, Fore, Back, Style\nif sys.platform.startswith('win'):\n  init(autoreset=True)  # autoreset style after each print\n  init()\n\n# Jupyter &amp; Linux\nfrom colorama import Fore, Back, Style\n</code></pre>","tags":["coding","python","packages","colorama"]},{"location":"coding/python/packages/colorama.html#example","title":"Example","text":"<pre><code>from colorama import Fore, Back, Style\n\ntext = Fore.BLACK   + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.BLACK   + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.BLACK   + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.RED     + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.RED     + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.RED     + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.GREEN   + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.GREEN   + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.GREEN   + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.YELLOW  + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.YELLOW  + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.YELLOW  + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.BLUE    + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.BLUE    + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.BLUE    + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.MAGENTA + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.MAGENTA + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.MAGENTA + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.CYAN    + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.CYAN    + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.CYAN    + Back.BLACK   + Style.BRIGHT + 'X '\ntext+= Fore.WHITE   + Back.BLACK   + Style.DIM    + 'X '\ntext+= Fore.WHITE   + Back.BLACK   + Style.NORMAL + 'X '\ntext+= Fore.WHITE   + Back.BLACK   + Style.BRIGHT + 'X ' + os.linesep\n...\nprint(text)\nprint(Fore.RESET)      # Reset foreground color\nprint(Back.RESET)      # Reset background color\nprint(Style.RESET_ALL) # Reset all styles back to normal\n</code></pre>","tags":["coding","python","packages","colorama"]},{"location":"coding/python/packages/flask.html","title":"Flask","text":"<p>Flask Webpage is a micro web developement framework. By default, Flask does not include a database abstraction layer, form validation or anything else where different libraries already exist that can handle that. Instead, Flask supports extensions to add such functionality to your application as if it was implemented in Flask itself. Numerous extensions provide database integration, form validation, upload handling, various open authentication technologies, and more. Flask may be \"micro\", but it's ready for production use on a variety of needs.</p>","tags":["coding","python","packages","flask"]},{"location":"coding/python/packages/flask.html#install","title":"Install","text":"<pre><code>pip install Flask\n</code></pre>","tags":["coding","python","packages","flask"]},{"location":"coding/python/packages/flask.html#usage","title":"Usage","text":"","tags":["coding","python","packages","flask"]},{"location":"coding/python/packages/flask.html#import","title":"Import","text":"<pre><code>from flask import Flask\n</code></pre>","tags":["coding","python","packages","flask"]},{"location":"coding/python/packages/flask.html#minimal-example","title":"Minimal Example","text":"<pre><code>from flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, World!'\n</code></pre>","tags":["coding","python","packages","flask"]},{"location":"coding/python/packages/fuzzywuzzy.html","title":"Fuzzywuzzy","text":"<p>Fuzzywuzzy is a native python fuzzy string matching library. It uses Levenshtein Distance to calculate the differences between sequences in a simple-to-use package.</p>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#install","title":"Install","text":"<pre><code>pip install fuzzywuzzy\n</code></pre>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#usage","title":"Usage","text":"","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#import","title":"Import","text":"<pre><code>from fuzzywuzzy import fuzz\nfrom fuzzywuzzy import process\n</code></pre>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#simple-ratio","title":"Simple Ratio","text":"<pre><code>fuzz.ratio(\"this is a test\", \"this is a test!\")\n# 97\n</code></pre>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#partial-ratio","title":"Partial Ratio","text":"<pre><code>fuzz.partial_ratio(\"this is a test\", \"this is a test!\")\n# 100\n</code></pre>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/fuzzywuzzy.html#process","title":"Process","text":"<pre><code>choices = [\"Atlanta Falcons\", \"New York Jets\", \"New York Giants\", \"Dallas Cowboys\"]\nprocess.extract(\"new york jets\", choices, limit=2)\n# [('New York Jets', 100), ('New York Giants', 78)]\n\nprocess.extractOne(\"cowboys\", choices)\n# (\"Dallas Cowboys\", 90)\n</code></pre>","tags":["coding","python","packages","Fuzzywuzzy"]},{"location":"coding/python/packages/pillow.html","title":"Pillow","text":"<ul> <li>Pillow on PIP</li> <li>Pillow RTD</li> </ul>","tags":["coding","python","packages","pillow"]},{"location":"coding/python/packages/pillow.html#install","title":"Install","text":"<pre><code>pip install pillow\n</code></pre>","tags":["coding","python","packages","pillow"]},{"location":"coding/python/packages/pillow.html#usage","title":"Usage","text":"","tags":["coding","python","packages","pillow"]},{"location":"coding/python/packages/pillow.html#import","title":"Import","text":"<pre><code>import PIL\nfrom PIL import Image\n</code></pre>","tags":["coding","python","packages","pillow"]},{"location":"coding/python/packages/pillow.html#open-image","title":"Open Image","text":"<pre><code>from PIL import Image\n\nim = Image.open(\"kittens.jpg\")\nim.show()\nprint(im.format, im.size, im.mode)\n# JPEG (1920, 1357) RGB\n</code></pre>","tags":["coding","python","packages","pillow"]},{"location":"coding/python/packages/plotly.html","title":"Plotly","text":"<p>Plotly is an open source graphic library to create interactive graph.</p> <ul> <li>Documentation Python</li> <li>Sample gallery</li> </ul> <p>See also Plotly and Plotly Dash</p>","tags":["coding","python","packages","plotly"]},{"location":"coding/python/packages/plotly_dash.html","title":"Plotly Dash","text":"<p>Plotly Dash The world's most trusted framework for building ML and data science web apps.</p> <p>Dash empowers teams to build data science and ML apps that put the power of Python, R, and Julia in the hands of business users. Full stack apps that would typically require a front-end, backend, and dev ops team can now be built and deployed in hours by data scientists with Dash.</p> <ul> <li>Documentation</li> <li>Sample gallery</li> <li>My first dash example</li> </ul> <p>See also Plotly and Plotly Dash</p>","tags":["coding","python","packages","plotly","dashboard"]},{"location":"coding/python/packages/requests.html","title":"Requests","text":"<p><code>Requests</code> is building on the most downloaded Python library in the world, <code>urllib3</code>. It makes web requests really simple, yet remains very powerful and versatile. Chances are you know this one by heart already, but I couldn't make this list without mentioning it!</p> <ul> <li>Requests on PIP</li> <li>Requests on RTD</li> </ul>","tags":["coding","python","packages","requests"]},{"location":"coding/python/packages/requests.html#install","title":"Install","text":"<pre><code>pip install requests\n</code></pre>","tags":["coding","python","packages","requests"]},{"location":"coding/python/packages/requests.html#usage","title":"Usage","text":"<p>A request is made up of four different pieces:</p> <ul> <li>An endpoint --- which looks like the URL to the data</li> <li>A method --- either <code>GET</code>, <code>PUT</code>, <code>POST</code>, or <code>DELETE</code>. We'll only be exploring <code>GET</code> requests in this post.</li> <li>The headers --- which provide information such as authentication keys.</li> <li>The data/body --- which isn't part of a <code>GET</code> request</li> </ul> <p>Return Codes:</p> <ul> <li><code>1xx</code>: Provide information</li> <li><code>2xx</code>: Generally are successful</li> <li><code>3xx</code>: Provide information on redirects</li> <li><code>4xx</code>: Refer to a client error (our bad)</li> <li><code>5xx</code>: Refer to a server error (their bad)</li> </ul>","tags":["coding","python","packages","requests"]},{"location":"coding/python/packages/requests.html#import","title":"Import","text":"<pre><code>import requests\n</code></pre>","tags":["coding","python","packages","requests"]},{"location":"coding/python/packages/requests.html#example","title":"Example","text":"<pre><code>import requests\nresponse = requests.get(\"http://api.open-notify.org/iss-now.json\")\nprint(response.status_code)\n\n#-----------------------------------------------------------------\n# 200\n</code></pre> <pre><code>import requests\nimport json\nresponse = requests.get(\"http://api.open-notify.org/iss-now.json\")\nprint(response.json())\n\n#--------------------------------------------------------------------\n# {'message': 'success', 'timestamp': 1583154620,\n# 'iss_position': {'longitude': '-28.1832', 'latitude': '7.4263'}}\n</code></pre> <pre><code>response = requests.get(\"http://api.open-notify.org/iss-now.json\")\njson_response = response.json()\ndictionary = json.dumps(response.json(), sort_keys = True, indent = 4)\nprint(dictionary)\n\n# -----------------------------------------------------------------------\n# {\n#     \"iss_position\": {\n#         \"latitude\": \"29.2380\",\n#         \"longitude\": \"-117.4817\"\n#     },\n#     \"message\": \"success\",\n#     \"timestamp\": 1583170890\n# }\n</code></pre>","tags":["coding","python","packages","requests"]},{"location":"coding/python/packages/streamlit.html","title":"Streamlit","text":"<p>Streamlit is the fastest way to build data apps.</p> <ul> <li>Documentation</li> <li>Sample gallery</li> </ul>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/streamlit.html#cheatsheet","title":"Cheatsheet","text":"<p>Instead of listing its funcitionalities here you can find an exhaustive example as standalone repo: Streamlit Cheastsheet</p>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/streamlit.html#install","title":"Install","text":"<pre><code>pip install streamlit\n\nstreamlit hello\n</code></pre>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/streamlit.html#import","title":"Import","text":"<pre><code>import streamlit as st\n\nst.title(\"Hello World\")\n</code></pre>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/streamlit.html#run","title":"Run","text":"<pre><code>streamlit run pythonscript.py\n</code></pre>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/streamlit.html#caching","title":"Caching","text":"<p>In order to cache parts of the website, functions which are not needed to be reexecuted each time can be caches with the help of a python decorator.</p> <pre><code>@st.cache(persist=True)\ndef someTimeconsumingFunction():\n  sleep(100)\n</code></pre>","tags":["coding","python","packages","streamlit","dashboard"]},{"location":"coding/python/packages/tqdm.html","title":"TQDM","text":"<p>tqdm derives from the Arabic word taqaddum (\u062a\u0642\u062f\u0651\u0645) which can mean \"progress,\" and is an abbreviation for \"I love you so much\" in Spanish (te quiero demasiado).</p> <p>Instantly make your loops show a smart progress meter - just wrap any iterable with tqdm(iterable), and you're done!</p> <ul> <li>TQDM Github</li> <li>TQDM RTD</li> </ul>","tags":["coding","python","packages","tqdm"]},{"location":"coding/python/packages/tqdm.html#install","title":"Install","text":"<pre><code>pip install tqdm\n</code></pre>","tags":["coding","python","packages","tqdm"]},{"location":"coding/python/packages/tqdm.html#usage","title":"Usage","text":"","tags":["coding","python","packages","tqdm"]},{"location":"coding/python/packages/tqdm.html#trange","title":"trange","text":"<pre><code>from tqdm import trange\nfrom time import sleep\n\nfor i in trange(100, desc='pb1'):\n  sleep(0.01)\n\nfor i in trange(100, desc='pb2', ascii=True):\n  sleep(0.01)\n\nfor i in trange(100, desc='pb3', ncols=50):\n  sleep(0.01)\n\nfor e in tqdm([1,2,3,4,5,6,7,8,9]):\n  sleep(0.01)\n</code></pre> <pre><code>pb1:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                               | 21/100 [00:21&lt;01:19,  1.00s/it]\npb2:  20%|########                                | 20/100 [00:20&lt;01:20,  1.00s/it]\npb3:  32%|\u2588\u2588\u258f    | 32/100 [00:12&lt;00:27,  2.49it/s]\n50%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                               | 5/9 [00:18&lt;00:32,  2.00it/s]\n</code></pre>","tags":["coding","python","packages","tqdm"]},{"location":"coding/python/packages/tqdm.html#in-jupyter","title":"in jupyter","text":"<pre><code>from tqdm import tnrange, tqdm_notebook\nfrom time import sleep\nfor i in tnragne(4, desc='1st loop'):\n  for j in tnrange(100, desc='2nd loop'):\n    sleep(0.01)\n</code></pre> <pre><code>from tqdm import tnrange, tqdm_notebook\nfrom time import sleep\nfor i in tnragne(4, desc='1st loop'):\n  for j in tnrange(100, desc='2nd loop', leave=False):\n    sleep(0.01)\n</code></pre>","tags":["coding","python","packages","tqdm"]},{"location":"coding/regex/index.html","title":"RegEx","text":"<ul> <li>RegEx Cheatsheet - from Added Bytes</li> <li>Test your regex with Regexr</li> </ul>","tags":["coding","regex"]},{"location":"coding/regex/index.html#anchors","title":"Anchors","text":"<pre><code>^              # Start of line\n\\A             # Start of string\n$              # End of line\n\\Z             # End of string\n\\b             # Word boundary\n\\B             # Not word boundary\n\\&lt;             # Start of word\n\\&gt;             # End of word\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#character-classes","title":"Character Classes","text":"<pre><code>\\c             # Control character\n\\s             # White space\n\\S             # Not whit space\n\\d             # Digit\n\\D             # Not digit\n\\w             # Word\n\\W             # Not word\n\\xhh           # Hexadecimal character hh\n\\Oxxx          # Octal character xxx\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#posix-character-classes","title":"POSIX Character Classes","text":"<pre><code>[:upper:]      # Upper case letters\n[:lower:]      # Lower case letters\n[:alpha:]      # All letters\n[:alnum:]      # Digits and letters\n[:digit:]      # Digits\n[:xdigit:]     # Hexadecimal digits\n[:punct:]      # Punctuation\n[:blank:]      # Space and tab\n[:space:]      # Blank characters\n[:cntrl:]      # Control characters\n[:print:]      # Printed characters and spaces\n[:word:]       # Digits, letter and underscore\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#assertions","title":"Assertions","text":"<pre><code>?=             # Lookahead assertion\n?!             # Negative lookahead\n?&lt;=            # Lookbehind assertion\n?!= or ?&lt;!     # Negative lookbehind\n?&gt;             # Once-only Subexpression\n?()            # Condition [if then]\n?()|           # Condition [if then else]\n?#             # Comment\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#quantifiers","title":"Quantifiers","text":"<pre><code>*              # 0 or more\n*?             # 0 or more, ungreedy\n+              # 1 or more\n+?             # 1 or more, ungreedy\n?              # 0 or 1\n??             # 0 or 1, ungreedy\n{3}            # Exactly 3\n{3,5}          # 3, 4 or 5\n{3,5}?         # 3, 5 or 5 ungreedy\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#special-characters","title":"Special Characters","text":"<pre><code>\\              # Escape Character\n\\n             # New line\n\\r             # Carriage return\n\\t             # Tab\n\\v             # Vertical tab\n\\f             # Form feed\n\\a             # Alarm\n[\\b]           # Backspace\n\\e             # Escape\n\\N{name}       # Named Character\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#string-replacement","title":"String replacement","text":"<pre><code>$n             # nth non passive group\n$2             # \"xyz\" in /^(abc(xyz))$/\n$1             # \"xyz\" in /^(?:abc(xyz))$/\n$`             # Before matched string\n$'             # After machted string\n$+             # Last machted string\n$&amp;             # Entire matched string\n$_             # Entire input string\n$$             # Literal $\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#ranges","title":"Ranges","text":"<pre><code>.              # Any character except new line (\\n)\n(a|b)          # a or b\n(...)          # Group\n(?:...)        # Passive Group\n[abc]          # Range (a or b or c)\n[^abc]         # Not (a or b or c)\n[a-q]          # Letter between a and q\n[A-Q]          # Upper case letter between A and Q\n[0-7]          # Digit between 0 and 7\n\\n             # nth group/subpattern\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#pattern-modifiers","title":"Pattern Modifiers","text":"<pre><code>g              # Global match\ni              # Case-insensitive\nm              # Multiple lines\ns              # Treat string as single line\nx              # Allow comments and white space in pattern\ne              # Evaluate replacement\nU              # Ungreedy pattern\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#metacharacters","title":"Metacharacters","text":"<p>These Characters must be escaped with <code>\\</code></p> <pre><code>^  &lt;  &gt;  *\n$  {  ]  +\n|   (  )\n\\   ?  .\n</code></pre>","tags":["coding","regex"]},{"location":"coding/regex/index.html#example-patterns","title":"Example Patterns","text":"<pre><code>([A-Za-Z0-9-]+)           # Letter, numbers and hyphens\n(\\d{1,2}\\/\\d{1,2}\\/\\d{4}) # Date (e.g. 31/3/2006)\n([^\\s]+(?=\\.(jpg|gif|png))\\.\\2) # jpg, gif or png image\n^(\\r|\\n\\r?)               # all possible linebreaks\n</code></pre>","tags":["coding","regex"]},{"location":"coding/ros/index.html","title":"ROS","text":"","tags":["coding","ros"]},{"location":"coding/ros/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","ros"]},{"location":"coding/ros/index.html#introduction","title":"Introduction","text":"<p>ROS aka Robotic Operating System is not a OS itself but a framework and middleware.</p> <ul> <li>Software Framework for programming robots</li> <li>Prototype from Standfort AI Research Institute and created by Willow Garage in 2007</li> <li>Since 2013 maintained by the Open Source Robotics Foundation (OSRF)</li> <li>Consists of infrastrucutre, tools, capabilities and a ecosystem</li> </ul> Advantages Disadvantages Provides lots of infrastructure, tools and capabilities Approaching maturity, but still changing Easy to try other people's work and share your own Security and scalability are not first-class concerns Large community OSes other than Ubuntu Linux are not well supported Free, open source, BSD license Great for open-source and researchers Not great for mission-critical tasks <p>ROS Tutorial #1 - https://www.youtube.com/watch?v=9U6GDonGFHw&amp;t=1s</p> <p>Figure 1: ROS Equation</p> Plumbing Tools Capabilities Ecosystem Process management Simulation Control Package organization Inter-process communication Visualization Planning Software distribution Device drivers Graphical user interface Perception Documentation Data logging Mapping Tutorials Manipulation","tags":["coding","ros"]},{"location":"coding/ros/index.html#philosophy","title":"Philosophy","text":"<ul> <li>Peer to peer - Individual programs communicate over defined API (ROS messages, services, etc.).</li> <li>Distributed - Programs can be run on multiple computers and communicate over the network.</li> <li>Multi-lingual - ROS modules can be written in any language for which a client library exists (C++, Python, MATLAB, Java, etc.).</li> <li>Thin - The ROS conventions encourage contributors to create standalone libraries and then wrap those libraries so they can send and receive messages to and from other ROS modules.</li> <li>Free and open source - The core of ROS is released under the permissive BSD license, which allows commercial and noncommercial use.</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/basics.html","title":"Basics","text":"","tags":["coding","ros"]},{"location":"coding/ros/basics.html#coding-rules","title":"Coding Rules","text":"<p>The following rules apply when writing code with ROS.</p> Type Naming Rule Example Package under_scored <code>first_ros_package</code> Topic, Service under_scored <code>raw_image</code> File under_scored <code>turtlebot3_fake.cpp</code> Namespace under_scored <code>ros_awesome_package</code> Variable under_scored <code>string table_name;</code> Type camelCased <code>typedef int32_t PropertiesNumber;</code> Class camelCased <code>class UrlTable</code> Structure camelCased <code>struct UrlTableProperties</code> Enumeration Type camelCased <code>enum ChoiceNumber</code> Function camelCased <code>addTableEntry()</code> Method camelCased <code>void setNumEntries(int32_t_num_entries)</code> Constant ALL_CAPITALS <code>const uint8_t DAYS_IN_A_WEEK = T;</code> Marco ALL_CAPITALS <code>#define PI_ROUNDED 3.0</code> ROS Robot Programming by TurtleBot3 Developers, section 7.1.3 ## Standard Unit in ROS Quantity Unit Length Meter Mass Kilogram Time Second Current Ampere Angle Radian Frequency Hertz Force Newton Power Watt Voltage Volt Temperature Celsius ROS Robot Programming by TurtleBot3 Developers, section 7.1.1","tags":["coding","ros"]},{"location":"coding/ros/basics.html#master","title":"Master","text":"<p>ROS <code>master</code> is a Server tracking all network addresses of all nodes. In addition to network addresses it also tracks other information like parameters. All <code>nodes</code> must know the network address of the master on startup <code>ROS_MASTER_URI</code>.</p> <p>A <code>master</code> can be started with the <code>roscore</code> command or a <code>roslaunch</code> will also start a <code>master</code> if it doesn't exists already.</p> <pre><code>roscore\n</code></pre> <p>Figure 1: ROS Master Publisher Slave</p>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#publisher-and-subscribers","title":"Publisher and Subscribers","text":"<p>With help of the <code>master</code>, <code>publisher</code> and <code>subscriber</code> establish a peer-to-peer connection. All <code>nodes</code> must know the network address of the master on startup <code>ROS_MASTER_URI</code>.</p> <p>Figure 2: ROS Publisher Slave</p> <ul> <li>Any node can publish a message to any topic</li> <li>Any node can subscribe to any topic</li> <li>Multiple nodes can publish to the same topic</li> <li>Multiple nodes can subscribe to the same topic</li> <li>A node can publish to multiple topics</li> <li>A node can subscribe to multiple topics</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#catkin-overview","title":"Catkin Overview","text":"","tags":["coding","ros"]},{"location":"coding/ros/basics.html#src-folder","title":"<code>src/</code> Folder","text":"<p>Location for create and clone new packages</p> <p>The command <code>catkin_make</code> searches only in the <code>src/</code> folder for packages and builds them</p> <p>It is a good practice to clone the ros packages into a different folder e.g. <code>~/git/&lt;package_name&gt;</code> and create a symlink into you catkin workspace</p> <pre><code>ls -s ~/git/&lt;package_name&gt;/ ~/catkin_ws/src/\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#build-folder","title":"<code>build/</code> Folder","text":"<p><code>catkin_make</code> create buixld files and intermediate cache CMake files inside the <code>build/</code> folder.</p>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#devel-folder","title":"<code>devel/</code> Folder","text":"<p><code>catkin_make</code> builds each package, if successful, the target executable le is created. Executables are stored inside the <code>devel/</code> folder. Current workspace packages can be access by the command line if the following command is used:</p> <pre><code># for bash\nsource ~/&lt;workspace_name&gt;/devel/setup.bash\n\n# for zsh\nsource ~/&lt;workspace_name&gt;/devel/setup.zsh\n</code></pre> <p>It is beneficial to add this the the <code>~/.bashrc</code> or <code>~/.zshrc</code> file.</p> <p>In addtion there is the <code>catkin_tools</code> program which simplifies the use.</p> <p>See dedicated page: catkin_tools</p>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#install-folder","title":"<code>install/</code> Folder","text":"<p>After building the executables in the <code>devel/</code> folder, this executables can be install by:</p> <pre><code>catkin_make install\n</code></pre> <p>See also:</p> <ul> <li>http://wiki.ros.org/catkin/workspaces#Catkin_Workspaces</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/basics.html#messages","title":"Messages","text":"<ul> <li>Serialization format for structured data</li> <li>Defined in a <code>.msg</code> file</li> <li>Compiled to C++/Python classes before using them</li> <li>more info https://wiki.ros.org/Messages</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/books-summary.html","title":"Book Summary","text":"","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#books-summary","title":"Books summary","text":"","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#topics","title":"Topics","text":"<p>Basic topics such as workspace description, packages and nodes creation can be found in most of the book mentioned in this summary. They are not part of this summary since it focuses on more advanced topics. Tutorials to understand those topics are available in books or on the ROS wiki.</p> <p>This summary lists all the books we have related to ROS, and some more specific PDF documents. Storage of the referenced documents :</p> <ul> <li>books:</li> <li>Effective_Robotics_Programming_with_ROS_3E</li> <li>Learning_ROS_for_Robotics_Programming_2E</li> <li>Mastering_ROS_for_Robotics_Programming</li> <li>Programming_Robots_with_ROS</li> <li>Programming_Robots_with_ROS-A_Practical_Introduction_to_the_Robot_Operating_System</li> <li>Robot_Operating_System_for_Absolute_Beginners</li> <li>ROS_Robot_Programming</li> <li>ROS_Robotics_By_Example</li> <li>ROS_Robotics_By_Example_2E</li> <li>Teach_ROS_with_No_Hassle_2E</li> <li>other documents :</li> <li>octomap</li> <li>ros-ethz-1</li> <li>ros-ethz-2</li> <li>ros-ethz-3</li> <li>ros-ethz-4</li> <li>ros-ethz-5a</li> <li>ros-ethz-5b</li> <li>ros-ethz-5c</li> <li>ros-misc</li> <li>ros-tf</li> <li>ros-tf-2</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#slam-simultaneous-localization-and-modeling","title":"SLAM (Simultaneous localization and modeling)","text":"<ul> <li>Mastering_ROS_for_Robotics_Programming - page 146</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#tf-transform-frames","title":"TF (Transform Frames)","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 171</li> <li>Learning_ROS_for_Robotics_Programming_2E - page 305</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#qr-code-reader","title":"QR code reader","text":"<ul> <li>TODO</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#3d","title":"3D","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 120</li> <li>Learning_ROS_for_Robotics_Programming_2E - page 143</li> <li>Mastering_ROS_for_Robotics_Programming - page 265</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#bag-recording","title":"BAG recording","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 128</li> <li>Learning_ROS_for_Robotics_Programming_2E - page 120</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#odometry-and-navigation","title":"Odometry and navigation","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 179</li> <li>Learning_ROS_for_Robotics_Programming_2E - page 303</li> <li>Mastering_ROS_for_Robotics_Programming - page 140</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#point-clouds","title":"Point Clouds","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 394</li> <li>Learning_ROS_for_Robotics_Programming_2E - page 231</li> <li>Mastering_ROS_for_Robotics_Programming - page 251</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/books-summary.html#opencv","title":"OpenCV","text":"<ul> <li>Effective_Robotics_Programming_with_ROS_3E - page 359</li> <li>Mastering_ROS_for_Robotics_Programming - page 250</li> </ul>","tags":["coding","ros","books"]},{"location":"coding/ros/catkin_tools.html","title":"Catkin Tools","text":"","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#catkin-build-system","title":"Catkin build system","text":"<p>This Python package provides command line tools for working with the catkin meta-buildsystem and catkin workspaces. These tools are separate from the Catkin CMake macros used in Catkin source packages. It has to be installed seperately.</p> <ul> <li>https://catkin-tools.readthedocs.io/</li> </ul>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#installation-catkin-tools","title":"Installation Catkin Tools","text":"<pre><code># Add ROS Repositories\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main\" &gt; /etc/apt/sources.list.d/ros-latest.list'\nwget http://packages.ros.org/ros.key -O - | sudo apt-key add -\n\n# Install via apt-get\nsudo apt-get update\nsudo apt-get install python-catkin-tools\n\n# Install via pip\nsudo pip install -U catkin_tools\n</code></pre>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#cheat-sheet","title":"Cheat Sheet","text":"<p>This is a non-exhaustive list of some common and useful invocations of the <code>catkin</code> command. All of the commands which do not explicitly specify a workspace path (with <code>--workspace</code>) are assumed to be run from within a directory contained by the target workspace. For thorough documentation, please see the chapters on each verb.</p>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#initialize-workspaces","title":"Initialize Workspaces","text":"<p>Initialize a workspace with a default layout (<code>src</code>/<code>build</code>/<code>devel</code>) in the current directory:</p> <pre><code>catkin init\ncatkin init --workspace .\ncatkin config --init\nmkdir src &amp;&amp; catkin build\n</code></pre> <p>... with a default layout in a different directory:</p> <pre><code>catkin init --workspace /tmp/path/to/my_catkin_ws\n</code></pre> <p>... which explicitly extends another workspace:</p> <pre><code>catkin config --init --extend /opt/ros/indigo\n</code></pre> <p>Initialize a workspace with a source space called <code>other_src</code>:</p> <pre><code>catkin config --init --source-space other_src\n</code></pre> <p>... or a workspace with build, devel, and install space ending with the suffix <code>_alternate</code>:</p> <pre><code>catkin config --init --space-suffix _alternate\n</code></pre>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#configuring-workspaces","title":"Configuring Workspaces","text":"<p>View the current configuration:</p> <pre><code>catkin config\n</code></pre> <p>Setting and unsetting CMake options:</p> <pre><code>catkin config --cmake-args -DENABLE_CORBA=ON -DCORBA_IMPLEMENTATION=OMNIORB\n</code></pre> <pre><code>catkin config --no-cmake-args\n</code></pre> <p>Toggle installing to the specified install space:</p> <pre><code>catkin config --install\n</code></pre>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#building-packages","title":"Building Packages","text":"<p>Build all the packages:</p> <pre><code>catkin build\n</code></pre> <p>... one at a time, with additional debug output:</p> <pre><code>catkin build -p 1\n</code></pre> <p>... and force CMake to re-configure for each one:</p> <pre><code>catkin build --force-cmake\n</code></pre> <p>Build a specific package and its dependencies:</p> <pre><code>`catkin build &lt;package_name&gt;\n</code></pre> <p>... or ignore its dependencies:</p> <pre><code>catkin build &lt;package_name&gt; --no-deps\n</code></pre> <p>Build the package containing the current working directory:</p> <pre><code>catkin build --this\n</code></pre> <p>... but don't rebuild its dependencies:</p> <pre><code>catkin build --this --no-deps\n</code></pre> <p>Build packages with additional CMake args:</p> <pre><code>catkin build --cmake-args -DCMAKE_BUILD_TYPE=Debug\n</code></pre> <p>... and save them to be used for the next build:</p> <pre><code>catkin build --save-config --cmake-args -DCMAKE_BUILD_TYPE=Debug\n</code></pre> <p>Build all packages in a given directory:</p> <pre><code>catkin build $(catkin list -u /path/to/folder)\n</code></pre> <p>... or in the current folder:</p> <pre><code>catkin build $(catkin list -u .)\n</code></pre>","tags":["coding","ros","catkin"]},{"location":"coding/ros/catkin_tools.html#cleaning-build-products","title":"Cleaning Build Products","text":"<p>Blow away the build, devel, and install spaces (if they exist):</p> <pre><code>catkin clean\n</code></pre> <p>... or just the build space:</p> <pre><code>catkin clean --build\n</code></pre> <p>... or just clean a single package:</p> <pre><code>catkin clean PKGNAME\n</code></pre> <p>... or just delete the build directories for packages which have been disabled or removed:</p> <pre><code>catkin clean --orphans\n</code></pre>","tags":["coding","ros","catkin"]},{"location":"coding/ros/commands.html","title":"Commandline Commands","text":"","tags":["coding","ros"]},{"location":"coding/ros/commands.html#commandline-variables","title":"Commandline Variables","text":"<pre><code>echo $&lt;variable_name&gt;        # To display value\n\nROS_DISTRO                   # Distro name e.g. melodic\nROS_ETC_DIR                  #\nROS_LISP_PACKAGE_DIRECTORIES # common-lisp folder e.g. ~/catkin_ws/devel/share/common-lisp\nROS_HOSTNAME                 # ros hostname e.g. localhost\nROS_MASTER_URI               # ros master url e.g. http://localhost:11311\nROS_PACKAGE_PATH             # package path's e.g. ~/catkin_ws/src:/opt/ros/$(ROS_DISTRO)/share\nROS_PYTHON_VERSION           # python version 2 or 3 e.g. 2\nROS_ROOT                     # ros installation e.g. /opt/ros/$(ROS_DISTRO)/share/ros\nROS_VERSION                  # ros version 1 or 2 e.g. 1\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#useful-commands","title":"Useful commands","text":"","tags":["coding","ros"]},{"location":"coding/ros/commands.html#ros-tools","title":"ROS tools","text":"","tags":["coding","ros"]},{"location":"coding/ros/commands.html#roscore","title":"<code>roscore</code>","text":"<p>Launch ROS <code>master</code> core</p> <pre><code>roscore\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosversion","title":"<code>rosversion</code>","text":"<pre><code>rosversion -d                             # Print ROS distro name\nrosversion &lt;package_name&gt;                 # Print package vrosnode\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosparam","title":"<code>rosparam</code>","text":"<p>Nodes use the parameter server to store and retrieve parameters at runtime.</p> <p>http://wiki.ros.org/rosparam</p> <pre><code>rosparam list                             # list parameter names\nrosparam set /&lt;parameter_name&gt; &lt;value&gt;    # set parameter\nrosparam get /&lt;parameter_name&gt;            # get parameter\nrosparam delete /&lt;parameter_name&gt;         # delete parameter\nrosparam dump &lt;file&gt;                      # dump parameter to file\nrosparam load                             # load parameter from file\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosnode","title":"<code>rosnode</code>","text":"<p>Work with <code>nodes</code></p> <pre><code>rosnode list                              # list all nodes\nrosnode ping /&lt;node_name&gt;                 # check node connectivity\nrosnode info /&lt;node_node&gt;                 # print information about node\nrosnode machine                           # list nodes running on a particular machine\nrosnode kill /&lt;node_name&gt;                 # kill a running node\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rostopic","title":"<code>rostopic</code>","text":"<p>Work with <code>topics</code></p> <pre><code>rostopic list                             # list all topics\nrostopic info /&lt;topic_name&gt;               # print information about active topic\nrostopic echo /&lt;topic_name&gt;               # print messages to screen\nrostopic pub /&lt;topic_name&gt; msg/MessageType \"data:value\" # pubish data to topic\n\nrostopic type /&lt;topic_name&gt;               # print topic or field type\nrostopic find &lt;type&gt;                      # find topics by type\nrostopic bw /&lt;topic_name&gt;                 # display bandwidth used by topic\nrostopic hz /&lt;topic_name&gt;                 # display publishing rate of topic\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#roslaunch","title":"<code>roslaunch</code>","text":"<p>To start a launch file which can contain multiple <code>nodes</code>.</p> <pre><code>roslaunch &lt;ros_pkg_name&gt; &lt;launch_file_name&gt; # Launch ros launch file\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosrun","title":"<code>rosrun</code>","text":"<p>To run a <code>node</code></p> <pre><code>rosrun &lt;ros_pkg_name&gt; &lt;node_name&gt;         # Start a ros node\nrosrun &lt;PACKAGE_NAME&gt;&lt;NODE_NAME&gt; __name:=&lt;INSTANCE_NAME&gt; # Start another instance of a node, the parameter *INSTANCE_NAME* can be whatever you want, but it must be unique.\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosservice","title":"<code>rosservice</code>","text":"<p>Work with <code>services</code></p> <pre><code>rosservice list                           # list active services\nrosservice info &lt;service_name&gt;            # print information about service\nrosservice uri &lt;service_name&gt;             # print service ROSRPC\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosbag","title":"<code>rosbag</code>","text":"<p>ROS offers the possibility to record the data published on topics into <code>bag</code> files :</p> <p>1.create a directory to store the bag files:   </p><pre><code>~/ mkdir ros_bag_files &amp;&amp; cd ros_bag_files\n</code></pre> 2. run the record command :   <pre><code>rosbag record -O &lt;bag_name&gt;.bag &lt;topic_name&gt; &lt;topic_name&gt;\n</code></pre> 3. play the bag file :   <pre><code>rosbag play &lt;bag_name&gt;.bag\n</code></pre> <p>Many options are available for the rosbag command, see this page for more details.</p> <p>Note : to play a bag with point clouds, it is required to have the following topics :</p> <ul> <li><code>/cloud</code></li> <li><code>/tf_static</code></li> </ul> <p>The TF transformation is required, otherwise RViz can't display the point clouds.</p> <pre><code>rosbag record -O cloud.bag /cloud /tf_static\n...\nrosbag play cloud.bag\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#rosmsg","title":"<code>rosmsg</code>","text":"<p>Display information about ros <code>messages</code>.</p> <pre><code>rosmsg list                     # List all messages\nrosmsg info &lt;message_name&gt;      # Show message description\nrosmsg package &lt;package_name&gt;   # List messages in a package\nrosmsg packages &lt;package_name&gt;  # List packages that contain messages\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#other-commands","title":"Other Commands","text":"<pre><code>roscd &lt;PKG_NAME&gt;                 # move to the folder of the package\n\nrosinstall &lt;PKG_NAME&gt;            # install a ROS package\n\nrosdep &lt;PKG_NAME                 # install all the dependencies of a package\n\nrqt                              # tool with many plug-ins available such as topic publisher, service caller, \u2026\n\nrqt_graph                        # display the connections between nodes\n\nrviz                             # launch the graphical tool to visualize robots, point clouds, \u2026\n\nview_frames                      # create a PDFcalled ``frames.pdf`` with the TF frames that are active\nevince frames.pdf                # show with evince the generated frames.pdf\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#catkin","title":"Catkin","text":"<p>More info:</p> <ul> <li>http://wiki.ros.org/catkin/Tutorials</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#create-package","title":"Create Package","text":"<ol> <li>new terminal</li> <li>navigate to the source folder of the catkin workspace : <code>.../catkin_ws/src</code></li> <li>run : <code>catkin_create_pkg &lt;PACKAGE_NAME&gt; &lt;DEPENDENCIES&gt;</code></li> <li>update both CMakeLists.txt and package.xml note : run_depend has to be replaced by the exec_depend</li> <li>write source code in the source folder of the package :</li> <li>build the catkin workspace with the alias command : <code>cm</code></li> <li>launch the master as explained here.</li> <li>now launch the node as explained here and here.</li> </ol> <pre><code>catkin_create_pkg &lt;PKG_NAME&gt; &lt;PKG_DEPENDENCIES&gt; # create a package, must be called inside a catkin workspace\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#build","title":"Build","text":"<pre><code>cm\ncatkin_make                                     # build the whole workspace\ncatkin_make &lt;PKG_NAME&gt;                          # build a single package\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#install","title":"Install","text":"<pre><code>catkin_make install                             # installs all executables\ncatkin_make install &lt;PKG_NAME&gt;                  # installs single executables\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#python-modules","title":"Python modules","text":"<p>Tips :</p> <ul> <li>put the script in a folder called scripts</li> <li>make sure to run <code>chmod +x &lt;script_name&gt;.py</code> so that the script is recognized as an executable by ROS</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/commands.html#update-services-with-rqt","title":"Update services with RQT","text":"<ol> <li>launch RQT from a new terminal : run <code>rqt</code></li> <li>Search for the plugin Service Caller</li> <li>Choose the service that you want to update</li> <li>Fill the expression field with an expected parameter of this service</li> <li>Call the service and the response is displayed</li> </ol>","tags":["coding","ros"]},{"location":"coding/ros/install.html","title":"Installation","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#how-to-install-ros","title":"How to install ROS","text":"<p>This installation is based on Ubuntu 18.4 LTS and ROS Melodic Morenia.</p>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#prerequisites","title":"Prerequisites","text":"<p>Some tools are not mandatory.</p>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ntp","title":"NTP","text":"<p>Only needed in a multi-pc system.</p> <pre><code>echo \"Install Chrony and ntpdate\"\nsudo apt-get install -y chrony ntpdate\nsudo ntpdate -q ntp.ubuntu.com\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#sources","title":"Sources","text":"<p>ROS Ubunbtu apt-get packages sources.</p> <pre><code>echo \"Add ROS Package Sources\"\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" &gt; /etc/apt/sources.list.d/ros-latest.list'\n</code></pre> <p>Ubuntu 18.04 LTS (Bionic Beaver)</p> <pre><code>echo \"Add ROS Package Sources for Ubuntu 18.04 LTS Bionic Beaver\"\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" &gt; /etc/apt/sources.list.d/ros-latest.list'\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#keys","title":"Keys","text":"<ul> <li>ROS Kinetic</li> <li>ROS Melodic</li> </ul> <pre><code>echo \"Add ROS Package Key\"\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ros-base","title":"ROS Base","text":"<pre><code>echo \"Install ROS Base Desktop Full\"\nsudo apt-get install ros-melodic-desktop-full\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ros-additional-packages","title":"ROS Additional Packages","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#rqt","title":"RQT","text":"<pre><code>echo \"Install ROS R-QT\"\nsudo apt-get install ros-melodic-rqt*\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#individual-ros-packages","title":"Individual ROS packages","text":"<p>Search &amp; install individual ROS packages</p> <pre><code>echo \"Install ROS R-QT\"\napt-cache search ros-melodic\nsudo apt-get install ros-melodic-[NAME_OF_PACKAGE]\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#setup-ros-environment","title":"Setup ROS Environment","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#initialise-rosdep","title":"Initialise rosdep","text":"<pre><code>echo \"[Initialize rosdep]\"\nsudo sh -c \"rosdep init\"\nrosdep update\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#environment-setup","title":"Environment setup","text":"<p>Differs depending if it's zsh or bash</p> <pre><code>echo \"[Environment setup and getting rosinstall]\"\nif [ -n \"$ZSH_VERSION\" ]; then\n   # assume Zsh\n  source /opt/ros/$name_ros_version/setup.zsh\nelif [ -n \"$BASH_VERSION\" ]; then\n  # assume Bash\n  source /opt/ros/$name_ros_version/setup.sh\nfi\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ros-install","title":"ROS Install","text":"<pre><code>sudo apt install -y python-rosinstall python-rosinstall-generator python-wstool\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#create-catkin-workspace","title":"Create catkin workspace","text":"<pre><code>echo \"[Make the catkin workspace and test the catkin_make]\"\nmkdir -p $HOME/$name_catkin_workspace/src\ncd $HOME/$name_catkin_workspace/src\ncatkin_init_workspace\ncd $HOME/$name_catkin_workspace\ncatkin_make\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#shell-scripts","title":"Shell Scripts","text":"<p>All the above can be done with help of the ros-melodic-install.bash</p>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#additional-install","title":"Additional Install","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#hitachi-sdk","title":"Hitachi SDK","text":"<pre><code>cd ~/Downloads\necho \"$INDENT Manually download http://hlds.co.jp/download/tofsdk/v2.3.0/HldsTofSdk.2.3.0ubuntu16_x64.zip into your Downloads/ folder\"\necho \"\"\necho \"PRESS [ENTER] WHEN YOU'RE FINISHED AND TO CONTINUE THE INSTALLATION\"\nread\nmkdir HldsTofSdk.2.3.0ubuntu16_x64\nunzip HldsTofSdk.2.3.0ubuntu16_x64.zip -d ./HldsTofSdk.2.3.0ubuntu16_x64\nsudo apt install HldsTofSdk.2.3.0ubuntu16_x64/libtof-dev_2.3.0-4ubuntu16_amd64.deb\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#configuration","title":"Configuration","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ros-configuration","title":"ROS Configuration","text":"","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#bashrc","title":"<code>.bashrc</code>","text":"<pre><code>echo \"[Set the ROS evironment in ~/.bashrc]\"\necho \"alias eb='vim ~/.bashrc'\" &gt;&gt; ~/.bashrc\necho \"alias sb='source ~/.bashrc'\" &gt;&gt; ~/.bashrc\necho \"alias gs='git status'\" &gt;&gt; ~/.bashrc\necho \"alias gp='git pull'\" &gt;&gt; ~/.bashrc\necho \"alias cw='cd ~/$name_catkin_workspace'\" &gt;&gt; ~/.bashrc\necho \"alias cs='cd ~/$name_catkin_workspace/src'\" &gt;&gt; ~/.bashrc\necho \"alias cm='cd ~/$name_catkin_workspace &amp;&amp; catkin_make'\" &gt;&gt; ~/.bashrc\n\necho \"source /opt/ros/$name_ros_version/setup.bash\" &gt;&gt; ~/.bashrc\necho \"source ~/$name_catkin_workspace/devel/setup.bash\" &gt;&gt; ~/.bashrc\n\necho \"export ROS_MASTER_URI=http://localhost:11311\" &gt;&gt; ~/.bashrc\necho \"export ROS_HOSTNAME=localhost\" &gt;&gt; ~/.bashrc\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#zshrc","title":"<code>.zshrc</code>","text":"<pre><code>echo \"[Set the ROS evironment in ~/.zshrc]\"\necho \"alias eb='vim ~/.zshrc'\" &gt;&gt; ~/.zshrc\necho \"alias sb='source ~/.zshrc'\" &gt;&gt; ~/.zshrc\necho \"alias gs='git status'\" &gt;&gt; ~/.zshrc\necho \"alias gp='git pull'\" &gt;&gt; ~/.zshrc\necho \"alias cw='cd ~/$name_catkin_workspace'\" &gt;&gt; ~/.zshrc\necho \"alias cs='cd ~/$name_catkin_workspace/src'\" &gt;&gt; ~/.zshrc\necho \"alias cm='cd ~/$name_catkin_workspace &amp;&amp; catkin_make'\" &gt;&gt; ~/.zshrc\n\necho \"source /opt/ros/$name_ros_version/setup.zsh\" &gt;&gt; ~/.zshrc\necho \"source ~/$name_catkin_workspace/devel/setup.zsh\" &gt;&gt; ~/.zshrc\n\necho \"export ROS_MASTER_URI=http://localhost:11311\" &gt;&gt; ~/.zshrc\necho \"export ROS_HOSTNAME=localhost\" &gt;&gt; ~/.zshrc\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/install.html#ros-test","title":"ROS Test","text":"<pre><code>roscore\n</code></pre>","tags":["coding","ros","install"]},{"location":"coding/ros/launch.html","title":"Launch","text":"","tags":["coding","ros"]},{"location":"coding/ros/launch.html#launcher","title":"Launcher","text":"<ul> <li>launch os a tool for launchine multiple nodes (as well as setting parameters)</li> <li>Are written in XM as <code>*.launch</code> files</li> <li>If not yet running, launch atuomatically stars a roscore</li> </ul> <p>Browse to the folder and start a launch file with</p> <pre><code>roslaunch &lt;file_name&gt;.launch\n</code></pre> <p>Start a launch file from a package with</p> <pre><code>roslaunch &lt;package_name&gt; &lt;file_name&gt;.launch\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#launch-file","title":"Launch file","text":"talker_listerner.launch<pre><code>&lt;launch&gt;\n&lt;node name=\"listener\" pkg=\"roscpp_tutorials\" type=\"listener\" output=\"screen\"/&gt;\n&lt;node name=\"talker\" pkg=\"roscpp_tutorials\" type=\"talker\" output=\"screen\"/&gt;\n&lt;/launch&gt;\n</code></pre> <p>launch: Root element of the launch file</p> <ul> <li>node: Each <code>&lt;node&gt;</code> tag specifies a node to be launched</li> <li>name: Name of the node (free to choose)</li> <li>pkg: Package containing the node</li> <li>type: Type of the node, there must be a corresponding executable with the same name</li> <li>output: Specifies where to output log messages (screen: console, log: log file)</li> </ul> <p>More Info</p> <ul> <li>http://wiki.ros.org/roslaunch/XML</li> <li>http://wiki.ros.org/roslaunch/Tutorials/Roslaunch%20tips%20for%20larger%20projects</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#arguments","title":"Arguments","text":"<ul> <li>Create re-usable launch files with <code>&lt;arg&gt;</code> tag, which works like a parameter (default optional)   <pre><code>&lt;arg name=\"arg_name\" default=\"default_value\"/&gt;\n</code></pre></li> <li>Use arguments in launch file with   <pre><code>$(arg arg_name)\n</code></pre></li> <li>When launching, arguments can be set with   <pre><code>roslaunch launchf_file.launch arg_name:value\n</code></pre></li> </ul> <p>Example:</p> range_world.launch<pre><code>&lt;?xml version=\"1.0\"?&gt;\n  &lt;launch&gt;\n    &lt;arg name=\"use_sim_time\" default=\"true\"/&gt;\n    &lt;arg name=\"world\" default=\"gazebo_ros_range\"/&gt;\n    &lt;arg name=\"debug\" default=\"false\"/&gt;\n    &lt;arg name=\"physics\" default=\"ode\"/&gt;\n\n    &lt;group if=\"$(arg use_sim_time)\"&gt;\n      &lt;param name=\"/use_sim_time\" value=\"true\" /&gt;\n    &lt;/group&gt;\n    &lt;include file=\"$(find gazebo_ros) /launch/empty_world.launch\"&gt;\n    &lt;arg name=\"world_name\" value=\"$(find gazebo_plugins)/ test/test_worlds/$(arg world).world\"/&gt;\n    &lt;arg name=\"debug\" value=\"$(arg debug)\"/&gt;\n    &lt;arg name=\"physics\" value=\"$(arg physics)\"/&gt;\n  &lt;/include&gt;\n&lt;/launch&gt;\n</code></pre> <p>More info http://wiki.ros.org/roslaunch/XML/arg</p>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#including-other-launch-files","title":"Including other launch files","text":"<ul> <li> <p>Include other launch files with <code>&lt;include&gt;</code> tag to organize large projects   </p><pre><code>&lt;include file=\"package_name\" /&gt;\n</code></pre> </li> <li> <p>Find the system path to other packages with   </p><pre><code>$(find package_name)\n</code></pre> </li> <li> <p>Pass arguments to the included file   </p><pre><code>&lt;arg name=\"arg_name\" value=\"value\"/&gt;\n</code></pre> </li> </ul> range_world.launch<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;launch&gt;\n  &lt;arg name=\"use_sim_time\" default=\"true\"/&gt;\n  &lt;arg name=\"world\" default=\"gazebo_ros_range\"/&gt;\n  &lt;arg name=\"debug\" default=\"false\"/&gt;\n  &lt;arg name=\"physics\" default=\"ode\"/&gt;\n\n    &lt;group if=\"$(arg use_sim_time)\"&gt;\n    &lt;param name=\"/use_sim_time\" value=\"true\" /&gt;\n  &lt;/group&gt;\n\n    &lt;include file=\"$(find gazebo_ros) /launch/empty_world.launch\"&gt;\n    &lt;arg name=\"world_name\" value=\"$(find gazebo_plugins)/test/test_worlds/$(arg world).world\"/&gt;\n    &lt;arg name=\"debug\" value=\"$(arg debug)\"/&gt;\n    &lt;arg name=\"physics\" value=\"$(arg physics)\"/&gt;\n  &lt;/include&gt;\n&lt;/launch&gt;\n</code></pre> <p>More info: http://wiki.ros.org/roslaunch/XML/include</p>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#create-a-launcher-in-a-new-package","title":"Create a launcher in a new package","text":"<ol> <li>move to the folder of the package</li> <li>run : <code>mkdir launch &amp;&amp; cd launch</code></li> <li>run : <code>gedit &lt;LAUNCHER_NAME&gt;.launch</code></li> <li>fill the launcher file, for example:   <pre><code>&lt;launch&gt;\n  &lt;node pkg=\"&lt;PACKAGE1_NAME&gt;\" type=\"&lt;NODE1_NAME&gt;\" name=\"&lt;INSTANCE0&gt;\"/&gt;\n  &lt;node pkg=\"&lt;PACKAGE2_NAME&gt;\" type=\"&lt;NODE2_NAME&gt;\" name=\"&lt;INSTANCE1&gt;\"/&gt;\n  &lt;node pkg=\"&lt;PACKAGE2_NAME&gt;\" type=\"&lt;NODE2_NAME&gt;\" name=\"&lt;INSTANCE2&gt;\"/&gt;\n  &lt;node pkg=\"&lt;PACKAGE2_NAME&gt;\" type=\"&lt;NODE2_NAME&gt;\" name=\"&lt;INSTANCE3&gt;\"/&gt;\n&lt;/launch&gt;\n</code></pre></li> </ol>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#include-another-launcher-inside-this-launcher","title":"Include another launcher inside this launcher","text":"<p>Add the include directive :</p> <pre><code>&lt;launch&gt;\n  &lt;include file=\"$(find &lt;PKG_NAME&gt;)/launch/&lt;LAUNCHER_NAME&gt;.launch\" /&gt;\n  &lt;/launch&gt;\n</code></pre> <p>This is very useful to combine launcher together, or complete a first launcher :</p> <ul> <li>the first launcher is responsible to launch a driver</li> <li>the second launcher that includes the first one launches also a graphical tool on top of that</li> </ul> <p>The advantage being that it is not necessary to copy paste all the code of the first launcher into the second one to use them together.</p>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#parameters-in-launcher","title":"Parameters in launcher","text":"<p>Parameters can be set in the launcher and get by the node at run time. This is a convenient way to avoid rebuilding the code each time it is necessary to change the value of a variable, for example a path to a file.</p> <p>The syntax is the following one :</p> <pre><code>&lt;param name=\"&lt;PARAM_NAME&gt;\" type=\"&lt;TYPE&gt;\" value=\"&lt;VALUE&gt;\" /&gt;\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#get-the-value-of-a-parameter-at-run-time","title":"Get the value of a parameter at run time","text":"<p>It can be used in the node at run time with this C++ code :</p> <pre><code>ros::NodeHandle nh;\nstd::string iniPath;\nnh.getParam(\"ini_path\", iniPath);\n</code></pre> <p>The node handler gets the parameter called ini_path in the launcher and will store it in the variable iniPath. If the parameter is public, therefore accessible by all the nodes, this is sufficient to get its value. If the parameter is private to a node, then the node handler needs to know the name of the node :</p> <pre><code>ros::NodeHandle nh;\nstd::string iniName;\nnh.getParam(\"tof_driver_1/ini_name\", iniName);\n</code></pre> <p>To get the name of the node at run time, it is possible to use this line :</p> <pre><code>std::string nodeName = ros::this_node::getName();\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#public-vs-private-parameters","title":"Public vs Private parameters","text":"<p>Depending of where the parameter is declared in the launcher, the parameter will be either private to a node, or accessible by all the nodes. If the parameter is declared outside of a <code>&lt;node&gt;&lt;/node&gt;</code> tag, it is public and accessible to all the nodes. At the opposite, if the parameter is declared inside a <code>&lt;node&gt;&lt;/node&gt;</code> tag, it will only be accessible by the node, with the specific method described above.</p> <p>In this example :</p> <ul> <li>The parameter ini_path is public and accessible by all the nodes only with its name.</li> <li>The parameter ini_name is private to each node and is accessible with the name of the node and its name, concatenated together. This allows to declare two time the same parameter with different value, as long as they are declared inside different nodes.</li> </ul> <pre><code>&lt;launch&gt;\n      &lt;!-- Public parameters for both nodes --&gt;\n      &lt;param name=\"ini_path\" type=\"str\"\n             value=\"$(find ros_driver_for_multiple_tof_sensors)/launch/\" /&gt;\n\n      &lt;!-- Call the driver node for sensor 1 (IP = 192.168.0.105)--&gt;\n      &lt;node pkg=\"ros_driver_for_multiple_tof_sensors\"\n            type=\"ros_driver_multiple_sensors_node\" name=\"tof_driver_1\"\n            args=\"\" required=\"true\" output=\"screen\" &gt;\n\n            &lt;!-- Private parameter for node 1 --&gt;\n            &lt;param name=\"ini_name\" type=\"str\" value=\"tof_sensor1.ini\" /&gt;\n      &lt;/node&gt;\n\n      &lt;!-- Call the driver node for sensor 2 (IP = 192.168.1.105)--&gt;\n      &lt;node pkg=\"ros_driver_for_multiple_tof_sensors\"\n            type=\"ros_driver_multiple_sensors_node\" name=\"tof_driver_2\"\n            args=\"\" required=\"true\" output=\"screen\" &gt;\n\n            &lt;!-- Private parameter for node 2 --&gt;\n            &lt;param name=\"ini_name\" type=\"str\" value=\"tof_sensor2.ini\" /&gt;\n      &lt;/node&gt;\n&lt;/launch&gt;\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/launch.html#rviz-configuration","title":"Rviz configuration","text":"<p>After setting up the display configuration in Rviz, you can save it with the tab <code>File -&gt; Save config as -&gt; ...</code></p> <p>Then you can call it directly in the launch file by adding :</p> <pre><code>&lt;node pkg=\"rviz\" type=\"rviz\" name=\"rviz\"\n    args=\"-d &lt;PATH_TO_FILE&gt;/&lt;CONFIG_NAME&gt;.rviz\"/&gt;\n</code></pre> <p>This will open Rviz with the saved configuration when the launch file is launched.</p>","tags":["coding","ros"]},{"location":"coding/ros/lidar-driver.html","title":"Lidar Driver","text":"","tags":["coding","ros","lidar"]},{"location":"coding/ros/lidar-driver.html#install-the-sdk","title":"Install the SDK","text":"<p>run in a new terminal:</p> <pre><code>sudo dpkg -i libtof-dev_&lt;version_number&gt;ubuntu16_amd64.deb\n</code></pre>","tags":["coding","ros","lidar"]},{"location":"coding/ros/packages-ext.html","title":"External Packages and Nodes","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#terminology","title":"Terminology","text":"<ul> <li><code>+</code> : interesting topics and hardware abstraction</li> <li><code>~</code> : interesting, but quite a lot of work to do for hardware compatibility or mapping</li> <li><code>-</code> : bad solution</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#overview","title":"Overview","text":"<p>Figure 1: ROS packages overview</p>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#3d-mapping","title":"3D Mapping","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#slam","title":"SLAM","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#octomap_server","title":"Octomap_server : <code>+</code>","text":"<p>3D occupancy grid mapping, independent from sensor, looks like it does not need odometry</p> <ul> <li>https://youtu.be/yp0f8-AKvDU</li> <li>https://wiki.ros.org/octomap_mapping</li> <li>https://wiki.ros.org/octomap_server</li> <li>http://octomap.github.io/</li> </ul> <p>Plus :</p> <ul> <li>maintained</li> <li>compatible with melodic</li> <li>documentation available as well as many</li> <li>no odometry</li> <li>independent from hardware (only require the right input topics)</li> </ul> <p>Minus :</p> <ul> <li>...</li> </ul> <p>Inputs required :</p> <ul> <li>sensor_msgs/PointCloud2</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#hector-slam","title":"Hector slam : <code>+</code>","text":"<ul> <li>https://github.com/tu-darmstadt-ros-pkg/hector_slam</li> <li>http://wiki.ros.org/hector_slam</li> </ul> <p>Not sure whether we're interested in hector slam itself, or on the</p> <p>Plus :</p> <ul> <li>maintained</li> <li>not directly compatible with melodic, but easy to build it from source for melodic</li> <li>odometry not needed</li> </ul> <p>Minus :</p> <ul> <li>mostly created for 2D mapping and robot navigation</li> <li>not much documentation</li> </ul> <p>Inputs required :</p> <ul> <li>...</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#remode","title":"REMODE : <code>~</code>","text":"<ul> <li>https://www.ros.org/news/2016/02/open-source-release-remode-probabilistic-monocular-dense-reconstruction-in-real-time.html</li> </ul> <p>modeling of many 3D objects, like rooms, persons, ...</p> <p>Plus :</p> <ul> <li>noise reduction</li> <li>nice rendering</li> </ul> <p>Minus :</p> <ul> <li>not much documentation and precisions about <code>hardware/drivers/topics</code></li> <li>maybe \"too much\" for our needs ?</li> <li>looks like it is not maintained anymore : latest commit was 4 years ago</li> </ul> <p>Inputs :</p> <ul> <li>...</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#loam","title":"LOAM","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#rtabmap","title":"RTABMAP : <code>+</code>","text":"<ul> <li>http://wiki.ros.org/rtabmap_ros</li> </ul> <p>Plus :</p> <ul> <li>maintained</li> <li>compatible with melodic</li> <li>real time mapping</li> <li>publishes :</li> <li>3D point clouds</li> <li>2D occupancy maps</li> <li>tutorials and documentation available</li> </ul> <p>Minus :</p> <ul> <li>oriented towards robot navigation, although \"top-down\" modeling seems to be possible</li> </ul> <p>Inputs required :</p> <ul> <li>odometry (not mandatory in all cases)</li> <li>scan 2D or 3D</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#spin-hokuyo","title":"Spin Hokuyo : <code>+</code>","text":"<ul> <li>https://github.com/RobustFieldAutonomyLab/spin_hokuyo</li> <li>http://wiki.ros.org/spin_hokuyo</li> </ul> <p>It creates a point cloud with a 2D LiDaR and a servomotor. The interesting node compiles small point clouds to make one big point cloud. Could be very useful to make our digital model.</p> <p>Plus :</p> <ul> <li>has a node that compiles point clouds and publish them on a topic</li> <li>great rendering</li> </ul> <p>Minus :</p> <ul> <li>designed for another sensor, but the node that compiles point clouds does not care about that</li> <li>need some odometry work</li> </ul> <p>Inputs required :</p> <ul> <li>laser scan</li> <li>odometry</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#lego-loam","title":"Lego-LOAM : <code>~</code>","text":"<ul> <li>https://github.com/RobustFieldAutonomyLab/LeGO-LOAM</li> </ul> <p>Plus :</p> <ul> <li>good rendering</li> </ul> <p>Minus :</p> <ul> <li>designed for robot navigation, not for \"top-down mapping\"</li> <li>designed for another sensor (velodyne)</li> </ul> <p>Inputs :</p> <ul> <li>...</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#velodyne-loam","title":"Velodyne loam : <code>~</code>","text":"<ul> <li>http://wiki.ros.org/loam_velodyne</li> </ul> <p>Plus :</p> <ul> <li>good rendering</li> <li>builds 3D maps</li> </ul> <p>Minus :</p> <ul> <li>for velodyne sensor</li> <li>robot navigation</li> </ul> <p>Inputs :</p> <ul> <li>..</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#bad-solution-","title":"Bad solution <code>-</code>","text":"<ul> <li>https://github.com/koide3/hdl_graph_slam : not what we need. creates maps with corridors and doors, but not \"top-down\" mapping</li> <li>http://wiki.ros.org/robot_pose_ekf : not what we need</li> <li>http://wiki.ros.org/ethzasl_icp_mapper : doc not up to date, slowly not maintained anymore, ...</li> <li>https://github.com/ethz-asl/libpointmatcher/blob/master/doc/index.md</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#modbus","title":"Modbus","text":"<ul> <li>http://wiki.ros.org/modbus</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#object-tracking","title":"Object Tracking","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#multiple-objects-lidar-tracking","title":"Multiple objects lidar tracking : <code>~</code>","text":"<ul> <li>https://github.com/praveen-palanisamy/multiple-object-tracking-lidar</li> </ul> <p>Plus :</p> <ul> <li>tracks objects in real time</li> <li>hardware independent</li> </ul> <p>Minus :</p> <ul> <li>2D maps, most likely used for robot navigation</li> </ul> <p>Inputs :</p> <ul> <li>...</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#object-detection","title":"Object Detection","text":"<ul> <li>https://www.acin.tuwien.ac.at/vision-for-robotics/software-tools/v4r-library/</li> <li>https://rgit.acin.tuwien.ac.at/v4r/v4r_ros_wrappers</li> <li>http://wiki.ros.org/object_recognition</li> <li>https://www.osrfoundation.org/ros2-object-detection-demo/</li> <li>http://wiki.ros.org/find_object_2d</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages-ext.html#qr-code-readers","title":"QR code readers","text":"<ul> <li>http://wiki.ros.org/zbar_ros</li> <li>https://github.com/mdrwiega/qr_detector</li> <li>http://wiki.ros.org/visp_auto_tracker</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html","title":"Packages","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages.html#package-structure","title":"Package Structure","text":"<p>ROS software is organized into packages, which can contain source code, launch files, configuration files, message definitions, data, and documentation. A package can depend on other packages called dependencies.</p> <pre><code>catkin_create_pkg &lt;package_name&gt; {dependencies}\n</code></pre> <p>A package need two things, its source code and the message definition. It is encouraging to place message definition into a separate folder.</p> <ul> <li> <code>package_name</code></li> <li> <code>config</code> - parameter files (<code>YAML</code>)</li> <li> <code>include/package_name</code> - C++ include headers</li> <li> <code>launch</code> - <code>*.launch</code> files</li> <li> <code>src</code> - Source files</li> <li> <code>test</code> - Unit and or ROS Tests</li> <li> <code>CMakeList.txt</code> - CMake build file</li> <li> <code>package.xml</code> - Package information</li> <li> <code>package_name_msgs</code></li> <li> <code>action</code> - Action definitions</li> <li> <code>msg</code> - Message definitions</li> <li> <code>src</code> - Service definitions</li> <li> <code>CMakeList.txt</code> - CMake build file</li> <li> <code>package.xml</code> - Package information</li> </ul> <p>More info</p> <ul> <li>http://wiki.ros.org/Packages</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#package-files","title":"Package Files","text":"","tags":["coding","ros"]},{"location":"coding/ros/packages.html#packagexml","title":"<code>package.xml</code>","text":"<ul> <li>The <code>package.xml</code> file defines the properties of the package</li> <li>Package name</li> <li>Version number</li> <li>Authors</li> <li>Dependencies on other packages</li> <li>...</li> </ul> package.xml<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;package format=\"2\"&gt;\n    &lt;name&gt;ros_package_template&lt;/name&gt;\n    &lt;version&gt;0.1.0&lt;/version&gt;\n    &lt;description&gt;A template for ROS packages.&lt;/description&gt;\n    &lt;maintainer email=\"user@email.ch\"&gt;Firstname Lastname&lt;/maintainer&gt;\n    &lt;license&gt;BSD&lt;/license&gt;\n    &lt;url type=\"website\"&gt;https://github.com/link/ros_&lt;/url&gt;\n    &lt;author email=\"user@email.ch\"&gt;Firstname Lastname&lt;/author&gt;\n\n    &lt;buildtool_depend&gt;catkin&lt;/buildtool_depend&gt;\n\n    &lt;depend&gt;roscpp&lt;/depend&gt;\n    &lt;depend&gt;sensor_msgs&lt;/depend&gt;\n&lt;/package&gt;\n</code></pre> <p>More info</p> <ul> <li>http://wiki.ros.org/catkin/package.xml</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#cmakeliststxt","title":"<code>CMakeLists.txt</code>","text":"<p>The <code>CMakeLists.txt</code> is the input to the CMake build system</p> <ol> <li>Required CMake Version <code>(cmake_minimum_required)</code></li> <li>Package Name <code>(project())</code></li> <li>Find other CMake/Catkin packages needed for build <code>(find_package())</code></li> <li>Message/Service/Action Generators <code>(add_message_files(), add_service_files(), add_action_files())</code></li> <li>Invoke message/service/action generation <code>(generate_messages())</code></li> <li>Specify package build info export <code>(catkin_package())</code></li> <li>Libraries/Executables to build <code>(add_library()/add_executable()/target_link_libraries())</code></li> <li>Tests to build <code>(catkin_add_gtest())</code></li> <li>Install rules <code>(install())</code></li> </ol> CMakeLists.txt<pre><code>cmake_minimum_required(VERSION 2.8.3)\nproject(husky_highlevel_controller)\nadd_definitions(--std=c++11)\n\nfind_package(catkin REQUIRED COMPONENTS roscpp sensor_msgs )\n\ncatkin_package(\n  INCLUDE_DIRS include\n  # LIBRARIES\n  CATKIN_DEPENDS roscpp  sensor_msgs\n  # DEPENDS\n)\n\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(${PROJECT_NAME} src/${PROJECT_NAME}_node.cpp src/HuskyHighlevelController.cpp)\n\ntarget_link_libraries(${PROJECT_NAME} ${catkin_LIBRARIES})\n</code></pre> <p>More info</p> <ul> <li>http://wiki.ros.org/catkin/CMakeLists.txt</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#eclipse-integration","title":"Eclipse integration","text":"<ul> <li>Build the Eclipse project files with additional build flags   <pre><code>catkin build package_name --cmake-args -G\"Eclipse CDT4 - Unix Makefiles\u201d -D__cplusplus=201103L D__GXX_EXPERIMENTAL_CXX0X__=1\n</code></pre></li> <li>To use flags by default in your catkin environment, use the [catkin config]{.title-ref} command.</li> <li>The Eclipse project files will be generated in <code>~/catkin_ws/build</code>]{.title-ref}`</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#c-client-library","title":"C++ Client Library","text":"<ul> <li>http://wiki.ros.org/roscpp</li> <li>http://wiki.ros.org/roscpp/Overview</li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#example","title":"Example","text":"<pre><code>#include &lt;ros/ros.h&gt;\n\nint main(int argc, char** argv)                   // ROS main head file\n{\n    ros::init(argc, argv, \"hello_world\");         // has to be called before ROS func's\n    ros::NodeHandle nodeHandle;                   // access poiunt for communication\n    ros::Rate loopRate(10);                       // ros:Rate runs loops at desired freq e.g. 10 = 10 Hz\n\n    unsigned int count = 0;\n    while (ros::ok()) {                           // checks if a node should continue running\n        ROS_INFO_STREAM(\"Hello World \" &lt;&lt; count); // ROS_info() logs messages from fs\n        ros::spinOnce();                          // processes incommind msg via callbacks\n        loopRate.sleep();\n        count++;\n    }\n    return 0;\n}\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#node-handle","title":"Node Handle","text":"<p>http://wiki.ros.org/roscpp/Overview/NodeHandles</p> <pre><code>// Default (public) node handle:      // Recommended\nnh_ = ros::NodeHandle();              // /namespace/topic\n\n// Private node handle:               // Recommended\nnh_private_ = ros::NodeHandle(\"~\");   // /namespace/node/topic\n\n// Namespaced node handle:\nnh_eth_ = ros::NodeHandle(\"hevs\");    // /namespace/hevs/topic\n\n// Global node handle:                // NOT Recommended\nnh_global_ = ros::NodeHandle(\"/\");    // /topic\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#logging-ros_info","title":"Logging <code>ROS_INFO</code>","text":"<ul> <li>http://wiki.ros.org/rosconsole</li> <li>http://wiki.ros.org/roscpp/Overview/Logging</li> </ul> <p>Send text to log files and console. Instead of <code>std::cout</code>, use e.g. <code>ROS_INFO</code>.</p>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#severity-levels","title":"Severity Levels","text":"Debug Info Warn Error Fatal stdout :check_mark_button: :check_mark_button: stderr :check_mark_button: :check_mark_button: :check_mark_button: Log file :check_mark_button: :check_mark_button: :check_mark_button: :check_mark_button: :check_mark_button: /rosout :check_mark_button: :check_mark_button: :check_mark_button: :check_mark_button: :check_mark_button: <p>Formatting Style</p> <pre><code>ROS_INFO(\"Result: %d\", result);           // printf style\nROS_INFO_STREAM(\"Result: \" &lt;&lt; result);    // stream style\n</code></pre> <p>Launchfile</p> <p>To see the output in the console set configuration to [screen]{.title-ref} in the launch file.</p> <pre><code>&lt;launch&gt;\n    &lt;node name=\"listener\" more=\"stuff\" output=\"screen\"/&gt;\n&lt;/launch&gt;\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#subscriber","title":"Subscriber","text":"<p>http://wiki.ros.org/roscpp/Overview/Publishers%20and%20Subscribers</p> <p>Start listening to a topic by calling the method subscribe() of the node handle</p> <pre><code>ros::Subscriber subscriber = nodeHandle.subscribe(topic, queue_size, callback_function);\n</code></pre> <p>Example</p> <pre><code>#include \"ros/ros.h\"\n#include \"std_msgs/String.h\"\n\n// callback function when a message is received\nvoid chatterCallback(const std_msgs::String&amp; msg) {\n ROS_INFO(\"I heard: [%s]\", msg.data.c_str());\n}\n\nint main(int argc, char **argv) {\n ros::init(argc, argv, \"listener\");\n    ros::NodeHandle nodeHandle;\n    // Subscript to topic with a queue size of 10 (1-10 is recommended)\n    ros::Subscriber subscriber = nodeHandle.subscribe(\"chatter\",10,chatterCallback);\n    ros::spin(); // stay's here forever\n    return 0;\n}\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#publisher","title":"Publisher","text":"<p>http://wiki.ros.org/roscpp/Overview/Publishers%20and%20Subscribers</p> <p>Create a publisher with help of the node handle</p> <pre><code>ros::Publisher publisher = nodeHandle.advertise&lt;message_type&gt;(topic, queue_size);\n</code></pre> <p>Example</p> <pre><code>:caption: talker.cpp\n#include &lt;ros/ros.h&gt;\n#include &lt;std_msgs/String.h&gt;\n\nint main(int argc, char **argv) {\n    ros::init(argc, argv, \"talker\");\n    ros::NodeHandle nh;\n    // Node handle queue size of 1\n    ros::Publisher chatterPublisher = nh.advertise&lt;std_msgs::String&gt;(\"chatter\", 1);\n    ros::Rate loopRate(10);\n\n    unsigned int count = 0;\n    while (ros::ok()) {\n        std_msgs::String message;\n        // Cretae message content\n        message.data = \"hello world \" + std::to_string(count);\n        ROS_INFO_STREAM(message.data);\n        chatterPublisher.publish(message);\n        ros::spinOnce();\n        loopRate.sleep();\n        count++;\n    }\n    return 0;\n}\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#oop","title":"OOP","text":"<p>http://wiki.ros.org/roscpp_tutorials/Tutorials/UsingClassMethodsAsCallbacks</p> <p>Example</p> <pre><code>:caption: my_package_node.cpp\n#include &lt;ros/ros.h&gt;\n#include \"my_package/MyPackage.hpp\"\nint main(int argc, char** argv) {\n    ros::init(argc, argv, \"my_package\");\n    ros::NodeHandle nodeHandle(\"~\");\n    // Call\n    my_package::MyPackage myPackage(nodeHandle);\n\n    ros::spin();\n    return 0;\n}\n</code></pre> class MyPackage class Algorithm Main node class providing ROS interface (subscribers, parameters, timers etc.) Class implementing the algorithmic part of the node Note: The algorithmic part of the code could be separated in a  (ROS-independent) library","tags":["coding","ros"]},{"location":"coding/ros/packages.html#parameter-server","title":"Parameter Server","text":"<p>http://wiki.ros.org/roscpp/Overview/Parameter%20Server</p> <p>Example Parameter File</p> <pre><code>:caption: config.yaml\n\ncamera:\n left:\n     name: left_camera\n     exposure: 1\n right:\n     name: right_camera\n     exposure: 1.1\n</code></pre> <p>Example Launch file</p> <pre><code>&lt;launch&gt;\n    &lt;node name=\"name\" pkg=\"package\" type=\"node_type\"&gt;\n        &lt;rosparam command=\"load\" file=\"$(find package)/config/config.yaml\" /&gt;\n    &lt;/node&gt;\n&lt;/launch&gt;\n</code></pre>","tags":["coding","ros"]},{"location":"coding/ros/packages.html#c-api","title":"C++ API","text":"<pre><code>ros::NodeHandle nodeHandle(\"~\");\nstd::string topic;\nif (!nodeHandle.getParam(\"topic\", topic)) {\n ROS_ERROR(\"Could not find topic parameter!\");\n}\n</code></pre> <p>Get a parameter in C++ with</p> <pre><code>nodeHandle.getParam(parameter_name, variable)\n</code></pre> <ul> <li>Method returns <code>true</code> if parameter was found, <code>false</code> otherwise</li> <li>Global and relative parameter access:</li> <li>Global parameter name with preceding <code>/</code> <pre><code>nodeHandle.getParam(\"/package/camera/left/exposure\", variable)\n</code></pre>     Relative parameter name (relative to the node handle)     <pre><code>nodeHandle.getParam(\"camera/left/exposure\", variable)\n</code></pre></li> <li>For parameters, typically use the private node handle   <pre><code>ros::NodeHandle(\"~\")\n</code></pre></li> </ul>","tags":["coding","ros"]},{"location":"coding/ros/rviz.html","title":"RViz","text":"","tags":["coding","ros","rviz"]},{"location":"coding/ros/rviz.html#overview","title":"Overview","text":"<p>http://wiki.ros.org/rviz</p> <ul> <li>3D visualization tool for ROS</li> <li>Subscribes to topics and visualizes the message contents</li> <li>Different camera views (orthographic, top-down, etc.)</li> <li>Interactive tools to publish user information</li> <li>Save and load setup as RViz configuration</li> <li>Extensible with plugins</li> </ul>","tags":["coding","ros","rviz"]},{"location":"coding/ros/rviz.html#run","title":"Run","text":"<pre><code>rosrun rviz rviz\n</code></pre> <p>Save configuration with <code>ctrl+s</code></p>","tags":["coding","ros","rviz"]},{"location":"coding/ros/rviz.html#built-in-display-types","title":"Built-In Display Types","text":"Name Description Messages Used Axes Displays a set of Axes Effort Shows the effort being put into each revolute joint of a robot. sensor_msgs/JointStates Camera Creates a new rendering window from the perspective of a camera, and overlays the image on top of it. sensor_msgs/Image, sensor_msgs/CameraInfo Grid Displays a 2D or 3D grid along a plane Grid Cells Draws cells from a grid, usually obstacles from a costmap from the navigation stack. nav_msgs/GridCells Image Creates a new rendering window with an Image. Unlike the Camera display, this display does not use a CameraInfo. Version: Diamondback+ sensor_msgs/Image InteractiveMarker Displays 3D objects from one or multiple Interactive Marker servers and allows mouse interaction with them. Version: Electric+ visualization_msgs/InteractiveMarker Laser Scan Shows data from a laser scan, with different options for rendering modes, accumulation, etc. sensor_msgs/LaserScan Map Displays a map on the ground plane. nav_msgs/OccupancyGrid Markers Allows programmers to display arbitrary primitive shapes through a topic visualization_msgs/Marker, visualization_msgs/MarkerArray Path Shows a path from the navigation stack. nav_msgs/Path Point Draws a point as a small sphere. geometry_msgs/PointStamped Pose Draws a pose as either an arrow or axes. geometry_msgs/PoseStamped Pose Array Draws a \"cloud\" of arrows, one for each pose in a pose array geometry_msgs/PoseArray Point Cloud(2) Shows data from a point cloud, with different options for rendering modes, accumulation, etc. sensor_msgs/PointCloud, sensor_msgs/PointCloud2 Polygon Draws the outline of a polygon as lines. geometry_msgs/Polygon Odometry Accumulates odometry poses from over time. nav_msgs/Odometry Range Displays cones representing range measurements from sonar or IR range sensors. Version: Electric+ sensor_msgs/Range RobotModel Shows a visual representation of a robot in the correct pose (as defined by the current TF transforms). TF Displays the ros wiki tf transform  hierarchy. Wrench Draws a wrench as arrow (force) and arrow + circle (torque) Oculus Renders the RViz scene to an Oculus headset","tags":["coding","ros","rviz"]},{"location":"coding/ros/tf2.html","title":"Transform Frames","text":"<p>A frame in the ROS language is a specific coordinate system in the space. ROS abstracts elements of a robot as coordinates frames. Each physical part of a robot that has a particular meaning will most likely have its own frame :</p> <ul> <li>a sensor : laser_frame</li> <li>an arm : left_arm_frame</li> </ul> <p>It is up to the programmer to create frames where it is necessary, but some frames are already defined by ROS (see below).</p> <p>Each frame has it own origin and coordinate system :</p> <p>Figure 1: coordinate frame axis</p> <p>To keep trace of the frames in the whole coordinate system, they must all refer to a main frame. Knowing the position of the main frame and the relative positions of all the other frames, ROS is able to know the exact position of each frame all continuously.</p> <p>The TF2 package tracks the coordinate frames. There are several predefined frames :</p> <ul> <li>world : kind of the parent of all the frames, does not move, there is only one single world</li> <li>map : child of world, can be freely fixed in the world frame, does not move compared to the world, but it can be several map frames in a world (usually one map per robot)</li> <li>odom : child of map, fixed at the start point of the robot in the map frame, does not move compared to world and map</li> <li>base_link : kind of the reference frame of a robot, it is moving in odom, therefore moving in map and world</li> <li>...</li> </ul> <p>The TF tree shows the relations between the frames :</p> <p>Figure 2: tf tree</p> <p>One can create coordinate frames for each part of the robot that needs to be tracked, for example :</p> <ul> <li>scanner_frame : position of the scanner on a robot, somehow linked to the base_link</li> <li>wheels_frame : position of the wheels on a robot, somehow linked to the base_link</li> </ul> <p>The links between the base_link and the other frames can be direct, or they can be relative to it via other frames.</p> <p>They are linked together by TF (transform frames). TF can be either static, which means that the relation between two frames will never change (for example two sensors being fixed 1 meter away), or dynamic when the relation evolves in the time (for example the arm of a robot compared to its head).</p> <p>Let us use the example our two LIDAR sensor : they are oriented in the same way, they are on the same table, the only difference being there is 2.15 meter between them. For this example, they will never move nor rotate. We can use the node static_transform_publisher to inform other nodes that will use their data of their relative position. We will also fix them in the world, map and base_link frame.</p> <p>Since the base_link frame will not move neither, it will also be fixed to the map by a static transform. The static transformations are called as a node from a launcher :</p> <pre><code>&lt;launch&gt;\n      &lt;!-- From world to map, same origin --&gt;\n      &lt;node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"world_to_map\"\n            args=\"0 0 0 0 0 0 /world /map\" /&gt;\n\n      &lt;!-- From map to base_link, fixed in this case --&gt;\n      &lt;node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"map_to_base_link\"\n            args=\"0 0 0 0 0 0 /map /base_link\" /&gt;\n\n      &lt;!-- From base_link to laser_frame1, position of the first lidar --&gt;\n      &lt;node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"base_link_to_lidar1\"\n            args=\"0 0 0 0 0 0 /base_link /lidar1_frame\" /&gt;\n\n      &lt;!-- From base_link to laser_frame2, position of the second lidar --&gt;\n      &lt;node pkg=\"tf2_ros\" type=\"static_transform_publisher\" name=\"base_link_to_lidar2\"\n            args=\"-2.15 -0.01 0 0 0 0 /base_link /lidar2_frame\" /&gt;\n&lt;/launch&gt;\n</code></pre> <p>Which will produce the following TF tree:</p> <p>Figure 3: lidar tf tree</p> <p>The arguments are :</p> <ul> <li>translations in X, Y, Z</li> <li>rotations around X, Y, Z</li> <li>parent frame_id</li> <li>child frame_id</li> </ul> <p>Each topic has a reference frame. This means that each message being published on a topic kind of contains the position \"from where it comes\". This is the frame_id parameter. The node that will published the data of the LIDAR shall publish them with the right frame_id, otherwise the TF tree will not be able to link all the TF together.</p> <p>Documentation about frames and transformations can be found there :</p> <ul> <li>tf2</li> </ul>","tags":["coding","ros"]},{"location":"coding/rust/index.html","title":"Rust","text":"","tags":["coding"]},{"location":"coding/rust/index.html#introduction","title":"Introduction","text":"<p>A language empowering everyone to build reliable and efficient software.</p> <ul> <li>Performance - Rust is blazingly fast and memory-efficient: with no runtime or garbage collector, it can power performance-critical services, run on embedded devices, and easily integrate with other languages.</li> <li>Reliability - Rust's rich type system and ownership model guarantee memory-safety and thread-safety --- enabling you to eliminate many classes of bugs at compile-time.</li> <li>Productivity - Rust has great documentation, a friendly compiler with useful error messages, and top-notch tooling --- an integrated package manager and build tool, smart multi-editor support with auto-completion and type inspections, an auto-formatter, and more.</li> </ul>","tags":["coding"]},{"location":"coding/rust/index.html#cheatsheets","title":"Cheatsheets","text":"<ul> <li>Rust Cheatsheet</li> <li>cheats.rs</li> <li>Cargo Cheatsheet</li> <li>Rust container Cheatsheet</li> <li>quickref Rust</li> <li>phaiax Rust Cheatsheet</li> <li>Nice to Know CLI Tools - Many of them are written in rust</li> </ul>","tags":["coding"]},{"location":"coding/rust/index.html#references","title":"References","text":"<ul> <li>Rust</li> </ul>","tags":["coding"]},{"location":"coding/rust/index.html#libraries","title":"Libraries","text":"<ul> <li>crates.io - Official Rust Libraries</li> <li>lib.rs - Unofficial Rust Libraries</li> <li>libraries.io Rust</li> </ul>","tags":["coding"]},{"location":"coding/rust/index.html#documentation","title":"Documentation","text":"<ul> <li>Rust Book</li> <li>Rust Cargo</li> <li>Rust @ DevDocs</li> </ul>","tags":["coding"]},{"location":"coding/rust/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding"]},{"location":"coding/rust/basic.html","title":"Basics","text":"","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#project-files","title":"Project Files","text":"<p>A cleaned project has the following source-files:</p> <pre><code>.\n\u251c\u2500\u2500 Cargo.lock    # auto-generated file, contains versions of dependencies\n\u251c\u2500\u2500 Cargo.toml    # project settings and dependencies\n\u2514\u2500\u2500 src           # folder for src files\n   \u251c\u2500\u2500 hello      # generated binary\n   \u2514\u2500\u2500 main.rs    # source file\n</code></pre> <p>A run and documented project contains the following files:</p> <pre><code>.\n\u251c\u2500\u2500 Cargo.lock    # auto-generated file, contains versions of dependencies\n\u251c\u2500\u2500 Cargo.toml    # project settings and dependencies\n\u251c\u2500\u2500 src           # folder for src files\n\u2502  \u251c\u2500\u2500 hello      # generated binary\n\u2502  \u2514\u2500\u2500 main.rs    # source file\n\u2514\u2500\u2500 target        # contains binaries, object files\n   \u251c\u2500\u2500 debug      #\n   \u251c\u2500\u2500 release    #\n   \u2514\u2500\u2500 doc        # project documentation static html files\n</code></pre>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#cargotoml-file","title":"<code>Cargo.toml</code> file","text":"<p>The Cargo.toml file is the main entry point for Cargo when building and managing a Rust project. It contains information about the packages that your project depends on, the version of Rust you're using, and any other configuration options that are required to build and run your project.</p> <pre><code># The name of the project\n[package]\nname = \"my-rust-project\"\n\n# The version of the project, following Semantic Versioning (SemVer)\nversion = \"0.1.0\"\n\n# List of authors, with their name and email address\nauthors = [\n    \"Your Name &lt;you@example.com&gt;\",\n    \"Another Author &lt;another@example.com&gt;\",\n]\n\n# A brief description of the project\ndescription = \"A Rust project to demonstrate the structure of a Cargo.toml file\"\n\n# The repository URL for the project, if it is hosted on a version control system\nrepository = \"https://github.com/yourusername/my-rust-project\"\n\n# The license that the project is released under\nlicense = \"MIT\"\n\n# A list of dependencies for the project, with version constraints\n[dependencies]\nserde = \"1.0\"\nreqwest = \"0.10.8\"\nimage = { version = \"0.24\", default-features = false, features = [\"jpeg\"] }\n\n# A list of build dependencies for the project, with version constraints\n# Build dependencies are only used when building the project, not when running it\n[build-dependencies]\nclippy = \"0.0.183\"\n\n# A list of targets for the project, specifying the architecture and other configuration options\n# Targets are used to build the project for different architectures and configurations\n[target.'cfg(target_arch = \"x86_64\")'.dependencies]\nnum_cpus = \"1.12.0\"\n\n# A list of dev-dependencies for the project, with version constraints\n# Dev-dependencies are only used when developing the project, not when building or running it\n[dev-dependencies]\ntokio = \"0.2.21\"\n</code></pre>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#dependencies-semver","title":"dependencies SemVer","text":"<p>SemVer is the Semantic Versioning used to define dependency versions to be used.</p> <p>For Example <code>0.8.5</code> allows for a version at least <code>0.8.5</code> but below <code>0.9.0</code>.</p> <p>Dependencies can be updated to the last allowed version with:</p> <pre><code>cargo update\n</code></pre>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#install-crate","title":"Install crate","text":"<pre><code>cargo add &lt;cratename&gt;\n</code></pre> <pre><code>to use `cargo add` you need to install it first with: `cargo install cargo-edit`\n</code></pre>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#crates","title":"crates","text":"<p>A crate is a collection of Rust source files.</p> <ul> <li>binary crate - is an executable</li> <li>library crate - code intended to use by other programs</li> </ul>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/basic.html#statements-vs-expression","title":"Statements vs Expression","text":"<p>Rust is an expression-based language.</p> <ul> <li>Expression evaluate to a result value.</li> <li>Statements are instructions that perform some action and do not return a value</li> <li>Expression delimiter by the <code>;</code> - Called expression statement</li> <li>Binding a name to a value with the <code>=</code> - Called declaration statement</li> <li>Type declarations, which include the <code>fn</code>, <code>struct</code> and <code>enum</code> keywords - Called declaration statement</li> </ul> <pre><code>let y = {\n  let x = 3;\n  x+1\n};\n\nlet x = 3;  // Statement doesn't return something\n\nfn add(x:i32) -&gt; i32 {\n  x\n}\n</code></pre>","tags":["coding","rust","cargo","cargo add","cargo bundle"]},{"location":"coding/rust/concepts.html","title":"Concepts","text":"","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#ownership","title":"Ownership","text":"<p>In Rust, ownership is a key concept that helps to ensure memory safety and eliminate data races at compile time. Every value in Rust has a variable that owns it, and there can only be one owner at a time. When the owner goes out of scope, the value is dropped and its memory is automatically freed.</p>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#ownership-rules","title":"Ownership Rules","text":"<ul> <li>Each value in Rust has an owner</li> <li>There can only be one owner at a time</li> <li>When the owner goes out of scope, the value will be dropped</li> </ul>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#examples","title":"Examples","text":"<pre><code>{\n  let s = \"hello\"\n}\n// s no longer in scope\n</code></pre> <p>Multiple variables interact differently. Static types the assignation copies the value. They have a fixed size and live therefore on the Stack memory.</p> <pre><code>let x = 5;   // binds 5 to x\nlet y = x;   // copies the values\n\n// both contain the value 5\n</code></pre> <p>With dynamic types the assignation moves the ownership.</p> <pre><code>let s1 = String::from(\"hello\");\nlet s2 = s1;\n</code></pre> <p>This is represented in the picture below:</p> <p>Figure 1: Ownership on String types</p>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#ownership-and-functions","title":"Ownership and Functions","text":"<pre><code>fn main() {\n  let s = String::from(\"hello\"); // s comes into scope\n  takes_ownership(s);            // s value moves into the function\n                                 // s is no longer valid here\n\n let x = 5;                      // x comes into scope\n makes_copy(x);                  // x would move into the function\n                                 // x is i32 and is copied,\n                                 // x and can further be used\n} // Here, x goes out of scope, then s.\n  // However, because s value was moved, nothing special happens.\n\nfn takes_ownership(some_string: String) { // some_string comes into scope\n  println!(\"{some_string}\");\n} // Here, some_string goes out of scope and `drop` is called.\n  // The backing memory is freed.\n\nfn makes_copy(some_integer: i32) { // some_integer comes into scope\n  println!(\"{some_integer}\");\n} // Here, some_integer goes out of scope. Nothing special happens.\n</code></pre>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#return-values-and-scope","title":"Return Values and Scope","text":"<pre><code>fn main() {\n  let s1 = gives_ownership(); // gives_ownership moves its return value into s1\n\n  let s2 = String::from(\"hello\");    // s2 comes into scope\n  let s3 = takes_and_gives_back(s2); // s2 is moved into takes_and_gives_back\n                                     // takes_and_gives_back moves its return value into s3\n} // s3 goes out of scope and is dropped.\n  // s2 was moved, so nothing happens.\n  // s1 goes out of scope and is dropped.\n\n// gives_ownership will move its return value into the function that calls it\nfn gives_ownership() -&gt; String {\n  let some_string = String::from(\"yours\"); // some_string comes into scope\n  some_string                              // some_string is returned and\n}                                          // moves out to the calling function\n\n// This function takes a String and returns a String.\nfn takes_and_gives_back(a_string: String) -&gt; String { // a_string comes into scope\n  a_string  // a_string is returned and moves out to the calling function\n}\n</code></pre> <p>Returning ownership of parameters</p> <pre><code>fn main() {\n  let s1 = String::from(\"hello\");\n  let (s2, len) = calculate_length(s1);\n  println!(\"The length of '{s2}' is {len}.\");\n}\n\nfn calculate_length(s: String) -&gt; (String, usize) {\n  let length = s.len(); // len() returns the length of a String\n  (s, length)           // return parameters ownership and length\n}\n</code></pre>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#references-and-borrowing","title":"References and Borrowing","text":"<p>Borrowing is a concept that allows a function or code block to temporarily access a value owned by another variable, without taking ownership of it. Borrowing enables code to be more flexible and avoids unnecessary copying of large data structures.</p> <p>Borrowing has some rules in Rust:</p> <ul> <li>You can have either one mutable reference or any number of immutable references to a particular piece of data in a particular scope, but not both at the same time.</li> <li>References must salways be valid.</li> <li>You can't modify the data that is being borrowed through an immutable reference.</li> <li>You can modify the data that is being borrowed through a mutable reference, but you can't have any other references to the data in the same scope.</li> </ul> <p>A reference is like an pointer to the pointer of the data. The data is still owned by some other variable. Unlike a pointer a reference points always to a valid value for the life of that reference.</p> <pre><code>fn main() {\n  let s1 = String::from(\"hello\");\n  let len = calculate_length(&amp;s1);\n  println!(\"The length of '{s1}' is {len}.\");\n}\n\n// s doesn't have ownership, therefore the variable is not dropped.\nfn calculate_length(s: &amp;String) -&gt; usize {\n  s.len()\n}\n</code></pre> <p>Figure 2: Reference on a string</p> <p>Note</p> <p><code>&amp;</code> is referencing and <code>*</code> is dereferencing. The action of creating a reference is called borrowing.</p>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#mutable-references","title":"Mutable References","text":"<p>A mutable reference allows to modify a borrowed value</p> <pre><code>fn main() {\n  let mut s = String::from(\"hello\");\n\n  change(&amp;mut s);\n\n  let r1 = &amp;s; // no problem\n  let r2 = &amp;s; // no problem\n  println!(\"{} and {}\", r1, r2);\n  // r1 and r2 are no longer used after this point\n} // s goes out of scope and is dropped. Nothing else happens.\n\nfn change(some_string: &amp;mut String) {\n  some_string.push_str(\", world\");\n}\n</code></pre> <p>Warning</p> <p>A mutable reference cannot have another reference to that value.</p> <p>The first mutable reference need to go out of scope in order to create a new ones</p> <pre><code>let mut s = String::from(\"hello\");\n{\n  let r1 = &amp;mut s;     // r1 is a mutable reference to s\n}                      // r1 goes out of scope here\nlet r2 = &amp;mut s;        // r2 is a new mutable reference to s\n</code></pre>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#reference-rules","title":"Reference Rules","text":"<ul> <li>At any given time, either one mutable reference or any number of immutable references.</li> <li>References must always be valid.</li> </ul>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#lifetimes","title":"Lifetimes","text":"<p>Lifetimes determines how long a piece of memory is valid. A lifetime is a set of scopes during which a reference to an object is valid. The Rust compiler analyzes lifetimes to ensure that references do not outlive the objects they refer to or create data races.</p> <pre><code>fn print_string(s: &amp;str) {\n  println!(\"{}\", s);\n}\n</code></pre>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#deref-coercion","title":"Deref coercion","text":"<p>Dref can happen automatically for types implementing the deref trait. Converts a reference from one type to another type.</p> <p>Rust does deref coercion in three cases:</p> <ul> <li>From <code>&amp;T</code> to <code>&amp;U</code> when <code>T: Deref&lt;Target=U&gt;</code></li> <li>From <code>&amp;mut T</code> to <code>&amp;mut U</code> when <code>T DerefMut&lt;Target=U&gt;</code></li> <li>From <code>&amp;mut T</code> to <code>&amp;U</code> when <code>T: Deref&lt;Target=U&gt;</code></li> </ul>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/concepts.html#interior-mutability","title":"Interior mutability","text":"<p>Interior mutability is a pattern that allows for mutation of a value even when it is considered immutable by the compiler. This can be useful in situations where you need to mutate a value that is shared across multiple parts of the program, without requiring it to be wrapped in a mutex or refcell.</p> <p>Interior mutability is typically achieved through the use of types that provide interior mutability guarantees, such as Cell, RefCell, and Mutex. These types allow for safe mutation of a value by encapsulating it in a container that provides a safe interior reference to the value.</p> <pre><code>use std::cell::Cell;\n\nfn main() {\n  let x = Cell::new(5);\n  let y = x.get();\n  x.set(y + 1);\n  println!(\"x is now {}\", x.get());\n}\n</code></pre>","tags":["coding","rust","concepts","ownership","borrowing","lifetimes"]},{"location":"coding/rust/data_types.html","title":"Data Types","text":"","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#scalar-types","title":"Scalar Types","text":"<p>Represents a single value</p>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#integer-types","title":"Integer Types","text":"<ul> <li>signed range: \\(-(2^{n-1}) \\rightarrow 2^{n-1}-1\\)</li> <li>unsigned range: \\(0 \\rightarrow 2^n-1\\)</li> </ul> <p>By default <code>i32</code> is used</p> Type Description Range <code>i8</code> Integer <code>8 bit</code> signed value <code>-128</code> to <code>127</code> <code>i16</code> Integer <code>16 bit</code> signed value <code>-32'768</code> to <code>32'767</code> <code>i32</code> Integer <code>32 bit</code> signed value <code>-2'147'483'648</code> to <code>2'147'483'647</code> <code>i64</code> Integer <code>64 bit</code> signed value <code>-9'223'372'036'854'775'808</code> to <code>9'223'372'036'854'775'807</code> <code>i128</code> Integer <code>128 bit</code> signed value <code>-170'141'183'460'469'231'731'687'303'715'884'105'728</code> to <code>170'141'183'460'469'231'731'687'303'715'884'105'727</code> <code>isize</code> Integer architecture dependend signed value depends on architecture <code>u8</code> Integer <code>8 bit</code> unsigned value <code>0</code> to <code>255</code> <code>u16</code> Integer <code>16 bit</code> unsigned value <code>0</code> to <code>65'535</code> <code>u32</code> Integer <code>32 bit</code> unsigned value <code>0</code> to <code>4'294'967'295</code> <code>u64</code> Integer <code>64 bit</code> unsigned value <code>0</code> to <code>18'446'744'073'709'551'615</code> <code>u128</code> Integer <code>128 bit</code> unsigned value <code>0</code> to <code>340.282'366'920'938'463e36</code> <code>usize</code> Integer architecture dependend unsigned value depends on architecture","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#literals","title":"Literals","text":"<p>Can be separated by an <code>_</code> for easier read.</p> Number literal Example Decimal <code>98_222</code> Hex <code>0xff</code> Octal <code>0o77</code> Binary <code>0b1111_0000</code> Byte (<code>u8</code> only) <code>b'A'</code>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#floating-point-types","title":"Floating-Point Types","text":"Type Description Range Approximation Precision <code>f32</code> 32-bit IEEE 754 floating point \\(\\pm 1.4 \u00d7 10^{-45}\\) to \\(\\pm3.4 \u00d7 10^{38}\\) \\(\\approx 6-7\\) decimal digits <code>f64</code> 64-bit IEEE 754 floating point \\(\\pm5.0 \u00d7 10^{-324}\\) to \\(\\pm1.7 \u00d7 10^{308}\\) \\(\\approx 15-16\\) decimal digits <pre><code>let x = 2.0;      // f64 double precision\nlet y: f32 = 3.0; // f32 single precision\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#bool-boolean-type","title":"<code>bool</code> Boolean Type","text":"<p>Used in conditionals. One bytes sized.</p> <pre><code>let t = true;        // type inferred\nlet f: bool = false; // with explicit type annotation\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#char-character-type","title":"<code>char</code> Character Type","text":"<pre><code>let c = 'z';               // type inferred\nlet z: char = 'Z';         // with explicit type annotation\nlet heart_eyed_cat = '\ud83d\ude3b'; // utf-8 support\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#compound-types","title":"Compound Types","text":"","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#type-tuple","title":"Type Tuple","text":"<p>Grouping together different values of different types.</p> <pre><code>// create a tuple\nlet tup: (i32, f64, u8) = (50, 6.4, 1);\n\n// destructing a tuple\nlet (x,y,z) = tup;\n\n// access a single element\nlet w = tup.0;            // 50\n\n// tuple without any value is unit\n// represent empty value, empty return type\n()\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#array-types","title":"Array Types","text":"<p>Arrays are fixed size and live in the stack</p> <p>Declaring arrays</p> <pre><code>// declare an array\nlet arr = [1, 2, 3, 4, 5];\nlet arr = [\"Monday\", \"Thuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\n// declare an array with its type\nles arr : [&lt;type&gt;;&lt;nbrElements&gt;] = [1, 2, 3, 4, 5];\nles arr : [i32;5] = [1, 2, 3, 4, 5];\n\n// initialise array with same values\nlet arr = [&lt;initvalue&gt;; &lt;nbrElements&gt;]\nlet arr = [3; 5];  // equal to let arr = [3, 3, 3, 3, 3];\n</code></pre> <p>Accessing arrays</p> <pre><code>// unmutable array\nlet arr = [1, 2, 3, 4, 5];\nlet first = arr[0];            // 1\nlet second = arr[1];           // 2\nlet last = arr[arr.len(-1)];   // 5\n\nlet slice = &amp;arr[1..4]         // [2, 3, 4]\nlet slice = &amp;arr[1..=4]        // [2, 3, 4, 5]\n\n// mutable array\nlet mut arr = [1, 2, 3, 4, 5];\nlet slice = &amp;mut arr[1..4]     // [2 ,3 ,4]\nslice[0] = 6                   // [6, 3, 4]\n</code></pre> <p>Array functions</p> <pre><code>let size = arr.len()     // get length of an array\nprintln!(\"{:?}\", arr);   // print array with Debug trait\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#string-type","title":"String Type","text":"<p>String is a dynamic datatype which can grow and shrink over time. It hold multiple <code>char &lt;char&gt;</code> The data itself is stored in the <code>heap</code> and the String representation <code>ptr</code>, <code>length</code>and <code>capacity</code>is stored in the <code>stack</code> memory.</p>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#string-literal","title":"String Literal","text":"<pre><code>let s = String::from(\"hello\");\ns.push_str(\", world!\");\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#slice-types","title":"Slice Types","text":"<pre><code>let a = [1, 2, 3, 4, 5];\nlet slice = &amp;a[1..3];\nassert_eq!(slice, &amp;[2, 3])\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#string-slices","title":"<code>String</code> slices","text":"<p>Reference to part of a string- It contains a pointer to that start of the data and a length.</p> <pre><code>let s = String::from(\"hello world\");\n\nlet hello = &amp;s[0..5];   // referencing word hello\nlet world = &amp;s[6..11];  // referencing word world\n</code></pre> <p>Figure 1: String slice reference</p> <pre><code>let s = String::from(\"hello\");\nlet len = s.len();\n\n// trailing index can be dropped if it referes to the last element\nlet slice = &amp;s[3..len];\nlet slice = &amp;s[3..];\n\n// preceding index can be dropped if it referes to the 0 element\nlet slice = &amp;s[0..len];\nlet slice = &amp;s[..];\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#enum","title":"<code>enum</code>","text":"<p><code>enum</code> creates a type which can hold one of different variants.</p> <pre><code>enum SimpleEnum {\n  FirstVariant,\n  SecondVariant,\n  ThirdVariant,\n}\n\nenum ComplexEnum {\n  Nothing,\n  Something(u32),\n  LotsOfThings {\n    usual_struct_stuff: bool,\n    blah: String,\n  }\n}\n</code></pre> <p><code>enum</code> also can hold values</p> <pre><code>enum IpAddrKind {\n  V4(u8, u8, u8, u8), // enum variants with list u8 data\n  V6(String),         // enum variants with string data\n}\n\nenum Message {\n  Quit,                       // variant with no data\n  Move { x: i32, y: i32 },    // variant with anonymous struct\n  Write(String),              // variant with string\n  ChangeColor(i32, i32, i32), // variant with three integers\n}\nimpl Message {\n  fn some_function() {\n    println!(\"some text\")\n  }\n}\n\nfn main() {\n    let localhost = IpAddrKind::V4(127, 0, 1, 1);\n}\n</code></pre> <p><code>match</code> goes well with <code>enums</code> because all variants need to be matched.</p> <pre><code>enum Coin {\n  Rappen,\n  Franken,\n  Zweif\u00e4nkler,\n  F\u00fcnfliber,\n}\n\nfn value in rappen(coin: Coin) -&gt; u8 {\n  match coin {\n    Coin::Rappen =&gt; 5,\n    Coin::Franken =&gt; 100,\n    Coin::Zweifr\u00e4nkler =&gt; 200,\n    Coin::F\u00fcnfliber =&gt; 500,\n  }\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#option","title":"<code>Option</code>","text":"<p><code>Option</code> is also an <code>enum</code>of a generic types. It contains <code>None</code> or <code>Some()</code>. It is included by default in the scope.</p> <pre><code>enum Option&lt;T&gt; {\n  None,            // no value\n  Some(T),         // some value\n}\n</code></pre> <p>Examples of <code>Optional</code> types.</p> <pre><code>les some_number = Some(5);             // type Option&lt;i32&gt; inferred\nles some_string = Some(\"a string\");    // type Option&lt;&amp;str&gt; inferred\nles absent_number: Option&lt;i32&gt; = None; // type can't be inferred\n</code></pre> <p>To extract a value from an <code>Optional</code> all possible variants needs to be covered .</p> <pre><code>let x: i8 = 5;\nlet y: Option&lt;i8&gt; = Some(5);\n\n// use value of y if there is Some otherwise use default value\nlet sum = x + y.unwrap_or(0);\n</code></pre> <pre><code>fn plus_one(x: Option&lt;i32&gt;) -&gt; Option&lt;i32&gt; {\n  match x {\n    None =&gt; None,\n    Some(i) =&gt; Some(i+1),\n  }\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#result","title":"<code>Result</code>","text":"<p><code>Result</code> is also an <code>enum</code> of generic types. It contains a <code>Ok</code> value or an <code>Err</code>.</p> <pre><code>enum Result&lt;T, E&gt; {\n  Ok(T),\n  Err(E),\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#struct","title":"<code>struct</code>","text":"<p>Block of data grouped together. Can derive traits and implement methods or associated methods</p> <pre><code>#[derive(Debug)] // basic debug trait implementation\nstruct Rectangle {\n  width: u32,\n  height: u32\n}\n\n// multiple impl possible\nimpl Rectangle {\n  // Method (function tied to an instance of a struct)\n  fn area(&amp;self) -&gt; u32 {\n    self.width * self.height\n  }\n\n  fn can_hold(&amp;self, rectangle: &amp;Rectangle) -&gt; bool {\n    let area1 = self.area();\n    let area2 = rectangle.area();\n\n    return area1 &gt; area2;\n  }\n}\nimpl Rectangle {\n  // associated method (missing the &amp;self, not tied to an instance of a struct\n  fn square(size: u32) -&gt; Self {\n    Rectangle {\n      width: size,\n      height: size\n    }\n  }\n}\n\nfn main() {\n  let rect = Rectangle {\n    width: 30,\n    height: 50,\n  };\n  let rect1 = Rectangle {\n    width: 20,\n    height: 40,\n  };\n  let rect2 = Rectangle {\n    width: 40,\n    height: 50,\n  };\n  let _rect3 = Rectangle::square(30);\n\n  println!(\"rect can hold rect1: {}\", rect.can_hold(&amp;rect1));\n  println!(\"rect can hold rect2: {}\", rect.can_hold(&amp;rect2));\n  println!(\"rect: {:?}\", rect); // debug print\n  println!(\"rect: {:#?}\", rect); // debug print with line fix\n\n  println!(\"The width of rect is {} pixels\", rect.width);\n  println!(\"The area of rect is {} pixels\", rect.area());\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#collections","title":"Collections","text":"<p>Dynamic datatypes (partly shown above) stored in the heap and can shrink and grow over time.</p>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#vec-vector","title":"<code>vec</code> Vector","text":"<p><code>vec</code> can store only one type of elements</p> <p>Creating vector</p> <pre><code>let v:Vec&lt;i32&gt; = Vec::new(); // type can't be inferred and needs to be explicitaly mentioned\nv.push(1);\nv.push(2);\nv.push(3);\n\nlet v2 = vec![1,2,3];        // type can be inferred. the vec! macro allows initilising the vector from start\n</code></pre> <p>Accessing vector elements</p> <pre><code>let v = vec![1,2,3,4,5];\n\n// accessing an existing element\nlet third: = &amp;v[2];\nprintln!(\"The third element is {}\", third);\n\n// accessing inexisting element\nlet twenty: = &amp;v[20];  // possible but out of bound error during runtime\n\n// using get method\nmatch v.get(20) {\n  Some(twenty) =&gt; println!(\"The twenty element is {}\", twenty),\n  None =&gt; println!(There is no twenty element)\n}\n\n// iterating over all elements read only\nfor i in &amp;v {\n  println!(\"{}\", i)\n}\n\n// iterating over all elements\nfor i in &amp;mut v {\n  *i += 50;\n}\n</code></pre> <p>For a vector to represent multiple types at the same time a enum can be used</p> <pre><code>enum SpreadsheetCell {\n  Int(i32),\n  Float(f64),\n  Text(String),\n}\n\nlet row = vec![\n  SpreadsheetCell::Int(3),\n  SpreadsheetCell:Text(String::from(\"blue\")),\n  SpreadsheetCell::Float(10.12),\n];\n\nmatch &amp;row[1] {\n  SpreadsheetCell::Int(i) =&gt; println!(\"{}\", i),\n  _ =&gt; println!(\"Not a integer!\")\n};\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#string","title":"<code>String</code>","text":"<p>Are encoded at UTF-8 encoded bytes. Each character can have between 1-3 bytes.</p> <pre><code>// creating a string\nlet s1 = String::new();                    // String type\nlet s2 = \"initial content\";                // &amp;str type\nlet s3 = s2.to_string();                   // String type\nlet s4 = String::from(\"initial contents\"); // String type\n\n// appending to a string\nlet mut s = String::from(\"foo\");\ns.push_str(\"bar\");    // push string slice\ns.push('!');          // push char\n\nlet s1 = String::from(\"Hello, \");\nlet s2 = String::from(\"world!\");\nlet s3 = format!(\"{}{}\", s1, s2);\n</code></pre> <p>Indexing into a String</p> <pre><code>let namaste: String = Strong::from(\u201c\u0928\u092e\u0938\u094d\u0924\u0947\u201d);\n\n// bytes representation\n// [224, 164, 168, 224, 164, 174, 224, 164, 184, 224, 165, 141, 224, 164, 164, 224, 165, 135]\nfor b in \u201c\u0928\u092e\u0938\u094d\u0924\u0947\u201d.bytes() {\n  println!(\"{}\", b);\n}\n\n// char representation\n// ['\u0928', '\u092e', '\u0938', '\u094d', '\u0924', '\u0947']\nfor c in \u201c\u0928\u092e\u0938\u094d\u0924\u0947\u201d.chars() {\n  println!(\"{}\", c);\n}\n\n// grapheme clusters\n// [\"\u0928\", \"\u092e\", \"\u0938\u094d\", \"\u0924\u0947\"]\nuse unicode_segmentation::UnicodeSegmentation;\n\nfor g in \u201c\u0928\u092e\u0938\u094d\u0924\u0947\u201d.graphemes(true) {\n  println!(\"{}\", g);\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#hashmaps","title":"<code>HashMap</code>'s","text":"<p>Allows to store key-value pairs</p> <pre><code>use std:collection::HashMap\n\nlet blue = String::from(\"Blue\");\nlet yellow = String::from(\"Yellow\");\n\nlet mut scores = HasMap::new();\n\nscores.insert(blue, 10); // ownership of Strings are moved into the HashMap\nscores.insert(yellow, 50);\n\n// accessing and element\nlet team_name = String::from(\"Blue\");\nlet score = scores.get(&amp;team_name);\n\n// iterating over HashMap\nfor (key, value) in &amp;scores {\n  println!(\"{}: {}\", key, value);\n}\n</code></pre> <p>Updating the HashMap</p> <pre><code>let mut scores = HashMap::new();\n\nscores.insert(String::from(\"Blue\"), 10);\nscores.insert(String::from(\"Yellow\"), 20);\n\n// write an entry if None exist\nscores.entry(String::from(\"Yellow\")).or_insert(30);\nscores.entry(String::from(\"Yellow\")).or_insert(40);\n</code></pre> <p>Example word count</p> <pre><code>let text = \"Hello world wonderful world\";\n\nlet mut map = HashMap::new();\n\nfor word in text.split_whitespace() {\n  let count = map.entry(word).or_insert(0);\n  *count += 1;\n}\n\nprintln!(\"{:?}\", map);\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#smart-pointers","title":"Smart Pointers","text":"<p>Smart Pointers are datastructure that act like a pointer but have added functionalities added on. Smart Pointers own the data which they point to.</p> <p>Strings and Vectors are Smart Pointers. All Smart Pointers implement the two traits:</p> <ul> <li><code>deref</code> - Allows instances of Smart Pointer struct accessed as references</li> <li><code>drop</code> - used if an instance of a Smart Pointer gets out of scope</li> </ul>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#box-smart-pointer","title":"<code>Box</code> Smart Pointer","text":"<p>On the stack a pointer is stored and pointing to some arbitary sized data on the heap. Box don't have many overhead.</p> <p>To be used for:</p> <ul> <li>Type were the exact type size can't be know at compile time</li> <li>Large amount of data and transfering the owernership without copying it.</li> <li>Own a value and want to implement a specific trait (this is a trait object)</li> </ul> <pre><code>fn main () {\n  let b = Box::new(5);\n  println!(\"b = {}\", b)\n} // Box b goes here out of scope and will be deallocated\n</code></pre> <p>Example application, recursive enum</p> <pre><code>// recursive enum\nenum List {\n  Cons(i32, Box&lt;List&gt;),\n  Nil,\n}\n\nuse List::{Cons, Nil}\n\nfn main() {\n  let list = Cons(1, Box::new(Cons(2, Box::new(Cons(3, Box::new(Nil))))));\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#reference-counting-rc-smart-pointer","title":"Reference Counting <code>Rc</code> Smart Pointer","text":"<p>For single value which has multiple owners. Keeps track the number of references to a value. Once zero the variable will get cleaned up. This example works only for single threaded programs:</p> <pre><code>use std::rc:Rc;\n\nenum List {\n  Cons(i32, Rc&lt;List&gt;),\n  Nil,\n}\n\nuse crate::List::{Cons, Nil};\n\nfn main() {\n  lat a = Rc::new(Cons(5, Rc::new(Cons(10, Rc::new(Nil)))));\n  println!(\"count after creating a = {}\", Rc::strong_count(&amp;a));\n  // two variants of cloning resp. increasing the reference counter\n  lat b = Cons(3, Rc::clone(&amp;a)); // add to refrerence counter\n  println!(\"count after creating b = {}\", Rc::strong_count(&amp;a));\n  {\n    lat c = Cons(4, a.clone());     // add to reference counter\n    println!(\"count after creating c = {}\", Rc::strong_count(&amp;a));\n  }\n  println!(\"count after c goes out of scope = {}\", Rc::strong_count(&amp;a));\n}\n</code></pre> <pre><code>count after creating a = 1\ncount after creating b = 2\ncount after creating c = 3\ncount after c goes out of scope = 2\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#refcell-smart-pointer","title":"<code>RefCell</code> Smart Pointer","text":"<p>Allows checking of the borrowing rules at runtime. Only possible to used in single threaded application. It allows multiple onwership to a data structure.</p> <p>It is important to note that using a RefCell can introduce a race condition if the vector is modified by another thread while you are trying to modify it. To avoid this, you should only use a RefCell in a safe context, such as a single-threaded application or a thread-safe function.</p> <pre><code>use std::cell::RefCell;\n\nfn main() {\n  let mut strings = vec![String::from(\"Hello\"), String::from(\"World\")];\n\n  let ref_cell = RefCell::new(&amp;mut strings);\n\n  *ref_cell.borrow_mut()[0] = String::from(\"Goodbye\");\n\n  println!(\"{:?}\", strings);\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/data_types.html#operations","title":"Operations","text":"<pre><code>fn main() {\n  // addition\n  let sum = 5 + 10;\n\n  // subtraction\n  let difference = 95.5 - 4.3;\n\n  // multiplication\n  let product = 4 * 30;\n\n  // division\n  let quotient = 56.7 / 32.2;\n  let truncated = -5 / 3;     // Results in -1\n\n  // remainder\n  let remainder = 43 % 5;\n}\n</code></pre>","tags":["coding","rust","datatypes"]},{"location":"coding/rust/design_patterns.html","title":"Design Patterns","text":"<p>List of common and idiomatic design patterns in Rust. These patterns could be found in mutliple books and articles and also in the Unofficial Rust Book</p>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#idioms","title":"Idioms","text":"","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#safely-unwrap-option-and-result","title":"Safely Unwrap <code>Option</code> and <code>Result</code>","text":"<p>Use <code>unwrap_or</code> to provide a default value when unwrapping an <code>Option</code> or <code>Result</code>.</p> <pre><code>let x = Some(\"value\");\nlet y = x.unwrap_or(\"default\");\nassert_eq!(y, \"value\");\n\nlet x = None;\nlet y = x.unwrap_or(\"default\");\nassert_eq!(y, \"default\");\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#use-if-let-to-unwrap-option-and-result","title":"Use <code>if let</code> to Unwrap <code>Option</code> and <code>Result</code>","text":"<p>Use <code>if let</code> to unwrap an <code>Option</code> or <code>Result</code> and execute code if the value is <code>Some</code> or <code>Ok</code>.</p> <pre><code>let x = Some(\"value\");\nif let Some(value) = x {\n    assert_eq!(value, \"value\");\n}\n\nlet x = None;\nif let Some(value) = x {\n    assert_eq!(value, \"value\");\n}\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#use-match-to-unwrap-option-and-result","title":"Use <code>match</code> to Unwrap <code>Option</code> and <code>Result</code>","text":"<p>Use <code>match</code> to unwrap an <code>Option</code> or <code>Result</code> and execute code based on the value.</p> <pre><code>let x = Some(\"value\");\nmatch x {\n    Some(value) =&gt; assert_eq!(value, \"value\"),\n    None =&gt; panic!(\"Expected Some\"),\n}\n\nlet x = None;\nmatch x {\n    Some(value) =&gt; assert_eq!(value, \"value\"),\n    None =&gt; assert!(true),\n}\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#borrowed-types-for-arguments","title":"Borrowed Types for Arguments","text":"<p>Preferr borrowed type over borrowing the owned type.</p> <ul> <li><code>&amp;str</code> over <code>&amp;String</code></li> <li><code>&amp;[T]</code> over <code>&amp;Vec&lt;T&gt;</code></li> <li><code>&amp;T</code> over <code>&amp;Box&lt;T&gt;</code></li> </ul> <pre><code>// this\nfn three_vowels(word: &amp;str) -&gt; bool {}\n// instead of this\nfn three_vowels(word: &amp;String) -&gt; bool {}\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#use-format-to-work-with-strings","title":"Use <code>format!</code> to work with Strings","text":"<pre><code>let name = \"John\";\nlet greeting = format!(\"Hello, {}!\", name);\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#constructor-default-constructor","title":"Constructor &amp; Default Constructor","text":"<ul> <li>Constructor - Rust does not have a constructor method like other languages. Instead, you can use an associated function <code>new</code>to create an object.</li> <li>Default Constructor - Can be implemented with the <code>Default</code> trait.</li> </ul> <pre><code>pub struct Second {\n  value: u64,\n}\n\nimpl Second {\n  // Constructs a new instance of [`Second`].\n  // Note this is an associated function - no self.\n  pub fn new(value: u64) -&gt; Self {\n    Self { value }\n  }\n\n  /// Returns the value in seconds.\n  pub fn value(&amp;self) -&gt; u64 {\n    self.value\n  }\n}\n\nimpl Default for Second {\n    fn default() -&gt; Self {\n        Self { value: 0 }\n    }\n}\n</code></pre> <p>The Default constructor can also be <code>derived</code> is all fields in the struct implement the <code>Default</code> trait.</p> <pre><code>#[derive(Default, Debug, PartialEq)]\npub struct Time {\n    seconds: u64,\n    minutes: u64,\n    hours: u64,\n}\n\nimpl Time {\n    /// Returns the value in seconds.\n    pub fn get_time(&amp;self) -&gt; (u64, u64, u64) {\n        (self.seconds, self.minutes, self.hours)\n    }\n}\n\nfn main() {\n    // construct a new instance with default values\n    let mut time_1 = Time::default();\n    // do something with conf here\n    time_1.seconds = 10;\n\n    // partial initialization with default values, creates the same instance\n    let time_2 = Time {\n        seconds: 10,\n        ..Default::default()\n    };\n    assert_eq!(time_1, time_2);\n}\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#deconstructor","title":"Deconstructor","text":"<p>Rust does not offer a deconstructor method like other languages. Instead, you can implement the <code>drop</code> function to perform cleanup when the object goes out of scope.</p> <pre><code>struct Foo;\n\n// Implement a destructor for Foo.\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        println!(\"exit\");\n    }\n}\n\nfn main() {\n    {\n      let var = Foo;\n    } // var dropped here\n}\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#use-iterators-rather-then-loops","title":"Use Iterators rather then loops","text":"<p>Iterators in Rust are lazy and can prevent unnecessary memory allocations.</p> <p>Indead of: </p><pre><code>let mut squares = Vec::new();\nfor i in 0..1_000_000 {\n    squares.push(i * i);\n}\n</code></pre> <p>Do this: </p><pre><code>let squares: Vec&lt;_&gt; = (0..1_000_000).map(|i| i * i).collect();\n</code></pre>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/design_patterns.html#use-enums-rather-than-bool","title":"Use <code>enum</code>s rather than <code>bool</code>","text":"<p>It\u2019s often considered good practice to use custom types (such as enum) instead of raw bool values. This makes the code more expressive, self-documenting, and type-safe.</p> <pre><code>fn set_user_status(active: bool) {\n    if active {\n        println!(\"User is active\");\n    } else {\n        println!(\"User is inactive\");\n    }\n}\nfn main() {\n    let status = true;\n    set_user_status(status);\n}\n</code></pre> <p></p><pre><code>enum UserStatus {\n    Active,\n    Inactive,\n}\n\nfn set_user_status(status: UserStatus) {\n    match status {\n        UserStatus::Active =&gt; println!(\"User is active\"),\n        UserStatus::Inactive =&gt; println!(\"User is inactive\"),\n    }\n}\n\nfn main() {\n    let status = UserStatus::Active;\n    set_user_status(status);\n}\n</code></pre> Benefits of Using an <code>enum</code> Instead of <code>bool</code> <ol> <li>Better Readability \u2013 UserStatus::Active is more meaningful than true.</li> <li>Prevents Misuse \u2013 You cannot accidentally pass a bool that has an unclear meaning.</li> <li>Extensibility \u2013 You can easily add more states, like Banned, PendingApproval, etc.</li> <li>Stronger Type Safety \u2013 The compiler prevents incorrect values from being passed.</li> </ol>","tags":["coding","rust","design patterns"]},{"location":"coding/rust/error_handling.html","title":"Error Handling","text":"<p>Rust provides robust mechanisms for handling errors through enums like <code>Result</code> and <code>Option</code>, emphasizing safety and clarity.</p>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#panic-macro","title":"<code>panic!()</code> Macro","text":"<p>The <code>panic!()</code> macro immediately terminates the program and outputs an error message. Use it sparingly, only in unrecoverable scenarios or during prototyping.</p> <pre><code>panic!(\"crash and burn\");\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#debugging-with-backtrace","title":"Debugging with Backtrace","text":"<p>Set the environment variable <code>RUST_BACKTRACE=1</code> to display a backtrace when a <code>panic!</code> occurs.</p>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#result-enum","title":"Result Enum","text":"<p>The Result enum is used for functions that can succeed or fail. It has two variants: - <code>Ok(T)</code> \u2014 success, containing a value. - <code>Err(E)</code> \u2014 error, containing an error value.</p> <pre><code>enum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#handling-result-with-match","title":"Handling Result with match","text":"<p>Use match to explicitly handle both <code>Ok</code> and <code>Err</code>.</p> <pre><code>use std::fs::File;\nuse std::io::ErrorKind;\n\nfn main() {\n    let f = File::open(\"hello.txt\");\n\n    let f = match f {\n        Ok(file) =&gt; file,\n        Err(error) =&gt; match error.kind() {\n            ErrorKind::NotFound =&gt; match File::create(\"hello.txt\") {\n                Ok(fc) =&gt; fc,\n                Err(e) =&gt; panic!(\"Problem creating the file: {:?}\", e),\n            },\n            other_error =&gt; panic!(\"Problem opening the file: {:?}\", other_error),\n        },\n    };\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#error-propagation","title":"Error Propagation","text":"<p>Error propagation allows errors to bubble up to the caller. You can manually propagate errors using match:</p> <pre><code>use std::fs::File;\nuse std::io::{self, Read};\n\nfn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let f = File::open(\"hello.txt\");\n\n    let mut f = match f {\n        Ok(file) =&gt; file,\n        Err(e) =&gt; return Err(e),\n    };\n\n    let mut s = String::new();\n\n    match f.read_to_string(&amp;mut s) {\n        Ok(_) =&gt; Ok(s),\n        Err(e) =&gt; Err(e),\n    }\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#the-operator","title":"The <code>?</code> Operator","text":"<p>The <code>?</code> operator simplifies error propagation by automatically returning errors. It works only in functions that return <code>Result</code> or <code>Option</code>.</p> <pre><code>use std::fs::File;\nuse std::io::{self, Read};\n\nfn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut f = File::open(\"hello.txt\")?;\n    let mut s = String::new();\n    f.read_to_string(&amp;mut s)?;\n    Ok(s)\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#chaining-with","title":"Chaining with ?","text":"<p>You can further simplify the code by chaining method calls. </p><pre><code>fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut s = String::new();\n    File::open(\"hello.txt\")?.read_to_string(&amp;mut s)?;\n    Ok(s)\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#unwrap-and-expect","title":"<code>unwrap</code> and <code>expect</code>","text":"<p>These methods are convenient but should be used sparingly, as they cause the program to panic on errors.</p>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#examples","title":"Examples","text":"<pre><code>// Returns the inner value if Some, panics if None\nOption::unwrap();\n\n// Returns the inner value if Ok, panics if Err\nResult::unwrap();\n\n// Returns the inner value if Some, or a default if None\nOption::unwrap_or(default);\n\n// Returns the inner value if Ok, or a default if Err\nResult::unwrap_or(default);\n\n// Returns the inner value if Ok, or computes a value from a closure if Err\nResult::unwrap_or_else(|err| handle_err(err));\n\n// Returns the inner value if Some, panics with a custom error message if None\nOption::expect(\"Custom panic message\");\n\n// Returns the inner value if Ok, panics with a custom error message if Err\nResult::expect(\"Custom panic message\");\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#best-practice","title":"Best Practice","text":"<p>Avoid using <code>unwrap</code> and <code>expect</code> in production code. Prefer safer alternatives like <code>unwrap_or</code>, <code>unwrap_or_else</code>, or proper error handling with <code>match</code>.</p>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#conversion-between-result-and-option","title":"Conversion Between Result and Option","text":"","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#ok-result-option","title":"<code>ok() (Result \u2192 Option)</code>","text":"<p>Converts a <code>Result&lt;T, E&gt;</code> into an <code>Option&lt;T&gt;</code>, discarding the error.</p> <pre><code>let opt: Option&lt;i32&gt; = Result::Ok(10).ok(); // Some(10)\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#ok_orerr-option-result","title":"<code>ok_or(err) (Option \u2192 Result)</code>","text":"<p>Converts an <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, using a provided error.</p> <pre><code>let res: Result&lt;i32, &amp;str&gt; = Some(10).ok_or(\"Missing value\"); // Ok(10)\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#transforming-errors-with-map_err","title":"Transforming Errors with <code>map_err</code>","text":"<p>The <code>map_err</code> method transforms the error <code>(E)</code> in a <code>Result</code> into another type while retaining the <code>Err</code> variant.</p> <p>Using <code>match</code></p> <pre><code>let res: Result&lt;i32, &amp;str&gt; = Ok(10);\n\nmatch res {\n    Ok(val) =&gt; println!(\"Value: {}\", val),\n    Err(e) =&gt; println!(\"Error: {}\", e),\n}\n</code></pre> <p>Using <code>if let</code></p> <pre><code>let res: Result&lt;i32, &amp;str&gt; = Ok(10);\n\nif let Ok(val) = res {\n    println!(\"Value: {}\", val);\n}\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/error_handling.html#printing-errors-with-eprint","title":"Printing Errors with eprint!","text":"<p>Use <code>eprint!</code> or <code>eprintln!</code> to print error messages directly to standard error (stderr).</p> <pre><code>eprint!(\"An error occurred: {}\", error);\neprintln!(\"An error occurred: {}\", error);\n</code></pre>","tags":["coding","rust","error handling"]},{"location":"coding/rust/generics.html","title":"Generics","text":"<p>generics is a way to create functions which can take different types of inputs and perform the \"same\" action. By convention generics are used starting from <code>T</code> onwards <code>T, U, V, W</code> etc.</p> <pre><code>fn main() {\n  let number_list = vec![34, 50, 25, 100, 65];\n  let largest = get_largest(number_list);\n  println!(\"The largest number is {}\", largest);\n\n  let char_list = vec!['y', 'm', 'a', 'q'];\n  let largest = get_largest(char_list);\n  println!(\"The largest char is {}\", largest);\n}\n\n// function with generics type T as input which can be ordered and copied\nfn get_largest&lt;T: PartialOrd + Copy&gt;(list Vec&lt;T&gt;) -&gt; T {\n  let mut largest = list[0];\n  for item in list {\n    if item &gt; largest{\n      largest = item;\n    }\n  }\n  largest\n}\n</code></pre> <p>multiple generics with <code>structs</code></p> <pre><code>struct Point&lt;T, U&gt; {\n  x: T,\n  y: U,\n}\n\nimpl&lt;T, U&gt; Point&lt;T, U&gt; {\n  fn mixup&lt;V, W&gt;(self, other: Point&lt;V, W&gt;) -&gt; Point&lt;T, W&gt; {\n    Point {\n      x: self.x,\n      y: other.y,\n    }\n  }\n}\n\nfn main() {\n  let p1 = Point {x: 5, y: 10 };\n  let p2 = Point {x: 5.0, y: 10.0 };\n  let p3 = Point {x: 5, y: 10.0 };\n  let p4 = Point {x: \"Hello, y: 'c'};\n\n  let p5 = p3.mixup(p4);\n\n  println!(\"p5.x = {}, p5.y = {}\", p5.x, p5.y);\n}\n</code></pre> <p>generics with <code>enum</code>. The <code>Option</code> and <code>Result</code> enum are implemented using generics.</p> <pre><code>fn main() {\n  enum Option&lt;T&gt; {\n    Some(T),\n    None,\n  }\n\n  enum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n  }\n}\n</code></pre>","tags":["coding","rust","generics"]},{"location":"coding/rust/install.html","title":"Install and Setup","text":"","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#install","title":"Install","text":"<p>See Rustup</p> <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#additional-install","title":"Additional Install","text":"<pre><code>cargo install racer        # Rust completion utility\ncargo install rustfmt      # Rust formatting tool according to guidelines\n\nxcode-select --install     # for macos install c compiler\n\ncargo install cargo-edit   # allows adding packages with the command cargo add\n\ncargo install cargo-bundle # allows creating a bundeled app for linux, macos and windows plattform\n</code></pre>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#editors","title":"Editors","text":"","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#vs-code","title":"VS Code","text":"<p>Install extension rust-analyzer</p>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#sublimetext","title":"SublimeText","text":"<p>Install extension Rust Enhanced</p>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#zed","title":"Zed","text":"<p>Zed come with everything you need to start coding in Rust.</p>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#update","title":"Update","text":"<pre><code>rustup update\n</code></pre>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#uninstall","title":"Uninstall","text":"<pre><code>rustup self uninstall\n</code></pre>","tags":["coding","rust","install"]},{"location":"coding/rust/install.html#jupyter-notebook","title":"Jupyter Notebook","text":"<pre><code># install evcxr\ncargo install evcxr_repl\n\n# create conda environment\nconda create --name evcxr\nconda activate evcxr\n\n# install conda packages\nconda install -y -c conda-forge nb_conda_kernels\n\n# install rust jupyter packages\ncargo install evcxr_jupyter\nevcxr_jupyter --install\n\n# install jupyterlab\nconda install -c conda-forge jupyterlab\n\n# export conda environment\nconda env export &gt; condaenv.yml\n\n# start jupyter notebook\njupyter notebook\n\n# start jupyterlab\njupyter lab\n</code></pre>","tags":["coding","rust","install"]},{"location":"coding/rust/iterators.html","title":"Iterators","text":"<p>Allows to iterate over a sequence of elements, independently how they are stored. All iterators implement the iterator trait.</p> <pre><code>fn main() {\n\n  let v1 = vec![1, 2, 3];\n\n  let v1_iter = v1.iter();\n\n  for value in v1_iter {\n    println!(\"Got: {}\" ,value);\n  }\n}\n</code></pre>","tags":["coding","rust","iterators"]},{"location":"coding/rust/iterators.html#consumers-vs-adaptors","title":"Consumers vs Adaptors","text":"<p>Two categories of Iterator methods. The adaptors (takes an iterator and returns an iterator) and consumers (takes iterators and returns another type)</p> <pre><code>// example of consumer method\n#[test]\nfn iterator_sum() {\n  let v1 = vec![1, 2, 3];\n  let v1_iter = v1. iter();\n  let total: i32 = v1_iter.sum();\n\n  assert_eq!(total, 6);\n}\n\n// example of adapter method ``map()``\nfn main()\n  let v1: Vec&lt;i32&gt; = vec![1, 2, 3];\n  let v2: Vec&lt;i32&gt; = v1.iter().map(|x| x + 1).collect();\n\n  assert_eq!(v2, ver![2, 3, 4]);\n}\n</code></pre>","tags":["coding","rust","iterators"]},{"location":"coding/rust/iterators.html#iterators-and-closures","title":"Iterators and Closures","text":"<pre><code>#[derive(PartialEq, Debug)]\nstruct Shoe {\n  size: u32,\n  style: String,\n}\n\nfn shoes_in_my_size(shoes: Vec&lt;Shoe&gt;, shoe_size: u32) -&gt; Vec&lt;Shoe&gt; {\n  shoes.into_iter().filter(|s| s.size == shoe_size).collect()\n}\n\nfn main() {}\n\n#[cfg(test)]\nmod tests {\n  use super::*;\n\n  #[test]\n  fn filters_by_size() {\n    let shoes = vec![\n     Shoe{\n       size: 10,\n       style: String::from(\"sneaker\"),\n     },\n     Shoe{\n       size: 13,\n       style: String::from(\"sandal\"),\n     },\n     Shoe{\n       size: 10,\n       style: String::from(\"boot\"),\n     },\n    ];\n\n    let in_my_size = shoes_in_my_size(shoes, 10);\n\n    assert_eq!(\n      in_my_size,\n      vec![\n        Shoe{\n          size: 10,\n          style: String::from(\"sneaker\"),\n        },\n        Shoe{\n          size: 10,\n          style: String::from(\"boot\"),\n        },\n      ]\n    );\n  }\n}\n</code></pre>","tags":["coding","rust","iterators"]},{"location":"coding/rust/iterators.html#iterator-implementation","title":"Iterator Implementation","text":"<p>Example of a Iterator implementation</p> <pre><code>pub trait Iterator {\n  type Item;   // associated type, defined in later\n\n  fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n\n  // methods with default implementation not done\n}\n\n#[test]\nfn iterator_demo() {\n  let v1 = vec![1, 2, 3];\n\n  let mut v1_iter = v1.iter();     // returns immutable\n\n  asser_eq!(v1_iter.next(), Some(&amp;1));\n  asser_eq!(v1_iter.next(), Some(&amp;2));\n  asser_eq!(v1_iter.next(), Some(&amp;3));\n  asser_eq!(v1_iter.next(), None;\n\n  let mut v1_iter = v1.iter_mut(); // return mutable\n\n  asser_eq!(v1_iter.next(), Some(&amp;1));\n  asser_eq!(v1_iter.next(), Some(&amp;2));\n  asser_eq!(v1_iter.next(), Some(&amp;3));\n  asser_eq!(v1_iter.next(), None;\n\n  let mut v1_iter = v1.iter_mut(); // return values directly\n  asser_eq!(v1_iter.next(), Some(1));\n  asser_eq!(v1_iter.next(), Some(2));\n  asser_eq!(v1_iter.next(), Some( 3));\n  asser_eq!(v1_iter.next(), None;\n}\n</code></pre> <p>Another example of a Iterator implementation</p> <pre><code>struct Counter {\n  count: u32,       // memory for the iterator, private\n}\n\nimpl Counter {\n  fn new() -&gt; Counter {\n    Counter { count: 0 }  // count gets initialised to 0\n  }\n}\n\nimpl Iteraotr for Counter {\n  type Item = u32;    // associated type (returns items of type u32)\n\n  fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    if self.count &lt; 5 {\n      self.count += 1;\n      Some(self.count)\n    } else {\n      None\n    }\n  }\n}\n\n#[test]\nfn calling_next_directly() {\n  let mut counter = Counter::new();\n\n  assert_eq!(counter.next(), Some(1));\n  assert_eq!(counter.next(), Some(2));\n  assert_eq!(counter.next(), Some(3));\n  assert_eq!(counter.next(), Some(4));\n  assert_eq!(counter.next(), Some(5));\n  assert_eq!(counter.next(), None;\n}\n\n#[test]\nfn using_other_iterator_trait_methods() {\n  let sum: u32 = Counter::new();\n     .zip(Counter::new().skip(1))  // zip takes 2 iterators and bundlers them together\n                                   // skip is an adaptor method returning a iterator skiped by 1 element\n     .map(|(a,b)| a * b)           // map takes a closure for each element returns a iterator\n     .filter(|x| x % 3 == 0)       // filters\n     .sum();                       // sum of all iterator values\n  assert_eq!(18,sum);\n}\n\nfn main() {}\n</code></pre>","tags":["coding","rust","iterators"]},{"location":"coding/rust/libraries.html","title":"Libraries","text":"<p>Nice to know functions and libraries in Rust.</p>","tags":["coding","rust","libraries"]},{"location":"coding/rust/libraries.html#stdenv","title":"<code>std::env</code>","text":"","tags":["coding","rust","libraries"]},{"location":"coding/rust/libraries.html#get-current-directory-and-executable-location","title":"Get current directory and executable location","text":"<pre><code>use std::env;\n\nfn main() {\n  let current_dir = env::current_dir().expect(\"Failed to get current directory\");\n  let exe = env::current_exe().expect(\"Failed to get current exe location\");\n  let exe_dir = exe.parent().expect(\"Failed to get exe parent directory\");\n\n  println!(\"Current directory: {:?}\", &amp;_current_dir);\n  println!(\"Executable directory: {:?}\", &amp;exe_dir);\n  println!(\"Executable: {:?}\", &amp;exe);\n}\n</code></pre>","tags":["coding","rust","libraries"]},{"location":"coding/rust/libraries.html#home","title":"<code>home</code>","text":"<p>Get home directory <code>~</code></p> <pre><code>use home;\nlet homedir = home::home_dir().expect(\"Failed to get home directory\");\nprintln!(\"Home directory: {:?}\", &amp;homedir);\n</code></pre>","tags":["coding","rust","libraries"]},{"location":"coding/rust/lifetimes.html","title":"Lifetimes","text":"<p>The memory management of Rust knows with the help of the borrow checker the lifetime of many variables. Lifetimes are annotated with tick and starting with a <code>`a</code>.</p> <p>In the following example r is not valid for the println statement since the x was note valid anymore. (Dangling pointer). The compiler will find this error.</p> <pre><code>fn main() {\n  let r: &amp;i32;          // ---------+-- a'\n                        //          |\n  {                     //          |\n    let x = 5;          // -+-- 'b' |\n    r = &amp;x              //  |       |\n  }                     // -+       |\n                        //          |\n  println!(\"r: {}\", r); //          |\n}                       // ---------+\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#generic-lifetimes-in-functions","title":"Generic Lifetimes in Functions","text":"<p>In some cases especially for return values given as references the compiler needs to be informed of the lifetime of the return value copmared to the input arguments.</p> <pre><code>fn main() {\n  let string1 = String::from(\"abcd\");\n\n  {\n    let string2 = String::from(\"xyz\");\n\n    let result = longest(string1.as_str(), string2.as_str());\n    println!(\"The longest string is {}\", result);\n  }\n}\n\n// since the output is a reference it's lifetime needs to be defined.\n// return values has the lifetime of the smallest lifetime of the arguments x and y\nfn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n  if x.len() &gt; y.len() {\n    x\n  } else {\n    y\n  }\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#lifetime-annotation-syntax","title":"Lifetime Annotation Syntax","text":"<pre><code>&amp;i32        // a reference\n&amp;'a i32     // a reference with an explicit Lifetime\n&amp;'a mut i32 // a mutable reference with an explicit lifetime\n</code></pre> <p>A a return value to a reference to a variable created inside a function is not possible since the lifetime of the variable ends at the end of the function</p> <pre><code>fn longest&lt;'a&gt;(x: &amp;str, y:&amp;str) -&gt; &amp;'a str {\n  let result = String::from(\"text\");\n  result.as_str()     // not possible since reference not valid after function end\n}\nfn longest&lt;'a&gt;(x: &amp;str, y:&amp;str) -&gt; &amp;'a str {\n  let result = String::from(\"text\");\n  result     // return an own type which moves ownership\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#lifetime-annotations-in-stucts-definitions","title":"Lifetime Annotations in Stucts Definitions","text":"<pre><code>struct ImportantExcerpt&lt;'a&gt; {\n  part: &amp;'a str,             // lifetime annotation is needed since it is a reference\n}\n\nfn main() {\n  let novel = String::from(\"Text\");\n  lef first_sentence = novel.split('.').next().expect(\"Could not find a '.'\");\n  let i = ImportantExcerpt {\n     part: first_sentence,\n  };\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#lifetime-elision","title":"Lifetime Elision","text":"<p>Sometimes the compiler can referr the lifetime by performing three lifetime elision rules:</p> <ul> <li>Lifetime of Arguments of a functions is called \"input lifetime\"</li> <li> <p>Lifetime of return values of a function is called \"output lifetime\"</p> </li> <li> <p>Each parameter that is a reference gets its own lifetime parameter</p> </li> <li>If there is exactly one input lifetime parameter, that lifetime is assigned to all output lifetime parameters;</li> <li>If there are multiple input lifetime parameters, but one of them is <code>&amp;self</code> or <code>&amp;mut self</code> the lifetime of self is assigned to all output lifetime parameters</li> </ul> <p>Example</p> <pre><code>fn first_word(s: &amp;str) -&gt; &amp;str{\n// fn first_word&lt;'a&gt;(s: &amp;'a str) -&gt; &amp;'a str { // thanks to the rules 1&amp;2 the compiler sees this\n  let bytes = s.as_bytes();\n\n  for (i, &amp;item) in bytes.iter().enumrate() {\n    if item == b'' {\n      return &amp;s[0..i];\n    }\n  }\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#lifetime-annotation-in-methods","title":"Lifetime Annotation in Methods","text":"<p>Example with [&amp;self]{.title-ref}</p> <pre><code>struct ImportantExcerpt&lt;'a&gt; {\n  part: &amp;'a str,\n}\n\nimpl&lt;'a&gt; ImportantExerpt&lt;'a&gt; {\n  fn return_part(&amp;self, announcement: &amp;str) -&gt; &amp;str {\n  //fn return_part&lt;'a&gt;(&amp;'a self, announcement: &amp;str) -&gt; &amp;'a str { // compiler sees this thanks to rule 1&amp;3\n    println!(\"Attention please: {}\", accouncement);\n    self.part\n  }\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#example-with-generics-traits-trait-bounds-and-lifetimes","title":"Example with Generics, Traits, Trait Bounds and Lifetimes","text":"<pre><code>use std::fmt::Display;\n\nfn longest_with_an_announcement&lt;'a, T&gt;( // Lifetime and Generic definition\n  x: &amp;'a str,                           // input lifetime annotation\n  y: &amp;'a str,                           // input lifetime annotation\n) -&gt; &amp;'a str                            // output lifetime annotation (smallest of input lifetime annotation)\nwhere                                   // Trait bound\n  T: Display,                           // implement only where type T implements Display\n{\n  println!(\"Announcement! {}\", ann);\n  if x.len() \u00b0 y.len() {\n    x\n  } else {\n    y\n  }\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#constant-values","title":"Constant values","text":"<p>Rust provides two ways to define constant values: <code>static</code> and <code>const</code>. While they may seem similar, they serve different purposes and have key differences.</p>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#static","title":"<code>static</code>","text":"<ul> <li>Represents a globally allocated variable with a <code>'static</code> lifetime, meaning it lives for the entire duration of the program.</li> <li>Stored in a specific memory location, and its address can be referenced.</li> <li>Can be mutable (with unsafe), but it is typically immutable.</li> </ul>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#static-constants","title":"<code>static</code> Constants","text":"<p>A <code>static</code> constant is a globally allocated value that is stored in a fixed memory location and exists for the entire duration of the program. All <code>static</code> variables have the <code>'static</code> lifetime implicitly.</p> <pre><code>let GREETING: &amp;str = \"Hello, Rust!\";\n\nfn main() {\n    println!(\"{}\", GREETING); // \"Hello, Rust!\"\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#static-lifetime","title":"<code>\u2019'static</code> Lifetime","text":"<p>The <code>'static</code> lifetime is a lifetime specifier that indicates the referenced data lives for the entire duration of the program. While all <code>static</code> constants have the <code>'static</code> lifetime, not all <code>'static</code> lifetimes refer to <code>static</code> constants.</p> <pre><code>fn get_greeting() -&gt; &amp;'static str {\n    \"Hello, lifetime!\" // This string literal has a 'static lifetime\n}\n\nfn main() {\n    let message: &amp;'static str = get_greeting();\n    println!(\"{}\", message); // \"Hello, lifetime!\"\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/lifetimes.html#const","title":"<code>const</code>","text":"<ul> <li>Represents a compile-time constant, embedded directly into the code where it is used.</li> <li>Not stored in memory, but computed at compile time.</li> <li>Always immutable.</li> </ul> <pre><code>// A compile-time constant embedded directly into the code\nconst PI: f64 = 3.141592653589793;\n\nfn main() {\n    println!(\"The value of PI is: {}\", PI); // \"The value of PI is: 3.141592653589793\"\n}\n</code></pre>","tags":["coding","rust","lifetimes"]},{"location":"coding/rust/memory_regions.html","title":"Memory Regions","text":"","tags":["coding","rust","memory"]},{"location":"coding/rust/memory_regions.html#stack","title":"Stack","text":"<p>Scratch space for function calls. Memory in the stack is automatically allocated and disallocated if one function is enteres or exited.</p>","tags":["coding","rust","memory"]},{"location":"coding/rust/memory_regions.html#heap","title":"Heap","text":"<p>Values in head are not bound to the call stack of the program. They live until the memory is freed.</p> <p>Main interaction with the Heap is to use the <code>Box</code> type. <code>Box</code> is a smart pointer that represents ownership of an object in the heap.</p> <pre><code>let x = Box:new(5)\n</code></pre>","tags":["coding","rust","memory"]},{"location":"coding/rust/memory_regions.html#static-memory","title":"Static Memory","text":"<p>Regions automatically loaded into the programs's memory when a program is executed.</p> <p>Static memory hold the memory for variables you decalre with the <code>static</code> keyword as well as certain constnant values from the code.</p>","tags":["coding","rust","memory"]},{"location":"coding/rust/modules.html","title":"Modules","text":"<p>Split code in logical units and manage visibility (public/private) between them. Modules can contain, constants, structs, enums functions and other modules. A crate is also a modules which is created by default.</p>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#module-tree","title":"Module tree","text":"<pre><code>crate\n\u2514\u2500\u2500 front_of_house\n    \u251c\u2500\u2500 hosting\n    \u2502   \u251c\u2500\u2500 add_to_whaitlist\n    \u2502   \u2514\u2500\u2500 seat_at_table\n    \u2514\u2500\u2500 serving\n        \u251c\u2500\u2500 take_order\n        \u251c\u2500\u2500 serve_order\n        \u2514\u2500\u2500 take_payment\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#module-paths","title":"Module Paths","text":"<p>Path to modules can be Absolute or relative.</p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_waitlist() {}\n\n    fn seat_at_table() {}\n  }\n\n  mod serving {\n    fn take_order() {}\n\n    fn serve_order() {}\n\n    fn take_payment() {}\n  }\n}\n\npub fn eat_at_restaurant() {\n  // Absolute path\n  crate::front_of_house::hosting::add_to_waitlist();\n\n  // Relative path\n  front_of_house::hosting::add_to_waitlist!();\n}\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#modules-visibility","title":"Modules visibility","text":"<ul> <li>By default a child modules is private and the parent modules can't see it's content.</li> <li>Child modules can see all parent modules functionalities</li> <li>With <code>pub</code> keyword, function can be access from outside.</li> </ul> <p>modules example with visibility</p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_whitelist() {}\n  }\n}\n\npub fn eat_at_restaurant() {\n  // Absolute path\n  crate::front_of_house::hosting::add_to_whitelist();\n\n  // Relative path (start with current modules)\n  front_of_house::hosting::add_to_whitelist();\n}\n</code></pre> <p>modules example with visibility and relative paths</p> <pre><code>fn serve_order() {}\n\nmod back_of_house {\n  fn fix_incorrect_order() {\n    cook_order();            // works because we are in the same module\n    super::serve_order();    // the child can get access to the parent with the super keyword.\n  }\n\n  fn cook_order() {}\n}\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#examples","title":"Examples","text":"<p><code>mod</code> modules <code>struc</code> example</p> <pre><code>mod back_of_house {\n  pub struct Breakfast {\n     pub toast: String;       // pub can be changed\n     seasonal_fruit: String,\n  }\n\n  impl Breakfast {\n    pub fn summer(toast: &amp;str) -&gt; Breakfast {\n      Breakfast {\n        toast: String::from(toast),\n        seasonal_fruit: String::from(\"peaches\")\n      }\n    }\n  }\n}\n\npub fn eat_at_restaurant() {\n  let mut meal: Breakfast = back_of_house::Breakfast::summer(\"Rye\");\n\n  meal.toast = String::from(\"Wheat\");\n}\n</code></pre> <p><code>mod</code> modules <code>enum</code> example</p> <pre><code>mod back_of_house {\n  pub enum Appetizer {\n    Soup,\n    Salad,\n  }\n}\n\npub fn eat_at_restaurant() {\n  let order_1: = back_of_house::Appetizer::Soup;\n  let order_2: = back_of_house::Appetizer::Salad;\n}\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#public-modules","title":"Public Modules","text":"<p>If an external code wants to use part of the modules it needs to be defines public</p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_waitlist() {}\n  }\n}\n\n// make the module usable by external\npub use crate::front_of_house::hosting;\n\npub fn eat_at_restaurant() {\n  hosting::add_to_waitlist();\n}\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/modules.html#module-definition","title":"Module definition","text":"<p>In order to put the module definition into a seperate file. The file needs the name of the modules</p> front_of_house/hosting.rs<pre><code>pub fn add_to_waitlist() {}\n</code></pre> front_of_house.rs<pre><code>pub mod hosting;  // import the module hosting definition from the other file\n</code></pre> lib.rs<pre><code>mod front_of_house;  // import the module front_of_house definition from the other file\n\n// make the module usable by external\npub use crate::front_of_house::hosting;\n\npub fn eat_at_restaurant() {\n  hosting::add_to_waitlist();\n}\n</code></pre>","tags":["coding","rust","modules"]},{"location":"coding/rust/naming-convention.html","title":"Naming Conventions","text":"Item Convention Crates <code>unclear</code> Modules <code>snake_case</code> Types <code>UpperCamelCase</code> Traits <code>UpperCamelCase</code> Enum variants <code>UpperCamelCase</code> Functions <code>snake_case</code> Methods <code>snake_case</code> General constructors <code>new</code> or <code>with_more_details</code> Conversion constructors <code>from_some_other_type</code> Macros <code>snake_case!</code> Local variables <code>snake_case</code> Statics <code>SCREAMING_SNAKE_CASE</code> Constants <code>SCREAMING_SNAKE_CASE</code> Type parameters concise <code>UpperCamelCase</code>, usually single uppercase letter: <code>T</code> Lifetimes short <code>lowercase</code>, usually a single letter: <code>'a</code>, <code>'de</code>, <code>'src</code>","tags":["coding","rust","naming"]},{"location":"coding/rust/package.html","title":"Package Structure","text":"<ul> <li>package - is the projects which happens when performing <code>cargo new</code> command.<ul> <li>crates - every package contains<ul> <li>crate types<ul> <li>binary crate - code to execute</li> <li>library crate - code to be use by others</li> </ul> </li> <li>modules - crates contains modules with privacy rules</li> <li>workspaces - for big projects ans allows to store interrelated packages</li> </ul> </li> </ul> </li> </ul>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#crates","title":"Crates","text":"<p>In every project there are two main files <code>main.rs</code> and <code>lib.rs</code>. For a binary project, the <code>main.rs</code> file is the entry point of the program. For a library project, the <code>lib.rs</code> file is the entry point of the library. If there are multiple source files in the project there are different ways to intregrate them into your project.</p>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#binary-crate","title":"Binary crate","text":"<p>A project containing <code>main.rs</code> file in the root of the project <code>scr/</code> directory. Cargo creates a binary crate with the binary name the same as the package name defined in <code>Cargo.toml</code>.</p> <p>To create more binary crates. Add files with the crate name in a new subfolder <code>src/bin/</code></p> <pre><code>cargo new &lt;packagename&gt;\n</code></pre>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#structure","title":"Structure","text":"<p>file structure:</p> <pre><code>\u2514\u2500\u2500 src/\n   \u251c\u2500\u2500 main.rs\n   \u251c\u2500\u2500 config.rs\n   \u2514\u2500\u2500 helpers.rs\n</code></pre> main.rs<pre><code>mod config;\nmod helpers;\n\nfn main() {\n    config::read_config();\n}\n</code></pre> config.rs<pre><code>crate::helpers::do_something();\n\npub fn read_config() {\n    do_something();\n    println!(\"Reading config\");\n}\n</code></pre> helpers.rs<pre><code>pub fn do_something() {\n    println!(\"Doing something\");\n}\n</code></pre>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#library-crate","title":"Library crate","text":"<p>A project containing <code>lib.rs</code> file in the root of the project <code>scr/</code> directory. Cargo creates a library crate with the library name the same as the package name defined in `Cargo.toml``.</p> <pre><code>cargo new --lib &lt;packagename&gt;\n</code></pre>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#structure_1","title":"Structure","text":"<p>including a <code>main.rs</code></p> <p>file structure:</p> <pre><code>rustlib/\n\u2514\u2500\u2500 src/\n   \u251c\u2500\u2500 main.rs\n   \u251c\u2500\u2500 lib.rs\n   \u251c\u2500\u2500 config.rs\n   \u2514\u2500\u2500 helpers.rs\n</code></pre> lib.rs<pre><code>pub mod config;\npub mod helpers;\n</code></pre> main.rs<pre><code>user rust_lib::config;\n\nfn main() {\n    config::read_config();\n}\n</code></pre> config.rs<pre><code>crate::helpers::do_something();\n\npub fn read_config() {\n    do_something();\n    println!(\"Reading config\");\n}\n</code></pre> helpers.rs<pre><code>pub fn do_something() {\n    println!(\"Doing something\");\n}\n</code></pre>","tags":["coding","rust","package"]},{"location":"coding/rust/package.html#rules","title":"Rules","text":"<ol> <li>A package needs to have at least one crate.</li> <li>A package need to have 0 or 1 library crate.</li> <li>A package can have any number of binary crates.</li> </ol>","tags":["coding","rust","package"]},{"location":"coding/rust/rust2python.html","title":"Rust2Python","text":"<p>To integrate rust into a python program we can use the pyo3 library as well as maturin. - The <code>pyo3</code> library is a Rust binding for the Python interpreter. - The <code>maturin</code> is a tool to build and publish Python packages written in Rust. It's a Cargo subcommand that helps you to build a Python package with a Rust library.</p>","tags":["coding","rust","maturin","pyo3","python"]},{"location":"coding/rust/rust2python.html#limitations","title":"Limitations","text":"<ul> <li>The new python package cannot circumvent the GIL (Global Interpreter Lock) in Python.</li> </ul>","tags":["coding","rust","maturin","pyo3","python"]},{"location":"coding/rust/rust2python.html#setup","title":"Setup","text":"<p>First, follow the commands below to create a new directory containing a new Python <code>virtualenv</code>, and install <code>maturin</code> into the virtualenv using Python's package manager, <code>pip</code>.</p> <pre><code># (replace string_sum with the desired package name)\n$ mkdir string_sum\n$ cd string_sum\n$ python -m venv .env\n$ source .env/bin/activate\n$ pip install maturin\n</code></pre> <p>Still inside this <code>string_sum</code> directory, now run <code>maturin init</code>. This will generate the new package source. When given the choice of bindings to use, select <code>pyo3</code> bindings:</p> <pre><code>$ maturin init\n\u2714 \ud83e\udd37 What kind of bindings to use? \u00b7 pyo3\n  \u2728 Done! New project created string_sum\n</code></pre> <p>The most important files generated by this command are <code>Cargo.toml</code> and <code>lib.rs</code>, which will look roughly like the following: </p>Cargo.toml<pre><code>[package]\nname = \"string_sum\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n[lib]\n# The name of the native library. This is the name which will be used in Python to import the\n# library (i.e. `import string_sum`). If you change this, you must also change the name of the\n# `#[pymodule]` in `src/lib.rs`.\nname = \"string_sum\"\n# \"cdylib\" is necessary to produce a shared library for Python to import from.\n#\n# Downstream Rust code (including code in `bin/`, `examples/`, and `tests/`) will not be able\n# to `use string_sum;` unless the \"rlib\" or \"lib\" crate type is also included, e.g.:\n# crate-type = [\"cdylib\", \"rlib\"]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\npyo3 = { version = \"0.20.3\", features = [\"extension-module\"] }\n</code></pre> src/lib.rs<pre><code>use pyo3::prelude::*;\n\n/// Formats the sum of two numbers as string.\n#[pyfunction]\nfn sum_as_string(a: usize, b: usize) -&gt; PyResult&lt;String&gt; {\n    Ok((a + b).to_string())\n}\n\n/// A Python module implemented in Rust. The name of this function must match\n/// the `lib.name` setting in the `Cargo.toml`, else Python will not be able to\n/// import the module.\n#[pymodule]\nfn string_sum(m: &amp;Bound&lt;'_, PyModule&gt;) -&gt; PyResult&lt;()&gt; {\n    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;\n    Ok(())\n}\n</code></pre> <p>Finally, run maturin develop. This will build the package and install it into the Python virtualenv previously created and activated. The package is then ready to be used from python:</p> <pre><code>$ maturin develop\n# lots of progress output as maturin runs the compilation...\n$ python\n&gt;&gt;&gt; import string_sum\n&gt;&gt;&gt; string_sum.sum_as_string(5, 20)\n'25'\n</code></pre> <p>== One Copy to Rule them all One bashscript to get you started quickly:</p> <pre><code>mkdir string_sum &amp;&amp; cd \"$_\"\npython -m venv .env\nsource .env/bin/activate\npip install maturin\nmaturin init --bindings pyo3\nmaturin develop\n</code></pre>","tags":["coding","rust","maturin","pyo3","python"]},{"location":"coding/rust/rustdoc.html","title":"RustDoc","text":"<p>Documentation comment uses markdown for formatting. Documentation comment examples with be run as a test.</p> <pre><code>//! indicate module-level or crate-level documentation\n/// rustdoc documentation supporting markdown\n</code></pre> <pre><code>//! Fast and easy queue abstraction.\n//!\n//! Provides an abstraction over a queue.  When the abstraction is used\n//! there are these advantages:\n//! - Fast\n//! - [`Easy`]\n//!\n//! [`Easy`]: http://thatwaseasy.example.com\n\n/// This module makes it easy.\npub mod easy {\n\n  /// Use the abstraction function to do this specific thing.\n  pub fn abstraction() {}\n\n  /// Adds one to the number given.\n  ///\n  /// # Examples\n  ///\n  /// ```\n  /// let arg = 5;\n  /// let answer = my_crate::add_one(arg);\n  ///\n  /// asser_eq!(6, answer);\n  /// ```\n  pub fn add_one(x: i32) -&gt; i32 {\n    x + 1\n  }\n}\n</code></pre> <p>Build and open the documentation</p> <pre><code>cargo doc --open\n</code></pre>","tags":["coding","rust","rustdoc"]},{"location":"coding/rust/rustfmt.html","title":"Rustfmt","text":"<p>Rustfmt is a tool for formatting Rust code according to the official Rust style guidelines. It helps ensure consistent code formatting across projects and improves code readability.</p> <p>All configuration options are stored in a <code>.rustfmt.toml</code> file in the root of your project. This file can be used to customize the formatting rules to suit your project's needs.</p> <ul> <li>Configuration Documentation</li> </ul>"},{"location":"coding/rust/rustfmt.html#features","title":"Features","text":"<ul> <li>Automatic code formatting: Rustfmt automatically formats your code based on the official Rust style guidelines.</li> <li>Configurable options: You can customize the formatting rules by modifying the <code>.rustfmt.toml</code> configuration file.</li> <li>Integration with build systems: Rustfmt can be integrated into your build system or editor to automatically format code on save or on demand.</li> <li>IDE support: Rustfmt is supported by popular Rust IDEs such as Visual Studio Code, IntelliJ Rust, and Atom.</li> </ul>"},{"location":"coding/rust/rustfmt.html#installation","title":"Installation","text":"<p>To install Rustfmt, you can use the following command: </p><pre><code>rustup component add rustfmt\n</code></pre>"},{"location":"coding/rust/rustfmt.html#usage","title":"Usage","text":"<pre><code>cargo fmt\n</code></pre>"},{"location":"coding/rust/rustfmt.html#my-config","title":"My config","text":"rustfmt.toml<pre><code>edition = \"2021\"\n\ntab_spaces = 2\nmax_width = 160\n\n#indent_style = \"Block\"\n#trailing_comma = \"Always\"\n\n#merge_imports = true\nreorder_imports = true\n</code></pre>"},{"location":"coding/rust/syntax.html","title":"Syntax","text":"","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#comments","title":"Comments","text":"<pre><code>// Singleline Comment\n/// Documentation Comment - Supports Markdown\n/*\nBlock\nComment\n*/\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#use-crates","title":"<code>use</code> crates","text":"<p>Allows to bring modules and/or function into scope. In idiomatic rust always specify the full path and \"import\" only the minimal.</p> <pre><code>use &lt;cratename&gt;;\n</code></pre> <pre><code>use std::io;                         // brings io of std into local scope\nuse rand::Rng;                       // bring Rng of rand into loacl scope\nuse std::time::(Duration, Instant);  // brings Duration and Instant of std::time into local scope\n</code></pre> <p>Bring own modules into scope with the help of <code>self</code></p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_whitelist() {}\n  }\n}\n\nuse self::front_of_house::hosting;\n# or\nuse crate::front_of_house::hosting;\n\npub fn eat_at_restaurant() {\n  hosting::add_to_whitelist();\n}\n</code></pre> <p>Bring into scope two elements with the same name from different crates. In this case only bring the parent module into scope.</p> <pre><code>use std::fmt;\nuse std:io;\n\nfn function1() fmt::Result {}\n\nfn function2() io::Result&lt;()&gt; {}\n</code></pre> <p>It is also possible to rename the import with <code>as</code></p> <pre><code>use std::fmt::Result;\nuse std:io::Result as IoResult;\n\nfn function1() Result {}\n\nfn function2() ioResult&lt;()&gt; {}\n</code></pre> <p>import more item at once into scope</p> <pre><code>use std::io::{self, Write};\nuse rand::{Rng, CryptoRng, ErrorKind::Transient};\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#mod-modules","title":"<code>mod</code> modules","text":"<p>split code in logical units and manage visibility (public/private) between them. Modules can contain, constants, structs, enums functions and other modules. A crate is also a modules which is created by default.</p> <p>Module tree</p> <pre><code>crate\n+-- front_of_house\n    +-- hosting\n    |   +-- add_to_whaitlist\n    |   +-- seat_at_table\n    +-- serving\n        +-- take_order\n        +-- serve_order\n        +-- take_payment\n</code></pre> <p>Path to modules can be Absolute or relative.</p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_waitlist() {}\n\n    fn seat_at_table() {}\n  }\n\n  mod serving {\n    fn take_order() {}\n\n    fn serve_order() {}\n\n    fn take_payment() {}\n  }\n}\n\npub fn eat_at_restaurant() {\n  // Absolute path\n  crate::front_of_house::hosting::add_to_waitlist();\n\n  // Relative path\n  front_of_house::hosting::add_to_waitlist!();\n}\n</code></pre> <p>Modules visibility</p> <ul> <li>By default a child modules is private and the parent modules can't see it's content.</li> <li>Child modules can see all parent modules functionalities</li> <li>With <code>pub</code> keyword, function can be access from outside.</li> </ul> <p>modules example with visibility</p> <pre><code>mod front_of_house {\n  pub mod hosting {\n    pub fn add_to_whitelist() {}\n  }\n}\n\npub fn eat_at_restaurant() {\n  // Absolute path\n  crate::front_of_house::hosting::add_to_whitelist();\n\n  // Relative path (start with current modules)\n  front_of_house::hosting::add_to_whitelist();\n}\n\nuse self::front_of_house::hosting\n\npub fn eat_at_restaurant_2() {\n  hosting::add_to_whitelist();\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#variables","title":"Variables","text":"<p>Rust code uses snake_case for function and variables.</p>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#const-constants","title":"<code>const</code>- Constants","text":"<p>Constants live in their scope and cannot be changed for the entire program duration. They are written in <code>UPPERCASE_WITH_UNDERSCORES_BETWEEN</code></p> <pre><code>const CONST_NAME: u32 = 60 * 60 + 3;\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#let-immutable-variable","title":"<code>let</code>- immutable Variable","text":"<pre><code>let x: u8 = 5; // declare variable x and bind to 5\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#shadowing","title":"Shadowing","text":"<pre><code>fn main() {\n  let x = 5;\n  let x = x + 1;\n  {\n    let x = x * 2;\n    println!(\"inner-scope x is: {x}\");\n  }\n  println!(\"outer-scope x is: {x}\");\n}\n</code></pre> <pre><code>inner-scope x is: 12\nouter-scope x is: 6\n</code></pre> <p>Shadowing to change type</p> <pre><code>let spaces = \"   \";         // spaces is a string\nlet spaces = spaces.len();  // spaces is a i32 integer\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#let-mut-mutable-variable","title":"<code>let mut</code> - mutable Variable","text":"<pre><code>let mut x: u8 = 5;   // bind variable x to 5\nx = 6;               // bind variable x to 6\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#fn-functions","title":"<code>fn</code> Functions","text":"<p>Rust code uses snake_case for function and variables.</p> <p><code>main</code> function</p> <pre><code>fn main(){\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#dead-functions","title":"dead Functions","text":"<pre><code>#[allow(dead_code)]\nfn deadfn(){}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#parameters-and-return","title":"Parameters and Return","text":"<pre><code>// Function with two parameters and a return value\nfn add(a: i32, b: i32) -&gt;  i32 {\n  a+b\n}\n\nadd(5,4)\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#default-values","title":"Default Values","text":"<pre><code>// Function with parameters that have default values\nfn add(a: Option&lt;u8&gt;, b: Option&lt;u8&gt;) -&gt; u8 {\n  a.unwrap_or(1) + b.unwrap_or(2)\n}\n\nprintln!(\"{}\", add(None, None));\nprintln!(\"{}\", add(3, 4));\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#function-macros","title":"Function macros","text":"<p>A function call finishing with <code>!</code> return not a value but code. It is essentially a macro.</p> <pre><code>let x = 5;\nlet y = 10;\nprintln!(\"x = {x} and y + 2 = {}\", y + 2);\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#x-closures","title":"<code>|x|</code> Closures","text":"<p>A closure is a type of anonymous function (don't have names) that can capture variables from its surrounding environment. These variables can then be used within the closure's body, even if they are not passed in as parameters.</p> <p>Closures are normally short and only available in a narrow context. Compiler determines the input and return variable type. The first usage will define the types of the variables.</p> <pre><code>fn main() {\n    let x = 5;\n    let add = |y| x + y;\n\n   let result = add(3);\n   println!(\"{}\", result); // Prints \"8\"\n}\n</code></pre> <p>More complete example with a Cacher. The cacher implementation is not finished, it only caches the value for one <code>arg</code> instead for each arg a new value. It can be fixed with a hashmap.</p> <pre><code>use std::thread;\nuse std::time::Duration;\n\nfn expensive_calculation(intensity: u32) -&gt; u32 {\n  println!(\"calculating slowly...\");\n  thread::sleep(Duration::from_secs(2));\n  intensity\n}\n\nfn main() {\n  let simulated_intensity = 10;\n  let simulated_random_number = 7;\n\n  generate_workout(simulated_intensity, simulated_random_number);\n}\n\n// for using struct with closures, generics and trait bounds are needed\nstruct Cacher&lt;T&gt;   // Generic &lt;T&gt;\nwhere\n  T: Fn(u32 -&gt; u32), // Trait Fn\n{\n  calculation: T,\n  value: Option&lt;u32&gt;,\n}\n\nimpl&lt;T&gt; Cacher&lt;T&gt;,\nwhere\n  T: Fn(u32) -&gt; u32,\n{\n  fn new(calculation:T) -&gt; Cacher&lt;T&gt; {\n    Cacher {\n      calculation,\n      value:None,\n    }\n  }\n\n  fn value(&amp;mut self, arg: u32) -&gt; u32 {\n    match self.value {\n      Some(v) =&gt; v,\n      None =&gt; {\n        let v = (self.calculation)(arg);\n        self.value = Some(v);\n      }\n    }\n  }\n}\n\nfn generate_workout(intensity: u32, random_number: u32) {\n  // Closure definition\n  //let expensive_closure = |num: u32| -&gt; u32 {     // with type definition\n  let expensive_closure = |num| {       // without type definition\n    println!(\"calculatin slowly\");\n    thread::sleep(Duration::from_secs(2));\n    num\n  };\n\n  // Closure definition with Cacher struct\n  let mut expensive_cacher = Cacher::new(|num| {       // without type definition\n    println!(\"calculatin slowly\");\n    thread::sleep(Duration::from_secs(2));\n    num\n  };\n\n  if intensity &lt; 25 {\n    println!(\n      \"Today, do {} pushups!\",\n      //expensive_calculation(intensity)  // get value from function\n      //expensive_closure(intensity)      // get value from closure\n      expensive_cacher.value(intensity)   // get value from Cacher with closure\n    );\n    println!(\n      \"Next, do {} situps!\",\n      //expensive_calculation(intensity)  // get value from function\n      //expensive_closure(intensity)      // get value from closure\n      expensive_cacher.value(intensity)   // get value from Cacher with closure\n    );\n  } else {\n    if random_number == 3 {\n      println!(\"Take a break today! Remember to stay hydrated!\");\n    } else {\n      println!(\n        \"Today, run for {} minutes!\",\n        //expensive_calculation(intensity)  // get value from function\n        //expensive_closure(intensity)      // get value from closure\n        expensive_cacher.value(intensity)   // get value from Cacher with closure\n      );\n    }\n  }\n}\n</code></pre> <p>Capture variables with closures</p> <pre><code>fn main() {\n  let x = 4;\n\n  let equal_to_x = |z| z == x;\n\n  let y = 4;\n\n  assert!(equal_to_x(y));\n}\n</code></pre> <p>Closures can capture values form their environment in three way (same as functions): 1. Taking ownwership (<code>FnOnce</code> trait) 2. Borrow mutable (<code>FnMut</code> trait) 2. Borrow immutable (<code>Fn</code> trait)</p>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#flow-control","title":"Flow Control","text":"","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#if","title":"<code>if</code>","text":"<pre><code>let number = 6;\nif number % 4 == 0 {\n  println!(\"number is divisible by 4\");\n} else if number % 3 == 0 {\n  println!(\"number is divisible by 3\");\n} else if number % 2 == 0 {\n  println!(\"number is divisible by 2\");\n} else {\n  println!(\"number is not divisible by 4, 3, or 2\");\n}\n</code></pre> <p>can also be used for variables</p> <pre><code>let condition = true;\nlet number = if condition {5} else {6};\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#for","title":"<code>for</code>","text":"<pre><code>for _ in 0..10 {\n  //...\n}\n\nfor _ in 0..=10 {\n  //...\n}\n</code></pre> <p>Use <code>.rev()</code> to reverse the list range,</p> <pre><code>for nbr in (0..=5).rev() {\n  println!(\"{nbr} ...\");\n}\nprintln!(\"LIFTOFF!!!\");\n\n//ok but not recommended because of performance and safety\nlet collection = [1, 2, 3, 4, 5];\nfor i in 0..collection.len() {\n  let item = collection[i];\n  //...\n}\n</code></pre> <p>Access: Ownership</p> <ul> <li> <p>Shorthand</p> <pre><code>for item in collection\n</code></pre> </li> <li> <p>Equivalent to</p> <pre><code>for item in IntoIterator::into_iter(collection)\n</code></pre> </li> </ul> <p>Access: Read-Only</p> <ul> <li> <p>Shorthand</p> <pre><code>for item in &amp;collection\n</code></pre> </li> <li> <p>Equivalent to</p> <pre><code>for item in collection.iter()\n</code></pre> </li> </ul> <p>Access: Read-Write</p> <ul> <li> <p>Shorthand</p> <pre><code>for item in &amp;mut collection\n</code></pre> </li> <li> <p>Equivalent to</p> <pre><code>for item in collection.iter_mut()\n</code></pre> </li> </ul>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#while","title":"<code>while</code>","text":"<pre><code>let mut samples = vec![];\n\nwhile samples.len() &lt; 10 {\n   let sample = take_sample();\n   if is_outlier(sample) {\n      continue;\n   }\n\n   samples.push(sample);\n}\n</code></pre> <p>iterate over collection:</p> <pre><code>let arr = [10, 20, 30, 40, 50];\nlet mut idx = 0;\n\nwhile idx &lt; 5 {\n  println!(\"the value is: {}\", arr[idx]);\n  idx += 1;\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#loop","title":"<code>loop</code>","text":"<p>in Rust <code>loop</code> is preferred over <code>while</code>.</p> <pre><code>let mut counter = 0;\nlet result = loop {\n   counter += 1;\n   if counter == 10 {\n    break counter * 2;\n   }\n};\n\nprintln!(\"The result is {result}\");\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#continue","title":"<code>continue</code>","text":"<p><code>continue</code> a llows to skip the rest of the interation.</p> <pre><code>for n in 0..10 {\n  if n % 2 == 0 {\n    continue;\n  }\n  //...\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#break","title":"<code>break</code>","text":"<p><code>break</code> can be used to exit the current loop or to exit a specific loop with <code>break '&lt;label&gt;;</code> . The <code>break</code> keyword also return a value, by default <code>()</code> or what is defined e.g. <code>break 123;</code></p> <pre><code>'outer: for x in 0.. {\n  for y in 0.. {\n    for z in 0.. {\n      if x + y + z &gt; 1000 {\n        break 'outer;\n      }\n      //...\n    }\n  }\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#match","title":"<code>match</code>","text":"<p><code>match</code> is perform an action depeding on the value / variant or <code>enums</code>. A <code>match</code> needs to have an arm for all possibilities. With <code>_</code> or <code>other</code> the match can be made exhaustive.</p> <pre><code>fn main() {\n  let x = Some(5);\n  match x {\n      Some(n) =&gt; println!(\"Value is {}\", n),\n      None =&gt; println!(\"No value\"),\n  }\n  match x {\n      Some(n) =&gt; println!(\"Value is {}\", n),\n      _ =&gt; println!(\"No value\"),\n  }\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#if-let","title":"<code>if let</code>","text":"<p><code>if let</code> is similar to match but is not exhaustive. All others values are ignored.</p> <pre><code>fn main() {\n  let x = Some(5);\n  if let Some(n) = x {\n      println!(\"Value is {}\", n);\n  }\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#let-else","title":"<code>let else</code>","text":"<p><code>let else</code> is similar to <code>if let</code> but if allows to early exit if the pattern does'nt match.</p> <pre><code>let x = Some(5);\nlet Some(n) = x else {\n    println!(\"No value\");\n    return;\n};\n\nprintln!(\"Value is {}\", n);\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#while-let","title":"<code>while let</code>","text":"<p><code>while let</code> - Loop that runs as long as a pattern keeps matching.</p> <pre><code>let mut iter = Some(3);\n\nwhile let Some(n) = iter {\n    println!(\"Got {}\", n);\n    iter = None; // stop the loop\n}\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#format-printlnand-print-macros","title":"<code>format!()</code>, <code>println!()</code>and <code>print!()</code> Macros","text":"<p>These marcos are a very powerful tool to format strings. <code>format!()</code> formats a string and returns it, <code>println!()</code> prints the formatted string to the console and <code>print!()</code> does the same but without a newline.</p> <p>The Rust documentation provides a good overview of the formatting syntax: std::fmt.</p> <pre><code>format!(format_string, arguments...)\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#formatting","title":"Formatting","text":"<pre><code>formatting = [argument][:][[fill]align][sign][#][0][width][.precision][type]\nargument   = integer | identifier\nfill       = &lt;any character&gt;\nalign      = \"&lt;\" | \"&gt;\" | \"^\"\nsign       = \"+\"\n\"#\"        = alternate formatting\n\"0\"        = zero-padding\nwidth      = integer\nprecision  = integer\ntype       = \"b\" | \"o\" | \"x\" | \"X\" | \"e\" | \"E\" | \"p\" | \"?\"\n</code></pre> <pre><code>\"{\" [argument][\":\"][[fill]align][sign][\"#\"][\"0\"][width][.precision][type] \"}\"\n        /             /    /      /    /    /                \\        \\\n       /             /    /      /    /    |                  \\        \\\n      /             /    /      /    /     |- padding \"0\"      \\        |\n     /             /    /      /    |                           \\       |\n    /             /    /      |     |- alternate formatting      \\      |\n   /             /    /       |     |- (human-reable)             \\     |\n  /             /    /        |                                    |    |\n |             /    /         |- \"\" - default                      |    |\n |            /    /          |- + - + prefix        by tschinz    |    |\n |           /    |                                                |    |\n |          /     |                  nbr of descendants - integer -|    |\n |         |      |                                                     |\n |         |      |- &lt; - left (default)      \"\" - default follows type -|\n |         |      |- &gt; - right              \"b\" - binary ---------------|\n |         |      |- ^ - center             \"o\" - octal ----------------|\n |         |                                \"x\" - hex ------------------|\n |         |- any character for padding     \"X\" - Hex ------------------|\n |                                          \"e\" - scientific -----------|\n |- \"\" - follows arg sequence (default)     \"E\" - Scientific -----------|\n |- integer - selects arg by position       \"p\" - pointer addr ---------|\n |- identifier - selects arg by name        \"?\" - debug (trait req) ----|\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#arguments","title":"Arguments","text":"<pre><code>let s = format!(\"Hello, {}, the answer is {}\", \"Alice\", 42);                  // Positional Arguments\nlet s = format!(\"Hello, {name}, the answer is {age}\", name = \"Bob\", age = 7); // Named Arguments\nlet s = format!(\"{0} is {1} years old. {0} loves Rust!\", \"Carol\", 25);      // Reusing Arguments\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#align","title":"Align","text":"<p>Align a text on a given width</p> <pre><code>format!(\"{:&lt;8}\", 1);  // 1....... - left   aligned\nformat!(\"{:&gt;8}\", 1);  // .......1 -  right aligned\nformat!(\"{:^8}\", 1);  // ...1.... - center aligned\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#padding","title":"Padding","text":"<p>For <code>0</code> there are tow padding possibilities. The  <code>0</code> and <code>0+</code>. The <code>0</code> padding is only allowed for numeric types and the <code>0+</code> padding is only allowed for signed numeric types.</p> <pre><code>format!(\"{:*&lt;8}\", 1); // 1******* - left  align, padding \"*\"\nformat!(\"{:0&gt;8}\", 1); // 00000001 - right align, padding \"0\"\nformat!(\"{:&gt;08}\", 1); // 00000001 - right align, padding leading \"0\"\nformat!(\"{: &gt;8}\", 1); //        1 - right align, padding \" \"\nformat!(\"{:#^8}\", 1); // ###1#### - right align, padding \"#\"\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#sign","title":"Sign","text":"<p>Only the \"+\" sign is allowed for the sign. For the \"-\" sign simply use a negative value</p> <pre><code>format!(\"{:&gt;+8}\", 1);   //       +1 - right align, sign +\nformat!(\"{:&gt;8}\", -1);   //       -1 - right align, sign -\nformat!(\"{:&gt;+#08}\", 1); // +0000001 - right align, sign +, padding leading \"0\"\nformat!(\"{:0&gt;+#8}\", 1); // 000000+1 - right align, padding \"0\", sign +\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#precision","title":"Precision","text":"<p>Number of digits of floating point numbers</p> <pre><code>format!(\"{:&gt;8.0}\", E); //        3  - right align, 0 digit precision\nformat!(\"{:&gt;8.1}\", E); //      2.7  - right align, 1 digit precision\nformat!(\"{:&gt;8.2}\", E); //     2.72  - right align, 2 digit precision\nformat!(\"{:&gt;8.3}\", E); //    2.718  - right align, 3 digit precision\nformat!(\"{:&gt;8.4}\", E); //   2.7183  - right align, 4 digit precision\nformat!(\"{:&gt;8.5}\", E); //  2.71828  - right align, 5 digit precision\nformat!(\"{:&gt;8.6}\", E); // 2.718282  - right align, 6 digit precision\nformat!(\"{:&gt;8.7}\", E); // 2.7182818 - right align, 7 digit precision\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#type","title":"Type","text":"<p>Display a value in a specific format</p> <pre><code>format!(\"{:}\", E as u32);        // 2                     - Integer (follows type)\nformat!(\"{:}\", E);               // 2.718281828459045     - Float (follows type)\nformat!(\"{:b}\", 49374);          // 1100000011011110      - Binary\nformat!(\"{:#b}\", 49374);         // 0b1100000011011110    - Binary alternative (adds \"0b\")\nformat!(\"{:#034b}\", 49374);      // 0b00000000000000001100000011011110 - Binary 32bit (adds \"0b\" and 32 digits)\nformat!(\"{:o}\", 49374);          // 140336                - Octal\nformat!(\"{:#o}\", 49374);         // 0o140336              - Octal alternative (adds \"0o\")\nformat!(\"{:#018o}\", 49374);      // 0o0000000000140336    - Octal 16 digits (adds \"0o\" and 16 digits)\nformat!(\"{:x}\", 49374);          // c0de                  - Hex lower case\nformat!(\"{:#x}\", 49374);         // 0xc0de                - Hex lower case alternative (adds \"0x\")\nformat!(\"{:#010x}\", 49374);      // 0x0000c0de            - Hex 8 digits (adds \"0x\" and 8 digits)\nformat!(\"{:X}\", 49374);          // C0DE                  - Hex upper case\nformat!(\"{:#X}\", 49374);         // 0xC0DE                - Hex upper case alternative (adds \"0X\")\nformat!(\"{:#010X}\", 49374);      // 0x0000C0DE            - Hex 8 digits (adds \"0X\" and 8 digits)\nformat!(\"{:e}\", E.powf(123.0));  // 2.6195173187490456e53 - Scientific notation lower case (adds \"e\")\nformat!(\"{:E}\", E.powf(123.0));  // 2.6195173187490456E53 - Scientific notation upper case (adds \"E\")\nformat!(\"{:p}\", &amp;1);             // 0x1021872c0           - Pointer address\n// ? requires the Debug trait to be implemented for the type\nformat!(\"{:?}\", vec![1, 2, 3]);  // [1, 2, 3]             - Compact Debug Format (single line)\nformat!(\"{:#?}\", vec![1, 2, 3]); // [                     - Pretty Debug Format (human-readable)\n                                 //     1,\n                                 //     2,\n                                 //     3,\n                                 // ]\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/syntax.html#examples","title":"Examples","text":"<pre><code>format!(\"{0:.&gt;+10.3e}\",E);   // ..+2.718e0 - right align, padding \".\", sign \"+\", 10 width, 3 digit precision, scientific notation\nformat!(\"{0:#010x}\", 49374); // 0x0000c0de - padding leading \"0\", 8 digits, Hex lower case alternative (adds \"0x\")\n</code></pre>","tags":["coding","rust","syntax"]},{"location":"coding/rust/testing.html","title":"Testing","text":"<p>The rust compilator is already checking a lot of elements such as the lifetime and borrow checker.</p> <p>If a new rust library is created it includes a test modules and a test prewritten</p> <pre><code>cargo new adder --lib\n</code></pre> lib.rs<pre><code>#[cfg(test)]             // test attribute\nmod tests {              // test modules\n  #[test]                // test attribute\n  fn it_works() {        // test function\n    asser_eq!(2 + 2, 4);\n  }\n}\n</code></pre> <p>tests can be run with the command</p> <pre><code>cargo test\n\nCompiling adder v0.1.0 (/Users/tschinz/work/repo/my/rustadventures/adder)\n Finished test [unoptimized + debuginfo] target(s) in 0.90s\n  Running unittests src/lib.rs (target/debug/deps/adder-69b2fd04cbe83dba)\n\nrunning 1 test\ntest tests::it_works ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n  Doc-tests adder\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n</code></pre> lib.rs<pre><code>#[cfg(test)]             // test attribute\nmod tests {              // test modules\n  #[test]                // test attribute\n  #[test]                // optional ignored attribute (by default not run)\n  fn it_doesnt_works() { // test function\n    panic!(\"Test which fails\")\n  }\n}\n</code></pre> <p>With the environment variable <code>RUST_BACKTRACE=1</code> a backtrace will be display upon failing.</p>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#cargo-test-commands","title":"<code>cargo test</code> commands","text":"<p>with <code>--</code> command line arguments can be send to the resulting test binary.</p> <pre><code>cargo test  # compiles and executes the testcode\n            # all prints statements of passing tests are hidden\n            # all tests run in parallel in a seperate thread\n\ncargo test --help     # all command line options for the cargo test command\ncargo test -- --help  # all command line options for the resulting test binary\n\ncargo test -- --test-threads=1 # only one thread used\n\ncargo test -- --show-output # shows output of all tests (passed and failing)\n</code></pre> <p>run only specific tests</p> <pre><code>cargo test &lt;testfnname&gt; # only run one specific test\ncargo test one_hundred  # only run test with the function name \"one_hundred\"\n\ncargo test add   # only test with the function name starting with add.* will run\n\ncargo test tests::  # only run tests from the module called tests\n\ncargo test -- --ignored # runs only the test functions with the attribute ignored\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#test-attributes","title":"test attributes","text":"","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#assert-commands","title":"<code>assert</code> commands","text":"<p>for the <code>assert_eq</code> and <code>assert_ne</code> both input arguments need PartialEq and Debug traits implemented.</p> <pre><code>assert!(true);\nassert_eq!(4, add_two(2));\nsassert_ne!(3, add_two(2));\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#examples","title":"Examples","text":"<pre><code>// implementation of the code\n#[derive(Debug)]\nstruct Rectangle {\n  width: u32,\n  height: u32,\n}\nimpl Rectangle {\n  fn can_hold(&amp;self, other: &amp;Rectangle) -&gt; bool {\n    self.width &gt; other.width &amp;&amp; self.height &gt; other.height;\n  }\n}\n\n// test module for the code\n#[cfg(test)]\nmod tests {\n  use super::*; //bring into scope\n\n  #[test]\n  fn larger_can_hold_smaller() {\n    let larger = Rectangle{\n      width: 8,\n      height: 7,\n    }\n    let smaller = Rectangle{\n      width: 5,\n      height: 1,\n    }\n\n    assert!(larger.can_hold(&amp;smaller));  // tests\n  }\n\n  #[test]\n  fn smaller_cannot_hold_larger() {\n    let larger = Rectangle{\n      width: 8,\n      height: 7,\n    }\n    let smaller = Rectangle{\n      width: 5,\n      height: 1,\n    }\n\n    assert!(!smaller.can_hold(&amp;larger));  // tests\n  }\n}\n</code></pre> <pre><code>// implementation of the code\npub fn add_two(a: i32) -&gt; i32 {\n  a + 2\n}\n\n// test module for the code\n#[cfg(test)]\nmod tests {\n  use super::*; //bring into scope\n\n  #[test]\n  fn it adds_two() {\n    assert_eq!(4, add_two(2));\n  }\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#custom-error-messages","title":"Custom Error Messages","text":"<pre><code>pub fn greeting(name: &amp;str) -&gt; String {\n  format!(\"Hello {}!\", name)\n}\n\n#[cfg(test)]\nmod tests {\n  use super::*;\n\n  #[test]\n  fn greeting_contains_name() {\n    let result = greeting(\"Carol\");\n    assert!(\n      result.contains(\"Carol\"),\n      \"Greeting did not contain name, value was `{}`\", result\n    );\n  }\n}\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#test-to-assert-a-function-failure","title":"Test to assert a function failure","text":"<pre><code>pub struct Guess {\n  value: i32,\n}\n\nimpl Guess {\n  pub fn new(value: i32) -&gt; Guess {\n    if value &lt; 1 || value &gt; 100 {\n      panic!(\"Guess value must be between 1 and 100, got {}\", value);\n    }\n\n    Guess { value }\n  }\n}\n\n#[cfg(test)]\nmod tests {\n  use super::*;\n\n  #[test]          // attribute to indicate that it is a test\n  #[should_panic]  // attribute to indicate that the test function should panic\n  fn greater_tan_100() {\n    Guess::new(200);\n  }\n}\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#unit-test","title":"Unit Test","text":"<p>All above test examples are Unit Test. They are written directly in the program code files.</p> <p>The convention is the add the test code in the same file as the product code.</p> <pre><code>// Module code\npub fn add_two( a: i32) -&gt; i32 {\n  internal_adder(a, 2);\n}\n\nfn internal_adder(a:i32, b: i32) -&gt; i32 {\n  a + b\n}\n\n// Unit test code\n#[cfg(test)]       // attribute configuration is test (will only be run with cargo test)\nmod tests {        // convention to have the test module name called tests\n  use super::*;    // import everything from parent module\n\n  #[test]\n  fn internal() {  // since tests is a child module it can access all internal functions\n    assert_eq!(4, internal_adder(2,2));\n  }\n}\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/testing.html#integration-test","title":"Integration Test","text":"<p>Integration Tests live in the folder <code>tests</code> at the root of the project.</p> <ul> <li>No test module with the attribute <code>[cfg(test)]</code> is needed here.</li> <li>Each file in the <code>test/</code> folder is compiled as a crate and gets its own test section</li> <li>Files in subdirectories of <code>test/.../</code> are not compiled (e.g. used for common code)</li> <li><code>test/common/mod.rs</code></li> </ul> integration_test.rs<pre><code>use adder;\n\nmod common;\n\n#[test]\nfn it_adds_two() {\n  asser_eq!(4, adder::add_two(2));  // call public api not internal functions\n}\n</code></pre> <p>The integration test can be executed in multiple ways</p> <pre><code>cargo test  # executes all tests\n\ncargo test --test &lt;integration_test_file_name&gt;\ncargo test --test integration_test  # run only a specific integration test\n</code></pre>","tags":["coding","rust","testing"]},{"location":"coding/rust/toolchain.html","title":"Toolchain","text":"","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#rustup","title":"<code>rustup</code>","text":"<p><code>rustup</code> is an installer for the systems programming language Rust.</p>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#rustup-commands","title":"<code>rustup</code> Commands","text":"<pre><code>SUBCOMMANDS:\n    show           Show the active and installed toolchains or profiles\n    update         Update Rust toolchains and rustup\n    check          Check for updates to Rust toolchains and rustup\n    default        Set the default toolchain\n    toolchain      Modify or query the installed toolchains\n    target         Modify a toolchain's supported targets\n    component      Modify a toolchain's installed components\n    override       Modify directory toolchain overrides\n    run            Run a command with an environment configured for a given toolchain\n    which          Display which binary will be run for a given command\n    doc            Open the documentation for the current toolchain\n    man            View the man page for a given command\n    self           Modify the rustup installation\n    set            Alter rustup settings\n    completions    Generate tab-completion scripts for your shell\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#common-rustup-commands","title":"Common <code>rustup</code> commands","text":"<pre><code>rustup show                                     # shows installed toolchain\nrustup target add riscv32imac-unknown-none-elf  # adds riscv target\nrustup update                                   # updates the toolschain\nrustup toolchain list                           # lists the toolchain\nrustup doc                                      # opens the local documentation\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#rustc","title":"<code>rustc</code>","text":"<p><code>rustc</code> is the compiler for Rust.</p> <pre><code># Compile rust file\nrustc &lt;ifname&gt;.rs -o &lt;ofname&gt; -v\n\n# Compile with different outputname and verbose flag\nrustc &lt;ifname&gt;.rs -o &lt;ofname&gt; -v\n\n# Compile rust to a library\nrustc --crate-type lib rustc &lt;ifname&gt;.rs\n\n# Compile rust file for a specifiy target\nrustc --target target_arch &lt;ifname&gt;.rs\n\n# Create documentation for a Rust library\nrustc --document &lt;ifname&gt;.rs\n</code></pre> Target Explanation <code>x86_64-unknown-linux-gnu</code> x86 64bit Linux <code>x86_64-apple-darwin</code> x86 64bit MacOS <code>x86_64-pc-windows-gnu</code> x86 64bit MinGW on Windows <code>aarch64-unknown-linux-gnu</code> Arm 64bit Linux <code>aarch64-apple-darwin</code> Arm 64bit MacOS (Apple Silicon) <code>riscv32imac-unknown-none-elf</code> RISC-V rv32i","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#example","title":"Example","text":"<pre><code>rustc hello.rs\n</code></pre> <pre><code>rustc --target riscv32imac-unknown-none-elf -o hello main.rs\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#cargo","title":"Cargo","text":"","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#cargo-commands","title":"Cargo Commands","text":"<pre><code>Some common cargo commands are (see all commands with --list):\n  build, b    Compile the current package\n  check, c    Analyze the current package and report errors, but don't build object files\n  clean       Remove the target directory\n  doc, d      Build this package's and its dependencies' documentation\n  new         Create a new cargo package\n  init        Create a new cargo package in an existing directory\n  add         Add dependencies to a manifest file\n  remove      Remove dependencies from a manifest file\n  run, r      Run a binary or example of the local package\n  test, t     Run the tests\n  bench       Run the benchmarks\n  update      Update dependencies listed in Cargo.lock\n  search      Search registry for crates\n  publish     Package and upload this package to the registry\n  install     Install a Rust binary. Default location is $HOME/.cargo/bin\n  uninstall   Uninstall a Rust binary\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#install-a-package","title":"Install a package","text":"<pre><code>cargo search &lt;searchstring&gt;\n</code></pre> <pre><code>cargo install &lt;packagename&gt;\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#create-project","title":"Create project","text":"<pre><code>cargo new &lt;projectname&gt;       # creates package folder and initialises it\ncargo new --lib &lt;projectname&gt; # creates library package folder and initialises it\ncargo init                    # creates project in current folder\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#hello-world-project","title":"Hello World project","text":"<pre><code>cargo new hello         # create new hello world project in folder hello\ncd hello                # move into folder\ncargo run               # build and run project\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#compile","title":"Compile","text":"<pre><code># Build debug verions of the project with its dependencies\ncargo build\n\n# Build release version of the project with its dependencies\ncargo build --release\n\n# Build and generate also assember file\n# need to be assembler with tools like gas\ncargo rustc -- -- emit asm\n\n# Build and generate also assember file for another target\ncargo rustc --target riscv32i-unknown-none-elf -- --emit asm\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#common-cargo-commands","title":"Common cargo commands","text":"<pre><code># Build debug verions of the project with its dependencies\ncargo build\n\n# Build release version of the project with its dependencies\ncargo build --release\n\n# Builds debug version if necessary and runs the generated executable\ncargo run\n\n# Check project of errors without building a binary\ncargo check\n\n# Updates dependencies of a project with the latest version (patch version)\ncargo update\n\n# Cleans build artifacts\ncargo clean\n\n# Build html documentation for the code and its dependencies\ncargo doc\ncargo doc --open\n\n# Add package to current project\n# only works if ``cargo install cargo-edit`` is installed\ncargo add rand\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#cargo-profiles","title":"Cargo Profiles","text":"<p>Release Profiles configure the code compilation for <code>cargo</code>.</p> <p>Two main profiles are available ba default: <code>dev</code> and <code>release</code></p> <pre><code>cargo build           # dev build\ncargo build --release # release build\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#customise","title":"Customise","text":"Cargo.toml<pre><code># ...\n\n[profile.dev]\nopt-level = 0  # default\n\n[profile.release]\nopt-level = 3  # default\n\n# ...\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/toolchain.html#publishing-crate-at-cratesio","title":"Publishing Crate at crates.io","text":"<p>Unter crates.io generate a accesstoken for your device and enter it via the command line</p> <pre><code>cargo login &lt;api token&gt;\n</code></pre> <p>Verify crates metadata:</p> Cargo.toml<pre><code>[package]\nname = \"crates_name\" # must be unique within crates.io\nversion = \"1.0.0\"\nauthors = [\"tschinz\"]\nedition = \"2023\"\ndescription = \"library description\"\nlicense = \"MIT\"\n\n# ...\n</code></pre> <p>Publish the crate to crates.io</p> <pre><code>cargo publish\n</code></pre> <p>Disallow the download of a specific crate version in crates.io</p> <pre><code>cargo yank --vers 1.0.0\n</code></pre>","tags":["coding","rust","toolchain"]},{"location":"coding/rust/traits.html","title":"Traits","text":"<p>Shared behaviour of objects.</p> <p>In the example summarize_author does not have a default implementation and needs to be implemented by all objects claiming the trait. summarize has a default implementation and does not need to be implemented by all objects.</p>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#implement-traits","title":"Implement traits","text":"<pre><code>pub struct NewsArticle {\n  pub author: String,\n  pub headline: String,\n  pub content: String,\n}\n\n// implement the summary trait for the struct NewsArticle\nimpl Summary for NewsArticle {\n  fn summarize_author(&amp;self) -&gt; String {\n    format!(\"{}\", self.author)\n  }\n}\n\npub struct Tweet {\n  pub username: String,\n  pub content: String,\n  pub reply: bool,\n  pub retweet: bool,\n}\n\n// implement the summary trait for the struct NewsArticle\nimpl Summary for Tweet {\n  fn summarize_author(&amp;self) -&gt; String {\n    format!(\"@{}\", self.username)\n  }\n  fn summarize(&amp;self) -&gt; String {\n    format!(\"{}, by {}\", self.username, self.content)\n  }\n}\n\n// define the trait \"Summary\" without the implementation\npub trait Summary {\n  fn summarize_author(&amp;self) -&gt; String; // only body without default implementation\n\n  fn summarize(&amp;self) -&gt; String {       // with default implementation\n    String::from(\"(Read more from {} ...)\", self.summarize_author())\n  }\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#function-needing-trait-objects","title":"Function needing trait objects","text":"<p>Implement functions needing objects implementing a given trait</p> <pre><code>// define method for object using a trait with the impl syntax\npub fn notify(item: &amp;impl Summary) {\n  println!(\"Breaking news! {}\", item.summarize());\n}\n\n// or can be defined like this with the trait-bound syntax\npub fn notify&lt;T: Summary&gt;(item: &amp;T) {\n  println!(\"Breaking news! {}\", item.summarize());\n}\n\n//---------------------------------------------------------------------------\n// needing multiple traits with impl syntax\npub fn notify(item1: &amp;(impl Summary + Display), item2: &amp;impl Summary) {\n  // ...\n}\n\n// needing multiple traits with the trait-bound syntax\npub fn notify&lt;T: Summary + Display&gt;(item1: &amp;T, item2: &amp;impl T) {\n  // ...\n}\n\n//---------------------------------------------------------------------------\n// Can become quite compilated to read\npub some_function&lt;T: Display + Clone, U: Clone + Debug&gt;(t: &amp;T, u: &amp;U) -&gt; i32 {\n // ...\n}\n\n// can be simplified with the where clause\npub some_function&lt;T, U&gt;(t: &amp;T, u: &amp;U) -&gt; i32\n where T: Display + Clone,\n       U: Clone + Debug\n{\n  // ...\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#return-values","title":"Return values","text":"<pre><code>fn returns_summarizable() -&gt; impl Summary {  // returns a object implementing the Summary trait\n  Tweet {\n    username: String::from(\"horse_ebook\"),\n    content: String::from(\"tweet content\"),\n    reply: false,\n    retweet: false,\n  }\n}\n\nfn main() {\n println!(\"{}\", returns_summarizable().summarize());\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#conditionally-implement-methods-using-trait-bounds","title":"Conditionally Implement Methods using trait bounds","text":"<pre><code>use std::fmt::Display;\n\nstruct Pairt&lt;T&gt; {\n  x: T,\n  y: T,\n}\n\nimpl&lt;T&gt; Pair&lt;T&gt; {\n  fn new(x: T, y: T) -&gt; Self {\n    Self {x,y}\n  }\n}\n\nimpl&lt;T: Display+ PartialOrd&gt; Pair&lt;T&gt; {\n  fn cmp_display(&amp;self) {\n    if self.x &gt;= self.y {\n      println!(\"The largest member is x= {}\", self.x);\n    } else {\n      println!(\"The largest member is y= {}\", self.y);\n    }\n  }\n}\n</code></pre> <p>// implement a trait on a type implementing another trait </p><pre><code>// implement ToString trait on types implementing the Display trait\n   impl&lt;T: Display&gt; ToString for T {\n     //...\n   }\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#trait-implementation","title":"Trait implementation","text":"","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#deref-trait","title":"<code>deref</code> trait","text":"<pre><code>struct MyBox&lt;T&gt;(T);\n\nimpl&lt;T&gt; MyBox&lt;T&gt; {\n  fn new(x: T) -&gt; MyBox&lt;T&gt; {\n    MyBox(x)\n  }\n}\n\nimpl&lt;T&gt; DeRef for MyBox&lt;T&gt; {\n  type Target = T;\n\n  //fn deref(&amp;self) -&gt; &amp;Self::Target {\n  fn deref(&amp;self) -&gt; &amp;T {\n    &amp;self.0\n  }\n}\n\nfn main() {\n   let x = 5;\n   let y = myBox::new(x); // smart pointer\n\n   assert_eq!(5, x);\n   assert_eq!(5, *y);\n   // assert_eq!(5, *(y.defref()));  // thats what rust used\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#deref-coercion","title":"deref coercion","text":"<p>Deref can happen automatically for types implementing the deref trait. Converts a reference from one type to another type.</p> <p>Rust does deref coercion in three cases:</p> <ul> <li>From <code>&amp;T</code> to <code>&amp;U</code> when <code>T: Deref&lt;Target=U&gt;</code></li> <li>From <code>&amp;mut T</code> to <code>&amp;mut U</code> when <code>T DerefMut&lt;Target=U&gt;</code></li> <li>From <code>&amp;mut T</code> to <code>&amp;U</code> when <code>T: Deref&lt;Target=U&gt;</code></li> </ul> <pre><code>fn main(){\n  let m: = MyBox::new(String::from(\"Rust\"));\n  hello(&amp;m);\n  // &amp;MyBox&lt;String&gt; -&gt; &amp;String -&gt; &amp;str //deref coercion happens in two steps here\n}\n\nfn hello(name: &amp;str) {\n  println!(\"Hello, {}!\", name)\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#drop-trait","title":"<code>drop</code> trait","text":"<p>Can be implemented at any type and defines what happens if a variable goes out of scope. It is to cleanup allocated memory.</p> <pre><code>struct CustomSmartPointer {\n  data: String,\n}\n\nimpl Drop for CustomSmartPointer {\n  fn drop(&amp;mut self) {\n    println:(\"Dropping CustomSmartPointer with data `{}`!\", self.data);\n  }\n}\n\nfn main() {\n  let c = CustomSmartPointer {\n    data: String::from(\"my stuff\"),\n  }\n  let d = CustomSmartPointer {\n    data: String::from(\"other stuff\"),\n  }\n\n  //optional manually execute drop\n  //c.drop() wrong potential twice free'd memory\n  drop(c);\n  println!(\"CustomSmartPointers created.\");\n}\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#conversion-traits","title":"Conversion Traits","text":"<p>Rust provides several traits for type conversions, allowing you to convert between types in a clean, idiomatic way. These include <code>From</code>, <code>Into</code>, <code>TryFrom</code>, <code>TryInto</code>, <code>AsRef</code>, and <code>AsMut</code>. Here's an overview:</p>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#from-and-into","title":"<code>From</code> and <code>Into</code>","text":"","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#from","title":"<code>From</code>","text":"<p>The <code>From</code> trait is used for infallible conversions between types. If you implement <code>From&lt;T&gt;</code> for a type <code>U</code>, you can create a <code>U</code> from a <code>T</code>.</p> <pre><code>impl From&lt;i32&gt; for String {\n    fn from(num: i32) -&gt; Self {\n        num.to_string()\n    }\n}\n\nlet num = 42;\nlet num_string: String = String::from(num); // Converts i32 to String\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#tryfrom-and-tryinto","title":"<code>TryFrom</code> and <code>TryInto</code>","text":"","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#tryfrom","title":"<code>TryFrom</code>","text":"<p>The <code>TryFrom</code> trait is used for fallible conversions, where the conversion might fail and return an error. It returns a `Result.</p> <pre><code>use std::convert::TryFrom;\n\nimpl TryFrom&lt;&amp;str&gt; for i32 {\n    type Error = std::num::ParseIntError;\n\n    fn try_from(value: &amp;str) -&gt; Result&lt;Self, Self::Error&gt; {\n        value.parse::&lt;i32&gt;()\n    }\n}\n\nlet parsed: Result&lt;i32, _&gt; = i32::try_from(\"42\"); // Ok(42)\nlet invalid: Result&lt;i32, _&gt; = i32::try_from(\"abc\"); // Err(ParseIntError)\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#tryinto","title":"<code>TryInto</code>","text":"<p>The <code>TryInto</code> trait is the reciprocal of <code>TryFrom</code>. If you implement <code>TryFrom&lt;T&gt;</code> for a type <code>U</code>, <code>TryInto&lt;U&gt;</code> is automatically implemented for <code>T</code>.</p> <pre><code>let parsed: Result&lt;i32, _&gt; = \"42\".try_into(); // Ok(42)\nlet invalid: Result&lt;i32, _&gt; = \"abc\".try_into(); // Err(ParseIntError)\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#asref-and-asmut","title":"<code>AsRef</code> and <code>AsMut</code>","text":"","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#asref","title":"<code>AsRef</code>","text":"<p>The <code>AsRef</code> trait is used for creating immutable references of one type from another. It\u2019s primarily used for borrowing and works with types like <code>String</code>, <code>Vec&lt;T&gt;</code>, etc.</p> <pre><code>impl AsRef&lt;str&gt; for String {\n    fn as_ref(&amp;self) -&gt; &amp;str {\n        self\n    }\n}\n\nlet my_string = String::from(\"hello\");\nlet my_str: &amp;str = my_string.as_ref(); // Borrow a &amp;str from a String\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#asmut","title":"<code>AsMut</code>","text":"<p>The <code>AsMut</code> trait is similar to <code>AsRef</code>, but it creates mutable references.</p> <pre><code>impl AsMut&lt;str&gt; for String {\n    fn as_mut(&amp;mut self) -&gt; &amp;mut str {\n        self\n    }\n}\n\nlet mut my_string = String::from(\"hello\");\nlet my_str: &amp;mut str = my_string.as_mut(); // Borrow a &amp;mut str from a String\n</code></pre>","tags":["coding","rust","traits"]},{"location":"coding/rust/traits.html#summary-table","title":"Summary Table","text":"Trait Direction Use Case <code>From</code> T -&gt; U Infallible conversion from T to U <code>Into</code> T -&gt; U Reciprocal of <code>From</code> <code>TryFrom</code> T -&gt; U Fallible conversion from T to U <code>TryInto</code> T -&gt; U Reciprocal of <code>TryFrom</code> <code>AsRef</code> T -&gt; &amp;U Borrow an immutable reference to U from T <code>AsMut</code> T -&gt; &amp;mut U Borrow a mutable reference to U from T","tags":["coding","rust","traits"]},{"location":"coding/rust/workspaces.html","title":"Workspaces","text":"<p>Cargo workspaces allows to organise big projects. Allows develop multiple packages in tandem with only one common <code>Cargo.lock</code> file and profile settings. Packages in a workspace can depend on each other.</p> Cargo.toml<pre><code>[workspace]\n\nmembers = [\n \"adder\",\n \"add-one\",\n]\n</code></pre>","tags":["coding","rust","workspaces"]},{"location":"coding/rust-embedded/index.html","title":"Rust Embedded","text":"","tags":["coding","rust","embedded"]},{"location":"coding/rust-embedded/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","rust","embedded"]},{"location":"coding/rust-embedded/index.html#introduction","title":"Introduction","text":"<p>This section covers my learning of Rust on embedded devices. The main device this documentation is intended for are Espressive SoC's.</p>","tags":["coding","rust","embedded"]},{"location":"coding/rust-embedded/index.html#references","title":"References","text":"<ul> <li>esp-rs github - ESP Rust github page</li> <li>esp-rs book - ESP Rust Book</li> <li>esp-rust-board - Open Source Rust ESP Development Board</li> </ul>","tags":["coding","rust","embedded"]},{"location":"coding/rust-embedded/index.html#other-resources","title":"Other Resources","text":"<ul> <li>The Rust Programming Language - If you aren't familiar with Rust we recommend reading this book first.</li> <li>The Embedded Rust Book - Here you canfind several other resources provided by Rust's Embedded Working Group.</li> <li>The Embedonomicon - The nitty-gritty details when doing embedded programming in Rust.</li> <li>Awesome ESP Rust - A curated list of resouces for development in the Rust programming language for ESP32, ESP32-C2/C3/C6, ESP32-H2, and ESP32-S2/S3.</li> </ul>","tags":["coding","rust","embedded"]},{"location":"coding/rust-embedded/install.html","title":"Install and Setup","text":"","tags":["coding","rust","embedded","install"]},{"location":"coding/rust-embedded/riscv.html","title":"RISC-V","text":"<p>More information on: RISC-V Cross Compilation</p>","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/rust-embedded/riscv.html#install","title":"Install","text":"<p>Add cross compile tools to</p> <pre><code># Debian\napt-get install gcc-riscv64-linux-gnu\n</code></pre> <pre><code># MacOS\nbrew tap riscv/riscv &amp;&amp; brew install --cc=gcc-10 riscv-tools\n</code></pre> <p>Tier 3 target with <code>no_std</code> support</p> <pre><code>rustup target add riscv32imac-unknown-none-elf\nrustup target add riscv32i-unknown-none-elf\n</code></pre> <p>Tier 2 target with <code>std</code> support</p> <pre><code>rustup target add riscv64gc-unknown-linux-gnu\n</code></pre>","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/rust-embedded/riscv.html#compile","title":"Compile","text":"","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/rust-embedded/riscv.html#rustc","title":"<code>rustc</code>","text":"<pre><code># compile for riscv target\nrustc --target riscv32imac-unknown-none-elf &lt;ifname&gt;.rs\nrustc --target riscv64gc-unknown-linux-gnu &lt;ifname&gt;.rs\n\n# compile and get assembler code\nrustc --target riscv32i-unknown-none-elf --emit asm &lt;ifname&gt;.rs\nrustc --target riscv64gc-unknown-linux-gnu --emit asm &lt;ifname&gt;.rs\n</code></pre>","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/rust-embedded/riscv.html#cargo","title":"<code>cargo</code>","text":"<pre><code>cargo rustc --target riscv32imac-unknown-none-elf -- --emit asm\ncargo rustc --target riscv64gc-unknown-linux-gnu -- --emit asm\n</code></pre>","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/rust-embedded/riscv.html#check","title":"Check","text":"<p>Check if the architecture is for riscv target</p> <pre><code>readelf -h &lt;binfname&gt; | grep \"Machine\"\n</code></pre>","tags":["coding","rust","embedded","risc-v"]},{"location":"coding/scala/index.html","title":"Scala","text":"","tags":["coding","scala"]},{"location":"coding/scala/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","scala"]},{"location":"coding/scala/index.html#introduction","title":"Introduction","text":"<ul> <li>Scala Cheatsheet</li> </ul>","tags":["coding","scala"]},{"location":"coding/scala/index.html#references","title":"References","text":"<ul> <li>Scala</li> <li>Scala SBT</li> </ul>","tags":["coding","scala"]},{"location":"coding/scala/index.html#documentation","title":"Documentation","text":"<ul> <li>Scala API Docs</li> <li>Scala SBT Docs</li> </ul>","tags":["coding","scala"]},{"location":"coding/scala/basic.html","title":"Basics","text":"","tags":["coding","scala"]},{"location":"coding/scala/basic.html#comments","title":"Comments","text":"<pre><code>// Singleline Comment\n/*\nMultiline\nComment\n*/\n</code></pre>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#types","title":"Types","text":"Type Description Range <code>Byte</code> <code>8 bit</code> signed value <code>-128</code> to <code>127</code> <code>Short</code> <code>16 bit</code> signed value <code>-32768</code> to <code>32767</code> <code>Int</code> <code>32 bit</code> signed value <code>-2147483648</code> to <code>2147483647</code> <code>BitInt</code> Very big integer signed value <code>Long</code> <code>64 bit</code> signed value <code>-9223372036854775808</code> to <code>9223372036854775807</code> <code>Float</code> <code>32 bit</code> IEEE 754 single-precision float <code>-3.4028235E38</code> to <code>3.4028235E38</code> <code>Double</code> <code>64 bit</code> IEEE 754 double-precision float <code>-1.7976931348623157E308</code>to <code>1.7976931348623157E308</code> <code>BitDecimal</code> Very big floatingpoint value <code>Char</code> <code>16 bit</code> unsigned Unicode character <code>U+0000</code> to <code>U+FFFF</code> <code>String</code> A sequence of Chars <code>Boolean</code> Either the literal true or the literal false <code>true</code>, <code>false</code> <code>Unit</code> Corresponds to no value <code>Null</code> null or empty reference","tags":["coding","scala"]},{"location":"coding/scala/basic.html#array","title":"Array","text":"<p>Fixed length array</p> <pre><code>val favNums = new Array[Int](20)\n\nval friends = Array(\"Bob\", \"Alice\")\nfriends(0) = \"Maja\"\n</code></pre>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#arraybuffer","title":"ArrayBuffer","text":"<p>Array of undefined length</p> <pre><code>val friends = ArrayBuffer[String]()\nfriends.insert(0, \"Maja\")\nfriends += \"Katja\"\n\nfriends ++= Array(\"Bob\", \"Alice\")\n\nfriends.insert(2, \"Maja\", \"Katja\")\n\nfriends.remove(2,3)\n</code></pre>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#operators","title":"Operators","text":"<p>In all examples</p> <pre><code>var a = 10\nvar b = 20\n</code></pre>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#arithmetic","title":"Arithmetic","text":"Operator Description Example <code>+</code> Adds two operands <code>a + b =&gt; 30</code> <code>-</code> Subtracts second operand from the first <code>a - b =&gt; -10</code> <code>*</code> Multiplies both operands <code>a * b =&gt; 200</code> <code>/</code> Divides numerator by the de-numerator <code>b / a =&gt; 2</code> <code>%</code> Modulus operator finds the remainer after division of one number by another <code>b % a =&gt; 0</code>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#relational","title":"Relational","text":"Operator Description Example <code>==</code> Checks if values if two operands are equal <code>a == b =&gt; false</code> <code>!=</code> Checks if values of two operands are not equal <code>a != b =&gt; true</code> <code>&gt;</code> Checks if left operands is greater than the right <code>a &gt; b =&gt; false</code> <code>&lt;</code> Checks if left operands is less than the right <code>a &lt; b =&gt; true</code> <code>&gt;=</code> Checks if left operands is greater or equal than the right <code>a &gt;= b =&gt; false</code> <code>&lt;=</code> Checks if left operands is less or equal than the right <code>a &lt;= b =&gt; true</code>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#logical","title":"Logical","text":"Operator Description Example <code>&amp;&amp;</code> It is called Logical AND operator <code>(a &amp;&amp; b) =&gt; false</code> <code>||</code> It is called Logical OR Operator <code>(a || b) =&gt; true</code> <code>!</code> It is called Logical NOT Operator <code>!(a &amp;&amp; b) =&gt; true</code>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#bitwise","title":"Bitwise","text":"<p>Performs bit by bit operation</p> Operator Description Example <code>&amp;</code> Binary AND Operator copies a bit to the result if it exists in both operands. <code>(a &amp; b) =&gt; 0000 1100 = 12</code> <code>|</code> Binary OR Operator copies a bit if it exists in either operand. <code>(a | b) =&gt; 0011 1101 = 61</code> <code>^</code> Binary XOR Operator copies the bit if it is set in one operand but not both. <code>(a ^ b) =&gt; 0011 0001 = 49</code> <code>~</code> Binary Ones Complement Operator is unary and has the effect of 'flipping' bits. <code>(~a) =&gt; 1100 0011 = -61</code> <code>&lt;&lt;</code> Binary Left Shift Operator. The bit positions of the left operands value is moved left by the number of bits specified by the right operand. <code>a &lt;&lt; 2 =&gt; 1111 0000 = 240</code> <code>&gt;&gt;</code> Binary Right Shift Operator. The Bit positions of the left operand value is moved right by the number of bits specified by the right operand. <code>a &gt;&gt; 2 =&gt; 1111 = 15</code> <code>&gt;&gt;&gt;</code> Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros. <code>a &gt;&gt;&gt; 2 =&gt; 0000 1111 = 15</code>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#assignments","title":"Assignments","text":"Operator Description Example <code>=</code> Simple assignment operator, Assigns values from right side operands to left side operand <code>c = a + b</code> <code>+=</code> Add AND assignment operator, It adds right operand to the left operand and assign the result to left operand <code>c += a</code> <code>-=</code> Subtract AND assignment operator, It subtracts right from the left and assign the result to left operand <code>c -= a</code> <code>*=</code> Multiply AND assignment operator, It multiplies right with the left and assign the result to left operand <code>c *= a</code> <code>/=</code> Divide AND assignment operator, It divides left operand with the right operand and assign the result to left <code>c /= a</code> <code>%=</code> Modulus AND assignment operator, It takes modulus using two operands and assign the result to left operand <code>c %= a</code> <code>&lt;&lt;=</code> Left shift AND assignment operator <code>c &lt;&lt;= a</code> <code>&gt;&gt;=</code> Right shift AND assignment operator <code>c &gt;&gt;= a</code> <code>&amp;=</code> Bitwise AND assignment operator <code>c &amp;= a</code> <code>^=</code> Bitwise exclusive OR and assignment operator <code>c ^= a</code> <code>|=</code> Bitwise inclusive OR and assignment operator <code>c |= a</code>","tags":["coding","scala"]},{"location":"coding/scala/basic.html#operator-priority","title":"Operator Priority","text":"Category Operator Associativity Postfix <code>() []</code> Left to right Unary <code>! ~</code> Right to right Multiplicative <code>* / %</code> Left to right Additive <code>+ -</code> Left to right Shift <code>&gt;&gt; &gt;&gt;&gt; &lt;&lt;</code> Left to right Relational <code>&gt; &gt;= &lt; &lt;=</code> Left to right Equality <code>== !=</code> Left to right Bitwise AND <code>&amp;</code> Left to right Bitwise XOR <code>^</code> Left to right Bitwise OR <code>|</code> Left to right Logical AND <code>&amp;&amp;</code> Left to right Logical OR <code>||</code> Left to right Assignment <code>= += -= *= /= %= &gt;&gt;= &lt;&lt;= &amp;= ^= |=</code> Right to right Comma <code>,</code> Left to right","tags":["coding","scala"]},{"location":"coding/scala/coding_convention_spinalhdl.html","title":"Coding Convention for SpinalHDL","text":"","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#introduction","title":"Introduction","text":"<p>The coding conventions used in SpinalHDL are the same as the ones documented in the scala doc.</p> <p>Some additional practical details and cases are explained in next chapters.</p>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#class-vs-case-class","title":"class vs case class","text":"<p>When you define a <code>Bundle</code> or a <code>Component</code>, have a preference to declare them as <code>case class</code>.</p> <p>The reasons are:</p> <ul> <li>It avoids the use of <code>new</code> keywords. Never having to use it is better than sometimes under some conditions.</li> <li>A <code>case class</code> provides an <code>clone</code> function. This is useful in SpinalHDL where there is a need to clone one Bundle. For example, when you define a new <code>Reg</code> or a new <code>Stream</code> of some kind.</li> <li>Construction parameters are directly visible from outside.</li> </ul>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#case-class","title":"case class","text":"<p>Case class is an alternative way of declaring classes.</p> <pre><code>case class Rectangle(width: Float, height: Float) extends Shape {\n  override def getArea() = width * height\n}\n</code></pre> <p>Tere are some differences between <code>case class</code> and <code>class</code> :</p> <ul> <li>case classes don't need the <code>new</code> keyword to be instantiated</li> <li>construction parameters are accessible from outside, you don't need to define them as <code>val</code>.</li> </ul> <p>In SpinalHDL, this explains the reasoning behind the coding conventions: it's in general recommended to use <code>case class</code> instead of <code>class</code> in order to have less typing and more coherency.</p>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#case-class_1","title":"<code>case</code> class","text":"<p>All classes names should start with a upper case letter</p> <pre><code>class Fifo extends Component {\n\n}\n\nclass Counter extends Area {\n\n}\n\ncase class Color extends Bundle {\n\n}\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#companion-object","title":"companion object","text":"<p>A companion object should start with a upper case letter.</p> <pre><code>object Fifo {\n  def apply(that: Stream[Bits]): Stream[Bits] = {...}\n}\n\nobject MajorityVote {\n  def apply(that: Bits): UInt = {...}\n}\n</code></pre> <p>An exception to this rule is when the companion object is used as a function (only <code>apply</code> inside), and these <code>apply</code> functions don't generate hardware:</p> <pre><code>object log2{\n  def apply(value: Int): Int = {...}\n}\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#function","title":"function","text":"<p>A function should always start with a lower case letter:</p> <pre><code>def sinTable = (0 until sampleCount).map(sampleIndex =&gt; {\n  val sinValue = Math.sin(2 * Math.PI * sampleIndex / sampleCount)\n  S((sinValue * ((1 &lt;&lt; resolutionWidth) / 2 - 1)).toInt, resolutionWidth bits)\n})\n\nval rom =  Mem(SInt(resolutionWidth bit),initialContent = sinTable)\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#instances","title":"instances","text":"<p>Instances of classes should always start with a lower case letter:</p> <pre><code>val fifo   = new Fifo()\nval buffer = Reg(Bits(8 bits))\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#if-when","title":"if / when","text":"<p>Scala <code>if</code> and SpinalHDL <code>when</code> should normally be written in the following way:</p> <pre><code>if(cond){\n  ...\n} else if(cond){\n\n} else {\n\n}\n\nwhen(cond){\n\n}.elseWhen(cond){\n\n}.otherwise{\n\n}\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#switch","title":"switch","text":"<p>SpinalHDL switch should normally be written in the following way:</p> <pre><code>switch(value){\n  is(key){\n\n  }\n  is(key){\n\n  }\n  default{\n\n  }\n}\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/coding_convention_spinalhdl.html#parameters","title":"Parameters","text":"<p>Grouping parameters of a component/bundle inside a case class is in general welcome:</p> <ul> <li>Easier to carry/manipulate to configure the design</li> <li>Better maintainability</li> </ul> <pre><code>case class RgbConfig(rWidth: Int, gWidth: Int, bWidth: Int){\n  def getWidth = rWidth + gWidth + bWidth\n}\n\ncase class Rgb(c: RgbConfig) extends Bundle {\n  val r = UInt(c.rWidth bit)\n  val g = UInt(c.gWidth bit)\n  val b = UInt(c.bWidth bit)\n}\n</code></pre> <p>But this should not be applied in all cases. For example: in a Fifo, it doesn't make sense to group the dataType parameter with the depth of the fifo because, in general, the dataType is something related to the design, while the depth is something related to the configuration of the design.</p> <pre><code>class Fifo[T &lt;: Data](dataType: T, depth: Int) extends Component {\n\n}\n</code></pre>","tags":["coding","scala","naming"]},{"location":"coding/scala/libraries.html","title":"Libraries","text":"","tags":["coding","scala","libraries"]},{"location":"coding/scala/libraries.html#scalamath_","title":"<code>scala.math._</code>","text":"<pre><code>import scala.math._\n\nabs(-8)                       // Int = 8\nceil(5.45)                    // Double = 6.0\nround(5.45)                   // Double = 5.0\nfloor(5.45)                   // Double = 5.0\nexp(1)                        // Double = 2.7182818284590455\nPi                            // Double = 3.141592653589793\npow(2,2)                      // Double = 4.0\npow(2,16-1)                   // Double = 2^(16-1)\nsqrt(pow(2,2) + pow(2,2))     // 2.8284271247461903\nhypot(2,2)                    // 2.8284271247461903\nlog10(1000)                   // Double = 3.0\nlog(2.718281284590455)        // Double = 1.0\nmin(5, 10)                    // Int = 5\nmax(1, 1000)                  // Int = 1000\n(random * (11 -1)).toInt      // Int = ...\ntoRadians(90)                 // Double = 1.5707963267948966\ntoDegrees(1.5707963267948966) // Double = 90.0\n\n// acos, asin, atan, atan2, cos cosh, sin, sinh, tan, tanh\n</code></pre>","tags":["coding","scala","libraries"]},{"location":"coding/scala/libraries.html#scalasysprocess_","title":"<code>scala.sys.process._</code>","text":"<pre><code>import scala.sys.process._\n\ncmd = \"ls -la\"\ncmd!\n</code></pre>","tags":["coding","scala","libraries"]},{"location":"coding/scala/libraries.html#javautilcalendar","title":"<code>java.util.Calendar</code>","text":"<pre><code>import java.util.Calendar\n\nprintln(s\"Start cordicPipelinedSim Simulation: ${Calendar.getInstance().getTime()}\")\nprintln(s\"End cordicPipelinedSim Simulation: ${Calendar.getInstance().getTime()}\")\n</code></pre>","tags":["coding","scala","libraries"]},{"location":"coding/scala/syntax.html","title":"Syntax","text":"","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#entry-point-main","title":"Entry point (main)","text":"<p>The entry point of a Scala program (the main function) should be defined inside an object as a function named <code>main</code>.</p> <pre><code>object ScalaEx{\n  def main(args: Array[String]) {\n    println(\"Hello world\")\n  }\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#run-code","title":"Run code","text":"<pre><code># To compile and run in the terminal\nscalac ScalaEx.scala\n# or\nscala ScalaEx\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#import","title":"<code>import</code>","text":"<pre><code>import scala.math._       // imports all function from the scala.math library\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#variables-values","title":"Variables &amp; Values","text":"<p>In scala, you can define a variable by using the <code>var</code> keyword:</p> <pre><code>var number : Float = 0\nnumber = 6.0\nnumber += 4\nprintln(number) // Float = 10.0\n</code></pre> <p>Scala is able to infer the type automatically. You don't need to specify it if the variable is assigned at declaration:</p> <pre><code>var number = 0   //The type of 'number' is inferred as a Int during the compilation.\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#constants","title":"Constants","text":"<p>But, in fact, it's not very common to use <code>var</code> in Scala. Instead, constant values defined by <code>val</code> are often used:</p> <pre><code>val two   = 2\nval three = 3\nval six   = two * three\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#strings","title":"Strings","text":"<pre><code>val name = \"strings are cool\"\nprintln(\"index 3 is: \" + name(3))                // index\nprintln(\"length is: \" + name.length)             // length\nprintln(name.concat(\" add this\")                 // concat\nprintln(\"index of cool\" + name.indexOf(\"cool\"))  // indexOf\n\nnameArray = name.toArray\nfor(v &lt;- nameArray)\n  println(v)\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#special-characters","title":"Special characters","text":"Character Description <code>\\a</code> audible alert <code>\\b</code> backspace <code>\\f</code> form feed <code>\\n</code> newline <code>\\r</code> carriage return <code>\\v</code> vertical tab <code>\\\\</code> backslash <code>$$</code> dollarsign <code>%%</code> percentsign <code>\"\"\" \" \"\"\"</code> Doublequote escape","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#string-interpolators","title":"String Interpolators","text":"<pre><code>%[align][sign][fill][width][.precision]type\n    |      |     |    (int)     (int)  d decimal (integer) (base 10)\n    |      |     |                     i integer (base 10)\n    |      |     +-- void (default)    o octal number (base 8)\n    |      |     +-- &lt;any character&gt;   u unsigned decimal (integer) number\n    |      |                           x hexadecimal number (base 16)\n    |      +-- + (default)             f floating point number\n    |      +-- -                       e exponential floating-point number\n    |                                  c character\n    +-- void (default) right aligned   s string of characters\n    +-- - left aligned\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#s-interpolator","title":"<code>s</code>-Interpolator","text":"<p><code>s\"\"</code> is a procesed string literal.</p> <pre><code>val name = \"Maja\"\nprintln(s\"Hello, $name\")     // insert variable\n\nprintln(s\"1 + 1 = ${1 + 1}\") // insert arbitrary expression\n\nprintln(s\"$$15.95\")          // $ escape character\n\nval person = \"\"\"{\"name\":\"James\"}\"\"\" // Double Quote escape character\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#f-interpolator","title":"<code>f</code>-Interpolator","text":"<p><code>f\"\"</code> allows the creation of formatted strings</p>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#raw-interpolator","title":"<code>raw</code>-Interpolator","text":"","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#print","title":"Print","text":"<pre><code>val name = \"string\"\nval integer = 39\nval floatingpoint = 12.3\n\nprintln(s\"String is $name\")\nprintln(f\"$(integer)+1 $floatingpoint%.2f\")\nprintln(\"'%-5s'\\n\", \"other string\")\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#functions","title":"Functions","text":"<p>For example, if you want to define a function which returns <code>true</code> if the sum of its two arguments is bigger than zero, you can do as follows:</p> <pre><code>def sumBiggerThanZero(a: Float, b: Float): Boolean = {\n  return (a + b) &gt; 0\n}\n</code></pre> <p>Then, to call this function, you can just write:</p> <pre><code>sumBiggerThanZero(2.3f, 5.4f)\n</code></pre> <p>You can also specify arguements by name, which is useful if you have many arguements:</p> <pre><code>sumBiggerThanZero(\n  a = 2.3f,\n  b = 5.4f\n)\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#return","title":"Return","text":"<p>The <code>return</code> keyword is not necessary. In absence of it, Scala takes the last statement of your function as the returned value.</p> <pre><code>def sumBiggerThanZero(a: Float, b: Float): Boolean = {\n  (a + b) &gt; 0\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#return-type-inferation","title":"Return type inferation","text":"<p>Scala is able to automatically infer the return type. You don't need to specify it:</p> <pre><code>def sumBiggerThanZero(a: Float, b: Float) = {\n  (a + b) &gt; 0\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#multiple-return-values","title":"Multiple return values","text":"<p>Multiple return values can be given with the help of a <code>tuple</code></p> <pre><code>def mv: (Int, Int, Int) = {\n  (1,2,3)\n}\n\nval (i, j, k) = mv()\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#function-that-returns-nothing-unit","title":"Function that returns nothing <code>Unit</code>","text":"<p>If you want a function to return nothing, the return type should be set to <code>Unit</code>. It's equivalent to the C/C++ void.</p> <pre><code>def printer(): Unit = {\n  println(\"1234\")\n  println(\"5678\")\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#arguments-default-value","title":"Arguments default value","text":"<p>You can specify a default value for each arguement of a function:</p> <pre><code>def sumBiggerThanZero(a: Float, b: Float = 0.0f) = {\n  (a + b) &gt; 0\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#apply-function","title":"Apply Function","text":"<p>Functions named <code>apply</code> are special because you can call them without having to type their name:</p> <pre><code>class Array(){\n  def apply(index: Int): Int = index + 3\n}\n\nval array = new Array()\nval value = array(4)   //array(4) is interpreted as array.apply(4) and will return 7\n</code></pre> <p>This concept is also applicable for scala <code>object</code> (static)</p> <pre><code>object MajorityVote{\n  def apply(value: Int): Int = ...\n}\n\nval value = MajorityVote(4) // Will call MajorityVote.apply(4)\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#recursion","title":"Recursion","text":"<p>Function which calls it self.</p> <pre><code>def factorial(num: BigInt) : BigInt = {\n  if (num &lt;= 1)\n    1\n  else\n    num * factorial(num-1)\n}\n\nprintln(\"Factorial of 4 = \" + factorial(4))\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#object","title":"Object","text":"<p>In scala, there is no <code>static</code> keyword. In place of that, there is <code>object</code>. Everything defined into an <code>object</code> is static.</p> <p>The following example defines a static function named <code>pow2</code> which takes a floating point value as parameter and returns a floating point as well.</p> <pre><code>object MathUtils{\n  def pow2(value: Float): Float = value*value\n}\n</code></pre> <p>Then you can call it by writing:</p> <pre><code>MathUtils.pow2(42.0f)\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#class","title":"Class","text":"<p>The class syntax is very similar to Java. Imagine that you want to define a <code>Color</code> class which takes as construction parameters three Float values (r,g,b) :</p> <pre><code>class Color(r: Float, g: Float, b: Float){\n  def getGrayLevel(): Float = r * 0.3f + g * 0.4f + b *0.4f\n}\n</code></pre> <p>Then, to instantiate the class from the previous example and use its <code>getGrayLevel</code> function:</p> <pre><code>val blue = new Color(0, 0, 1)\nval grayLevelOfBlue = blue.getGrayLevel()\n</code></pre> <p>Be careful, if you want to access a construction parameter of the class from the outside, this construction parameter should be defined as a <code>val</code>:</p> <pre><code>class Color(val r: Float, val g: Float, val b: Float){ ... }\n...\nval blue = new Color(0, 0, 1)\nval redLevelOfBlue = blue.r\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#inheritance-extends","title":"Inheritance extends","text":"<p>As an example, suppose that you want to define two classes, <code>Rectangle</code> and <code>Square</code>, which extend the class <code>Shape</code>:</p> <pre><code>class Shape{\n  def getArea(): Float\n}\n\nclass Square(sideLength: Float) extends Shape {\n  override def getArea() = sideLength * sideLength\n}\n\nclass Rectangle(width: Float, height: Float) extends Shape {\n  override def getArea() = width * height\n}\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#case-class","title":"Case class","text":"<p>Case class is an alternative way of declaring classes.</p> <pre><code>case class Rectangle(width: Float, height: Float) extends Shape {\n  override def getArea() = width * height\n}\n</code></pre> <p>Then there are some differences between <code>case class</code> and <code>class</code> :</p> <ul> <li>case classes don't need the <code>new</code> keyword to be instantiated</li> <li>construction parameters are accessible from outside, you don't need     to define them as <code>val</code>.</li> </ul>","tags":["coding","scala","syntax"]},{"location":"coding/scala/syntax.html#templates-type-parameterization","title":"Templates / Type parameterization","text":"<p>Imagine you want to design a class which is a queue of a given datatype, in that case you need to provide a type parameter to the class:</p> <pre><code>class  Queue[T](){\n  def push(that: T) : Unit = ...\n  def pop(): T = ...\n}\n</code></pre> <p>If you want to restrict the <code>T</code> type to be a sub class of a given type (for example <code>Shape</code>), you can use the <code>&lt;: Shape</code> syntax :</p> <pre><code>class Shape() {\n    def getArea(): Float\n}\nclass Rectangle() extends Shape { ... }\n\nclass  Queue[T &lt;: Shape](){\n  def push(that: T): Unit = ...\n  def pop(): T = ...\n}\n</code></pre> <p>The same is possible for functions:</p> <pre><code>def doSomething[T &lt;: Shape](shape: T): Something = { shape.getArea() }\n</code></pre>","tags":["coding","scala","syntax"]},{"location":"coding/spinal/index.html","title":"Spinal HDL","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/index.html#introduction","title":"Introduction","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/index.html#some-helppages","title":"Some helppages","text":"<ul> <li>Spinal HDL Documentation</li> <li>Spinal HDL Scaladoc</li> <li>Cheatsheet Spinal HDL Core</li> <li>Cheatsheet Spinal HDL Lib</li> <li>Cheatsheet Spinal HDL Symbolic</li> <li>Cheatsheet Spinal HDL Cheatsheet</li> <li>Cheatsheet Spinal HDL Presentation</li> <li>Cheatsheet Spinal HDL Presentation Fast</li> <li>Cheatsheet Spinal HDL Presentation Very Fast</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/index.html#spinal-projects","title":"Spinal Projects","text":"<ul> <li>SaxonSoC (RiscV Framework)</li> <li>Spinal HDL Core and Lib</li> <li>Spinal Workshop</li> <li>Vex RiscV Processor</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/index.html#community","title":"Community","text":"<ul> <li>Gitter Channel</li> <li>Issues</li> <li>Email</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html","title":"Installation","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#tools","title":"Tools","text":"<p>The following tools are needed:</p> <ul> <li>tools intro</li> <li>intellij_idea</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#linux","title":"Linux","text":"<p>For Linux there is also a complete spinal-install.bash script available.</p> <pre><code>chmod +x install-spinal.bash\n./install-spinal.bash\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#base-tools","title":"Base Tools","text":"<pre><code>sudo apt install -y git make autoconf g++ flex bison\nsudo apt install -y openjdk-8-jdk\nsudo apt install -y scala\necho \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823\nsudo apt update -y\nsudo apt install -y sbt\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#ide","title":"IDE","text":"<pre><code>sudo snap install intellij-idea-community --classic\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#simulation","title":"Simulation","text":"<pre><code>cd ~\ngit clone http://git.veripool.org/git/verilator\nunset VERILATOR_ROOT\ncd verilator\ngit pull        # Make sure we're up-to-date\ngit checkout verilator_3_916\nautoconf        # Create ./configure script\n./configure\nmake -j$(nproc)\nsudo make install\nsudo apt install -y gconf2 gtkwave\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#hardware-debug-tools","title":"Hardware Debug Tools","text":"<pre><code>sudo apt install -y openocd\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#riscv-development-tools","title":"RiscV Development Tools","text":"<pre><code>wget https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-20171231-x86_64-linux-centos6.tar.gz\ntar -xzvf riscv64-unknown-elf-gcc-20171231-x86_64-linux-centos6.tar.gz\nsudo mv riscv64-unknown-elf-gcc-20171231-x86_64-linux-centos6 /opt/riscv64-unknown-elf-gcc-20171231-x86_64-linux-centos6\nsudo mv /opt/riscv64-unknown-elf-gcc-20171231-x86_64-linux-centos6 /opt/riscv\necho 'export PATH=/opt/riscv/bin:$PATH' &gt;&gt; ~/.bashrc\necho 'export PATH=/opt/riscv/bin:$PATH' &gt;&gt; ~/.zshrc\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#optional-dev-tools","title":"Optional Dev Tools","text":"<pre><code>echo \"Install default tools\"\nsudo apt install -y zsh\nsudo chsh -s /bin/zsh $USER\ncd ~/Downloads\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\nsudo apt install -y yakuake krusader\n\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\nsudo apt install apt-transport-https\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update\nsudo apt install -y sublime-text sublime-merge\n\nsudo add-apt-repository ppa:christian-boxdoerfer/fsearch-daily\nsudo apt update\nsudo apt install -y fsearch-trunk\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#macos","title":"macOS","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#base-tools_1","title":"Base Tools","text":"<ul> <li>Install homebrew</li> <li>Install Java 8</li> </ul> <p>Install base cmdline tools</p> <pre><code>brew install git gcc make autoconf flex bison\nbrew install scala sbt\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#ide_1","title":"IDE","text":"<ul> <li>Install Visual Studio Code</li> <li>Install scala plugin</li> <li>Install sbt plugin</li> <li>Install scala metal language server plugin</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#simulation_1","title":"Simulation","text":"<pre><code>brew install verilator gtkwave\n</code></pre> <p>In order to gtkwave to run correctly perl Switch needs to be installed</p> <pre><code>cpan install Switch\nperl -V:'installsitelib'\n</code></pre> <p>Perl Switch needs to be liked to the default perl install location. The at the end of the above command the install location is given, it should be similar to:</p> <pre><code>sudo ln -s ~/perl5/lib/perl5/Switch.pm /Library/Perl/5.*\n</code></pre> <p>Link the gtkwave to the correct binary with one of the two commands.</p> <pre><code>alias gktwave=/Applications/gtkwave.app/Contents/Resources/bin/gtkwave\nexport PATH=/Applications/gtkwave.app/Contents/Resources/bin/:$PATH\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#hardware-debug-tools_1","title":"Hardware Debug Tools","text":"<pre><code>brew install openocd\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#windows","title":"Windows","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#base-tools_2","title":"Base Tools","text":"<ul> <li>Install Java</li> <li>Install Scala Build Tool SBT</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#ide_2","title":"IDE","text":"<ul> <li>Install IntelliJ IDEA</li> <li>Within IntelliJ install Scala Plugin</li> <li>Remove settings for Code Checking</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#simulation_2","title":"Simulation","text":"<ul> <li>Install MSYS2 64bit</li> <li>Install verilator from minGW packet manager   Verilator Installation<pre><code>pacman -Syuu\n\n# Close the MSYS2 shell once you're asked to\npacman -Syuu\npacman -S --needed base-devel mingw-w64-x86_64-toolchain \\\n              git flex\\\n              mingw-w64-x86_64-cmake\n\npacman -S mingw-w64-x86_64-verilator\n</code></pre></li> <li>ADD MSYS2 <code>C:\\msys64\\usr\\bin;C:\\msys64\\mingw64\\bin</code> to your Environment Variable <code>Path</code>.</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/install.html#hardware-debug-tools_2","title":"Hardware Debug Tools","text":"<ul> <li>Install OpenOCD for JTAG debugging.</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html","title":"Project Files","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#project-structure","title":"Project Structure","text":"<p>Every SpinalHDL Project is created as a Scala Project This means the Scala folder definition applies, of course this can be changes if needed.</p>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#general-project-structure","title":"General Project Structure","text":"<ul> <li><code>etc/</code> - external project libraries for example VexRISCV</li> <li><code>project/</code> - sbt project configuration</li> <li><code>build.properties</code> - contains only sbt version to be used for this project</li> <li><code>plugins.sbt</code> - contains only sbt plugins to be used for this project</li> <li><code>src/</code> - contains all source files synthesizable or not</li> <li><code>main/</code> - contains a folder for each programming language<ul> <li><code>&lt;language&gt;/</code></li> <li><code>c/</code> - src files for c ex. for hard- or softcore</li> <li><code>scala/</code> - src files for scala resp. SpinalHDL</li> <li><code>&lt;project_name&gt;/</code> - custom folder structure for project<ul> <li><code>sim/</code> - optional simulation directory</li> </ul> </li> <li><code>test</code> - same structure are <code>src/</code> files for test purpose only</li> <li><code>&lt;language&gt;/</code></li> <li><code>cpp/</code> - test files for cpp ex. for hard- or softcore</li> <li><code>scala/</code> - test files for scala resp. SpinalHDL</li> </ul> </li> <li><code>target/</code> - temp folder where scala keeps compiled files</li> <li><code>build.sbt</code></li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#my-project-structure","title":"My Project Structure","text":"<pre><code>+-- (.idea/)                    # temp intellij settings folder\n+-- ext/                        # folder for external IP imported normally via submodules\n+-- img/                        # project images\n+-- project/                    # sbt project folder\n+-- scripts/                    # general scripts for the project\n+-- sim/                        # temp folder for simulation files\n+-- scr/                        # folder for all project source files\n|   +-- hardware/               # folder for all hw related stuff\n|   |    +-- netlist/           # spinalHDL generated VHDL and Verilog Code ready for synthesis\n|   |    +-- scala/\n|   |    |   +-- &lt;projectname&gt;/ # all chrono project related scala files\n|   |    |       +-- board/     # boardlevel Files (one folder per board)\n|   |    +-- synthesis/         # folder for synthesis projects (one folder per board)\n|   +-- test/                   # folder for testbench files\n|       +-- scala/\n|           +-- &lt;projectname&gt;/  # Testbenches for chrono project\n+-- (target/)                   # temp folder for scala and sbt\n+-- .gitignore\n+-- build.sbt                   # main sbt project file\n+-- LICENSE                     # The project license\n+-- README.md                   # This file\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#create-your-first-project","title":"Create your first Project","text":"<p>Clone the https://github.com/SpinalHDL/SpinalTemplateSbt sample project and get started.</p> <pre><code>git clone https://github.com/SpinalHDL/SpinalTemplateSbt.git\ncd SpinalBaseProject/\nsbt run\nls MyTopLevel.vhd\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#sample-buildsbt","title":"Sample <code>build.sbt</code>","text":"<pre><code>// project name &amp; version\nname := \"eln-chrono-spinal\"\nversion := \"0.1\"\n\n// scala version\nscalaVersion := \"2.11.12\"\n\nEclipseKeys.withSource := true\n\n// scala plugins dependencies\nlibraryDependencies ++= Seq(\n  \"com.github.spinalhdl\" % \"spinalhdl-core_2.11\" % \"1.3.8\",\n  \"com.github.spinalhdl\" % \"spinalhdl-lib_2.11\" % \"1.3.8\"\n)\n\n// changing the src folder for compile and test code\nscalaSource in Compile := baseDirectory.value / \"src\"/ \"hardware\" / \"scala\"\nscalaSource in Test    := baseDirectory.value / \"src\" / \"test\" / \"scala\"\n\n// For allowing Simulation fork tasks\nfork := true\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#sbt-commands","title":"SBT Commands","text":"<pre><code>sbt                     # enter sbt shell\nsbt clean               # clean repo from sbt generated files\nsbt compile             # compiles all code in hardware/scala\nsbt run                 # run all compiled code\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/project.html#add-submodule-to-project","title":"Add Submodule to Project","text":"<p>Need to be in the <code>ext/</code> folder</p> <pre><code>git submodule add -b &lt;branch&gt; &lt;url&gt; ext\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html","title":"Data Types","text":"<p>For scala types see scala</p>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#spinal","title":"Spinal","text":"<p>The language provides 5 base types and 2 composite types that can be used.</p> <ul> <li>Base types: Bool , Bits , UInt for unsigned integers, SInt for signed integers and Enum.</li> <li>Composite types: Bundle and Vec.</li> </ul> <pre><code>digraph spinal_datatypes {\n     rankdir=\"BT\"\n\n     node [shape=box]; Bundle; Vec; Enum; Bool; Bits; UInt; SInt\n     node [shape=box, style=dashed]; Data; BaseType; BitVector\n     BaseType -&gt; Data [arrowhead=onormal];\n     Bundle -&gt; Data [arrowhead=onormal];\n     Vec -&gt; Data [arrowhead=onormal];\n     Enum -&gt; BaseType [arrowhead=onormal];\n     Bool -&gt; BaseType [arrowhead=onormal];\n     BitVector -&gt; BaseType [arrowhead=onormal];\n     Bits -&gt; BitVector [arrowhead=onormal];\n     UInt -&gt; BitVector [arrowhead=onormal];\n     SInt -&gt; BitVector [arrowhead=onormal];\n   }\n</code></pre> <p></p>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#bool","title":"Bool","text":"<p>Spinal Bool as <code>True</code> or <code>False</code></p> <pre><code>// Instances\nval x = Bool\nval y = Bool(True)\n\n// Assignments\nx := False\n\n// Operators\n!x             // not\nx &amp; y          // and\nx | y          // or\nx ^ y          // xor\nx ## y         // concatenate x is high xy is low\nx.set\nx.clear\nx.setWhen(cond)\nx.clearWhen(cond)\n\n// Edge detection\nx.edge          // True if state change\nx.rise          // True if rising edge\nx.fall          // True if falling edge\nx.edges         // returns a bundle (rise, fall, toggle)\n\nx === y         // comparison True equality\nx =/= y         // comparison True Inequality\n\n// Typecast\nx.asBits           // Bits(w(x) bits)\nx.asUInt           // UInt(w(x) bits)\nx.asUInt(bitCount) // SInt(w(x) bits)\nx.asSInt           // UInt(bitCount bits)\nx.asSInt(bitCount) // Bits(bitCount bits)\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#bits","title":"Bits","text":"<pre><code>// Instances\nval x = Bits()\nval y = Bits(32 Bits)\nval x = B(25, 8 Bits)\nval x = B(8 bits, default -&gt; True)\nval x = B(8 bits, (7 downto 5) -&gt; B\"101\", 4 -&gt; true, 3 -&gt; True, default -&gt; false)\n\n// Assignments\nx := B\"8'0xFF\"\nx := B\"8'dhFF\"\nx := B\"8'0d255\"\nx := B\"8'0o377\"\nx := B\"8'0b11111111\"\nx := B\"8'0b1111_1111\"\nx := (7 -&gt; true, default -&gt; false)\n\n// Operators\n~x                 // bitwise not\nx &amp; y              // bitwise and\nx | y              // bitwise or\nx ^ y              // bitwise xor\nx.xorR             // xor of all bits of x\nx.orR              // or of all bits of x\nx.andR             // and of all bits of x\nx &gt;&gt; y             // Logical shift right\nx &lt;&lt; y             // Logical shift left\nx.rotateLeft(y)    // Logical left rotation\nx.rotateRight(y)   // Logical right rotation\nx.clearAll         // clear all bits\nx.setAll           // set all bits\nx ## y             // concatenate x high y low\n\nx === y            // comparison True equality\nx =/= y            // comparison True Inequality\n\n// Typecast\nx.asBits           // Binary cast to Bits\nx.asUInt           // Binary cast to UInt\nx.asSInt           // Binary cast to SInt\nx.asBools          // Cast to an array of Bools\nB(x)               // Cast Data to Bits\n\n// Bit Access\nx(y)               // R/W one bit\nx(hi,lo)           // R/W range\nx(2 downto 1)      // R/W range\n\n// Misc\nx.getWidth         // return bitsize if bus\nx.range            // return (x.high downto 0)\nx.high             // return upper bound\nx.low              // return lower bound\nx.msb              // return msb bits\nx.lsb              // return lsb bits\nx.getWidth         // return number of bites\nx.resize(y)        // return a resized copy (filled with Zero if needed)\nx.resized          // return a version of x which can be resized as needed\nx.resizeLeft(x)    // resize keeping MSB as MSB\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#uint-sint","title":"UInt &amp; SInt","text":"<pre><code>// Instances\nval x = UInt(32 Bits)\nval y = SInt(32 Bits)\nval x = U(25, 8 Bits)\nval y = S(25, 8 Bits)\n\n// Assignments\nx := U(2, 8 Bits)\ny := S(2, 8 Bits)\nx := U(2)\ny := S(2)\nx := U\"8'0xFF\"\ny := S\"8'0xFF\"\nx := U\"8'0d255\"\ny := S\"8'0d255\"\nx := U\"8'0o377\"\ny := S\"8'0o0000_0001\"\nx := 2   // scala types can be used\ny := -2  // scala types can be used\n\nx := (default -&gt; true)\nx := (x.range -&gt; true)\nx := (7 -&gt; true, default -&gt; false)\nx := ((4 downto 1) -&gt; true, default -&gt; false)\n\n// Operators\n~x                 // bitwise not\nx &amp; y              // bitwise and\nx | y              // bitwise or\nx ^ y              // bitwise xor\nx.xorR             // xor of all bits of x\nx.orR              // or of all bits of x\nx.andR             // and of all bits of x\nx &gt;&gt; y             // Logical shift right\nx &lt;&lt; y             // Logical shift left\nx.rotateLeft(y)    // Logical left rotation\nx.rotateRight(y)   // Logical right rotation\nx.clearAll         // clear all bits\nx.setAll           // set all bits\nx ## y             // concatenate x high and low y\n\n// Arithmetic\nx + y              // Addition\nx +^ y             // Addition with carry, return +1 bit\nx +| y             // Addition with sat carry\nx - y              // Substraction\nx -^ y             // Substraction with carry, return +1 bit\nx -| y             // Substraction with sat carry\nx * y              // Multiplication, return x+y bits\nx / y              // Division\nx % y              // Modulo\n\n// Comparison\nx === y            // True by equality\nx =/= y            // True by inequality\nx &gt; y              // True by greater than\nx &gt;= y             // True by greater than or equal\nx &lt; y              // True by less than\nx &lt;= y             // True by less than or equal\n\n// Typecast\nx.asBits           // Binary cast to Bits\nx.asUInt           // Binary cast to UInt\nx.asSInt           // Binary cast to SInt\nx.asBools          // Cast to an array of Bools\nS(x)               // Cast Data to SInt\nU(x)               // Cast Data to UInt\n\n// Bit Access\nx(y)               // R/W one bit\nx(offset, width)   // R/W bitfield\nx(2 downto 1)      // R/W range\n\n// Misc\nx.getWidth         // return bitsize if bus\nx.range            // return (x.high downto 0)\nx.high             // return upper bound\nx.msb              // return msb bits\nx.lsb              // return lsb bits\nx.getWidth         // return number of bites\nx.resize(y)        // return a resized copy (filled with Zero if needed)\nx.resized          // return a version of x which can be resized as needed\nx.resizeLeft(x)    // resize keeping MSB as MSB\nx.expand           // return x with 1 bit expanded\n\n// UInt Special\nx.twoComplement(True) //enable, disable 2-complement\n\n// SInt Special\ny.abs               // return UInt is SInt\ny.sign              // return most significant bit\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#vec","title":"Vec","text":"<p>Vector are scala array like</p> <pre><code>// Instances\nval w = Vec(SInt(8 bits),2)\nval x = Vec(Bool,2)\nval y = Vec(Reg(Bool) init(False), 2)\nval z = Vec(Reg(SInt(8 bits)) init(0), 10)\n\n// Assignments\nx(0) := 2\nx.head := 2       // x(0)\nx.last := 2       // x(size-1)\n\nx.map(_ := 0) // map on a vector (assign all elements with value 0)\n\n// Comparison\nx === y             // True by equality\nx =/= y             // True by inequality\n\nboolvar := x === y  // Compare all elements\n\n// Typecast\nx.asBits            // Combines all elements to a big bits\nval x = Vec(SInt(8bits,2)\nmyBits_16bits := vec.asBits\n\n// Misc\nx.getBitsWidth      // Get width of all elements combined\nprintln(x.getBitsWidth) // 16\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#conversions","title":"Conversions","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#spinal-spinal","title":"Spinal &lt;-&gt; Spinal","text":"<pre><code>val intVar : Int = 1\nval intVar : Long = 1\nval intVar : Int = 1.0.toInt\nval doubleVar : Floa tscala types= 1.0\nval doubleVar : Double = 1.0\nval doubleVar : Double = 1.0e6\nval doubleVar : Double = 100e6\nval BigDecimal : BigDecimal = BigDecimal(1.0e6)\nval BigDecimal : BigInt = BigDecimal(1.0e6).toBigInt\n\nBigDecimal().toBigInt\nBigDecimal(10e6).toBigInt\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#scala-scala","title":"Scala &lt;-&gt; Scala","text":"<pre><code>// Can be done with any type\nx.toByte\nx.toShort\nx.toInt\nx.toLong\nx.toFloat\nx.toDouble\nx.toChar\nx.toString()\n\n// Spinal uses BigInt many times\nBigDecimal(2e42).toBigInt\nBigDecimal(x_Int).toBigInt\nBigDecimal(x_Double).toBigInt\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#scala-spinal","title":"Scala &lt;- Spinal","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#spinal-scala","title":"Spinal &lt;- Scala","text":"<pre><code>x_UInt := U(2, 2 bits)\nx_UInt := 2\nx_UInt := BigInt(2)\nx_UInt := BigDecimal(10e42).toBigInt\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#input-outputs","title":"Input &amp; Outputs","text":"<pre><code>val io = new Bundle {\n   val testMode      = in Bool() default(False)\n   val inValue       = in UInt(4 bits) default(0)\n   val loadValue     = in Bool() default(False)\n   val en            = in Bool() default(False)\n   val step          = in UInt(8 bits) default(1)\n   val reset         = in Bool() default(False)\n   val up_nDown      = in Bool() default(True)\n   val overflowValue = in UInt(width bits)\n   val count         = out UInt(width bits)\n   val trigger       = out Bool\n }\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/types.html#internal-signals","title":"Internal Signals","text":"<pre><code>// Access internal signals in simulation\nval register = Reg(UInt(width bits)) init(0) simPublic()\n// or\ndut.counter.simPublic()\n</code></pre>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html","title":"Tools","text":"","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#contents","title":"Contents","text":"<ul> <li>GTKWave</li> <li>Intellij Idea</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#introduction","title":"Introduction","text":"<p>There are additional Tools needed for Spinal HDL to work. hereafter are named the most common with references for further studies.</p>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#programming-language","title":"Programming Language","text":"<ul> <li>Scala </li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#execution","title":"Execution","text":"<ul> <li>Java SDK</li> </ul> <ul> <li>Scala Build Tool SBT </li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#ide","title":"IDE","text":"<p>For writing and executing the scala code</p> <ul> <li>Intellij IDEA </li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#simulator","title":"Simulator","text":"<p>Behind the scene SpinalHDL is generating a C++ cycle accurate model of your hardware by generating the equivalent Verilog and asking Verilator to convert it into a C++ model.</p> <ul> <li>Verilator</li> <li> <p>Verilator Wiki </p> </li> <li> <p>GTKWave </p> </li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/index.html#additional","title":"Additional","text":"<ul> <li>MYSYS2 for windows only</li> </ul>","tags":["coding","spinal hdl","hdl"]},{"location":"coding/spinal/tools/gtkwave.html","title":"GtkWave","text":"<ul> <li>Cheatsheet GTKWave 3.3 Wave Analyzer User's Guide</li> </ul>","tags":["coding","spinal hdl","hdl","gtkwave"]},{"location":"coding/spinal/tools/gtkwave.html#manual-reload","title":"Manual Reload","text":"<p>If you want to manually via command-line reload the file the gconf2 tool needs to be installed</p> <pre><code>sudo apt-get install gconf2\n</code></pre> <p>Afterwards the reload command can be executed</p> <pre><code>gconftool-2 --type string --set /com.geda.gtkwave/0/reload 0\n</code></pre>","tags":["coding","spinal hdl","hdl","gtkwave"]},{"location":"coding/spinal/tools/gtkwave.html#supported-dumpfile","title":"Supported Dumpfile","text":"<ul> <li><code>VCD</code>: Value Change Dump. This is an industry standard file format generated by most Verilog simulators and is specified in IEEE-1364. This is the slowest of the formats for the viewer to process and requires the most memory, however the format is ubiquitous and almost all tools support it, which is why native support remains.</li> <li><code>LXT</code>: Inter Laced e Xtensible Trace. This is an optimized format utilizing interleaved back pointers and value changes. Processing LXT files is faster than VCD. It was created specifically for use with GTKWave, however some other simulators (notably, Icarus Verilog) support it natively.</li> <li><code>LXT2</code>: Inter Laced e Xtensible Trace Version 2. This is a block-based variant of LXT that allows for greater compression and access speeds than can be achieved with LXT. It allows random-access at the block level and also optionally allows partial loading of blocks for even faster operation.</li> <li><code>VZT</code>: Verilog Zipped Trace. This is an outgrowth of LXT2 as it is also block based, however it employs a different heuristic for compression that allows for file sizes much smaller than most other dumpfile formats including commercial ones.</li> <li><code>GHW</code>: GHDL Wave file. This is a nine state (\"01XZHUWL-\") file format written by the VHDL simulator GHDL.</li> <li><code>AET2</code>: All Events Trace Version 2. This is a format used by various IBM EDA tools.</li> <li><code>IDX</code>: VCD Recoder In de xFile. This format is written by GTKWave when instructed to generate fastload files.</li> <li><code>FST</code>: Fast Signal Trace. This format is a block-based variant of IDX which is designed for very fast sequential and random access.</li> </ul>","tags":["coding","spinal hdl","hdl","gtkwave"]},{"location":"coding/spinal/tools/gtkwave.html#twinwave","title":"TwinWave","text":"<p>With TwinWave it is possible to open two sessions at the same time. Concatenate the files with a <code>+</code> sign</p> <pre><code>twinwave a.vcd a.sav + b.vcd b.sav\n</code></pre>","tags":["coding","spinal hdl","hdl","gtkwave"]},{"location":"coding/spinal/tools/intellij_idea.html","title":"Intellij IDEA IDE","text":"<ul> <li>Cheatsheet IntelliJIDEA_ReferenceCard.pdf</li> </ul> <p>See also Intellij Idea</p>","tags":["coding","spinal hdl","hdl","intellij idea"]},{"location":"coding/spinal/tools/intellij_idea.html#shortcuts","title":"Shortcuts","text":"Shortcut Action <code>Shift</code> + <code>Shift</code> Global Fuzzy Search <code>Alt</code> + <code>Arrow Right</code> Forward <code>Alt</code> + <code>Arrow Left</code> Backward <code>Ctrl</code> + <code>Left Click</code> Go to Definition <code>Ctrl</code> + <code>Space</code> Autocomplete <code>Ctrl</code> + <code>/</code> Comment Lines of Selection <code>Alt</code> + <code>F12</code> Open Terminal <code>Ctrl</code> + <code>Ctrl-hold</code> + <code>Arrow Up</code> Add Cursor above <code>Ctrl</code> + <code>Ctrl-hold</code> + <code>Arrow Down</code> Add Cursor below <code>Shift</code> + <code>Alt</code> + <code>Left Click</code> Add Cursor at pointer location","tags":["coding","spinal hdl","hdl","intellij idea"]},{"location":"coding/spinal/tools/intellij_idea.html#rebuild-all-sbt-projects","title":"Rebuild all sbt projects","text":"<p>When external IP change or libraries change you need to force a reimport of all sbt project.</p> <p><code>View</code> -&gt; <code>Tool Window</code> -&gt; <code>sbt</code> -&gt; <code>Reimport all sbt projects</code>.</p>","tags":["coding","spinal hdl","hdl","intellij idea"]},{"location":"coding/swift/index.html","title":"Swift","text":"","tags":["coding","swift"]},{"location":"coding/swift/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","swift"]},{"location":"coding/swift/index.html#introduction","title":"Introduction","text":"<p>Swift is:</p> <ul> <li>Safe. The most obvious way to write code should also behave in a safe manner. Undefined behavior is the enemy of safety, and developer mistak should be caught before software is in production. Opting for safety sometimes means Swift will feel strict, but we believe that clarity saves time in the long run.</li> <li>Fast. Swift is intend as a replacement for C-based languages (C, C++, and Objective-C). As such, Swift must be comparable to those languagein performance for most tasks. Performance must also be predictable and consistent, not just fast in short bursts that require clean-up later. There are lots of languages with novel features --- being fast is rare.</li> <li>Expressive. Swift benefits from decades of advancement in computer science to offer syntax that is a joy to use, with modern features devopers expect. But Swift is never done. We will monitor language advancements and embrace what works, continually evolving to make Swift even better.</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/index.html#some-swift-helppages","title":"Some Swift helppages","text":"<ul> <li>Offical Swift Documentation</li> <li>Offical Swift Webpage</li> <li>Tschinz Swift Cheatsheet Repo</li> <li>Raywenderlich Swift Cheatsheet</li> <li>iwasrobbed Cheat Sheet</li> <li>Mohammad Hossein Mojtahedi Gitbook Cheat Sheet</li> <li>Paul Hegary Standford iTunesU Class</li> <li>Wayland Bishopo Swift Algorithms and Data Structures</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html","title":"Basics","text":"","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#comments","title":"Comments","text":"<pre><code>// This is a comment\n/* This is a multiline comment\n/* Did you know /* you can nest multiline comments */ ? */\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#comment-links","title":"Comment Links","text":"<pre><code>// MARK: Test appears in Xcode selector\n// TODO: Write your todo here\n// FIXME: Write your bug here (or fix is directly)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#comment-markdown","title":"Comment Markdown","text":"<pre><code>//: This is Markdown documentation inside the code\n//: ## Markdown Title\n//: [link description](link)\n//: ![image description](img/location.png)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#types","title":"Types","text":"<p>For a complete guide to 64-bit changes, please see the transition document.</p>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#default-swift-types","title":"Default Swift Types","text":"Swift Type Values <code>Int</code>, <code>Int32</code>, <code>Int64</code>, <code>UInt8</code>, <code>UInt16</code> <code>100</code> Dezimal <code>1_000_000</code> Dezimal <code>0b1001</code> Binary <code>0o85</code> Octal <code>0xFFE3</code> Hexadezimal <code>Double</code> <code>3.14159265</code> <code>3.141_592_65</code> <code>1.25e2 = 125.0</code> <code>1.25e-2 == 0.0125</code> <code>Bool</code> <code>true</code> <code>false</code> <code>String</code> <code>\"This is a String\"</code> <code>\"This is a String including a \\ (varname)\"</code>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#c-types-vs-swift-types","title":"C-Types vs Swift Types","text":"C Type Swift Type bool CBool char, signed char CChar unsigned char CUnsignedChar short CShort unsigned short CUnsignedShort int CInt unsigned int CUnsignedInt long CLong unsigned long CUnsignedLong long long CLongLong unsigned long long CUnsignedLongLong wchar_t CWideChar char16_t CChar16 vchar32_t CChar32 float CFloat double CDouble <p>From the docs</p>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#operators","title":"Operators","text":"<p>Swift supports most standard C operators and improves several capabilities to eliminate common coding errors.</p> <p>Arithmetic operators (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code> and so forth) detect and disallow value overflow, to avoid unexpected results when working with numbers that become larger or smaller than the allowed value range of the type that stores them.</p>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#arithmetic-operators","title":"Arithmetic Operators","text":"<p>|\u00a0Operator | Purpose | |\u00a0-------- | ------- | |\u00a0<code>+</code>      | Addition | |\u00a0<code>-</code>      | Substraction | |\u00a0<code>*</code>      | Multiplication | |\u00a0<code>/</code>      | Division | |\u00a0<code>%</code>      | Remainder also work on float <code>8 % 2.5 // equals 0.5</code> |</p>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#comparative-operators","title":"Comparative Operators","text":"<p>|\u00a0Operator | Purpose | |\u00a0-------- | ------- | |\u00a0<code>==</code>     | Equal to | |\u00a0<code>===</code>    | Identical to | |\u00a0<code>!=</code>     | Not equal to | |\u00a0<code>!==</code>    | Not identical to | |\u00a0<code>~=</code>     | Pattern match | |\u00a0<code>&gt;</code>      | Greater than | |\u00a0<code>&lt;</code>      | Less than | |\u00a0<code>&gt;=</code>     | Greate than or equal to | |\u00a0<code>&lt;=</code>     | Less than or equal to |</p>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#assignment-operators","title":"Assignment Operators","text":"Operator Purpose <code>=</code> Assign <code>+=</code> Addition <code>-=</code> Subtraction <code>\\*=</code> Multiplication <code>/=</code> Division <code>%=</code> Remainder <code>&amp;=</code> Bitwise AND <code>|=</code> Bitwise Inclusive OR <code>^=</code> Exclusive OR <code>&lt;&lt;=</code> Shift Left <code>&gt;&gt;=</code> Shift Right <code>&amp;&amp;=</code> Logical AND <code>||=</code> Logical OR","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#increment-and-decrement-operators","title":"Increment and Decrement Operators","text":"Operator Purpose <code>++</code> Addition <code>--</code> Subtraction <pre><code>++x //increments variable **before** returning it's value\nx-- //increments variable **after** returning it's value\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#logical-operators","title":"Logical Operators","text":"Operator Purpose <code>!</code> NOT <code>&amp;&amp;</code> Logical AND <code>||</code> Logical OR","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#range-operators","title":"Range Operators","text":"<p>|\u00a0Operator | Purpose | |\u00a0-------- | ------- | |\u00a0<code>..&lt;</code>    | Half-open range | |\u00a0<code>...</code>    | Closed range |</p> <pre><code>for index in 1..&lt;3 {} // 1 to 3 excluding 3\nfor index in 1...3 {} // 1 to 3 inluding 3\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#bitwise-operators","title":"Bitwise Operators","text":"Operator Purpose <code>&amp;</code> Bitwise AND <code>|</code> Bitwise Inclusive OR <code>^</code> Exclusive OR <code>~</code> Unary complement (bit inversion) <code>&lt;&lt;</code> Shift Left <code>&gt;&gt;</code> Shift Right","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#overflow-and-underflow-operators","title":"Overflow and Underflow Operators","text":"<p>Typically, assigning or increment an integer, float, or double past it's range would result in a run-time error. However, if you'd instead prefer to safely truncate the number of available bits, you can opt-in to have the variable overflow or underflow using the following operators:</p> Operator Purpose <code>&amp;+</code> Addition <code>&amp;-</code> Subtraction <code>&amp;*</code> Multiplication <code>&amp;/</code> Division <code>&amp;%</code> Remainder <p>Example for unsigned integers (works similarly for signed):</p> <pre><code>var willOverflow = UInt8.max       // willOverflow = 255\nwillOverflow = willOverflow &amp;+ 1   // willOverflow = 0\n\nvar willUnderflow = UInt8.min      // willUnderflow = 0\nwillUnderflow = willUnderflow &amp;- 1 // willUnderflow = 255\n</code></pre> <p>Another example to show how you can prevent dividing by zero from resulting in infinity:</p> <pre><code>let x = 1\nlet y = x &amp;/ 0 // Division by zero y = 0\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/01_basics.html#other-operators","title":"Other Operators","text":"Operator Purpose ?? Nil coalescing (take left if not nil else right value) ?: Ternary conditional ! Force unwrap object value ? Safely unwrap object value","tags":["coding","swift"]},{"location":"coding/swift/02_mvc.html","title":"Programming Concepts","text":"","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#mvc","title":"MVC","text":"<p>MVC is a the abbreviation for Model view Controller. It is a Object-Oriented Design Pattern</p> <p></p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#view","title":"View","text":"<p>Is only in charge for the GUI. It is the slaves of the Controller. It has limited connection to the Controller</p> <ul> <li>action target - It can send an event to the Controller</li> <li>It can delegate actions, the Controller would be a delegate of the View</li> <li>It can get data from the controller</li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#controller","title":"Controller","text":"<p>The Controller defines How you Model is presented to the User (UI Logic) Communicates to the View and the Model freely.</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#model","title":"Model","text":"<p>The Model is What your application is. It is here were all the algorithms etc. are implemented. It has limited communication to the Controller</p> <ul> <li>Notification &amp; KVO - It can \"send out\" informations and any body connected can \"listen in\". KVO = Key-Value Observer</li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#multiple-mvc","title":"Multiple MVC","text":"<p>For powerful apps multiple MVC's needs to be put together</p> <ul> <li>iOS provides some Controllers whose View is \"other MVC's\". Examples:</li> <li>UITabBarController</li> <li>UISplitViewController</li> <li>UINavigationController</li> <li>UIScrollView</li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#uitabbarcontroller","title":"<code>UITabBarController</code>","text":"<p>Tab bar can replace top part of the Screen with a different MVC bundle (e.g. Health App)</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#uisplitviewcontroller","title":"<code>UISplitViewController</code>","text":"<p>Takes two MVC's and puts them side by side (iPad only)</p> <ul> <li>Left MVC = Master</li> <li>Right MVC = Detail</li> </ul> <p>Landscape mode = Both MVC's side by side Portrait mode = Only Detail view visible, Master view can be siped in from the left</p> <p>(e.g. Mail)</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#navigationcontroller","title":"<code>NavigationController</code>","text":"<p>Can push and pop MVC's off of a stack. The Top MVC is shown an with it the Titlebar and left and right button is placed. You can put a MVC into the NavigationController Stack or push them off. The Sub MVC's are created and destroyed at that point.</p> <p>(e.g. Settings)</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#uiscrollview","title":"<code>UIScrollView</code>","text":"<ul> <li>Set content size</li> <li>Add frames to the content area</li> <li>Reposition the view (the window of the screen inside the screen)</li> <li>Get area where you're looking at (contentOffset.x &amp; y)</li> </ul> <pre><code>scrollView.contentSize = CGSize(width: 3000, height:2000) // size of the scroll view\n// Add logo with\nlogo.frame= CGRect(x: 2700, y:50, width: 120, height: 180)\nscrollView.addSubview(logo)\n// Add another image to the view at a different location\naerial.frame = CGRect(x: 150, y: 200, width: 2500, height:1600)\nscrollView.addSubview(aerial)\n\n// Scroll in program\nfunc scrollRectToVisible(CGRect, animated: Bool)\n</code></pre> <p>Other things which can be done in <code>scrollView</code></p> <ul> <li>Enable or disable scrolling</li> <li>Lock scrolling direction</li> <li>Style of scrolling indicator (<code>flashScrollIndicator</code>)</li> <li>Whether your actual content is inset from the content area (<code>contentInset</code> property)</li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#zooming","title":"Zooming","text":"<p>All <code>UIView</code>'s have a property <code>transform</code> which is an affine transformation (<code>translate</code>, <code>scale</code>, <code>rotate</code>). Zooming is affecting the scroll view <code>contentSize</code> and <code>contentOffset</code>.</p> <pre><code>// They needed to be set for enabling zoom\nscrollView.minimumZoomScale = 0.5 // min half of its normal size\nscrollView.maximumZoomScale = 2.0 // max double its normal size\n\n// Will not work without delegate\nfunc viewForZoomingInScrollView(sender: UIScrollView) -&gt; UIView\n\n// Zoom in program\nvar zoomScale: CGFloat\nfunc setZoomScale(CGFloat, animated: Bool) // Zoom to a different scale (in middle of screen)\nfunc zoomToRect(CGRect, animated: Bool)    // Zoom to a rectangle (fill screen as much as possible)\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#accessing-sub-mvcs","title":"Accessing Sub MVC's","text":"<p>You can access sub-MVC's via the <code>viewControllers</code> property</p> <pre><code>var viewControllers: [UIViewController] { get set } // possibly an optional\n</code></pre> <ul> <li>For a Tabbar they are ordered left to right, in the array.</li> <li>For a Split View, [0] is the master and [1] is the detail.</li> <li>For a NavigationController, [0] is the root and the rest are in     order on the stack.</li> </ul> <p>Get ahold of the NC, SVC, TBC Every <code>UIViewController</code> knows the SplitView, TabBar or Navigation Controller it is currently in. These are <code>UIViewController</code> properties:</p> <pre><code>var tabBarController: UITabBarController? { get }\nvar splitViewController: UISplitViewController? { get }\nvar navigationController: UINavigationController? { get }\n// for example, the get the detail of the split view controller your are in...\nif let detailVC: UIViewController = splitViewController?.viewControllers[1] { ... }\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#wiring-up-mvcs","title":"Wiring up MVC's","text":"<p>In Story board or Code but Storyboard is more common. For Storyboard</p> <ul> <li>Drag out a SplitViewController</li> <li>Ctrl drag from SplitViewController to the Master MVC</li> <li>Ctrl drag from SplitViewController to the Detail MVC</li> <li>Split View can only work on a Regular size device (iPhone is a compact device). Therefore t can't display Master and Detail on the same screen. The master need to be Embed in a n Navigation Controller</li> <li>Select Master</li> <li><code>Editor-&gt;Embed In-&gt;NavigationController</code></li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#segues","title":"Segues","text":"<p>Seques are used that one MVC can cause appear another MVC. There are different kind of Segues</p> <ul> <li>Show Segue (will push NavigationCtonroller, else Modal)</li> <li>Show Detail Segue (will show in Detail of a SplitView or will push in a NavigationController)</li> <li>Modal Segue ( take over the entire screen while the MVC us up)</li> <li>Popover Segue () make the MVC appear in a little popover window</li> </ul> <p>Segue always creates new instances of MVC</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#creating-segue","title":"Creating Segue","text":"<ul> <li>Ctrl drag from two View into each other</li> <li>Click on the Circle in the middle of the segue</li> <li>Choose an Identifier for the Segue from the Attribute Inspector</li> <li>Perform Segue in code, with the method from UIViewController. (Not often mosten made in Storyboard)</li> </ul> <pre><code>func performSegueWithIdentifier(identifier. String, sender: AnyObject?)\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#prepare-segue","title":"Prepare Segue","text":"<p>Identifier are used for preparing for a Segue. A Segue creates a new MVC which is empty, it needs to be prepared with the correct content. A Segue passes two informations:</p> <ul> <li>The Identifier from the Storybaord</li> <li>The Controller of the MVC you are segueing to (which was just created for you)</li> <li>sender is the Object from the storyboard (e.g. UIButton) which caused the segue to happen.</li> </ul> <pre><code>func prepareForSegue(segue: UIStoryBoardSegue, sender: AnyObject?) {\n    if let identifier = segue.identifier {\n        switch identifier {\n            case \"Show Graph\":\n                // beause it is anyObject it needs to be turned into the correct class\n                if let vc = segue.destinationViewController as? MyController {\n                    vc.property1 = ...\n                    vc.callMethodToSetUp(...)\n                }\n            default: break\n        }\n    }\n}\n</code></pre> <p>!!! Important. While preparing an MVC its outlet are not set yet.</p>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#prevent-segue","title":"Prevent Segue","text":"<p>Preventing segue from happening. You need to implement</p> <pre><code>func shouldPerfromSegueWithIdentifier(identifier: String?, sender: AnyObject?) -&gt; Bool\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#popover","title":"Popover","text":"<p>A popover open en entire MVC. The rest of the screen is grayed out. The Pointer of the Popover points to the button created the Popover.</p> <ul> <li>Popover works with Segue as the other ViewControllers</li> <li>Preparing for a popover</li> <li>All segues are managed via a <code>UIPresentationController</code></li> </ul>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#preparing-a-popover","title":"Preparing a Popover","text":"<pre><code>func prepareForSegue(segue: UIStoryBoardSegue, sender: AnyObject) {\n    if let identifier = segue.identifier {\n        switch identifier {\n            case: \"Do something in a popover Segue\":\n                if let vc = segue.destinationViewController as? MyController {\n                    // get popover presentation controller\n                    if let ppc = vc.popoverPresentationController {\n                        ppc.permittedArrowDirections = UIPopoverArrowDirection.Any\n                        ppc.delegate = self\n                    }\n                    // more prepration here\n                }\n        }\n    }\n}\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/02_mvc.html#popover-presentation-controller","title":"Popover Presentation Controller","text":"<p>The Popover Presentation Delegate (see code above) can manipulate and adapt the popover Adaptation</p> <pre><code>func adaptivePresentationStyleForPresentationContoller(UIPresentationController) -&gt; UIModelPresentationStyle {\n    return UIModalPresentationStyle.None // default .FullScreen\n}\n</code></pre> <p>FullScreen</p> <pre><code>func presentationController(UIPresentationController, viewControllerForAdaptivePresentationStyle: UIModalPresentationStyle) -&gt; UIViewController? {\n    // return a UIViewController to use (e.g. Wrap Navigation Controller around your MVC)\n}\n</code></pre> <p>Size Popover should be the needed size of the containing MVC.</p> <pre><code>var preferredContentSize: CGSize\n</code></pre>","tags":["coding","swift","mvc"]},{"location":"coding/swift/03_properties.html","title":"Properties","text":"<p>It is best to let Swift infer the variable type. Many types are Optionals.</p>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#constants-and-variables","title":"Constants and Variables","text":"<p>Type will be inferred</p> <pre><code>let immutableInferInt  = 42    // a constant\nvar mutableInferDouble = 125e2 // int variable\nvar mutableInferFloat  = 1.0   // float variable\nvar mutableInferString = \"This is a\" + \" String\"\nvar mutableInferString = \"The answer is \\(immutable_var)\"\n</code></pre> <p>Type is given specifically</p> <pre><code>var mutableDouble   : Double = 1.0\nvar mutableInt      : Int    = 1\nlet immutableBool   : Bool   = false\nlet immutableString : String = \"Text\" // String is always an optional\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#type-conversion","title":"Type Conversion","text":"<p>With <code>init()</code></p> <pre><code>led d: Double = 37.5\nlet f: Float  = 37.5\nlet x = Int(d)       // truncates\nled xd = Double(x)\nlet cgf = CGFloat(d)\n\nlet a = Array(\"abc\")            // a = [\"a\", \"b\", \"c\"], array of characters\nlet s = String([\"a\", \"b\", \"c\"]) // s= \"abc\"\n\nlet s = String(52)  // no floats\nlet s = \"\\(37.5)\"\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#property-observer-willset-didset","title":"Property Observer <code>willSet</code>&amp; <code>didSet</code>","text":"<p>A property can have two observer functions. They can be used to inform somebody that the variable \"will get set\" or \"did just get set\".</p> <ul> <li>Can be used to update the GUI</li> </ul> <pre><code>var userStatusText: String {\n    willSet {\n        print(\"About to set status to:  \\(newValue)\")\n    }\n    didSet {\n        if userStatusText != oldValue {\n            postNewStatusNotification()\n        }\n    }\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#lazy","title":"<code>lazy</code>","text":"<ul> <li><code>lazy</code>properties are not getting initialized until someone accesses it</li> <li>only for <code>var</code></li> </ul> <pre><code>lazy var varName = SomeClass() // Nice if SomeClass uses a lot of resources\n\nlazy var someProperty: Type = {\n   // construct the value\n   return constructed value\n}()\n\nlazy var myProperty = self.initializeMyProperty()\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#string","title":"String","text":"<p>String is an array of character. But one String can need one or more characters (glyphs) Combining Strings</p> <pre><code>let string1 = \"one\"\nlet string2 = \"two\"\nvar combinedString = \"\\(string1) \\(string2)\" + \" three\"\n</code></pre> <p>String Conversion</p> <pre><code>var intString = \"999\"\nvar intVar = NSString(string: intString).intValue           // == 999\n\nvar doubleString = \"9.95\"\nvar Double_var = NSString(string: doubleString).doubleValue // == 9.95\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#string-functions","title":"String Functions","text":"<pre><code>var s     = \"hello\"\nlet index = advance(s.startIndex, 2) // String.Index to the 3rd glyph \"l\"\ns.splice(\"abc\", index)               // s will now be \"heabcllo\"\n\nlet startIndex = advance(s.startIndex, 1)\nlet endIndex   = advance(s.startIndex, 6)\nlet substring  = s[index..&lt;enIndex]  // substring will be \"eabcl\"\n\nlet num = \"12.34\"\nif let decimalRange = num.rangeOfString(\".\") { // decimalRange == Range&lt;String.Index&gt;\n    let wholeNumberPart = num[num.startIndex..&lt;decimalRange.startIndex]\n}\n//Also\ns.removeRange([s.startIndex..&lt;decimalRange.startIndex])\nreplaceRange(Range,String)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#optional","title":"Optional","text":"<p>An <code>Optional</code> is just en enum.</p> <pre><code>enum Optional&lt;T&gt; {\n    case None\n    case Some(T)\n}\n</code></pre> <p>Examples:</p> <pre><code>let x: String? = nil\n// ==\nlet x: = Optional&lt;String&gt;.None\n\nlet x: String? = \"Hello\"\n// ==\nlet x = Optional&lt;String&gt;.Some(\"Hello\")\n\nvar y = x!\n// ==\nswitch x {\n    case Some((let value): y = value\n    case None: //raise and exception\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#closures","title":"Closures","text":"<p>A closure capture variables in the surrounding context</p> <pre><code>class Grapher {\n    var yforX: ((x:Double) -&gt; Double?)?\n}\n\nlet grapher = Grapher()\nlet graphingBrain = CalculatorBrain()\ngraphingBrain.program = theProgramToGraph\ngrapher.yForX = { (x:Double) -&gt; Double? in\n    graphingBrain.variableValues[\"M\"] = x\n    return graphingBrain.evaluate() // gets captured and reused each time yForX is called\n}\n</code></pre> <p>Capture Danger There can be memory management problems. It can create a memory cycle. Closures capture pointers back at the closure. There will always be a pointer to the closure and to the captured thing, neither will ever be able to leave the heap.</p> <pre><code>class Foo {\n    var action: () -&gt; Void = {}\n    func show(value: Int) {println(\"\\(value)\")}\n    func setupMyAction() {\n        var x:  Int = 0\n        action = {                    // capture danger\n        action = { [unowned self] in  // working because of unowned\n\n            x = x + 1\n            self.show()\n        }\n    }\n    func doMyAction10times() {\n        for i in 1..10 { action() }\n    }\n}\n</code></pre> <p>self has a pointer to the closure and closure has a pointer to the x (self) They can never be released, therefore you need to specify the <code>unowned</code> keyword.</p>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#array","title":"Array","text":"<p>An <code>Array</code> is a list of multidimensional elements of the same type</p> <pre><code>var arr = Array&lt;String&gt;()\n// ==\nvar arr = [String]()\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#out-of-bounds","title":"Out of bounds","text":"<pre><code>//             0       1          2\nlet os_s [\"Linux\",  \"Mac\", \"Windows\"]\nlet os      = os_s[0]     // \"Linux\"\nlet os      = os_s[2]     // \"Windows\"\nlet os      = os_s[3]     // crash index out of bounds\nlet some_os = os_s[0...1] // [\"Linux\", \"Mac\"]\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#enumerating-and-array","title":"Enumerating and Array","text":"<pre><code>for os in os_s {\n    println(\"\\(os)\")\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#array-functions","title":"Array Functions","text":"<pre><code>var a = [a,b,c]\n\narr.append(T)\narr.insert(T, atIndex: Int)           // a.insert(d, atIndex:1), a=[a,d,b,c]\narr.splice(Array&lt;T&gt;, atIndex: Int)    // a.splice([d,e], atIndex:1), a= [a,d,e,b,c]\n\nremoveAtIndex(Int)                    // a.removeAtIndex(1), a = [a,c]\nremoveRange(Range)                    // a.removeRange(0..&lt;2), a= [c]\nreplaceRange(Range, [T])              // a,replaceRange(0...1, with:[x,y,z]), a = [x,y,z,b]\n\nsort(isOrderedBefore: (T, T) -&gt; Bool) // a.sort { $0 &lt; $1 }\n\nfilter(includeElement: (T) -&gt; Bool) -&gt; [T]\nmap(transform: (T) -&gt; U) -&gt; [U]\nlet stringfield: [String] = [1,2,3].map { \"\\($0)\" }\n\nreduce(initial: U, combine:(U,T) -&gt; U) -&gt; U\nlet sum: Int = [1,2,3].reduce(0) { $0 + $1 }\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#dictionary","title":"Dictionary","text":"<p><code>Dictionaries</code> are list of values search-able with a key</p> <pre><code>var dict = Dicrionary&lt;String, Int&gt;()\n// ==\nvar dict = [String:Int]()\n</code></pre> <pre><code>var regions = [\"wallis\":1, \"fribourg\":10]\nlet rank = regions[\"bern\"] // doesn't exist would be Int! therefore nil\nregions[\"fribourg\"] = nil  // delete fribourg\n</code></pre> <p>Use a tuple with <code>for-in</code> to enumerate a dictionary</p> <pre><code>for (key, value) in regions {\n    println(\"\\(key) = \\(value)\")\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/03_properties.html#range","title":"Range","text":"<p>A <code>Range</code> in Swift are just two points of a type. Can be represented as:</p> <pre><code>struct Range &lt;T&gt; {\n    var startIndex: T\n    var endIndex  : T\n}\n</code></pre> Type Range Array <code>Range&lt;Int&gt;</code> String <code>Range&lt;String.Index&gt;</code> <p>There is a special syntax for defining a range: <code>...</code> or <code>..&lt;</code></p> <pre><code>//            0    1    2    3\nlet array = [\"a\", \"b\", \"c\", \"d\"]\nlet subArray1 = array[2...3] // [\"c\", \"d\"]\nlet subArray2 = array[2..&lt;3] // [\"c\"]\n</code></pre> <p>Range is also enumerable</p> <pre><code>for in 24...42 {}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html","title":"Data Structures &amp; Methods","text":"","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#data-structures","title":"Data Structures","text":"<p><code>class</code>, <code>enum</code> and <code>struct</code> are the basic building blocks of swift they have:</p> <ul> <li>Similar Syntax</li> <li>Can have Properties (<code>var</code>, <code>let</code>), Methods (<code>func</code>)</li> <li>Can have initializer</li> <li>Only <code>class</code> has inheritance</li> <li>Only <code>class</code> has introspection and casting</li> <li><code>class</code> = Reference type, <code>enum</code> and <code>struct</code> = Value type</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#enums","title":"<code>enums</code>","text":"<pre><code>enum enumTypeVar : Int { // explicitly all Int's\n    case firstProperty   = 1\n    case secondProperty  = 2\n}\nvat type = enumTypeVar.firstProperty\n</code></pre> <pre><code>enum Barcode {\n    case UPCA(Int, Int, Int, Int)\n    case QRCode(String)\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#struct","title":"<code>struct</code>","text":"<pre><code>struct Resolution {\n    var width = 0\n    var height = 0\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#class","title":"<code>class</code>","text":"","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#creation","title":"Creation","text":"<pre><code>class MyClass : OptionalSuperClass, OptionalProtocol1, OptionalProtocol2 {\n  var myProperty : String var myOptionalProperty : String?\n  // More Properties  ::\n  // Only need override dif subclassing\n  override init() {\n    myProperty = \"initValue\"\n  }\n  // More methods\n  }\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#usage","title":"Usage","text":"<pre><code>var myClassObject = MyClass()\n  println(\"(myClassObject.myProperty)\") // \"initValue\"\n  println(\"(myClassObject.myOptionalProperty!)\") // nil\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#final","title":"<code>Final</code>","text":"<p>With <code>Final</code> a <code>func</code>or <code>class</code> can't be override. It will be the end of the line.</p>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#methods-func","title":"Methods <code>func</code>","text":"<pre><code>func doIt() -&gt; Int {\n    return 0\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#internal-external-names","title":"Internal &amp; External Names","text":"<p>Methods in swift can have internal and external names. The first parameter is a littel different, it should be consistent with the method name.</p> <ul> <li>First parameter has no external name but can be forced with <code>#</code>.</li> <li>All other parameters need to have an external name</li> <li><code>_</code> == \"I don't care\". An name can be eliminated</li> </ul> <pre><code>func doIt(a:Int) -&gt; Int {\n    return a\n}\ndoIt(0)         // return 0\n\nfunc doIt(a:Int, b:Int) -&gt; (a:Int, b:Int){\n    return (a, b)\n}\ndoIt(0, b:1)   // returns a tuple (a,b) == (0,1)\ndoIt(a:0, b:1) // error first param has no external name\n</code></pre> <pre><code>func doIt(externalName InternalName:Int) -&gt; Int {\n    return internalName\n}\ndoIt(externalName:0)\ndoIt(0)              // Error no external name given\n\nfunc doIt(#InternalandImplicitExternalName:Int) -&gt; Int {\n    return InternalandImplicitExternalName\n}\ndoIt(InternalandImplicitExternalName:0)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#override","title":"<code>override</code>","text":"<p>A Method from a superclass can be override wiwth the keyword <code>override</code></p> <pre><code>class Classname : SuperClassName {\n    override doIt()\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#final_1","title":"<code>final()</code>","text":"<p>With <code>Final</code> a <code>func</code>or <code>class</code> can't be override. It will be the end of the line.</p>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#init-method","title":"<code>init()</code> Method","text":"<p>Two types of <code>init</code></p> <ul> <li>designated <code>init()</code></li> <li><code>convenience init()</code></li> </ul> <p>Free Inits</p> <ul> <li>If all Properties are initialized</li> <li><code>struct</code>with no initializers will get a default <code>init</code></li> </ul> <p>What can be done in an <code>init</code>:</p> <ul> <li>Set or Reset properties values <code>var</code> and even <code>let</code></li> <li>Call other <code>init</code> methods <code>self.init()</code></li> <li>Call super classes <code>init</code> methods <code>super.init()</code></li> </ul> <p>What have to be done in an <code>init</code>:</p> <ul> <li>After <code>init()</code> all properties need to have an value (or <code>nil</code>)</li> <li>Designated <code>init</code> can only call designated init of its immediate superclass</li> <li>All own properties need to be initialized before using superclass <code>init</code></li> <li>The superclass <code>init</code> nedd to be called before inherited properties can ba assigned</li> <li><code>convenience init</code> can only call designated <code>init</code> in it's own class</li> <li><code>convenience init</code> can call other <code>convenience init</code> but in the end a designated <code>init</code> must be called</li> <li><code>convenience init</code> first call designated <code>init</code> before set any property value</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#inherited-init","title":"Inherited <code>init</code>","text":"<ul> <li>If no <code>init</code> is implemented all superclass <code>init</code> are inherited</li> <li>If you override all superclass <code>init</code>, you'll inherit all its <code>convenience init</code></li> <li>If you implement no <code>init</code>, you'll inherit all superclass <code>init</code></li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#required-init","title":"Required <code>init</code>","text":"<ul> <li>A <code>class</code> can mark one or more <code>init</code> as required</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#failable-init","title":"Failable <code>init</code>","text":"<p>Rare, it is a <code>init</code> which can return <code>nil</code></p> <pre><code>init?(){\n    // might return nil\n}\n</code></pre> <pre><code>## UIImage example\nlet image = UIImage(named: \"nonExistingName\") // image is an Optional UIImage?\n// solution\nif let image= UIImage(named: \"nonExistingName\"){\n    // image was successfully created\n} else {\n    // couldn't create the image\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#objects","title":"Objects","text":"","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#creating-objects","title":"Creating Objects","text":"<p>Calling <code>init</code> via the type name</p> <pre><code>let x = ClassName()\nlet y = [String]()\n</code></pre> <p>Calling type methods (rare)</p> <pre><code>let button = UIButton.buttonWithType(UIButtonType.System)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#anyobject","title":"<code>AnyObject</code>","text":"<ul> <li>sSpecial Type (it is a Protocol) used to compatibility with Objective-C-based API</li> </ul> <pre><code>// As Properties\nvar destinationViewController : AnyObject\nvar toolbarItems: [AnyObject]\n\n// As Arguments to functions\nfunc appendDigit(sender: AnyObject)\nfunc addConstraints(constraints: [AnyObject])\n\n// Return type of functions\nclass func buttonWithType(buttonType: UIButtonType) -&gt; AnyObject\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/04_datastructures_methods.html#convert-anyobject","title":"Convert <code>AnyObject</code>","text":"<p>Casting <code>as</code> or <code>as?</code></p> <pre><code>var destinationViewController: AnyObject\nlet calcVC = destinationViewController as CalculatorViewVController  // could crash if not correct\n\nif let calcVC = destinationViewController as? CalculatorViewController { ... }\n</code></pre> <p>Cast on the fly</p> <pre><code>let button: AnyObject = UIButton.buttonWithTyoe(UIButtonType.System)\nlet title = (button as UIButton).currentTitle\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html","title":"Control Flow","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#if-else","title":"<code>if</code> - <code>else</code>","text":"<pre><code>if condition1 == true {\n    // do something\n} else if condition2 = true {\n    // do something else\n} else {\n    // do again something else\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#if-let","title":"<code>if</code> - <code>let</code>","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#switch-case","title":"<code>switch</code> - <code>case</code>","text":"<pre><code>switch gesture.state {\n    case .Ended: fallthrough // case defined and execute code in next case\n    case .Changed:           // other case\n        // do something\n    default: break           // all cases needs to be defined\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#for-in-loop","title":"<code>for</code> - <code>in</code> loop","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#while-loop-repeat-while-loop","title":"<code>while</code> loop &amp; <code>repeat</code> - <code>while</code> loop","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#continue-break-fallthrough","title":"<code>continue</code> &amp; <code>break</code> &amp; <code>fallthrough</code>","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#guard","title":"<code>guard</code>","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#as-as-type-casting-is-type-check","title":"<code>as</code>, <code>as?</code> type casting, <code>is</code> type check","text":"","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#extension","title":"Extension","text":"<p>Add a method and properties to a class.</p> <ul> <li>Only new ones</li> <li>Extend a close source code</li> <li>Very powerful but many times overused</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#protocol","title":"<code>protocol</code>","text":"<ul> <li>A way to express an API minimally</li> <li>Specifies the properties and methods needed</li> <li>Protocol is a type without implementation (only declaration)</li> <li>Aspects of a <code>protocol</code></li> <li>The <code>protocol</code> declaration</li> <li>The declaration where a <code>class</code>, <code>struct</code> or <code>enum</code> says that it implements a <code>protocol</code></li> <li>The actual implementation of the <code>protocol</code> in said <code>class</code>, <code>struct</code>or <code>enum</code></li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#declaration","title":"Declaration","text":"<pre><code>// Everyone implements SomeProtocol need to implement InheritedProtocol 1 &amp; 2\nprotocol SomeProtocol: Inherited Protocol1, InheritedProtocol2 {        // can be implemented with class, struct or enum\nprotocol SomeProtocol: class, Inherited Protocol1, InheritedProtocol2 { // only class can implement\n    var someProperty: Int {get set} // need to specify if only get or set or both\n    func aMethod(arg1: Double, anotherArgument: String) -&gt; SomeType\n    mutating func changeIt()        // mutating function need to be declare\n    init(arg: Type)\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#implementation","title":"Implementation","text":"<pre><code>class SomeClass: SuperclassOfSomeClass, SomeProtocol, Another Protocol { // implementation via class\nenum SomeClass: SomeProtocol, AnotherProtocol {                          // implementation via struct\nextension Something : SomeProtocol {                                     // implementation via an extension\n    // implementation of SomeClass here\n    // which MUST include all the properties and methods in SomeProtocol &amp; AnotherProtocol\n    required init(..) // inits need to be declared required (that subclass is coherent)\n    // incase of extension no stored properties allowed\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#example","title":"Example","text":"<pre><code>protocol Moveable {\n    mutating func moveTo(p: CGPoint)\n}\nclass Car: Moveable {\n    func moveTo(p: CGPoint) {...}\n    func changeOil()\n}\nstruct Shape: Moveable {\n    mutating func moveTo(p: CGPoint) {...}\n    func draw()\n}\n\nlet prius: Car = Car()\nlet square: Shape = Shape()\n\n// More examples\nvar thingToMove: Moveable = prius\nthingToMove.moveTo(...)  // ok\nthingToMove.changeOil()  // Error not in protocol type\nthingToMove = square\nlet thingToMove: [Moveable] = [prius, square]\n\nfunc slide(slider: Moveable) {\n    let positionToSlideTo = ....\n    slider.moveTo(positionToSlideTo)\n}\nslide(prius)\nslide(square)\nfunc slipAndSlide(x: protocol&lt;Slippery,Moveable&gt;) // needs to implements 2 seperate protocols\nslipAndSlide(prius) // Error prius only Moveable not Slippery\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/05_controlflow.html#delegation","title":"Delegation","text":"<p>Is using <code>protocols</code>. How Views can talking back (blind communication)</p> <ol> <li>Create a delegation <code>protocol</code> (defines what the View wants the Controller to take care of</li> <li>Create a <code>delegate</code> property in the View whose type is that delegation <code>protocol</code></li> <li>Use the <code>delegate</code> property in the View to get/do things it can't own or control</li> <li>Controller declares that it implements the <code>protocol</code></li> <li>Controller sets <code>self</code> as the <code>delegate</code> of the View by setting the property in 2. above</li> <li>Implement the <code>protocol</code> in the Controller</li> </ol> <p>The View is now hooked up to the Controller and knows nothing. It can remain generic and reusable</p>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html","title":"Multithreading","text":"","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#queue","title":"Queue","text":"<p>Multithreading is mostly about \"queues\" in iOS. Function (usually closures) are lined up in a queue. The those functions are pulled off the queue and executed on an associated thread.</p>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#main-queue-serial-queue","title":"Main queue (serial queue)","text":"<p>All UI activity MUST occur only on this queue. Also all NON-UI activity that is all time consuming must NOT occur on that queue. We want the UI to be responsive! Functions are pulled off and worked on in the main queue only when it's quiet. All normal code will be happen in the main queue.</p> <pre><code>let mainQ: dispatch_queue_t = dispatch_get_main_queue()\nlet mainQ: NSOperationQueue = NSOperationQueue.mainQueue() // for Object oriented API\n\ndispatch_async(not the mainQueue){\n  // do something that might blok or tkaes a while\n  dispatch_async(dispatch_get_main_queue()) {\n    // call UI Functions with the result of the above\n  }\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#other-queues","title":"Other queues","text":"<p>iOS are creating those queue as needed.</p>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#execute-a-function-on-another-queue","title":"Execute a function on another queue","text":"<pre><code>let queue dispatch_queue_t = &lt;get the queue you want....&gt;\ndispatch_async(queue) {/* fo what you want to do here */}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#quality-of-service","title":"Quality of Service","text":"<p>Most non-main-queue work will happen on a concurrent queue with a certain quality of service.</p> <pre><code>QOS_CLASS_USER_INTERACTIVE // quick and high priority\nQOS_CLASS_USER_INITIATED   // high priority, might take time\nQOS_CLASS_UTILITY          // long running\nQOS_CLASS_BACKGROUND       // user not concerned with this (prefetching etc.)\nlet qos = INT(&lt;one of the above&gt;.value) // historical reasons\nlet queue = dispatch_get_global_queue(qos, 0)\n</code></pre> <p>These queues can be used for work that won't block the main queue.</p>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#create-serial-queue","title":"Create serial queue","text":"<p>If you need serialization. E.g. downloading a bunch of things from a certain website but you don't want to deluge that website, so you queue the request up serially OR maybe the things you are doing depend on each other in a serial fashion.</p> <pre><code>let serialQ = dispatch_queue_create(\"name\", DISPATCH_QUEUE_SERIAL)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#do-something-in-the-future","title":"Do something in the future","text":"<p>You almost always <code>dispatch_after</code> into the main queue. All other queues are anyway concurrent and can't guarantee time delay's.</p> <pre><code>let delayInSeconds = 25.0\nlet delay = Int64(delayInSeconds*Double(NSEC_PER_MSEC))\nlet dispatchTime = dispatch_time(DISPATCH_TIME_NOW, delay) // adds delay to now\ndispatch_after(dispatchTime, dispatch_get_main_queue()) {\n  // do something on the main queue 25 seconds from now\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#other-things","title":"Other Things","text":"<p>There's a lot more Multithreading stuff.</p> <ul> <li>locking</li> <li>protect critical sections</li> <li>readers and writers</li> <li>synchronous dispatch</li> <li>etc. ...</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/06_multithreading.html#multithreading-ios-api","title":"Multithreading iOS API","text":"<p>Many API are multithreaded and wont work on the main queue. Theirs works need to be dispached elsewhere.</p> <pre><code>let session = NSURLSESSION(NSURLSessionConfiguration.defaultSessionConfiguration())\nif let url = NSURL(\"http://url\") {\n    let request = NSURLRequest(URL:url)\n    // not working\n    let task = session.downloadTaskWithRequest(request) { (localURL, response, error) in\n        // Here you can'r do UI Stuff with the result of the download!!\n    }\n    // working\n    let task = session.downloadTaskWithRequest(request) { (localURL, response, error) in\n        dispatch_async(dispatch_get_main_queue()) {\n            // Here you can do UI related stuff\n        }\n    }\ntask.reasume()\n}\n</code></pre> <p>In the above example the UI code has been dispatched back to the main queue. But understand that the code might run MINUTES after the request is fired off. The user might have long ago given up on whatever was being fetched.</p>","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html","title":"NS Classes","text":"","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsstring","title":"NSString","text":"","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsarray","title":"NSArray","text":"","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsdictionary","title":"NSDictionary","text":"","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsobject","title":"NSObject","text":"<p>Base class for all Objective-C classes</p>","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsnumber","title":"NSNumber","text":"<p>Generic number-holding class</p>","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsdate","title":"NSDate","text":"<p>Used to find out the date and time ri1ght now or to store past or future dates.</p>","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsdata","title":"NSData","text":"<p>Used to save/restore/transmit raw data.</p>","tags":["coding","swift"]},{"location":"coding/swift/07_nsclasses.html#nsuserdefaults","title":"NSUserDefaults","text":"","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html","title":"UI Elements","text":"","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#uilabel","title":"<code>UILabel</code>","text":"<p>Non editable text.</p>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#uitextfield","title":"<code>UITextField</code>","text":"<p>Like <code>UILabel</code>but editable. But attention, typing on an iPhone is secondary, the keyboard is too small. On an iPad it is already better. The keyboard appears when <code>UITextField</code> becomes \"first responder\"</p> <ul> <li>Will be either automatically when the user taps</li> <li>Or you can do this manually by sending <code>becomeFirstResponder</code> message</li> <li>To make the keyboard go away, send <code>resignFirstResponder</code> to the UITextField</li> </ul> <p>Delegate can get involved with Return Key</p> <pre><code>func textFieldShouldReturn(sender: UITextField) // sent when Return key is pressed\n// Often times you will `sender.resignFirstResponder` in this method\n</code></pre> <p>Returns whether to do a normal processing when Return key is pressed (e.g. target/action).</p>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#keyboard","title":"<code>Keyboard</code>","text":"<p>Controlling the appearance of the keyboard Set the properties in the <code>UITextInputTraits</code> protocol (which <code>UITextField</code> implements).</p> <pre><code>var UITextAutocapitalizatinoType autocapitalizationType // words, sentences etc.\nvar UITextAutocorrectionType autocorrectionType // yes or no\nvar UIReturnKEyType returnKeyType //Go, Search, Google, Done etc.\nvar BOOL secureTextEntry // for passwords etc\nvar UIKeyboardType keyboardType // ASCII, URL, PhonePAd etc.\n</code></pre> <p>The keyboard comes always up over other views.</p> <ul> <li>You may need to adjust your UI for that. The TextField should always be visible. You can react to</li> </ul> <pre><code>UIKeyboard{Will,Did}{Show,Hide}Notifications // send to UIWindow\n</code></pre> <p>You can register a method to get called when a named \"event\" occures like this</p>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#notifications","title":"Notifications","text":"<pre><code>NSNotificationCenter.defaultCenter().addObserver(self,\n                                   selector: \"theKeyboardAppeared:\",\n                                   name: UIKeyboardDidShowNotification,\n                                   object: view.window)\n</code></pre> <p>The Event here is UIKeyboardDidShowNotification. The object is the one who is causing the event to happen (our MVC's window). <code>func theKeyboardAppeared(notification: NSNotification)</code> will get called when it happens. The <code>notification.userInfo</code> will have details about the appearance. UITableViewController` listens for this &amp; scrolls table automatically if a row has a UITextField.</p>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#other-properties-functionality","title":"Other properties &amp; functionality","text":"<pre><code>// Propterty\nvar clearsOnBeginEditing: Bool\nvar adjustFontSizeToFitWidth: Bool\nvar minimumFontSize: CGFloat // always set this if you set adjustFontSizeToFitWidth\nvar placeholder: String // drown on gray when TextField is empty\nvar background/disableBackground: UIImage\nvar defaultTextAttributes: Dictionary // applies to entire Text\n\n// Functionality\n// UITextField have left and right overlays\n// Keyboard have accessory views appearing above the keyboard\nvar inputAccessoryView: UIView // UITextField method\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#uitableview","title":"<code>UITableView</code>","text":"<p>Very important class for displaying data in a table - One-dimensional table - Subclass of <code>UIScrollView</code> - Table can be static or dynamic - Lot of customization via a <code>dataSource</code> protocol and a <code>delegate</code> protocol - Very efficient even with very large sets of data</p> <p>There are two styles of TableView's. Plain</p> <ul> <li>Dynamic List </li> </ul> <p>Grouped</p> <ul> <li>Static and Grouped </li> </ul> <p>Static</p> <ul> <li>Static means that these cells are set up in the storyboard only. You can edit them however you want including dragging buttons, etc. into them (and wiring up outlets to the Controller).</li> <li>Space is partitioned</li> <li>E.g. Setting App</li> </ul> <p>Dynamic</p> <ul> <li>Almost always in Plain TableView style</li> <li>Cells in cells are templates which will be repeated for however many rows are needed to display the data in MVC's Model</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#elements","title":"Elements","text":"<ul> <li>Elements</li> <li>Table Header</li> <li>Sections</li> <li>Section Header</li> <li>Table Cell</li> <li>Section Footer</li> <li>Table Footer</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#cell-types","title":"Cell Types","text":"<p>Figure 1: image2</p> <ul> <li>Subtitle <code>UITableViewCellStyle.Subtitle</code></li> <li>Basic <code>.Default</code></li> <li>Right Detail <code>Value1</code></li> <li>Left Detail <code>.Value2</code></li> <li>Custom</li> <li>You need to create a custom subclass</li> <li>Then you can wire up outlet etc.</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#cell-accessory","title":"Cell Accessory","text":"","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#uitableviewcontroller","title":"<code>UITableViewController</code>","text":"<p>Provides an convenient packaging of a <code>UITableView</code> in an MVC. The <code>self.view</code> of a <code>UITableViewControllers</code> need to be a <code>UITable View</code>. The <code>UITableViewController</code> is connected to the <code>UITableView</code> via 2 Referencing Outlets</p> <ul> <li>dataSource</li> <li>delegate</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#protocols","title":"Protocols","text":"<p>Connection to code are made using the <code>UITableView's</code> datasource and delegate</p> <ul> <li>delegate is used to control how the table is displayed (it's look and feel)</li> <li>datasource provides the data that is displayed inside the cells</li> <li>How many section in the table</li> <li>How many rows in each section</li> <li>Give me a view to use to draw each cell at a given row in a given section</li> </ul> <p>The <code>UITableView Controller</code> automatically sets itself as the <code>UITableView</code> delegate &amp; datasource. Your <code>UITableViewController</code> subclass will also have a property pointing to the <code>UITableView</code></p> <pre><code>var tableView: UITableView // self.view in UITableViewController\n</code></pre> <p>DataSource implementation Providing a UIView to draw each row. It has to be a <code>UITableViewCell</code>. The Cells are constantly reused. The <code>UITableView</code> will ask its <code>UITableViewDataSource</code> for the <code>UITableViewCell</code> for a row ...</p> <pre><code>func tableView(tv: UITableView, cellforRowatIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell {\n  // get data for a cell (can be as simple as a 2dim array)\n  let data = myInternalDataStructure[indexPAth.section][indexPath.row]\n  // get cell to use\n  let dequeued: AnyObject = tv. dequeueReusableCellWithIdentifier(\"MyCell\", forIndexPath: indexPath)\n\n\n  let cell = dequeued as UITableViewCell // because it was AnyObject\n  // For a NON Custom Cell\n  cell.textLabel?.text = \"Title\"\n  cell.detailTextLabel?.text = \"Subtitle\"\n\n  // For a Custom Cell\n  cell.publicAPIofMyTableViewCell = data.theDataTheCellNeedsToDisplayItsCustomLabelsEtc\n  ...\n\n  return cell\n}\n</code></pre> <p>Dynamic Table to know how many rows and sections there are</p> <pre><code>func numberOfSectionsInTableView(sender: UITableView) -&gt; Int\nfunc tableView(sender: UITableView, numberOfRowsInSection: Int) -&gt; Int\n</code></pre> <ul> <li>Number of sections is 1 by default.</li> <li>numberOfRowsInSections is required</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#delegate","title":"Delegate","text":"","tags":["coding","swift"]},{"location":"coding/swift/081_uielements.html#multi-dimensional-tables","title":"Multi-dimensional Tables","text":"<p>Usually done via a <code>UINavigationController</code> with multiple MVC's where View is <code>UITableView</code>.</p>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html","title":"Views","text":"<p>Views is a <code>UIView</code> subclass and it represents a rectangular Area on the screen.</p> <ul> <li>a View can have on superview</li> <li>a View can have many subviews</li> </ul> <p><code>UIWindow</code> is the very top of the view hierarchy (it even includes the status bar). But normally you never interact with it.</p> <p>Top View is a property of the Program called:</p> <pre><code>var view: UIView\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#initializing-uiview","title":"Initializing UIView","text":"<pre><code>init(frame: CGRect)  // init of UIView created in code\ninit(coder: NSCoder) // init of UIView comes out of storyboard\n</code></pre> <p>If you need an initializer set them both</p> <pre><code>func setup() {...}\n\noverride init(frame:CGRect) {            // a designated init\n    super.init(frame: frame)\n    setup()\n}\n\nrequired init(coder aDecoder: NsCoder) { // a required init\n    super.init(coder: aDecoder)\n    setup()\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#views-coordinate-system","title":"View's Coordinate System","text":"<ul> <li>Origin = upper left</li> <li>Units are points (not pixels)</li> <li>One point can have multiple pixels</li> </ul> <pre><code>var contentSacleFactor: CGFloat // get number of pixels per point\n</code></pre> <ul> <li>Boundaries is where drawings happen</li> </ul> <pre><code>var bounds: CGRect // a vies internal drawing space's origin and size\n</code></pre> <ul> <li>The UIView location</li> </ul> <pre><code>var center: CGPoint // center of a UIView in its superview's coordinate system\nvar frame : CGRect  // the rect containing a UIview in its superview's coordinate system\n</code></pre> <ul> <li>Bounds vs Frame </li> </ul> <pre><code>View B's bounds = ( (0  ,0) , (250,200) )\nView B's frame  = ( (140,65), (320,320) )\nView B's center = ( 300,225 )\nView B's middle = (bounds.midX, bounds.midY) = (100,125)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#creating-a-view","title":"Creating a View","text":"<p>In Stroyboard</p> <ul> <li>Drag UIView into storyboard</li> <li>User <code>Identity Inspector</code> to changes it's class to your sublcass</li> </ul> <p>In Code Assuming this code is in the UIViewController</p> <pre><code>let labelRect = CGRect(x: 20, y:20 , width: 100, height:50)\nlet label = UILabel(frame: labelRect) // UILabel is a sublcass of UIView\nlabel.text = \"Hello\"\nview.addSubview(label)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#view-transparency","title":"View transparency","text":"<p>Layers are defined in th order they are in the subviews list</p> <ul> <li>First in the list are the lower layers</li> <li>Later in the list are on Top</li> <li>Transparency is not cheap</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#hide-a-view","title":"Hide a view","text":"<p>A hidden view don't receive touch inputs or events and can draw nothing on screen</p> <pre><code>var hidden: Bool\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#custom-view","title":"Custom View","text":"<p>Used when</p> <ul> <li>Draw some custom drawing on screen</li> <li>If touch events need to be handeled differently</li> </ul> <p>To create just create a UIView subclass and override drawRect.</p> <pre><code>override func drawRect(regionThatNeedsToBeDrawn: CGRect)\n</code></pre> <ul> <li>Never call drawRect, if a View needs to be redraw use:</li> </ul> <pre><code>setNeedsDisplay()\nsetNeedsDisplayinRect(regionThatNeedsToBeDrawn: CGRect)\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#drawing","title":"Drawing","text":"","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#drawing-text","title":"Drawing Text","text":"<p>Usually <code>UILabel</code> is used to put text on screen</p> <p>To draw in <code>drawRect</code> use <code>NSAttributedString</code> or <code>NSMutableAttributedString</code></p> <pre><code>// Immutable\nlet text = NSAttributedString(\"Hello\")\ntext.drawAtPoint(aCGPoint)\nlet textSize: CGSize = text.size // space used for the string\n// Mutable\nlet mutableText = NSMutableAttributedString(\"some String\")\n\n// Set Attributes\nfunc setAttributes(attributes: Dictionary, range: NSRange)\nfunc addAttributes(attributes: Dictionary, range: NSRange)\n\nNSForegroundColorAttributeName : UIColor\nNSStrokeWidthAttributeName: CGFloat\nNSFontAttributeNAme : UIFont\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#drawing-images","title":"Drawing Images","text":"<p>``UIImage`` object</p> <pre><code>let image: UIImage? = UIImage(named: \"foo\")\n</code></pre> <ul> <li>Images are added in the project in <code>Images.xcassets</code> file</li> <li>Images can have different resolutions for different devices (all managed by Images.xcassets)</li> </ul> <p>From the file system</p> <pre><code>let image: UIImage? = UIImage(contentOfFile: aString)\nlet image: UIImage? = UIImage(data: anNSData) // raw .jpg, .png, .tiff, ...\n</code></pre> <p>Drawing image on screen</p> <pre><code>image.drawAtPoint(aCGPoint)         // upper left of the image put at aCGPoint\nimage.drawInRect(aCGPoint)          // scales image to fit aCGRect\nimage.drawAsPAtternInRect(aCGPoint) // tiles the image into aCGRect\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#bound-change-uiviewcontentmode","title":"Bound change <code>UIViewContentMode</code>","text":"<p>Bound can change if the device is rotated etc.</p> <ul> <li>By default there is no redraw</li> <li>Content and images are getting streched</li> <li>Can be changed in the <code>UIView</code> property</li> </ul> <pre><code>var contentMode: UIViewContentMode\n// Don't scale to view but place it somewhere else\n.Left/.Right/.Top/.Bottom/.TopRight/.BottomRight/.BottomLeft/.Center\n// Scale view\n.ScaleToFit/.ScaleAspectFill/.ScaleAspectFit // scale to fill is the default\n// Redraw by calling drawRect again\n.Redraw // This is the one you should use\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#uibezierpath","title":"<code>UIBezierPath</code>","text":"<pre><code>// Create\nlet path = UIBezierPath()\n// Move, add line or arcs to the path\npath.moveToPoint(CGPoint(80,50)) // assume screen is 160x250\npath.addLineToPoint(CGPoint(140,150))\npath.addLineToPoint(CGPoint(10,150))\n// Close path to start point\npath.closePath()\n// Set attributes and stroke / fill\nUIColor.greenColor().setFill() // method of UIColor\nUIColor.redColor().setStroke() // method of UIColor\npath.linewidth = 3.0           // property in UIBezierPath\npath.fill()\npath.stroke()\n</code></pre> <p>Other shapes</p> <pre><code>let roundRect = UIBezierPath(roundedRect: aCGRect, cornerRadius: aCGFloat)\nlet oval = UIBezierPath(ovelInRect: aCGRect)\n// ... and others\n</code></pre> <p>Clipping</p> <pre><code>addClip()\n</code></pre> <p>HitDetection For HitDetection a path must be closed</p> <pre><code>func containsPoint(CGPoint) -&gt; Bool // tells whether a point is inside a path\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#uicolor","title":"<code>UIColor</code>","text":"<pre><code>// Colors can also b RGB, HSB or even a pattern (using UIImage)\nlet green = UIColor.greenColor()\n// Background Color\nvar backgroundColor : UIView\n// Colors can have alpha (transparency)\nlet transparentYellow = UIColor.yellowColor().colorwithAlphaComponent(0.5)\n// 0.0 = fully transparent 1.0 = fully opaque\n// Transparency must be enabled in the UIView\nvar opaque = false\n// Entire UIView transparent\nvar alpha: CGFloat\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#uifont","title":"<code>UIFont</code>","text":"<pre><code>class func preferredFontForTextStyle(UIFontTextStyle) -&gt; UIFont\n\nUIFontTextStyle.Headline\nUIFontTextStyle.Body\nUIFontTextStyle.Footnote\n</code></pre> <p>System Font</p> <p>Not used for user content</p> <pre><code>class func systemFontOfSize(pointSize: CGFloat) -&gt; UIFont\nclass func boldsystemFontOfSize(pointSize: CGFloat) -&gt; UIFont\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#coordinate-system","title":"Coordinate System","text":"","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#data-structures","title":"Data Structures","text":"<pre><code>// CGFloat never user double or float for coordinated\nlet cfg = CGFloat(aDouble)\n\n// CFPoint = two CFFloats in x and y\nvar point = CGPointer(x: 37.0, y: 55.2)\npoint.y -= 30\npoint.x += 20.0\n\n// CGSize = struct with two CGFloats in width and height\nvar size = CGSize(width: 100.0, height: 50.0)\nsize.width  += 42.5\nsize.height += 75\n\n// CGRect = CGPoint and CGSize\nstruct CGRect {\n    var origin: CGPoint\n    var size  : CGSize\n}\nlet rect = CGRect(origin: aCGPoint, size: aCGSize)\n// Other CGRect properties and methods\nvar minx: CGFloat          // left edge\nvar midY: CGFloat          // midpoint vertically\nintersects(CGRect) -&gt; Bool // does CGRect intersect with otehr one?\nintersect(CGRect)          // clip the CGRect to the intersection wit hthe other one\ncontains(CGPoint) -&gt; Bool  // does CGRect contain the given CGPoint?\n//.. and many more\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#connection-to-storyboard","title":"Connection to storyboard","text":"<p>The <code>@</code>keywords are making connection to the storyboard</p> <pre><code>import UIKit\n\n@IBDesignable // live view in storyBoard\nclass ViewController: UIView {\n    @IBInspectable // Makes the var changable in storyboard (Attribute Inspector)\n    var test: Int = 10\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#autolayout","title":"Autolayout","text":"<p>The main rules for autolayout</p> <ul> <li>Using the dash blue lines</li> <li>Ctrl dragging between View to make relationships</li> <li>Use Pin and Arrange popovers in the lower right corner</li> <li>Reset to Suggested Constraints</li> <li>Document outline, where you can see all defined constraints</li> <li>Size Inspector for read and edit details of the constraint</li> <li>Do as much as possible in storyboard</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#autorotation","title":"Autorotation","text":"<p>In some cases autorotation changes the view drastically and things needs be rearranged (e.g. Calculator Buttons).</p>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#size-classes","title":"Size Classes","text":"<p>There two size classes in iOS:</p> <ul> <li>Compact</li> <li>Regular</li> <li>Any</li> </ul> <p>See all devices and theirs size classes in either portrait or landscape. Figure 1: Size Classes</p> <p>MVC can also get their size class.</p> <pre><code>let mySizeClasse: UIUSerInterfaceSizeClass = self.traitCollection.horizontalSieClass\n// will return either .Compact or .Regular or .Unspecified\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#gestures","title":"Gestures","text":"<ul> <li>A <code>UIView</code> can get notified when a gestures happens</li> <li>Raw gestures (touch down, moved, up etc.)</li> <li>We can react to predefined \"gestures\"</li> <li>Gestures are recognized by instance of <code>UIGestureRecognizer</code></li> <li>Concrete subclasses are used never the base class</li> <li>(recognize) Adding a gesture recognizer to a <code>UIView</code> (ask a <code>UIVew</code> to recognize a gesture)</li> <li>(handle) Providing a method to \"handle\" that gesture (not necessarily by the <code>UIView</code>)</li> <li>\"Recognize\" is done by the Controller</li> <li>\"Handling\" is provided either by the <code>UIView</code> or a <code>Controller</code></li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#add-a-gesture-recognizer-to-a-view","title":"Add a Gesture recognizer (to a View)","text":"<pre><code>// Normal outlet to the UIView we want to recognize the gesture\n// The Target gets notified when the gesture is recognized (in this case the Controller itself)\n// The action is the method invoked on recognition (the : means it has an argument)\n@IBoutlet ewak var pannableView: UIView {\n    didSet {\n        let recognizer = UIPanGestureRecognizer(target: self, action: \"pan:\")\n        pannableView.addGestureRecognizer(recognizer)\n    }\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#handling-a-gesture","title":"Handling a Gesture","text":"<ul> <li>A handler for a gesture needs gesture-specific information</li> <li>For Example, <code>UIPanGestureRecognizer</code> provides 3 methods</li> </ul> <pre><code>func translationInView(view: UIView) -&gt; CGPoint // cumulative since start of recognize\nfunc velocityInView(view: UIView) -&gt; CGPoint    // how fast the finger is moving (points/s)\nfunc setTranslation(translation: CGPoint, inView: UIView) // allows to reset translation, you end up getting incremental translation\n</code></pre> <ul> <li>The abstract superclass also provides state information</li> </ul> <pre><code>var state: UIGestureRecognizerState { get }\n// Possible states\n.Possible   // start at possible gesture\n.Recognized // gesture recognized\n.Changed    // gesture changed\n.Ended      // gesture ended\n</code></pre> <p>e.g. Pan Handler</p> <pre><code>func pan(gesture: UIPanGestureRecognizer) {\n    switch gesture.state {\n        case .Changed: falltrough // execute code of the next case\n        case .Ended:\n            let translation = gesture.translationInView(pannableview)\n            // update anything that depends on the pan gesture using translation.x and .y\n            gesture.setTranslation(CGPointZero, InView: pannableView) // optional\n        default: break\n    }\n}\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#possible-gestures","title":"Possible Gestures","text":"<ul> <li><code>UIPinchGestureRecognizer</code></li> </ul> <pre><code>var scale: CGFloat            // not read-only (can reset)\nvar velocity: CGFloat { get } // scale factor per second\n</code></pre> <ul> <li><code>UIRotationGestureRecognizer</code></li> </ul> <pre><code>var rotation: CGFloat         // not read-only (can reset); in radians\nvar velocity: CGFloat { get } // radians per second\n</code></pre> <ul> <li><code>UISwipeGestureRecognizer</code> Set up the direction and nbr of fingers, then look for <code>.Recognized</code></li> </ul> <pre><code>var direction: UISwipeGestureRecognizerDirection // which swipes you want\nvar numberOfTouchesRequired: Int                 // finger count\n</code></pre> <ul> <li><code>UITapGestureRecognizer</code> Set up the number of taps and fingers you want, then look for <code>.Ended</code></li> </ul> <pre><code>var numberOfTapsRequired: Int    // single tap, double tap, etc.\nvar numberOfTouchesRequired: Int // finger count\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/08_views.html#view-controller","title":"View Controller","text":"<p>Live Cycle</p> <ul> <li>Creation: MVC is most often instantiated out of the storyboard</li> <li>Preparing</li> <li>Outlet setting</li> <li><code>viewDidLoad()</code> is called:</li> <li>Good place for setup code   <pre><code>override func viewDidLoad() {\n    super.viewDidLoad() // always have super the chance in lifecycle methods\n    // do some MVC setup\n    // update your UI for your Model\n    // geometry is not set, don't do geometry related things things\n}\n</code></pre></li> <li>Geometry will be set</li> <li>Appearing <code>viewWillAppear</code> &amp; <code>viewDidAppear</code> &amp; <code>viewWillDisappear</code> &amp; <code>viewDidDisappear</code> <pre><code>func viewWillAppear(animated: Bool) { // animated is wether your are appearing over time\n    super.viewWillAppear(animated)\n    // geometry is set\n    // some expensive stuff\n}\n\nfunc viewDidAppear(animated: Bool) {\n    super.viewDidAppear(animated) // all super\n    // ...\n}\n\noverride func viewWillDisappear(animated: Bool) {\n    super.viewWillDisappear(animated) // call super method\n    // do some cleanup\n    // not do anything time-consuming or the app will be slow\n}\n\nfunc viewDidDisappear(animated: Bool) {\n    super.viewDidDisappear(animated)\n}\n</code></pre></li> <li>Geometry changes</li> <li>If the layout can change these two functions are called. These functions can be called alot.   <pre><code>func viewWillLayoutSubviews()\n// Autolayout is happening in between\nfunc viewDidLayoutSubviews()\n</code></pre></li> <li>Autolayout is the same as bound change (see above)   <pre><code>func viewWillTransitionToSize(size: CGSize, withTransitionCoordinator: UIViewControllerTransistionCoordinator)\n</code></pre></li> <li>Low Memory Situation   <pre><code>func didReceiveMemoryWarning() { // happends rarely\n    // Anything big in use should be freed by setting the pointers to it to nil\n}\n</code></pre></li> <li><code>awakeFromNib</code></li> <li>all object that come from out of the storyboard getting this method before it's outlets are set.</li> </ul>","tags":["coding","swift"]},{"location":"coding/swift/09_other.html","title":"Other","text":"","tags":["coding","swift"]},{"location":"coding/swift/09_other.html#assertions","title":"Assertions","text":"<p>Debbuging Aid, crashed program and gives a message if condition not true</p> <pre><code>assert(() -&gt; Bool, \"message\")\n//e.g.\nassert(validation() != nil, \"the validation functions returned nil\")\n</code></pre>","tags":["coding","swift"]},{"location":"coding/swift/09_other.html#other-functions","title":"Other Functions","text":"<p>Global Functions working with <code>Array</code>, <code>Dictionary</code>, <code>String</code></p> <ul> <li>Collection == <code>Array</code>, <code>Dictionary</code>, <code>String</code></li> <li>Sliceable == <code>Array</code>, <code>String</code></li> </ul> <pre><code>let count = countElements(aCollection)     // nbr of elements in collection\nlet sub = dropFirst(aSliceable)            // drops first thing in sliceable\nlet sub = dropLast(Sliceable)              // drops last thing in sliceable\nlet first = first(aCollection)             // first element in collection\nlet last = last(aCollection)               // last element in collection\nlet prefix = prefix(aSliceable, X: Int)    // returns first X things\nlet suffix = suffix(aSliceable, X: Int)    // returns last X things\nlet reversed: Array = reverse(aCollection) // remembers that String in a collection\nlet backwardsString = String(reverse(s))   //\n</code></pre>","tags":["coding","swift"]},{"location":"coding/tcl_tk_do/index.html","title":"Tcl-Tk","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/index.html#introduction","title":"Introduction","text":"<p>Tcl originally from \"Tool Command Language\" is a scripting language. It is commonly used for rapid prototyping, scripted applications, GUIs and testing. Tcl is used on embedded systems platforms.</p> <p>Tcl is also used for CGI scripting. Tcl is popularly used today in many automated test harnesses, both for software and hardware, and has a loyal following in the Network Testing and SQA communities.</p> <ul> <li>TCL Tk Manual or online</li> </ul>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/index.html#links","title":"Links","text":"<ul> <li>Wikibook Tcl Programming</li> <li>Tcl Developper eXchange - Documentation</li> </ul>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/examples.html","title":"Examples","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/examples.html#run-simulation","title":"Run simulation","text":"<p>run_sim.do</p> <p>This scripts performs the following operations:</p> <ol> <li>Quit previous simulation if in action</li> <li>Specify variables<ol> <li>Get PWD</li> <li>Project path variables</li> <li>compPath form environmentvar</li> <li>workPath</li> <li>ModelsimPath</li> </ol> </li> <li>Creating working library<ol> <li>Change to working directory</li> <li>Create work lib</li> <li>Change back to modelsim execution directory</li> <li>Mapping work lib</li> </ol> </li> <li>Compile Design<ol> <li>Execute <code>comp.do</code> files</li> </ol> </li> <li>Compile Testbench</li> <li>Loading the design</li> <li>Load do files for simulation</li> <li>Restart and Simulate</li> </ol>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/examples.html#compilation","title":"Compilation","text":"<p>comp.do</p> <p>This scripts performs the following operations:</p> <ol> <li>Specify variables of component</li> <li>Specify VHDL source Paths</li> <li>Specify Subcomponent Paths</li> <li>Compile additional Libraries</li> <li>Compile the Design</li> </ol>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/examples.html#calculate-simulation-time","title":"Calculate Simulation time","text":"<p>calc_simtime.do</p> <p>This scripts allows to measure the simulation time</p>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/fpga_scripting.html","title":"FPGA Scripting","text":"<p>Every FPGA Manufacturer has its own libraries for scripting their tools with tcl-tk scripts.</p> <ul> <li>Xillinx Vivado</li> <li>Intel Quartus II</li> </ul>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html","title":"Syntax","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#general","title":"General","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#comments","title":"Comments","text":"comment<pre><code># this is a comment\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#console-output","title":"Console output","text":"<p>To do a print in the console, the special variable \"text\" has to be used</p> console output<pre><code>puts \"This text will be displayed in the console\"\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#concatenate-commands","title":"Concatenate commands","text":"<p>It is possible to concatenate commands with the <code>[]</code> braces.</p> concatenation<pre><code>set pwd_path [eval pwd]\n\nif {[file exists $filename)]} { }\n\nif {[file isdirectory $filename)]} { }\n\nset var [examine /block/signalname]\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#sleep","title":"Sleep","text":"sleep<pre><code>after [expr {int(10*1000)}] # Wait for 10*1000ms = 10sec\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#variables","title":"Variables","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#local-variables","title":"Local variables","text":"local variable<pre><code># Writing Variables\nset variableName stringValue\nset exampleVar /home/user\n\n# Reading Variables\n$variableName\nset exampleVar2 $exampleVar/file.do\n\n# Reading Signal Value and store in Variable\nset exampleVar3 [examine /block/signalname]\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#environment-variables","title":"Environment variables","text":"environment variable<pre><code># Current working directory\nset pwd_path [eval pwd]\n\n# Reading environment variable\nset compPath $env(modelsim_complib)\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#statements","title":"Statements","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#if","title":"if","text":"if<pre><code>if { [$string == \"string\"] || [$int &gt;= 50] &amp;&amp; [string equal -nocase $string \"compare\"] } {\nDo stuff here\n}\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#loop","title":"Loop","text":"loops<pre><code>set file_list {\n                file_1.vhd\n                file_2.vhd\n}\n\nforeach file $file_list {\n    puts \"File $file\"\n}\n\nset library_file_list {\n                        design_library {counter.vhd}\n                        test_library   {counter_tb.vhd\n                                        counter_tester.vhd}\n}\n\nforeach {library file_list} $library_file_list {\n    puts \"Library name $library\"\n    foreach file $file_list {\n        puts \"file $file\"\n    }\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#filesystem","title":"Filesystem","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#check-if-folder-exist","title":"Check if folder exist","text":"check folder<pre><code>if {[file isdirectory $env(modelsim_complib)]} {\n# folder exist\n} else {\n  # create folder\n  file mkdir $env(modelsim_complib)\n}\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#check-if-file-exist","title":"Check if file exist","text":"check folder<pre><code>if {[file exists $env(modelsim_complib)]} {\n# file exist\n} else {\n  # create folder\n  file mkdir $env(modelsim_complib)\n}\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#make-dir","title":"Make dir","text":"mkdir<pre><code>file mkdir $env(modelsim_complib)\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#change-directory","title":"Change directory","text":"cd<pre><code>cd $compPath\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#create-list","title":"Create list","text":"cd<pre><code>[list item1 item2]\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#calculation","title":"Calculation","text":"calculations<pre><code>[expr 1.0 * 3.0 / 4.0]\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#foreach_in_collection","title":"foreach_in_collection","text":"collection<pre><code>foreach_in_collection op [get_available_operating_conditions] {\n  set operating_conditions $op\n  update_timing_netlist\n  set oc_name [get_operating_conditions_info $op -display_name]\n  puts \"Operating Condition Set to: $oc_name\"\n  report_timing -setup -npath 10 -detail summary -append -file top_setup.txt\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#get_collection_size","title":"get_collection_size","text":"collection<pre><code>set num_ports [get_collection_size [get_ports *]]\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#quartus-specific","title":"Quartus specific","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#post-messages","title":"Post messages","text":"<p>Post messages on Console.</p> <pre><code>postmessage -type info -submsgs {\"Submessage 1\" \"Submessage 2\"} \"Main info message\"\npostmessage -type extra_info \"Extra info message\"\npostmessage -type warning \"Warning message\"\npostmessage -type critical_warning \"Critical warning message\"\npostmessage -type error -submsgs \"Error submessage\" \"Main error message\"\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#modelsim-specific","title":"Modelsim specific","text":"","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#quit-sim","title":"Quit Sim","text":"<p>Quit previous simulation if in action</p> quit vsim<pre><code>quit -sim\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#creating-library","title":"Creating library","text":"<p>Change to working folder and create working lib. Note: variable have to created before.</p> create workdir<pre><code># change to working directory\ncd $compPath\n\n# Create work lib\nvlib $workPath\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#mapping-library","title":"Mapping library","text":"<p>Mapping working library to to folder. Note: Variables have to created before.</p> map workdir<pre><code># Change to Modelsim execution directory\ncd $ModelsimPath\n\n# Mapping work lib\nvmap work $workPath\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#execute-do-files","title":"Execute <code>.do</code> files","text":"<p>In order to execute another do file in from this one</p> do.do<pre><code>do .path/to/do_file/filename.do\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#compilation","title":"Compilation","text":"<p>Compilation of vhdl files in a certain library. Note: Variables have to created before.</p> compilation.do<pre><code># compilation into before created working library\nvcom -work $workPath path/to/vhdl_file/filename.vhd\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#loading-design","title":"Loading design","text":"<p>Loading of the design. See also <code>vsim -help</code> toplevelbloc = testbenc</p> load_design.do<pre><code>vsim -t ps work.toplevelbloc -l path/to/transcript.txt\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#wave","title":"Wave","text":"<p>Display wave window and load waveform</p> wave.do<pre><code>view wave\ndo path/to/wave.do\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#restart-simulate","title":"Restart &amp; Simulate","text":"<p>Restart simulation and simulate</p> restart_and_sim.do<pre><code># Force restart\nrestart -f\n\n# Run until something finish (or until sun burns down)\nrun -all\n\n# Run given time\nrun 50 us\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/tcl_tk_do/syntax.html#read-signals","title":"Read Signals","text":"signals.do<pre><code>examine /bloc/signal_name\n</code></pre>","tags":["coding","tcl/tk"]},{"location":"coding/vhdl/index.html","title":"VHDL","text":"","tags":["coding","vhdl"]},{"location":"coding/vhdl/index.html#introduction","title":"Introduction","text":"<p>VHDL (VHSIC hardware description language) is a hardware description language used in electronic design automation to describe digital and mixed-signal systems such as field-programmable gate arrays and integrated circuits.</p> <p>VHDL is commonly used to write text models that describe a logic circuit. Such a model is processed by a synthesis program. A simulation program is used to test the logic design using simulation models to represent the logic circuits that interface to the design. This collection of simulation models is commonly called a testbench.</p> <p>VHDL has constructs to handle the parallelism inherent in hardware designs. VHDL is strongly typed and is not case sensitive.</p> <p>A final point is that when a VHDL model is translated into the \"gates and wires\" that are mapped onto a programmable logic device such as a CPLD or FPGA, then it is the actual hardware being configured, rather than the VHDL code being \"executed\" as if on some form of a processor chip.</p> <p>As last remark I want to thank Corthay Francois for his VHDL Summary and HTML files.</p>","tags":["coding","vhdl"]},{"location":"coding/vhdl/index.html#pdf","title":"PDF","text":"<ul> <li>ESA VHDL Modelling Guide</li> <li>Synth Works Fixed &amp; Float</li> <li>Synth Works Math Tricks</li> <li>Synth Works Verification</li> <li>Synth Works VHDL 2008 End of Verbosity</li> <li>Short Guide CoF</li> <li>EPFL VHDL Script</li> </ul>","tags":["coding","vhdl"]},{"location":"coding/vhdl/index.html#links","title":"Links","text":"<ul> <li>Wikibook VHDL Programmable Logic</li> <li>Wikibook VHDL for FPGA Design</li> <li>Wikibook VHDL</li> <li>VHDL Guide</li> <li>Compact Summary of VHDL</li> <li>Open cores - Free VHDL/Verilog IP's</li> <li>VHDL Guru Blog</li> <li>Synth Works</li> </ul>","tags":["coding","vhdl"]},{"location":"coding/vhdl/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["coding","vhdl"]},{"location":"coding/vhdl/attributes.html","title":"Attributes","text":"<p>Attributes are a feature of VHDL that allow you to extract additional information about an object (such as a signal, variable or type) that may not be directly related to the value that the object carries. Attributes also allow you to assign additional information (such as data related to synthesis) to objects in your design description.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#predefined-attributes","title":"Predefined attributes","text":"<p>The VHDL specification describes five fundamental kinds of attributes.</p> <ul> <li>a value</li> <li>a function</li> <li>a signal</li> <li>a type</li> <li>a range.</li> </ul> <p>Predefined attributes are always applied to a prefix (such as a signal or variable name, or a type or subtype name), as in the statement:</p> <pre><code>wait until Clk = '1' and Clk'event and Clk'last_value = \u20180\u2019;\n</code></pre> <p>Some attributes also include parameters, so they are written in much the same way you would write a call to a function:</p> <pre><code>variable V: state_type := state_type'val(2); -- V has the value of Strobe\n</code></pre> <p>In this case, the attribute 'val has been applied to the prefix state_type (which is a type name) and has been given an attribute parameter, the integer value 2.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#value-kind-attributes","title":"Value kind attributes","text":"<p><code>'Left</code>, <code>'Right</code>, <code>'High</code>, <code>'Low</code>, <code>'Length</code>, <code>'Ascending</code></p> <p>The value kind attributes that return an explicit value and are applied to a type or subtype include the following:</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#left","title":"<code>'left</code>","text":"<p><code>'Left</code> This attribute returns the left-most element index (the bound) of a given type or subtype.</p> <pre><code>type bit_array is array (1 to 5) of bit;\n\nvariable L: integer := bit_array'left; -- L has a value of 1\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#right","title":"<code>'right</code>","text":"<p><code>'Right</code> Returns the right-most bound of a given type or subtype.</p> <pre><code>type bit_array is array (1 to 5) of bit;\n\nvariable R: integer := bit_array'right; -- R has a value of 5\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#high","title":"<code>'high</code>","text":"<p><code>'High</code> returns the upper bound of a given scalar type or subtype.</p> <pre><code>type bit_array is array(-15 to +15) of bit;\n\nvariable H: integer := bit_array'high; -- H has a value of 15\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#low","title":"<code>'low</code>","text":"<p><code>'Low</code> returns the upper bound of a given scalar type or subtype.</p> <pre><code>type bit_array is array(15 downto 0) of bit;\n\nvariable L: integer := bit_array'low; -- L has a value of 0\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#length","title":"<code>'length</code>","text":"<p><code>'Length</code> returns the length (number of elements) of an array.</p> <pre><code>type bit_array is array (0 to 31) of bit;\n\nvariable LEN: integer := bit_array'length; -- LEN has a value of 32\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#ascending","title":"<code>'ascending</code>","text":"<p><code>'Ascending</code> (VHDL '93 attribute) returns a boolean true value of the type or subtype is declared with an ascending range.</p> <pre><code>type asc_array is array (0 to 31) of bit;\n\ntype desc_array is array (36 downto 4) of bit;\nvariable A1: boolean := asc_array'ascending;  -- A1 has a value of true\nvariable A2: boolean := desc_array'ascending; -- A2 has a value of false\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#structure-behaviour","title":"<code>'structure</code> &amp; <code>'behaviour</code>","text":"<p>There are two additional value kind attributes that can be used to determine information about blocks or attributes in a design. These attributes, 'structure and 'behavior, return true or false values depending on whether the block or architecture being referenced includ s references to lower-level components. The <code>\u2018structure</code> attribute retur s true if there are references to lower-level components, and false if there are no references to lower-level components. The <code>\u2018behavior</code> attribute returns false if there are references to lower-level components, and true if there are no references to lower-level components.</p> <p><code>'Structure</code> returns a true value if the prefix (which must be an architecture name) includes references to lower-level components.</p> <p><code>'Behavior</code> returns a true value if the prefix (which must be an architecture name) does not include references to lower-level components.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#simple_name-instance_name-path_name","title":"<code>'simple_name</code> &amp; <code>'instance_name</code> &amp; <code>'path_name</code>","text":"<p>VHDL 1076-1993 added three attributes that can be used to determine the precise configuration of entities in a design description. These attributes return information about named entities, which are various items that become associated with identifiers, character literals or operator symbols as the result of a declaration.</p> <p><code>'Simple_name</code> returns a string value corresponding to the prefix, which must be a named entity.</p> <p><code>'Instance_name</code> returns a string value corresponding to the complete path (from the design hierarchy root) to the named entity specified in the prefix, including the names of all instantiated design entities. The string returned by this attribute has a fixed format that is defined in the IEEE VHDL Language Reference Manual.</p> <p><code>'Path_name</code> returns a string value corresponding to the complete path (from the design hierarchy root) to the named entity specified in the prefix. The string returned by this attribute has a fixed format that is defined in the IEEE VHDL Language Reference Manual.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#function-kind-attributes-1","title":"Function kind attributes 1","text":"<p><code>'Pos</code>, <code>'Val</code>, <code>'Succ</code>, <code>'Pred</code>, <code>'Leftof</code>, <code>'Rightof</code></p> <p>Attributes that return information about a given type, signal, or array value are called function kind attributes. VHDL defines the following function kind attributes that can be applied to types:</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#posvalue","title":"<code>'pos(value)</code>","text":"<p><code>'Pos(value)</code> returns the position number of a type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable P: integer := state_type'pos(Read); -- P has the value of 3\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#valvalue","title":"<code>'val(value)</code>","text":"<p><code>'Val(value)</code> returns the value corresponding to a position number of a type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable V: state_type := state_type'val(2); -- V has the value of Strobe\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#succvalue","title":"<code>'succ(value)</code>","text":"<p><code>'Succ(value)</code> returns the value corresponding to position number after a given type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable V: state_type := state_type'succ(Init); -- V has the value of Hold\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#predvalue","title":"<code>'pred(value)</code>","text":"<p><code>'Pred(value)</code> returns the value corresponding to position number preceding a given type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable V: state_type := state_type'pred(Hold); -- V has the value of Init\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#leftofvalue","title":"<code>'leftof(value)</code>","text":"<p><code>'Leftof(value)</code> returns the value corresponding to position number to the left of a given type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable V: state_type := state_type'leftof(Idle); -- V has the value of Read\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#rightofvalue","title":"<code>'rightof(value)</code>","text":"<p><code>'Rightof(value)</code> returns the value corresponding to position number to the right of a given type value.</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\n\nvariable V: state_type := state_type'rightof(Read); -- V has the value of Idle\n</code></pre> <p>From the above descriptions, it might appear that the <code>'val</code> and <code>'succ</code> attributes are equivalent to the attributes <code>\u2018leftof</code> and <code>\u2018rightof</code>. One case where they would be different is the case where a subtype is defined that changes the ordering of the base type:</p> <pre><code>type state_type is (Init, Hold, Strobe, Read, Idle);\nsubtype reverse_state_type is state_type range Idle downto Init;\nvariable V1: reverse_state_type := reverse_state_type'leftof(Hold);\n-- V1 has the value of Strobe\nvariable V2: reverse_state_type := reverse_state_type'pred(Hold);\n-- V2 has the value of Init\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#function-kind-array-attributes","title":"Function kind array attributes","text":"<p><code>'Left</code>, <code>'Right</code>, <code>'High</code>, <code>'Low</code></p> <p>The function kind attributes that can be applied to array objects include:</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#left_1","title":"<code>'left()</code>","text":"<p><code>'Left(value)</code> returns the index value corresponding to the left bound of a given array range.</p> <p>Example:</p> <pre><code>type bit_array is array (15 downto 0) of bit;\n\nvariable I: integer := bit_array'left(bit_array'range); -- I has the value of 15\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#right_1","title":"<code>'right()</code>","text":"<p><code>'Right(value)</code> returns the index value corresponding to the right bound of a given array range.</p> <pre><code>type bit_array is array (15 downto 0) of bit;\n\nvariable I: integer := bit_array'right(bit_array'range); -- I has the value of 0\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#high_1","title":"<code>'high()</code>","text":"<p><code>'High(value)</code> returns the index value corresponding to the upper-most bound of a given array range.</p> <pre><code>type bit_array is array (15 downto 0) of bit;\n\nvariable I: integer := bit_array'high(bit_array'range); -- I has the value of 15\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#low_1","title":"<code>'low()</code>","text":"<p><code>'Low(value)</code> returns the index value corresponding to the lower bound of a given array range.</p> <pre><code>type bit_array is array (15 downto 0) of bit;\n\nvariable I: integer := bit_array'low(bit_array'range); -- I has the value of 0\n</code></pre> <p><code>'Event</code>, <code>'Active</code>, <code>'Last_event</code>, <code>'Last_value</code>, <code>'Last_active</code></p> <p>Function kind attributes that return information about signals (such as whether that signal has changed its value or its previous value) include:</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#event","title":"<code>'event</code>","text":"<p><code>'Event</code> returns a true value of the signal had an event (changed its value) in the current simulation delta cycle.</p> <pre><code>process(Rst,Clk)\nbegin\n  if Rst = '1' then\n    Q &lt;= '0';\n  elsif Clk = '1' and Clk'event then -- Look for clock edge\n    Q &lt;= D;\n  end if;\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#active","title":"<code>'active</code>","text":"<p>Active---returns true if any transaction (scheduled event) occurred on this signal in the current simulation delta cycle.</p> <pre><code>process\n  variable A,E: boolean;\nbegin\n  Q &lt;= D after 10 ns;\n  A := Q'active; -- A gets a value of True\n  E := Q'event;  -- E gets a value of False\n  . . .\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#last_event","title":"<code>'last_event</code>","text":"<p><code>'Last_event</code> returns the time elapsed since the previous event occurring on this signal.</p> <pre><code>process\n  variable T: time;\nbegin\n  Q &lt;= D after 5 ns;\n  wait 10 ns;\n  T := Q'last_event; -- T gets a value of 5 ns\n  . . .\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#last_value","title":"<code>'last_value</code>","text":"<p><code>'Last_value</code> returns the value of the signal prior to the last event.</p> <pre><code>process\n  variable V: bit;\nbegin\n  Q &lt;= '1';\n  wait 10 ns;\n  Q &lt;= '0';\n  wait 10 ns;\n  V := Q'last_value; -- V gets a value of  '1'\n  . . .\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#last_active","title":"<code>'last_active</code>","text":"<p><code>'Last_active</code> returns the time elapsed since the last transaction (scheduled event) of the signal.</p> <pre><code>process\n  variable T: time;\nbegin\n  Q &lt;= D after 30 ns;\n  wait 10 ns;\n  T := Q'last_active; -- T gets a value of 10 ns\n  . . .\nend process;\n</code></pre> <p>Note: the <code>'active</code>, <code>'last_event</code>, <code>'last_value</code> and <code>'last_active</code> attributes are not generally supported in synthesis tools. Of the preceding five attributes, only 'event should be used when describing synthesizable registered circuits. The <code>\u2018active</code>, <code>\u2018last_event</code>, <code>\u2018last_value</code> and <code>\u2018last_active</code> attributes should only be used to describe circuits for test purposes (such as for setup and hold checking). If they are encountered by a synthesis program, they will either be ignored, or the program will return an error and halt operation.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#function-kind-attributes-2","title":"Function kind attributes 2","text":"<p><code>'Image</code>, <code>'Value</code></p> <p>The <code>'image</code> and <code>'value</code> attributes were added in the 1993 specification to simplify the reporting of information through Text I/O. These attributes both return string results corresponding to their parameter values.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#image","title":"<code>'image</code>","text":"<p><code>'Image(expression)</code> (VHDL '93 attribute) returns a string representation of the expression parameter, which must be of a type corresponding to the attribute prefix.</p> <pre><code>assert (Data.Q = '1')\nreport \"Test failed on vector \" &amp; integer\u2019image(vector_idx)\nseverity WARNING;\n</code></pre> <pre><code>string_signal &lt;= std_logic'image(sl_signal);\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#value","title":"<code>'value</code>","text":"<p><code>'Value(string)</code> (VHDL '93 attribute) returns a value, of a type specified by the prefix, corresponding to the parameter string.</p> <pre><code>write(a_outbuf,string'(\"Enter desired state e.g.: S1\"));\nwriteline(OUTPUT,a_outbuf);\nreadline(INPUT,a_inbuf);\nread(a_inbuf,instate);      -- instate is a string type\n\n-- convert string to type state_type\nnext_state &lt;= state_type'value(instate);\n\nwrite(a_outbuf,string'(\"Enter duration (e.g.: 15)\"));\nwriteline(OUTPUT,a_outbuf);\nreadline(INPUT,a_inbuf);\nread(a_inbuf,induration);   -- induration is a string type\n\n-- convert string to type integer\nduration &lt;= integer'value(induration);\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#signal-kind-attributes","title":"Signal kind attributes","text":"<p><code>'Delayed</code>, <code>'Stable</code>, <code>'Quiet</code>, <code>'Transaction</code></p> <p>The signal kind attributes are attributes that, when invoked, create special signals that have values and types based on other signals. These special signals can then be used anywhere in the design description that a normally declared signal could be used. One example of where you might use such an attribute is to create a series of delayed clock signals that are all based on the waveform of a base clock signal. Signal kind attributes include the following:</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#delayedtime","title":"<code>'delayed(time)</code>","text":"<p><code>'Delayed(time)</code> creates a delayed signal that is identical in waveform to the signal the attribute is applied to. (The time parameter is optional, and may be omitted.)</p> <pre><code>process(Clk'delayed(hold))\n-- Hold time check for input Data\nbegin\n  if Clk = '1' and Clk'stable(hold) then\n    assert(Data\u2019stable(hold))\n      report \"Data input failed hold time check!\"\n    severity warning;\n  end if;\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#stabletime","title":"<code>'stable(time)</code>","text":"<p><code>'Stable(time)</code> creates a signal of type boolean that becomes true when the signal is stable (has no event) for some given period of time.</p> <pre><code>process\n  variable A: Boolean;\nbegin\n  wait for 30 ns;\n  Q &lt;= D after 30 ns;\n  wait 10 ns;\n  A := Q'stable(20 ns);\n  -- A gets a value of true (event has not yet occurred)\n  wait 30 ns;\n  A := Q'stable(20 ns);\n  -- A gets a value of false (only 10 ns since event)\n  . . .\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#quitetime","title":"<code>'quite(time)</code>","text":"<p><code>'Quiet(time)</code> creates a signal of type boolean that becomes true when the signal has no transactions (scheduled events) or actual events for some given period of time.</p> <pre><code>process\n  variable A: Boolean;\nbegin\n  wait for 30 ns;\n  Q &lt;= D after 30 ns;\n  wait 10 ns;\n  A := Q'quiet(20 ns);\n  -- A gets a value of false (10 ns since transaction)\n  wait 40 ns;\n  A := Q'quiet(20 ns);\n  -- A finally gets a value of true (20 ns since event)\n  . . .\nend process;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#transaction","title":"<code>'transaction</code>","text":"<p><code>'Transaction</code> creates a signal of type bit that toggles its value whenever a transaction or actual event occurs on the signal the attribute is applied to.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#type-kind-attributes","title":"Type kind attributes","text":"","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#base","title":"<code>'base</code>","text":"<p><code>'Base</code> returns the base type for a given type or subtype.</p> <pre><code>type mlv7 is ('0','1','X','Z','H','L','W');\nsubtype mlv4 is mlv7 range '0' to 'Z';\nvariable V1: mlv4 := mlv4'right;         -- V1 has the value of 'Z'\nvariable V2: mlv7 := mlv4'base'right;    -- V2 has the value of 'W'\nvariable I1: integer := mlv4'width;      -- I1 has the value of 4\nvariable I2: integer := mlv4'base'width; -- I2 has the value of 7\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#range-kind-attributes","title":"Range kind attributes","text":"<p><code>'Range</code>, <code>'Reverse_range</code></p> <p>The range kind attributes return a special value that is a range, such as you might use in a declaration or looping scheme.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#range","title":"<code>'range</code>","text":"<p><code>'Range</code> returns the range value for a constrained array.</p> <pre><code>function parity(D: std_logic_vector)\nreturn std_logic is\n  variable result: std_logic := '0';\nbegin\n  for i in D'range loop\n    result := result xor D(i);\n  end loop;\n  return result;\nend parity;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#reverse_range","title":"<code>'reverse_range</code>","text":"<p><code>'Reverse_range</code> returns the reverse of the range value for a constrained array.</p> <pre><code>STRIPX: for i in D'reverse_range loop\n  if D(i) = 'X' then\n    D(i) = '0';\n  else\n    exit;  -- only strip the terminating Xs\n  end if;\nend loop;\n</code></pre>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/attributes.html#custom-attributes","title":"Custom attributes","text":"<p>Custom attributes are those attributes that are not defined in the IEEE specifications, but that you (or your simulation or synthesis tool vendor) define for your own use. A good example is the attribute enum_encoding, which is provided by a number of synthesis tool vendors (most notably Synopsys) to allow specific binary encodings to be attached to objects of enumerated types.</p> <p>An attribute such as enum_encoding is declared using the following method:</p> <pre><code>attribute enum_encoding: string;\n</code></pre> <p>Once the attribute has been declared and given a name, it can be referenced as needed in the design description:</p> <pre><code>type statevalue is (INIT, IDLE, READ, WRITE, ERROR);\nattribute enum_encoding of statevalue: type is \"000 001 011 010 110\";\n</code></pre> <p>Custom attributes are a convenient \"back door\" feature of VHDL, and design tool vendors have created many such attributes to give you more control over the synthesis and simulation process. For detailed information about custom attributes, refer to your design tool documentation.</p>","tags":["coding","vhdl","attributes"]},{"location":"coding/vhdl/conversion.html","title":"Conversion","text":"","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#overview","title":"Overview","text":"","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#name-declaration","title":"Name declaration","text":"<pre><code>signal sl   : std_logic;\nsignal sul  : std_ulogic:\nsignal slv  : std_logic_vector(7 downto 0);\nsignal sulv : std_ulogic_vector(7 downto 0);\nsignal uv   : unsigned(7 downto 0);\nsignal sv   : signed(7 downto 0);\nsignal int  : integer range -128 to 127;\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#numeric_std-library","title":"Numeric_STD Library","text":"To From Command <code>std_logic_vector</code> <code>unsigned</code> <code>std_logic_vector(uv)</code> <code>std_logic_vector</code> <code>signed</code> <code>std_logic_vector(sv)</code> <code>std_logic_vector</code> <code>integer</code> <code>std_logic_vector(to_unsigned(int, length))</code> <code>std_logic_vector(to_signed(int, length))</code> <code>unsigned</code> <code>std_logic_vector</code> <code>unsigned(slv)</code> <code>unsigned</code> <code>signed</code> <code>unsigned(sv)</code> <code>unsigned</code> <code>integer</code> <code>to_unsigned(int, length)</code> <code>signed</code> <code>std_logic_vector</code> <code>signed(slv)</code> <code>signed</code> <code>unsigned</code> <code>signed(uv)</code> <code>signed</code> <code>integer</code> <code>to_signed(int, length)</code> <code>integer</code> <code>std_logic_vector</code> <code>to_integer(unsigned(slv))</code> <code>to_integer(signed(slv))</code> <code>integer</code> <code>unsigned</code> <code>to_integer(uv)</code> <code>integer</code> <code>signed</code> <code>to_integer(sv)</code>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#std_logic_arith-library","title":"STD_logic_arith Library","text":"To From Command <code>std_logic_vector</code> <code>unsigned</code> <code>conv_std_logic_vector(uv, length)</code> <code>std_logic_vector</code> <code>signed</code> <code>conv_std_logic_vector(sv, length)</code> <code>std_logic_vector</code> <code>integer</code> <code>conv_std_logic_vector(int, length)</code> <code>unsigned</code> <code>std_logic_vector</code> <code>unsigned(slv)</code> <code>unsigned</code> <code>signed</code> <code>conv_unsigned(sv, length)</code> <code>unsigned</code> <code>integer</code> <code>conv_unsigned(int, length)</code> <code>signed</code> <code>std_logic_vector</code> <code>signed(slv)</code> <code>signed</code> <code>unsigned</code> <code>conv_signed(uv, length)</code> <code>signed</code> <code>integer</code> <code>conv_signed(int, length)</code> <code>integer</code> <code>std_logic_vector</code> <code>conv_integer(unsigned(slv))</code> <code>conv_integer(signed(slv))</code> <code>integer</code> <code>unsigned</code> <code>conv_integer(uv)</code> <code>integer</code> <code>signed</code> <code>conv_integer(sv)</code>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#conversions","title":"Conversions","text":"","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#std_logic-std_ulogic","title":"<code>std_logic</code> &amp; <code>std_ulogic</code>","text":"<p>std_logic and std_ulogic are compatible and can be assigned without cast. The same for an element of a subtype of <code>std_logic</code> or <code>std_ulogic</code></p> <pre><code>sl  &lt;= sul;\nsl  &lt;= slv(0);\nsl  &lt;= sulv(1);\nsl  &lt;= uv(2);\nsl  &lt;= sv(3);\n\nsul &lt;= sl;\nsul &lt;= slv(0);\nsul &lt;= sulv(1);\nsul &lt;= uv(2);\nsul &lt;= sv(3);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#std_logic_vector-std_ulogic_vector","title":"<code>std_logic_vector</code> &amp; <code>std_ulogic_vector</code>","text":"<p><code>std_logic_vector</code> and <code>std_ulogic_vector</code> are compatible and can be assigned without cast.</p> <pre><code>slv(1 downto 0)  &lt;= std_logic_vector(sulv(1 downto 0));\nsulv(1 downto 0) &lt;= std_ulogic_vector(slv(1 downto 0));\n\nslv(0) &lt;= sl;\nslv(1) &lt;= sul;\n\nslv(2) &lt;= sv(2);\nslv(3) &lt;= uv(3);\n\nslv    &lt;= std_logic_vector(uv);\nslv    &lt;= std_logic_vector(sv);\nslv    &lt;= std_logic_vector(to_unsigned(int, slv'length));\nslv    &lt;= std_logic_vector(to_signed(int, slv'length));\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#integer","title":"Integer","text":"<pre><code>-- Numeric_Std Conversions\nint &lt;= to_integer(unsigned(slv));\nint &lt;= to_integer(signed(slv));\nint &lt;= to_integer(uv);\nint &lt;= to_integer(sv);\n\n-- Std_Logic_Arith Conversions\nint &lt;= conv_integer(unsigned(slv));\nint &lt;= conv_integer(signed(slv));\nint &lt;= conv_integer(uv);\nint &lt;= conv_integer(sv);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#integer-real","title":"Integer &lt;=&gt; Real","text":"<pre><code>int       &lt;= integer(real_s);\nreal_s    &lt;= real(int);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#unsigned","title":"Unsigned","text":"<pre><code>uv(0) &lt;= sl;\nuv(0) &lt;= sul;\n\nuv    &lt;= unsigned(slv);\nuv    &lt;= unsigned(sv);\n\n-- Numeric_Std Conversions\nuv    &lt;= to_unsigned(int, uv'length);\n-- Std_Logic_Arith Conversions\nuv    &lt;= conv_unsigned(int, uv'length);\nuv    &lt;= conv_unsigned(sv, uv'length);\n</code></pre> <pre><code>-- Conversion without modification\n-- Signed =&gt; Unsigned\n--     15 =&gt; 15\n--      0 =&gt;  0\n--    - 1 =&gt; 31\n--    -16 =&gt; 16\nuv &lt;= unsigned(sv);\n\n-- Conversion with MSB inverting\n-- Signed =&gt; Unsigned\n--     15 =&gt; 31\n--      0 =&gt; 16\n--    - 1 =&gt; 15\n--    -16 =&gt;  0\nuv &lt;= unsigned( not(sv(sv'high)) &amp; sv(sv'high-1 downto 0));\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#signed","title":"Signed","text":"<pre><code>sv  &lt;= signed(slv);\nsv  &lt;= signed(uv);\n\n-- Numeric_Std Conversions\nsv  &lt;= to_signed(int, sv'length);\n-- Std_Logic_Arith Conversions\nsv  &lt;= conv_signed(int, sv'length);\nsv  &lt;= conv_signed(uv, sv'length);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#resize","title":"Resize","text":"","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#resize-unsigned","title":"Resize Unsigned","text":"ieee unsigned resize<pre><code>library ieee;\n  use ieee.std_logic_1164.all;\n  use ieee.numeric_std.all;\n...\nsignal uv_1 : unsigned(2 downto 0);\nsignal uv_2 : unsigned(4 downto 0);\n...\nuv_1 &lt;= resize(uv_2,uv_1'length);\n</code></pre> synopsys unsigned resize<pre><code>library ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.std_logic_arith.all ;\n  use ieee.std_logic_unsigned.all ;\n...\nsignal uv_1 : unsigned(2 downto 0);\nsignal uv_2 : unsigned(4 downto 0);\n...\nuv_1 &lt;= conv_unsigned(uv_2,uv_1'length);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/conversion.html#resize-signed","title":"Resize Signed","text":"ieee signed resize<pre><code>library ieee;\n    use ieee.std_logic_1164.all;\n    use ieee.numeric_std.all;\n...\nsignal sv_1 : signed(2 downto 0);\nsignal sv_2 : signed(4 downto 0);\n...\nsv_1 &lt;= resize(sv_2,sv_1'length);\n</code></pre> synposys signed resize<pre><code>library ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.std_logic_arith.all ;\n  use ieee.std_logic_unsigned.all ;\n...\nsignal sv_1 : signed(2 downto 0);\nsignal sv_2 : signed(4 downto 0);\n...\nsv_1 &lt;= conv_signed(sv_2,sv_1'length);\n</code></pre>","tags":["coding","vhdl","conversion"]},{"location":"coding/vhdl/examples.html","title":"Examples","text":"","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#blinker","title":"Blinker","text":"<p>Many time you want to implement a Led blinking at a given event. The problem is that the available signal is either tool long or (mostly) too short to be seen for a led. Therefore this bloc was created to let a led blink on an event of a signal.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#settings","title":"Settings","text":"<ul> <li>Set your clockFrequency , according to that a blink of 500ms     will be calculated.</li> <li>Choose your mode<ul> <li><code>mode 0</code>: rising edge reaction</li> <li><code>mode 1</code>: falling edge reaction</li> </ul> </li> </ul> <pre><code>Mode = 0 (reactive on rising edge)\n             ___________________________________________\n input  ____/\n             ___________________\n output ____/                   \\_______________________\n time   0s                    0.5s                    1s\n\n             _\n input  ____/ \\_________________________________________\n             ___________________\n output ____/                   \\_______________________\n time   0s                    0.5s                    1s\n\nMode = 1 (reactive on falling edge)\n        _____\n input       \\__________________________________________\n               ___________________\n output ______/                   \\_____________________\n time   0s                    0.5s                    1s\n\n             _\n input  ____/ \\_________________________________________\n                ___________________\n output ______ /                   \\____________________\n time   0s                    0.5s                    1s\n</code></pre> <p>Example</p> <p>config repo blink</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#bram","title":"BRAM","text":"<p>Example</p> <p>config repo bram</p> <p>Figure 1: BRAM</p> <p>To generate RAM and ROM using the BRAM's available in the FPGA, several methods can be used.</p> <ul> <li>For Xilinx you can use the CoreGen Program and for Actel the Libero IDE</li> <li>Write VHDL code which the synthesis tool can understand</li> </ul> <p>The advantage of the second method is that it's target independent, but however it depends on the functionalities of the Synthesis tool.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#definition","title":"Definition","text":"","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#rom-definition","title":"ROM Definition","text":"<p>Single Port ROM with VHDL initialisation</p> <p>Example</p> <p>config repo rom.vhd</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#ram-definition","title":"RAM Definition","text":"<p>Dual-Port RAM with synchronous Read (Read Through) with no initialisation</p> <p>Example</p> <p>config repo dp_ram_1.vhd</p> <p>Generic Dual-Port RAM (Write First) with two clocks, enables and write enables and initialisation with a binary file</p> <p>Example</p> <p>config repo dp_ram_2.vhd</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#initialisation","title":"Initialisation","text":"","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#mif-file","title":"MIF-File","text":"<p>An ASCII text file (with the extension <code>.mif</code>) that specifies the initial content of a memory block (CAM, RAM, or ROM), that is, the initial values for each address.</p> <p>A MIF contains the initial values for each address in the memory. A separate file is required for each memory block. In a MIF, you are also required to specify the memory depth and width values. In addition, you can specify the radixes used to display and interpret addresses and data values.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#hex-file","title":"HEX-File","text":"<p>Intel HEX is a file format for conveying binary information for applications like programming microcontrollers, EPROMs, and other kinds of chips. It is one of the oldest file formats available for this purpose, having been in use since the 1970s.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#format","title":"Format","text":"<p>Start code</p> <p>The Start code exist only once per line at it's beginning. The Start code is <code>:</code></p> <p>Byte count</p> <p>The Byte count indicates the number n of Raw Data bytes there are in the Data field.</p> <p>Address</p> <p>16bit Address of the Data. If more Address bits are needed see Record Type <code>04</code>.</p> <p>Record type</p> <p>There are six possible Record type:</p> <ul> <li>00: data record, contains data and 16-bit address.</li> <li>01: End Of File record. Must occur exactly once per file in the last line of the file. The byte count is 00 and the data field is empty. Usually the address field is also 0000, in which case the complete line is <code>:00000001FF</code>. Originally the End Of File record could contain a start address for the program being loaded, e.g. :00AB2F0125 would cause a jump to address AB2F.     <pre><code>:00000001FF\nor\n:020000010000FD\n</code></pre></li> <li>02: Extended Segment Address Record, segment-base address (two hex digit pairs in big endian order). Used when 16 bits are not enough, identical to 80x86 real mode addressing. The address specified by the data field of the most recent 02 record is multiplied by 16 (shifted 4 bits left) and added to the subsequent 00 record addresses. This allows addressing of up to a megabyte of address space. The address field of this record has to be 0000, the byte count is 02 (the segment is 16-bit). The least significant hex digit of the segment address is always 0.</li> <li>03: Start Segment Address Record. For 80x86 processors, it specifies the initial content of the CS:IP registers. The address field is 0000, the byte count is 04, the first two bytes are the CS value, the latter two are the IP value.</li> <li>04: Extended Linear Address Record, allowing for fully 32 bit addressing (up to 4GiB). The address field is 0000, the byte count is 02. The two data bytes (two hex digit pairs in big endian order) represent the upper 16 bits of the 32 bit address for all subsequent 00 type records until the next 04 type record comes. If there is not a 04 type record, the upper 16 bits default to 0000. To get the absolute address for subsequent 00 type records, the address specified by the data field of the most recent 04 record is added to the 00 record addresses.</li> <li>05: Start Linear Address Record. The address field is 0000, the byte count is 04. The 4 data bytes represent the 32-bit value loaded into the EIP register of the 80386 and higher CPU.</li> </ul> <p>Data</p> <p>Raw Data of n bytes (n = Bytecount) at the given address in Hexadecimal format.</p> <p>Checksum</p> <p>The Checksum is two hex digits - the least significant byte of the two's complement of the sum of the values of all fields except fields 1 and 6 (Start code \":\" byte and two hex digits of the Checksum). It is calculated by adding together the hex-encoded bytes (hex digit pairs), then leaving only the least significant byte of the result, and making a 2's complement (either by subtracting the byte from 0x100, or inverting it by XOR-ing with 0xFF and adding 0x01).</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#example","title":"Example","text":"<pre><code>: 10 0100 00 214601360121470136007EFE09D21901 40\n: 10 0110 00 2146017EB7C20001FF5F160021480119 88\n: 10 0120 00 194E79234623965778239EDA3F01B2CA A7\n: 10 0130 00 3F0156702B5E712B722B732146013421 C7\n: 00 0000 01 FF\n</code></pre>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#binary-file","title":"Binary-File","text":"<p>An ASCII text file (with the extension <code>.bin</code>) that specifies the initial content of a memory block (CAM, RAM, or ROM), that is, the initial values for each address. This is the initialisation file used in the BRAM-VHDL examples. The file location has to be given in the generic called <code>initFile</code>. The file is witten in ASCII-binary format and one line has to be one line of the BRAM with the exact number of databits. Also each BRAM address has to be initialised in this file.</p> <p>An example of an 16 databit and 3 addressbit RAM</p> <pre><code>0000000000000000\n0000000000000001\n0000000000000010\n0000000000000011\n0000000000000100\n0000000000000101\n0000000000000110\n0000000000000111\n</code></pre>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#in-vhdl","title":"In VHDL","text":"<p>In order to initialise the BRAM you can also edit the VHDL code directly and initialise your Memory signal.</p> <pre><code>signal ROM : rom_type := (X\"0200A\",X\"00300\",X\"08101\",X\"04000\",X\"08601\",X\"0233A\",\n                          X\"00300\",X\"08602\",X\"02310\",X\"0203B\",X\"08300\",X\"04002\",\n                          X\"08201\",X\"00500\",X\"04001\",X\"02500\",X\"00340\",X\"00241\",\n                          X\"04002\",X\"08300\",X\"08201\",X\"00500\",X\"08101\",X\"00602\",\n                          X\"04003\",X\"0241E\",X\"00301\",X\"00102\",X\"02122\",X\"02021\",\n                          X\"00301\",X\"00102\",X\"02222\",X\"04001\",X\"00342\",X\"0232B\",\n                          X\"00900\",X\"00302\",X\"00102\",X\"04002\",X\"00900\",X\"08201\",\n                          X\"02023\",X\"00303\",X\"02433\",X\"00301\",X\"04004\",X\"00301\",\n                          X\"00102\",X\"02137\",X\"02036\",X\"00301\",X\"00102\",X\"02237\",\n                          X\"04004\",X\"00304\",X\"04040\",X\"02500\",X\"02500\",X\"02500\",\n                          X\"0030D\",X\"02341\",X\"08201\",X\"0400D\");\n\n\nRestrictions\n</code></pre> <p>There are cetain restriction if you write BRAM's in VHDL</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#syntesis-tool-limitation","title":"Syntesis Tool limitation","text":"<p>The VHDL Code for creating BRAM is read and understood by the synthesis tool. The mentioned code was tested in Xilinx XST Syntesis Tool. It has to be verified for other Synthesis tools like Simplify or Leonardo. The following limitaions are due the use of Xilinx XST.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#port-limitation","title":"Port limitation","text":"<p>The BRAM's defined in VHDL can have multiple Read ports, but only ONE Write port.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#initialisation-limitation","title":"Initialisation limitation","text":"<p>The BRAM can only with the described Binary file format be initialised. The Synthesis tools doesn't support read and parsing files. Therefore a hex or mif file format can not be used.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#debounce","title":"Debounce","text":"<p>Each button can bounce while pushing or releasing. This can't completely eliminated. but to avoid button bouncing. The following two thing can be done.</p> <ul> <li>Buy high quality buttons</li> <li>Implement a button debouncing</li> </ul> <p>Settings First the max bounce time should be measured and according to that value and your used clock, the counterBitNb can be choosen accordingly. The following implementation has two different modes. Mode 0 is reactive on rising edge and mode 1 is reactive on falling edge.</p> <pre><code>Mode 0\n             _   _   ____________________   _   _\n input  ____/ \\ / \\ /                    \\_/ \\ / \\______\n             _________________________________________\n output ____/                                         \\_\n\nMode 1\n             _   _   ____________________   _   _\n input  ____/ \\ / \\ /                    \\_/ \\ / \\______\n                          _______________\n output _________________/               \\______________\n</code></pre> <p>Example</p> <p>config repo debounce</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#reset-input","title":"Reset Input","text":"<p>For having a stable system first you need a proper reset. Just using an input as reset isn't enough. Here's how to poperly synchronize your reset.</p> <pre><code>--pad_rst----+----------+----------+\n          +--+--+    +--+--+    +--+--+    +-.\n--'1'-----|D   Q|----|D   Q|----|D   Q|----|  &gt;O-----rst\n          |     |    |     |    |     |    +-\u00b4\n       +--|&gt;    | +--|&gt;    | +--|&gt;    |\n       |  +-----+ |  +-----+ |  +-----+\n--clk--+----------+----------+\n</code></pre> blink<pre><code>LIBRARY ieee;\n  USE ieee.std_logic_1164.all;\n  USE ieee.numeric_std.all;\n\nENTITY rst_synchronizer IS\n   PORT( pad_rst_n : IN     std_logic;\n         clock     : IN     std_ulogic;\n         reset     : OUT    std_ulogic\n   );\nEND rst_synchronizer ;\n\nARCHITECTURE rtl OF rst_synchronizer IS\n\n  signal lvec_rst_n : std_ulogic_vector(2 downto 0);\n\nBEGIN\n\n  process(pad_rst_n , clock)\n  begin\n    if pad_rst_n = '1' then\n      lvec_rst_n &lt;= (others =&gt; '0');\n    elsif rising_edge(clock) then\n      lvec_rst_n &lt;= lvec_rst_n(1 downto 0) &amp; '1';\n    end if;\n  end process;\n  rst &lt;= not lvec_rst_n(2);\nEND ARCHITECTURE rtl;\n</code></pre>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#pseudo-random-number-generator","title":"Pseudo Random Number Generator","text":"<p>Example</p> <p>config repo prng</p> <p>This VHDL module uses 2 Linear Feedback Shift Registers (LFSR) with polynomials for maximal sequence length, one of which is scalable to output word size (<code>4bit</code> - <code>24bit</code>) and one to operate as a non-uniform duty cycle clock. The module gives the user 4 options for output distribution types, Gaussian unimodal, bimodal, uniform, and non-uniform distributions. These distributions are created by altering a scalable LFSR output by clocking the output irregularly with a non-uniform clock, shifting scaled outputs into a buffer-adder-tree to effectively use the central limit theorem to create a normal distribution, and a feedback loop to further shape the distributions. Sample histograms are included in the figures following. The prng.vhd module is verified in a test bench by writing out the pseudo-random values to a file. This data can be entered into one's favorite statistical analysis software package for verification.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#background","title":"Background","text":"<p>The LFSR is a shift register of arbitrary length that takes its input based off a linear function derived from the previous state. This function is chosen to provide a maximally long sequence. As the output-width is scaled, a different LFSR is built with a polynomial to provide maximal length. The polynomials used are commented in the VHDL module.</p>","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/examples.html#generics","title":"Generics","text":"Generic Type Range Description <code>g_W</code> Integer <code>28</code> - <code>4</code> Number of output vector bits <code>g_V</code> Integer <code>24</code> - <code>18</code> Non uniforming clocking bits <code>g_G_TYPE</code> Integer <code>0</code> = uniform  <code>1</code> = ave-uniform Gaussion Distribution Type for <code>o_g_noise</code> <code>g_U_TYPE</code> Integer <code>0</code> = uniform  <code>1</code> = ave-unifoirm Uniform Distribution Type for <code>o_u_noise</code> Signal Size Description <code>iCLK_clk</code> <code>1</code> input clock signal <code>iGRS_reset_n</code> <code>1</code> input reset signal <code>i_enable</code> <code>1</code> enable prn generation <code>o_g_noise</code> <code>[g_W-1:0]</code> gaussian distibution output <code>o_u_noise</code> <code>[g_W-1:0]</code> uniform distribution output","tags":["coding","vhdl","examples"]},{"location":"coding/vhdl/file.html","title":"File","text":"<pre><code>type file_open_kind is ( read_mode, write_mode, append_mode );\n</code></pre>","tags":["coding","vhdl","file"]},{"location":"coding/vhdl/file.html#reading-file","title":"Reading File","text":"<p>The below code reads a set of binary numbers from the file named read.txt and put them into a 4 bit <code>std_logic_vector</code> signal.</p> read file<pre><code>LIBRARY ieee;\n  use ieee.std_logic_1164.ALL;\n  use STD.textio.all;\n\n-- -----------------------------------------------------------------------------\n-- Declare empty entity\n--\nENTITY read_file IS\nEND read_file;\n\n-- -----------------------------------------------------------------------------\n-- Declare architecture\n--\nARCHITECTURE behaviour OF read_file IS\n\n  constant FILE_NAME : string := \"C:\\read.txt\";\n  signal  bin_value : std_logic_vector(3 downto 0):=\"0000\";\n\nBEGIN\n\n  -- -------------------------------------------------------------------------\n  -- Read Process\n  --\n  process\n    file file_pointer : text;\n    variable line_content : string(1 to 4);\n    variable line_num : line;\n    variable j : integer := 0;\n    variable char : character:='0';\n  begin\n    -- Open the file read.txt from the specified location for reading(READ_MODE)\n    file_open(file_pointer,FILE_NAME,READ_MODE);\n\n    -- Continue reading until EOF\n    while not endfile(file_pointer) loop\n      -- Read the whole line from the file\n      readline (file_pointer,line_num);\n      -- Read the contents of the line from the file into a variable\n      READ(line_num,line_content);\n      -- For each character in the line convert it to binary value\n      -- And then store it in a signal named 'bin_value'\n      for j in 1 to 4 loop\n        char := line_content(j);\n        if(char = '0') then\n          bin_value(4-j) &lt;= '0';\n        else\n          bin_value(4-j) &lt;= '1';\n        end if;\n      end loop;\n      -- After reading each line wait for 10ns\n      wait for 10 ns;\n    end loop;\n\n    -- After reading all the lines close the file\n    file_close(file_pointer);\n    wait;\n  end process;\nend behaviour;\n</code></pre> <p>A simulation of the reading:</p> <p></p> <p>read_file.vhd</p>","tags":["coding","vhdl","file"]},{"location":"coding/vhdl/file.html#writing-file","title":"Writing File","text":"<p>The code below writes is used to writing a file. It writes binary values from 0000 to 1111.</p> write file<pre><code>LIBRARY ieee;\n  use ieee.std_logic_1164.ALL;\n  use ieee.std_logic_arith.ALL;\n  use STD.textio.all;\n\n-- -----------------------------------------------------------------------------\n-- Declare empty entity\n--\nENTITY write_file IS\nEND write_file;\n\n-- -----------------------------------------------------------------------------\n-- Declare architecture\n--\nARCHITECTURE behaviour OF write_file IS\n\n  constant FILE_NAME : string := \"C:\\write.txt\";\n\nBEGIN\n\n  -- -------------------------------------------------------------------------\n  -- Write Process\n  --\n  process\n    file file_pointer : text;\n    variable line_content : string(1 to 4);\n    variable bin_value : std_logic_vector(3 downto 0);\n    variable line_num : line;\n    variable i,j : integer := 0;\n    variable char : character:='0';\n  begin\n    -- Open the file write.txt from the specified location for writing(WRITE_MODE)\n    file_open(file_pointer, FILE_NAME, WRITE_MODE);\n\n    -- We want to store binary values from 0000 to 1111 in the file\n    for i in 0 to 15 loop\n      bin_value := conv_std_logic_vector(i,4);\n      -- convert each bit value to character for writing to file\n      for j in 0 to 3 loop\n        if(bin_value(j) = '0') then\n          line_content(4-j) := '0';\n        else\n          line_content(4-j) := '1';\n        end if;\n      end loop;\n\n      -- write the line\n      write(line_num,line_content);\n\n      -- write the contents into the file\n      writeline (file_pointer,line_num);\n      -- wait for 10ns after writing the current line\n      wait for 10 ns;\n    end loop;\n\n    -- Close the file after writing\n    file_close(file_pointer);\n    wait;\n  end process;\nend behaviour;\n</code></pre> <p>write_file.vhd</p>","tags":["coding","vhdl","file"]},{"location":"coding/vhdl/guidelines.html","title":"Programming Guidelines","text":"","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#rules","title":"Rules","text":"","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#entity-ports","title":"Entity ports","text":"<ul> <li>Use only modes <code>IN</code> and <code>OUT</code> in the port of sub-blocks, <code>INOUT</code> mode too only in the port of the top-level entity</li> <li>Use only signal types <code>STD_LOGIC</code> and <code>STD_LOGIC_VECTOR</code>, <code>INTEGER</code>, <code>UNSIGNED</code>, <code>SIGNED</code></li> <li> <p>Signals in the port of the entity should be grouped as follows:</p> </li> <li> <p>Resets</p> </li> <li>Clocks</li> <li>Signals of group A</li> <li>Signals of group B</li> <li>Signals of group C</li> <li> <p>...</p> </li> <li> <p>Signals inside a group should be further grouped as follows:</p> <ul> <li>Control inputs</li> <li>Data inputs</li> <li>Outputs</li> </ul> </li> </ul>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#architecture","title":"Architecture","text":"<p>Architecture name should be one of following rules:</p> Architecture Name Description <code>behavioral</code> Implies physical logic, does not compile with RTL tool <code>rtl</code> Implies physical logic, compiles with RTL tools <code>struct</code> Implies physical connections, but not any logic <code>gate</code> Gate level netlist <code>simulation</code> Simulation mode <code>testbench</code> Test bench","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#signals","title":"Signals","text":"<ul> <li>Direction of bits in <code>STD_LOGIC_VECTOR</code>, <code>UNSIGNED</code> and <code>SIGNED</code> is always <code>DOWNTO</code></li> <li>Size of the vector should be parameterized</li> <li>Usually the least significant bit is numbered as zero</li> <li>Use package <code>numeric_std</code> for arithmetic operations</li> </ul> <p>Tip</p> <p>Never mix these libraries</p> <pre><code>library ieee;\n  use ieee.std_logic_1164.all;\n  use ieee.numeric_std.all;\n</code></pre> <pre><code>library ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.std_logic_arith.all ;\n  use ieee.std_logic_unsigned.all;\n</code></pre>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#processes","title":"Processes","text":"<p>Label every process</p> async_process.vhd<pre><code>processname: process(all)\nbegin\n    Do something here;\nend process;\n</code></pre>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#synchronous-process","title":"Synchronous process","text":"<p>Synchronous process is sensitive only to reset and clock</p> <ul> <li>Clock event is always to the rising edge</li> <li>All control registers must be initialized in reset</li> </ul> sync_process.vhd<pre><code>processname: process(reset, clock)\nbegin\n    if reset = '1' then\n        reset &lt;= assignemts;\n    elsif rising_edge(clock) then\n        rising_edge_clock &lt;= assigments;\n    end if;\nend process;\n</code></pre>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#asynchronous-process","title":"Asynchronous process","text":"<ul> <li>Include all process input signals in the sensitivity list</li> <li>Complete if-clauses must be used, all cases defined</li> <li>Signals are assigned in every branch</li> </ul> async_process.vhd<pre><code>processname: process(all)\nbegin\n    async_logic &lt;= assignment;\nend process;\n</code></pre>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#naming-conventions","title":"Naming Conventions","text":"","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#constant","title":"Constant","text":"<p>This convention applies to all constants. The names must be in capital letter,are composed as follows:</p> Type Convention Example Generic <code>g_&lt;generic name&gt;</code> <code>g_WIDTH_A</code> <code>g_WIDTH_BYTEENA_A</code> Constant <code>c_&lt;interface that constant apply to&gt;_&lt;constant name&gt;</code> <code>c_MEM_WORD_SIZE</code> <code>c_PH_UNIT_NUM</code>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#global-signals","title":"Global Signals","text":"<p>This convention must be applied to physical ports of components or function blocks and global variables in QSYS components and pin names at top-level. The names are composed as follows:</p> <p><code>&lt;//interface type//&gt;_&lt;//interface name//&gt;_&lt;//signal type//&gt;[_n][_#]</code></p> <p>Examples:</p> <ul> <li><code>avs_JetMapping_data</code></li> <li><code>pad_Ethernet2_reset_n</code></li> </ul> <p>Valid Values for Interface Types</p> Value Meaning Apply to <code>avs</code> Avalon-MM Slave QSys components <code>avm</code> Avalon-MM Maser QSys components <code>aso</code> Avalon-ST Source QSys components <code>asi</code> Avalon-ST Sink QSys components <code>cso</code> Clock output QSys components <code>csi</code> Clock input QSys components <code>coe</code> Conduit QSys components <code>inr</code> Interrupt receiver QSys components <code>ins</code> Interrupt sender QSys components <code>ncm</code> Nios II custom instruction master QSys components <code>ncs</code> Nios II custom instruction slave QSys components <code>rsi</code> Reset sink QSys components <code>rso</code> Reset source QSys components <code>tcm</code> Avalon-TC master QSys components <code>tcs</code> Avalon-TC slave QSys components <code>pad</code> Physical pad Top-level entity","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#ports-signals","title":"Ports Signals","text":"<p>This convention applies to internal ports (signals across the hierarchy). The names are composed as follows:</p> <p><code>&lt;direction&gt;&lt;//signal function type//&gt;_&lt;//signal name//&gt;[_n][_#]</code></p> <p>Valid Values for Interface Types</p> Value Meaning Example <code>[i]GCK</code> Global Clock signal <code>iGCK_clk_in_100 : in std_logic;</code> <code>[i]GRS</code> Global Reset signal i<code>GRS_reset_n : in std_logic;</code> <code>[i,o]CLK</code> Internal Clock signal <code>iCLK_pll_clk_25 : in std_logic;</code> <code>[i,o]RST</code> Internal Reset signal <code>oRST_enet_reset_n: out std_logic;</code> <code>[i,o]&lt;name&gt;</code> Synchronous signal(s) <code>i_fsm_data : in std_logic_vector(31 DOWNTO 0);</code> <code>[i,o]&lt;name&gt;</code> Asynchronous signal(s) <code>o_pcie_led_x1: out std_logic;</code>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#local-signals","title":"Local Signals","text":"<p>This convention applies to local signals only. The names are composed as follows:</p> <p><code>l&lt;//signal type//&gt;_&lt;//signal name//&gt;[_n][_#]</code></p> <p>Valid Values for Interface Types</p> Value Meaning Example <code>sig</code> Local signal <code>lsig_cnt_en : std_logic</code> <code>vec</code> Local vector  <code>lvec_cnt : std_logic_vector(1 DOWNTO 0);</code> <code>lvec_cnt : unsigned(1 DOWNTO 0);</code> <code>lvec_cnt : signed(1 DOWNTO 0);</code> <code>ary</code> Local array <code>type logic_array is array (0 to 1) of std_logic;</code> <code>signal lary_logics : logic_array;</code> <code>int</code> Local integer <code>signal lint_pixel_pos_cnt : integer range 0 to 2;</code> <code>var</code> Local variable <code>variable lvar_load_new_pix_data_set : std_logic;</code>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#alias","title":"Alias","text":"<p>An alias creates an alternative name for an existing object. It does not create a new object. For these reasons no specific naming conventions are established so far.</p> <p>Example:</p> <pre><code>signal instruction : std_logic_vector(15 downto 0);\nalias opcode : std_logic_vector(3 downto 0) is instruction(15 downto 12);\n</code></pre>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/guidelines.html#ip-reusability","title":"IP Reusability","text":"<ul> <li>The IP specification lists the requirements and details the feature set, performance expectations, size, usage model, etc. Not all design blocks need to be reusable, the specification must state whether a design is being architected as a reusable block.</li> <li>The specification has been officially reviewed by all interested parties. This increases the likelihood that the design block can be reused elsewhere in the company.</li> <li>Existing libraries of components have been reviewed to identify if existing IP with similar functionality already exists, i.e. practice reuse in the development process.</li> <li>The IP core name follows your company's naming conventions. The name of the core should be description of designs function, e.g. AXI4 Clock Crossing Bridge.</li> <li>Signal and parameter naming conventions are followed. Signal and parameter names should be descriptive of the functionality. This makes it easier for end users to understand the impact of these parameters and signals on the design block.</li> <li>The IP core has default parameter values. Parameters provide the simplest way to create reusable design blocks. IP features, ports and functionality can all be parameterized for maximum flexibility. The default values should be the most common usage model for the design block.</li> <li>The IP uses standard interfaces. Adopt a common interface protocol on all of IP. The use of standard interfaces simplifies the interconnection and management of functional blocks that make up a design. It ensures compatibility between IP blocks from different design teams, simplifies the integration of individual design blocks into a full system design and enables \"plug and play\" interoperability of IP.</li> <li>The IP core meets the timing specification and all timing violations have been addressed. The IP core includes a full set of timing constraints.</li> <li>The IP passes LINT tests per your company's established coding rules. It is recommended that you invest in a LINT to enforce coding guidelines and that it is fully integrated with version control/design check in process.</li> <li>The verification of the IP meets the functional, assertion, and line coverage goals as specified in the test plan. Note that the test plan should be developed at the same time as the functional specification for the design.</li> <li>The IP is adequately tested to cover the parameterization space and both expected and unexpected data patterns. Users of IP tend to be suspicious of other peoples design. There's nothing gained in debugging someone else's code.</li> <li>Provide a user interface and/or script for end users to instantiate the IP in their design. The interface should make it easy for the user to understand any applicable constraints. At a minimum, the IP should come with a documented command-line script that enables users to pass values to the parameters in the IP. Ideally it should come with a simple graphical user interface (GUI) to help users get started (see Figure 1).</li> <li>Design files and all packaging files adhere to your company's standard version-control directory structure. If users know where the applicable files are located, it provides the user with confidence that the designer of the IP has thought through the process of reuse.</li> <li>Testbench and reference designs are available for use with the core. This is a \"nice to have\" feature that provides new users an easy way to get started with a design.</li> <li>IP cores, example designs and test benches can be simulated in company simulators. Users should be able to run the scripts and see the basic functionality of the design.</li> <li>Release notes detail all supported devices, FPGA device families, and versions of the EDA tools used on the design.</li> </ul>","tags":["coding","vhdl","guidelines"]},{"location":"coding/vhdl/intel_sdc.html","title":"SDC Constraints","text":"<ul> <li>Intel SDC Constraint Manual</li> </ul>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc.html#comment","title":"Comment","text":"<pre><code># This is a comment\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc.html#new-line","title":"New line","text":"<p>No character allowed after newline <code>\\\\</code></p> <pre><code>command_part_1 \\\\\ncommand_part_2\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc.html#netlist-terminology","title":"Netlist Terminology","text":"Term Definition Cell Device building block Pin I/O of cells (not FPGA I/O) Net Connection between Ports Port Top-level I/O","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html","title":"SDC Theory","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#path-analysis-times","title":"Path &amp; Analysis Times","text":"<p>3 types of paths:</p> <ul> <li>Clock Paths</li> <li>Data Paths</li> <li>Asynchronous Path</li> </ul> <p>2 types of analysis:</p> <ul> <li>Synchronous : clock &amp; data paths</li> <li>Asynchronous : clock &amp; async paths</li> </ul> <p>Figure 1: Paths</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#timing-analysis","title":"Timing Analysis","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#launch-edge-latch-edge","title":"Launch edge &amp; Latch edge","text":"<ul> <li>Launch Edge = edge which launches the data from the source register</li> <li>Latch Edge = edge which latches the data from the destination register</li> </ul> <p>Figure 2: Launch and Latch Edge</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#setup-hold","title":"Setup &amp; Hold","text":"<ul> <li>Setup \\(T_{su}\\) = Minimum time data signal must be stable BEFORE clock edge</li> <li>Hold \\(T_{h}\\) = Minimum time data signal must be stable AFTER clock edge</li> </ul> <p>Figure 3: Setup and Hold</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#data-arrival-time","title":"Data Arrival Time","text":"<p>The time for data to arrive at destination register</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#clock-arrival-time","title":"Clock Arrival Time","text":"<p>The time for clock to arrive at destination registers clock input</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#data-required-time-setup","title":"Data Required Time (Setup)","text":"<p>Minimum time required before the latch edge, for the data to get latched into the destination register</p> \\[ Setup\\_Time = Clock\\_Arrival\\_Time - t_{su} - Clock\\_Jitter \\]","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#data-required-time-hold","title":"Data Required Time (Hold)","text":"<p>Minimum time required after the latch edge for the data to remain valid for successful latching into the destination register</p> \\[ Hold\\_Time = Clock\\_Arrival\\_Time + t_{h} + Clock\\_Jitter \\]","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#setup-slack","title":"Setup Slack","text":"<p>Margin by which the setup timing requirement is met.</p> \\[ Setup\\_Slack = Setup\\_Time_{min} - Data\\_Arrival\\_Time_{max} \\] <p>Must always be positive</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#hold-slack","title":"Hold Slack","text":"<p>Margin by which the hold timing requirement is met.</p> \\[Hold\\_Slack = Data\\_Arrival\\_Time_{min} - Maximum\\_Hold\\_Time_{max}\\] <p>Must always be positive</p> <p>Figure 4: Setup and Hold Time</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#recovery-removal","title":"Recovery &amp; Removal","text":"<ul> <li>Recovery \\(t_{rec}\\) : Minimum time an asynchronous signal must be de-asserted BEFORE clock edge.</li> <li>Removal \\(t_{rem}\\) : Minimum time an asynchronous signal must be de-asserted AFTER clock edge.</li> </ul>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_theory.html#analyse-recovery-removal","title":"Analyse Recovery &amp; Removal","text":"<p>In case of the Reset it should be synchron to the clock even when its use asynchronous.</p> <pre><code>if rst = 1 then             -- async rst, but still synch to clk\n  q &lt;= '0';\nelsif rising_edge(clk) then\n  q &lt;= d;\nend if;\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html","title":"SDC Usage","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#general","title":"General","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#collections","title":"Collections","text":"<p>To find certain Cells, Pins, Nets or Ports Collections, there are Wildcard enabled search commands.</p> <pre><code>get_clocks\nget_registers\nget_ports\nget_pins\nall_clocks\nall_registers\nall_input\nall_output\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#priorities","title":"Priorities","text":"<ul> <li>Priority Order</li> <li><code>set_false_path</code> &amp; <code>set_clock_groups</code> High Priority</li> <li><code>set_max_delay</code> &amp; <code>set_min_delay</code></li> <li><code>set_multicycle_path</code></li> <li><code>create_clock</code> &amp; <code>create_generated_clock</code> Low Priority</li> <li>Sequential execution, last command will be executed if same priority</li> <li><code>set_input_delay</code> and <code>set_output_delay</code> are in addition and will not be overwritten be other sdc commands</li> </ul>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#clock-constraints","title":"Clock Constraints","text":"<p>Two possible clocks: Clocks &amp; Generated Clocks</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#clock","title":"Clock","text":"<p>Absolute or base clock (from Quartz internal or external)</p> <pre><code>create_clock [-name &lt;clock_name&gt;]                  \\\\ # clock name if not the same as signal_name\n              -period &lt;time_in_ns&gt;                 \\\\ # period in ns or \"frequence\" e.g. \"50mhz\"\n             [-waveform {&lt;rise_time&gt; &lt;fall_time&gt;}] \\\\ # Duty cycle if non 50%\n             [&lt;targets&gt;]                           \\\\ # Target ports or pins for clock settings\n             [-add]                                   # Add clock to node with existing clock\n</code></pre> <pre><code>create_clock -name &lt;sdc_clock_collection_name&gt; -period &lt;period_in_ns&gt; [get_ports &lt;design_signal_name_wildcard&gt;]\ncreate_clock -name ext_clk_50mhz -period 20.0 [get_ports ext_clk]\ncreate_clock -period 10.0 -waveform {2.0 8.0} [get_ports clk_in]\ncreate_clock -period 10MHz [get_ports clk_in]\ncreate_clock -period \"10 MHz\" [get_ports clk_in]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#generated-clock","title":"Generated Clock","text":"<p>Clocks derived from another clock (all other clocks) (PLL, clock divider, output clocks, ripple clocks)</p> <pre><code>create_generated_clock [-name &lt;clock_name&gt;]         \\\\ name in SDC namespace\n                        -source &lt;master_pin&gt;        \\\\ clock derived by\n                       [-master_clock &lt;clock_name&gt;] \\\\\n                       [-divide_by &lt;factor&gt;]        \\\\ clock divided by x from source clock\n                       [-multiply_by &lt;factor&gt;]      \\\\ clock multiplied by x from source clock\n                       [-duty_cycle &lt;percent&gt;]      \\\\ clock duty cycle of himself\n                       [-invert]                    \\\\ clock is inverted by himself\n                       [-phase &lt;degrees&gt;]           \\\\ clock is phase shifted by himself\n                       [-edges &lt;edge_list&gt;]         \\\\ edges only on certain edges from source\n                       [&lt;targets&gt;]                  \\\\ generated clock pin/port\n                       [-add]\n</code></pre> <pre><code>create_generated_clock -name clk_div -source [get_ports CLK_IN] -divide_by 2 [get_pins inst|q]\ncreate_generated_clock -name clk_div -source [get_ports inst|clk] -divide_by 2 [get_registers inst]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#derive-pll-clocks","title":"Derive PLL clocks","text":"<pre><code>derived_pll_clocks                       \\\\ # Altera specific for all PLL generated clocks\n                   [-create_base_clocks] \\\\ # generate create_clock constants for PLL input clocks\n                   [-use_net_name]          # use net names as clock names\n# Substitute would be to create all generated clocks manually\n</code></pre> <p>Quartus can do the substitution automatically with the expand option enabled. No Altera specific commands used.</p> <pre><code>tcl: write_sdc -expand\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#automatic-clock-detection-creation","title":"Automatic Clock Detection &amp; Creation","text":"<p>Not to use for final design. Default clock used = 1GHz.</p> <pre><code>derive_clocks [-period &lt;time_in_ns&gt;]   # same use as with create_clock\n              [-waveform {&lt;rise_time&gt; &lt;fall_time&gt;}] # same use as with create_clock\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#fpga-uncertainties-jitter-clock-networks","title":"FPGA Uncertainties (jitter, clock networks)","text":"<p>3 Types of uncertainties:</p> <ul> <li>Intra-clock transfer : Transfer within single clock domain within FPGA</li> <li>Inter-clock transfer : Transfer within different clock domains within FPGA</li> <li>I/O interface clock transfer : Transfer between I/O port and internal design registers</li> </ul> <pre><code>derive_clock_uncertainty              # Altera specific\n                         [-overwrite] # overwrites any existing uncertainty constraints\n                         [-add]       # adds derived uncertainty to existing constraints\n\n# For Feedback clock, (feedback_clk_pcb = data_clk_pcb + data_pcb + $T_{co}\\_ASSP$\nset_clock_latency [-late]  # max clock latency in case of feedback clock\n                  [-early] # min clock latency in case of feedback clock\n                  &lt;target&gt; # [get_clocks feedback_clk_in]\n\nset_clock_uncertainty [-setup | -hold]\n                      [-fall_from &lt;fall_from_clock&gt;] # uncertainty added only on falling_edge from source clock\n                      [-fall_to &lt;fall_to_clock&gt;]     # uncertainty added only on falling_edge from destination clock\n                      [-from &lt;from_clock&gt;]           # uncertainty added to transfer within single clock domain\n                      [-rise_from &lt;rise_from_clock&gt;] # uncertainty added only on rising_edge from source clock\n                      [-rise_to &lt;rise_to_clock&gt;]     # uncertainty added only on rising_edge from destination clock\n                      [-to &lt;to_clock&gt;]               # uncertainty added to transfer within single clock domain\n                      &lt;value&gt;\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#virtual-clock-example","title":"Virtual Clock example","text":"<pre><code>create_clock -period 10 -name clk_in [get_ports {clk_in}]\ncreate_clock -period 10 -name virt_clk_in\nset_input_delay -clock [get_clocks {virt_clk_in}] -max 2 [get_ports {data_in}]\nset_input_delay -clock [get_clocks {virt_clk_in}] -min 2 [get_ports {data_in}]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#gated-clock","title":"Gated Clock","text":"<p>An AND enable on the clock can serve to eliminate power consumption. All flip-flops use no energy without clock. But it violates synchronous design rules. It also uses a new Global Clock path for the Gated Clock.</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#input-constraints","title":"Input Constraints","text":"<p>2 Types of Combinatorial Interfaces and Synchronous Inputs.</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#combinatorial-without-ff","title":"Combinatorial (without FF)","text":"<p>Absolute maximum and minimum time between points. Signals traversing FPGA and internal signals</p> <pre><code>set_max_delay [-from &lt;names&gt;] \\\\\n              [-to &lt;names&gt;]   \\\\\n              [-through]      \\\\\n              &lt;delay&gt;\nset_min_delay [-from &lt;names&gt;] \\\\\n              [-to &lt;names&gt;]   \\\\\n              [-through]      \\\\\n              &lt;delay&gt;\n</code></pre> <pre><code>set_max_delay -from [get_ports in1] -to [get_ports out*] 5.0\nset_max_delay -from [get_ports in2] -to [get_ports out*] 7.5\nset_max_delay -from [get_ports in3] -to [get_ports out*] 9.0\n\nset_min_delay -from [get_ports in1] -to [get_ports out*] 1.0\nset_min_delay -from [get_ports in2] -to [get_ports out*] 2.0\nset_min_delay -from [get_ports in3] -to [get_ports out*] 3.0\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#synchronous-inputs","title":"Synchronous Inputs","text":"<p>Synchronous Inputs where one external clock is used between multiple devices.</p> <pre><code>set_input_delay [-max] \\\\ # max time to arrive and still meet Tsu (input setup time)\n                [-min]    # min time to stay active and still meet Th (input hold time)\n</code></pre> <p>Calculations</p> \\[ input\\_delay\\_max = Data\\_trace_{max} - Board\\_clock\\_skew_{min} + T_{co_{max}} \\] \\[ input\\_delay\\_min = Data\\_trace_{min} - Boardclockskew_{max} + T_{co_{min}} \\] <pre><code>set_input_delay -clock &lt;clock_name&gt;        # Clock driving source (external)\n                [-clock_fall]              # input signal was launched on falling edge\n                [-rise | -fall]            # input delay value  is for rising or falling edge\n                [-max | -min]              # must specify both max and min\n                [-add_delay]               # multiple constraints on single input\n                [-source_latency_included] #\n                &lt;delay_value&gt;\n                &lt;targets&gt;\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#source-synchronous","title":"Source Synchronous","text":"<p>Source Synchronous Interfaces where the FPGA reads a clock which is used created by an other device. Clock and Data send at the same time.</p> <ul> <li>Single Data Rate (SDR)</li> <li>Doube Data Rate (DDR)</li> <li>Quatriple Data Rate (QDR)</li> <li>High Speed SPI4.2</li> </ul>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#sdr","title":"SDR","text":"<p>e.g. MII, SPI</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#center-aligned-clock","title":"Center Aligned Clock","text":"<p>Data transitions not in phase with clock, clock is in the middle of the data change. Can directly be used without shift.</p>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#direct-clocking","title":"Direct Clocking","text":"<pre><code># Virtual Clock which create the data on other device\ncreate_clock -name virt_clk_in -period 8.000\n\n# Received Clock but Center aligned which means 180\u00b0 shifted (no phase command only waveform).\n# Allows to shift clock by half a period\ncreate_clock -name clk_in period 8.000 -waveform {4.0 8.0} [get_ports clk_in]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#pll-clocking","title":"PLL Clocking","text":"<p>Add PLL clocking or DLL to add shift to have the same input delay between data and clock. Needed for High speed (&gt;125MHz)</p> <pre><code># Virtual Clock which create the data on other device\ncreate_clock -name virt_clk_in -period 8.000\n\n# Received Clock but Center aligned which means 180\u00b0 shifted (no phase command only waveform).\n# Allows to shift clock by half a period\ncreate_clock -name clk_in -period 8.000 -waveform {4.0 8.0} [get_ports clk_in]\n\nderive_pll_clocks\n# or\ncreate_generated_clocks -name int_clk -source [get_pins PLL|clk[0]]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#edge-aligned-clock","title":"Edge Aligned Clock","text":"<p>Data transitions at the same time at the clock. Clock need to be shifted 180\u00b0</p> <p>PLL Clocking</p> <p>Add PLL clocking or DLL to add shift to have the same input delay between data and clock. Needed for High speed (&gt;125MHz)</p> <pre><code># Virtual Clock which create the data on other device\ncreate_clock -name virt_clk_in -period 8.000\n\n# Received Clock Edge Aligned therefor no need to shift\ncreate_clock -name clk_in -period 8.000 [get_ports clk_in]\n\nderive_pll_clocks\n# or\ncreate_generated_clocks -name int_clk -source [get_pins PLL|clk[0]] -phase 180 [get_pins PLL_clk[0]]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#data-input-constraints","title":"Data Input Constraints","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#t_co-relative-to-data","title":"\\(T_{co}\\) relative to data","text":"<pre><code># create input delays\nset in_max_dly [expr $data_tracemax + $tcomax - $clk_tracemin]\nset in_max_dly [expr $data_tracemin + $tcomin - $clk_tracemax]\n\n# input constraints\nset_input_delay -max $in_max_dly -clock virt_clk_in [get_ports data_in]\nset_input_delay -min $in_min_dly -clock virt_clk_in [get_ports data_in]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#t_co-relative-to-input-clock","title":"\\(T_{co}\\) relative to input clock","text":"<pre><code># create input delays\nset in_max_dly [expr $data_tracemax + $tco_datamax - $tco_clkmin - $clk_tracemin]\nset in_max_dly [expr $data_tracemin + $tco_datamin - $tco_clkmax - $clk_tracemax]\n\n# input constraints\nset_input_delay -max $in_max_dly -clock virt_clk_in [get_ports data_in]\nset_input_delay -min $in_min_dly -clock virt_clk_in [get_ports data_in]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#output-constraints","title":"Output Constraints","text":"","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#synchronous-outputs","title":"Synchronous Outputs","text":"<p>Synchronous Outputs where one external clock is used between multiple devices.</p> <pre><code>set_output_delay [-max] \\\\ # max time to arrive and still meet other devices Tsu (input setup time)\n                 [-min]    # min time to stay active and still meet other devices Th (input hold time)\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#so-calculations","title":"SO Calculations","text":"\\[ output_delay_max = Data\\_[trace](){max} - Board_clock\\_[skew](){min} + [T](){su} output_delay_max = ([T](){data\\_[pcb](){max}} + [T](){cl}) - ([T](){[clk2](){min}} - [T](){clk1\\_[ext](){max}}) + [T](){su} output_delay_min = Data\\_[trace](){min} - Board_clock\\_[skew](){max} + [T](){h} output_delay_min = ([T](){data\\_[pcb](){min}} + [T](){cl}) - ([T](){[clk2](){max}} - [T](){clk1_ext{min}}) + [T](){h} \\] <pre><code>set_output_delay -clock &lt;clock_name&gt;        # Clock driving source (external)\n                [-clock_fall]              # input signal was launched on falling edge\n                [-rise | -fall]            # input delay value  is for rising or falling edge\n                [-max | -min]              # must specify both max and min\n                [-add_delay]               # multiple constraints on single input\n                [-source_latency_included] #\n                &lt;delay_value&gt;\n                &lt;targets&gt;\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#source-synchronous-outputs","title":"Source Synchronous Outputs","text":"<p>Source Synchronous Outputs where the FPGA generates a clock which is used further in an other device. Clock and Data send at the same time.</p> <ul> <li>Single Data Rate (SDR)</li> <li>Doube Data Rate (DDR)</li> <li>Quatriple Data Rate (QDR)</li> <li>High Speed SPI4.2</li> </ul> <pre><code>set_output_delay [-max] \\\\ # max time to arrive and still meet other devices Tsu (input setup time)\n                 [-min]    # min time to stay active and still meet other devices Th (input hold time)\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#sso-calculations","title":"SSO Calculations","text":"\\[ output_delay_max = Data\\_[trace](){max} - Clock\\_[trace](){min} + [T](){su} output_delay_min = Data\\_[trace](){min} - Clock\\_[trace](){max} + [T](){h} \\] <pre><code>set_output_delay -clock &lt;clock_name&gt;        # Clock driving source (external)\n                [-clock_fall]              # input signal was launched on falling edge\n                [-rise | -fall]            # input delay value  is for rising or falling edge\n                [-max | -min]              # must specify both max and min\n                [-add_delay]               # multiple constraints on single input\n                [-source_latency_included] #\n                &lt;delay_value&gt;\n                &lt;targets&gt;\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#false-path","title":"False Path","text":"<p>2 Types of False Path:</p> <ul> <li>Logic-based: Not relevant circuit operation (static, quasi-static)</li> <li>Timing-based: Path intentionally not analysed (bridging async clock domain using synchronizer circuits)</li> </ul> <p>2 Methods:</p> <ul> <li><code>set_false_path</code>: disable timing analysation for a certain path or collection</li> <li><code>set_clock_group</code>: don't look at clock domain crossing between one, or mor clocks</li> </ul> <pre><code>set_false_path [-fall_from &lt;clocks&gt;] # no analysis falling edge on launch clock\n               [-rise_from &lt;clocks&gt;] # no analysis rising edge on launch clock\n               [-from &lt;names&gt;]       # use specific source node\n               [-through &lt;names&gt;]    #\n               [-to &lt;names&gt;]         # use specific target node\n               [-fall_to &lt;clock&gt;]    # no analysis falling edge on latch clock\n               [-rise_to &lt;clock&gt;]    # no analysis rising edge on latch clock\n               [-setup]              # no setup / recovery analysis\n               [-hold]               # no hold / removal analysis\n\nset_clock_groups [-asynchronous] # no phase relationship, but active at the same time\n                 [-exclusive]    # clocks are not active at the same time (muxed)\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#asynchronous-io-constraints","title":"Asynchronous I/O constraints","text":"<p>Path to ignore by the Timing Analyzer.</p> <pre><code>set_false_path -from [get_ports ext_rst_n] # input\nset_false_path -from [get_ports button*]   # input\n\nset_false_path -to [get_ports led*]        # output\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#timing-exceptions-between-clock-domains","title":"Timing exceptions between clock domains","text":"<p>Path to ignore by the Timing Analyzer. Clock domain crossing if double FF synchronisation.</p> <pre><code>set_false_path -from [get_pins reg1|clk] -to [get_pins reg2|d]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#synchronisation-done-through-a-dual-clock-dc_fifo","title":"Synchronisation done through a dual-clock DC_FIFO","text":"<p>Path to ignore by the Timing Analyzer.</p> <pre><code>set_false_path -from [get_clocks ext_clk50mhz] -to [get_clocks {i_PLL|altpll_component|auto_generated|pll1| clk[0]}]\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#clock-groups","title":"Clock groups","text":"<p>Muxed clocks</p> <pre><code># clocks are separate, no cross domain analyzation\nset_clock_groups -exclusive -group {clk_100} -group {clk_66}\n\n# same as\nset_false_path -from {get_clocks clk_100} -to {get_clocks clk_66\nset_false_path -from {get_clocks clk_66}  -to {get_clocks clk_100}\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/intel_sdc_usage.html#multicycle-paths","title":"Multicycle Paths","text":"<p>If a signal is slow and not sampled every clock edge. 2 Types possible:</p> <ul> <li>Clock enable signal not every time</li> <li>Should be avoided and replaced by pipeline FlipFlops to cut logic path.</li> <li>2 shifted clocks between 2 registers</li> <li>TimeQuest can used the false Latch edge, Multicycle for correct this setting</li> </ul> <p>How To:</p> <ul> <li>Determine Launch to Latch relationship</li> <li>With help of the TimeQuest Waveforms</li> <li>Fix Setup (because Hold changes with setup)</li> <li>Fix Hold</li> </ul> <p>Open Window</p> <ul> <li>start setup increment = edges before on source clock</li> <li>end setup increment = edge after on destination clock</li> <li>start hold increment = edges after on source clock</li> <li>end hold increment = edge before on destination clock</li> </ul> <pre><code>set_multicycle_path [-start | -end]      # start = change launch clock | end = change latch clock\n                    [-setup | -hold]     # setup hold edge\n                    [-fall_from &lt;clock&gt;]\n                    [-rise_from &lt;clock&gt;]\n                    [-from &lt;names&gt;]\n                    [-through &lt;names&gt;]\n                    [-to &lt;names&gt;]\n                    [-fall_to &lt;clocks&gt;]\n                    [-rise_to &lt;clocks&gt;]\n                    &lt;value&gt;\n</code></pre> <pre><code># 2 cycles for signal (case clock enable)\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -setup 2\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -hold  1 # 1 + **1** clock before setup\n\n# default 1 cycle signal (case clock enable)\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -setup 1\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -hold  0\n</code></pre> <pre><code># 2 cycles for signal (case shifted clock)\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -setup 2\nset_multicycle_path -from {get_pins reg1|clk} -to {get_pins reg2|d} -hold  0 # 1 clock before setup\n</code></pre>","tags":["coding","vhdl","intel","altera","sdc"]},{"location":"coding/vhdl/libraries.html","title":"Libraries","text":"","tags":["coding","vhdl","library"]},{"location":"coding/vhdl/libraries.html#numeric-operations","title":"Numeric Operations","text":"<p>Warning</p> <p>Never mix these Libraries!!!</p> <p>Use numeric_std - it's the proper IEEE standard and is more recent.</p> <pre><code>library ieee;\n  use ieee.std_logic_1164.all;\n  use ieee.numeric_std.all;\n\n-- Never mix these libraries\n\nlibrary ieee ;\n  use ieee.std_logic_1164.all ;\n  use ieee.std_logic_arith.all ;\n  use ieee.std_logic_unsigned.all ;\n</code></pre>","tags":["coding","vhdl","library"]},{"location":"coding/vhdl/libraries.html#ieee","title":"IEEE","text":"<p>Standart IEEE Libraries can not be found in every tool because of their copyright notice. Nevertheless they can be downloaded from the IEE Webpage</p> <p>ieee libraries</p> <ul> <li>math_complex.vhd</li> <li>math_real.vhd</li> <li>numeric_bit.vhd</li> <li>numeric_std.vhd</li> <li>std_logic_1164.vhd</li> <li>std_logic_arith.vhd</li> <li>std_logic_misc.vhd</li> <li>std_logic_signed.vhd</li> <li>std_logic_textio.vhd</li> <li>std_logic_unsigned.vhd</li> </ul>","tags":["coding","vhdl","library"]},{"location":"coding/vhdl/libraries.html#std","title":"STD","text":"<p>std libraries</p> <ul> <li>standard.vhd</li> <li>textio.vhd</li> </ul>","tags":["coding","vhdl","library"]},{"location":"coding/vhdl/libraries.html#synopsys","title":"Synopsys","text":"<p>synopys libraries</p> <ul> <li>arithmetic.vhd</li> <li>attributes.vhd</li> <li>types.vhd</li> </ul>","tags":["coding","vhdl","library"]},{"location":"coding/vhdl/osvvm.html","title":"OSVVM","text":"<p>Stands for Open Source VHDL Verification Methodology.</p>","tags":["coding","vhdl","osvvm"]},{"location":"coding/vhdl/osvvm.html#additional-documents","title":"Additional Documents","text":"<ul> <li>Synth Works OSVVM</li> <li>OSVVM at github</li> <li>OSVVM Files</li> <li>Doulos Guide</li> </ul>","tags":["coding","vhdl","osvvm"]},{"location":"coding/vhdl/simulation.html","title":"Simulation","text":"<p>Proposal of a simulation script system. All simulation files of a certain bloc can be found besides the <code>src</code> directory in the <code>sim</code> directory.</p> <p>It needs to have at least 4 files</p> Filename Description <code>&lt;blocname&gt;_tb.vhd</code> Main Simulation Testbench Toplevel <code>modelsim.ini</code> Modelsim configuration file with all necessary settings <code>sim_main.do</code> Modelsim main simulation script <code>sim_wave.do</code> Modelsim waveform file containing the needed waveforms","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#configuring","title":"Configuring","text":"","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#testbench","title":"Testbench","text":"<p>First configure the testbench accordingly to your simulation.</p> <ul> <li>Constants</li> <li>Generics</li> <li>Sequence</li> <li>etc ...</li> </ul>","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#sim_maindo","title":"<code>sim_main.do</code>","text":"<p>The <code>sim_main.do</code> contains a user defined part and the rest will be the same for ever testbench. You only need to change the user changable part (see below).</p> Variable Description Example <code>work_path</code> Path for all intermediate files. Can be anywhere, best is in a temporary folder <code>C:/temp</code> <code>sim_path</code> Path of the project sim folder you want to simulate <code>C:/work/Project/.../.../.../sim</code> <code>wave_file</code> wave file to load after compilation <code>sim_wave_all.do</code> <code>sim_time</code> simulation time <code>10 ms</code>, <code>10 us</code>, <code>10 sec</code>, <code>-all</code> <code>file_list</code> list of all files to compile. Relative to the sim directory  Libraries  Subfiles  Mainfiles  Testbenchfiles see below <code>toplevel</code> Name of toplevel bloc (Main Testbench bloc <code>interpolator_tb</code>","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#example","title":"Example","text":"sim_main.do<pre><code>#-------------------------------------------------------------------------------\n# User changable parameters\n# --\nset work_path C:/temp/ricoh/ri_gen5/interpolator/work\nset sim_path c:/work/project/Ricoh/2_FPGA/RI_GEN5/ip/interpolator/sim\nset wave_file sim_wave.do\nset sim_time \"5 ms\"\n\n# filelist according to $simpath\nset file_list {\n                ../Interpolator_defs_pkg.vhd\n\n                ../PulseGenerator.vhd\n                ../RampCounter.vhd\n                ../HwEncoder.vhd\n                ../Interpolator.vhd\n\n                Interpolator_tb.vhd\n}\n\n# Set toplevel entity\nset toplevel interpolator_tb\n# --\n# END User changable parameters\n#-------------------------------------------------------------------------------\n</code></pre>","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#sim_wavedo","title":"<code>sim_wave.do</code>","text":"<p>There can be a lot of different wvaeform files. In the <code>sim_main.do</code> you need to specify which one should be used. The waveform file needs to be created with modelsim.</p> <ul> <li>Add all the waves you want</li> <li>Configure the for each signal and it's display parameters</li> <li>Save the waveform file in the <code>sim</code> directory</li> </ul>","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/simulation.html#launch-simulation","title":"Launch simulation","text":"<ul> <li>Open Modelsim and enter the following   <pre><code>do C:/work/project/location/to/you/folder/sim/sim_script.do\n</code></pre></li> <li>After compilation there will be a question in modelsim console to start the simulation.   <pre><code># Launch Simulation &lt;Y|N y|n&gt;\n</code></pre></li> </ul>","tags":["coding","vhdl","simulation"]},{"location":"coding/vhdl/syntax.html","title":"Syntax","text":"<p>You can also find nice comprehensive VHDL papers and courses at: http://www.synthworks.com</p>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#types","title":"Types","text":"Typename Possible Value(s) Package <code>boolean</code> <code>true</code>, <code>false</code> standard <code>std_ulogic</code> <code>U</code>, <code>X</code>, <code>0</code>, <code>1</code>, <code>Z</code>, <code>W</code>, <code>L</code>, <code>H</code>, <code>-</code> std_logic_1164 <code>std_ulogic_vector</code> array of std_ulogic std_logic_1164 <code>std_logic</code> resolved std_ulogic std_logic_1164 <code>std_logic_vector</code> array of std_logic std_logic_1164 <code>unsigned</code> \\(0 \\: to \\: 2^2{(n)} - 1\\) numeric_std  std_logic_arith <code>signed</code> \\(-2^{(n-1)} \\: to \\: 2^{(n-1)} - 1\\) (2nd Complement) numeric_std  std_logic_arith <code>integer</code> \\(-2147483648 \\: to \\: 2147483647\\) (32bit) standard <code>real</code> \\(-1.0E38 \\: to \\: 1.0E38\\) standard <code>time</code> 1 fs to 1 hr standard <code>character</code> 191 / 256 characters standard <code>string</code> array of character standard","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#records","title":"Records","text":"record<pre><code>-- record declaration\ntype reg_type is record\n    irq  : std_logic;\n    pend : std_logic_vector(0 to 7);\n    mask : std_logic_vector(0 to 7);\nend record;\n\n-- signal of declared record\nsignal r, rin : reg_type;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#multiple-record-example","title":"Multiple record example","text":"m_record<pre><code>type value_type is record\n    holdtime     : time;\n    filename     : string(1 to 100);\n    value        : integer;\nend record;\n\ntype command_type is record\n    action : std_logic_vector(1 downto 0);\n    value  : value_type;\n    busy   : std_logic;\nend record;\n\nconstant init_value_type   : value_type   := (1 ps, (others =&gt; ' '), 0);\nconstant init_command_type : command_type := ((others =&gt; '0'), init_value_type, '0');\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#integer","title":"Integer","text":"type integer<pre><code>type    integer  is range -2147483648 to 2147483647   -- max 32bit\nsubtype natural  is range           0 to integer'high -- max 32bit\nsubtype positive is range           1 to integer'high -- max 32bit\n\nsignal int_free : integer;                 -- 32bit wide integer\nsignal int_5bit : integer range -16 to 15; -- 5bit integer\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#time","title":"Time","text":"type time<pre><code>type time     is range -2147483648 to 2147483647 -- neg also possible\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#std_ulogic","title":"<code>STD_(U)logic</code>","text":"type std<pre><code>-- std_ulogic\n-- only one driver per signal\ntype std_ulogic is ('U', -- Unitialized\n                    'X', -- Forcing Unknown\n                    '0', -- Forcing 0\n                    '1', -- Forcing 1\n                    'Z', -- High Impedance\n                    'W', -- Weak Unknown\n                    'L', -- Weak 0\n                    'H', -- Weak 1\n                    '-', -- Don't care\n-- std_logic = resolved std_ulogic\n-- allows more than one driver for Bidirectional busses\nsubtype std_logic is resolved std_ulogic;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#std_ulogic_vector","title":"<code>STD_(U)logic_vector</code>","text":"type std_vector<pre><code>type  std_ulogic_vector is array (natural range &lt;&gt;) of std_ulogic;\ntype  std_logic_vector  is array (natural range &lt;&gt;) of std_logic;\n\nstd_logic_vector_sig &lt;= \"11\"; --  3\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#unsigned","title":"Unsigned","text":"type unsigned<pre><code>type unsigned is array (natural range &lt;&gt;) of std_logic;\n\nunsigned_sig &lt;= \"11\"; --  3\nunsigned_sig &lt;= unsigned_sig + unsigned_sig;\n                             + integer_sig;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#signed","title":"Signed","text":"type signed<pre><code>type signed is array (natural range &lt;&gt;) of std_logic;\n\nsigned_sig   &lt;= \"11\"; -- -1\nsigned_sig   &lt;= signed_sig + signed_sig;\n                           + integer_sig\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#operators","title":"Operators","text":"Operator Description Example Arithmetic <code>+</code> Addition <code>y &lt;= x + 1</code> <code>-</code> Substraction <code>y &lt;= x - 1</code> <code>*</code> Multiplication <code>y &lt;= x * 1</code> <code>/</code> Division <code>y &lt;= x / 1</code> <code>* *</code> Power / Potenz <code>(2* *x'high DOWNTO 0)</code> <code>abs</code> absolute Value <code>mod</code> Module <code>rem</code> rest of Division Just for vector types <code>sla</code> Arith shift left <code>SHIFT_LEFT(BUS,nbr)</code> <code>sra</code> Arith shift right <code>SHIFT_RIGHT(Bus,nbr)</code> <code>sll</code> Logic shift left <code>(x sll 2)</code> <code>srl</code> Logic shift right <code>(x srl 2)</code> Comparison <code>=</code> equal <code>x =  y</code> <code>/=</code> inequal <code>x /= y</code> <code>&lt;</code> smaller <code>x &lt;  y</code> <code>&gt;</code> larger <code>x &gt;  y</code> <code>&lt;=</code> smaller equal <code>x &lt;= y</code> <code>&gt;=</code> larger equal <code>x &gt;= y</code> Logic Operation on std_logic <code>and</code> &amp; <code>x and  y</code> <code>nand</code> !&amp; <code>x nand y</code> <code>or</code> or <code>x or   y</code> <code>nor</code> not or <code>x nor  y</code> <code>xor</code> (+) <code>x xor  y</code> <code>not</code> ~ <code>not(x)</code> Else <code>&amp;</code> Concatenation <code>y = x &amp; z</code> <p>Figure 1: Operator usage</p>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#resulting-size","title":"Resulting size","text":"<p>The result size of an operation</p> operation result size<pre><code>-- Binary\nvector_sig  &lt;= \"1001\";         -- 4 bits binary value\n-- Hexadecimal\nvector_sig  &lt;= X\"F\";           -- 1 Hexadigit = 4 binary bits\n-- Assignation\nvector_sig  &lt;= a;              -- a'length = Length of array A\nvector_sig  &lt;= a and b;        -- a'length = b'Length\nboolean_sig &lt;= a &gt; b;          -- Boolean\nvector_sig  &lt;= a + b;          -- Maximum (A'Length, B'Length)\nvector_sig  &lt;= a * b;          -- A'Length + B'Length\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#functions","title":"Functions","text":"<p>Functions are reusable pieces of code. A function cannot consume simulation time and has only one return parameter. See also Procedure.</p> parity<pre><code>function parity_generator( din : std_ulogic_vector )\n                           return std_ulogic is\n    variable t : std_ulogic := '0';\nbegin\n    for i in din'range loop\n        t := t xor din(i);\n    end loop;\n    return t;\nend parity_generator;\n\n...\n\nsig_par &lt;= paritiy_generator(data_bus);\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#edge-finding","title":"Edge finding","text":"edge<pre><code>rising_edge(clk)      (clk'event &amp; clk = '1')\nfalling_edge(clk)     (clk'event &amp; clk = '1')\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#conversion","title":"Conversion","text":"conversion functions<pre><code>to_integer()          -- signed,unsigned return int\nto_unsigned()         -- int             return unsigned\nto_signed()           -- int             return signed\nsigned()              -- slv             return signed\nunsigned()            -- slv             return unsigned\nstd_logic_vector()    -- signed,unsigned return slv\nstd_match(arg1, arg2) --                 return bool\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#resize","title":"Resize","text":"resize functions<pre><code>resize(sig, length)   -- unsigned        return unsigned\nresize(sig, length)   -- signed          return signed\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#procedure","title":"Procedure","text":"<p>A procedure allows to reuse a piece of code. It has to be written in a package or between the process and it's beginning. A procedure can consume simulation time and can have as many in, out or inout signals/variables as wished. See also Function</p> <p>If in the parameter list is a parameter without signal in front, it means that it has to assigned to a direct value or a variable. Mostly signals are used if as the interface and variables are used to give input- or output data.</p> parity generator<pre><code>procedure parity_generator( signal din : in  std_ulogic_vector;\n                            signal par : out std_ulogic;\n                            par_init   : in  std_ulogic\n                          ) is\n    variable t : std_ulogic := par_init;\nbegin\n    for i in 0 to din'range loop\n        t := t xor din(i);\n    end loop;\n    par &lt;= t;\nend parity_generator;\n\nsignal databus : std_logic_vector(31 downto 0) := x\"3210\"\nsignal par_bit : std_logic;\n\n...\n\nparity_generator(databus,par_bit, \"0\");\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#signal","title":"Signal","text":"signal assign<pre><code>DataOut &lt;= ( 7 downto 4 =&gt; x\"A\",\n             3 downto 2 =&gt; \"01\",\n             1          =&gt; '1',\n             others     =&gt;'0');\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#attributes","title":"Attributes","text":"<p>More Attributes can be found at: Attributes</p> Attribute Decription Example Type based <code>(10 DOWNTO 0)</code> <code>T'base</code> Base type of type <code>T</code> <code>10</code> <code>T'left</code> Element left of type <code>T</code> <code>0</code> <code>T'right</code> Element right of type <code>T</code> <code>10</code> <code>T'high</code> Highest element of type <code>T</code> <code>0</code> <code>T'low</code> Lowest element of type <code>T</code> <code>T'pos(x)</code> Place <code>x</code> in type <code>T</code> <code>T'val(n)</code> Value of element at place <code>n</code> in <code>T</code> <code>T'succ(x)</code> Element after <code>x</code> in <code>T</code> <code>T'pred(x)</code> Element before <code>x</code> in <code>T</code> <code>T'leftOf(x)</code> Element left of <code>x</code> in <code>T</code> <code>T'rightOf(x)</code> Element right of <code>x</code> in <code>T</code> Vector based <code>V'left</code> Element most left in vector <code>V</code> <code>10</code> <code>V'right</code> Element most right in vector <code>V</code> <code>0</code> <code>V'high</code> Highest element in vector <code>V</code> <code>10</code> <code>V'low</code> Lowest element in vector <code>V</code> <code>0</code> <code>V'range</code> range of vector <code>V</code> <code>10 downto 0</code> <code>V'reverse_range</code> inversed range of vector <code>V</code> <code>0 downto 10</code> <code>V'length</code> length of vector <code>V</code> <code>11</code>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#statements","title":"Statements","text":"","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#if","title":"If","text":"if<pre><code>if s0 = '0' and s1 = '0' then\n    output &lt;= in0;\nelsif s0 = '1' and s1 = '0' then\n    output &lt;= in1;\nelsif s0 = '0' and s1 = '1' then\n    output &lt;= in2;\nelsif s0 = '1' and s1 = '1' then\n    output &lt;= in3;\nelse\n    output &lt;= 'X';\nend if;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#case","title":"Case","text":"case<pre><code>case sel is\n  when  \"00\"  =&gt;  output &lt;= in0;\n  when  \"01\"  =&gt;  output &lt;= in1;\n  when  \"10\"  =&gt;  output &lt;= in2;\n  when  \"11\"  =&gt;  output &lt;= in3;\n  when others =&gt;  output &lt;= 'X';\nend case;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#with-select","title":"With Select","text":"with<pre><code>with sel  select\n  output &lt;= in0 when \"00\",\n            in1 when \"01\",\n            in2 when \"10\",\n            in3 when \"11\",\n            'X' when others;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#when","title":"When","text":"when<pre><code>output &lt;= in0 when sel = \"00\"\n     else in1 when sel = \"01\"\n     else in2 when sel = \"10\"\n     else in3 when sel = \"11\"\n     else 'X';\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#for","title":"For","text":"for loop<pre><code>for i in 1 to 8 loop\n  output(i) &lt;= input(i + 8);\nend loop;\n\nfor i in input'range loop\n  output(i) &lt;= input(i);\nend loop;\n</code></pre>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#fixed-floating-point-types","title":"Fixed &amp; Floating Point Types","text":"<p>TODO</p>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#fixed-point-types","title":"Fixed Point Types","text":"<p>TODO</p>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/syntax.html#floating-point-types","title":"Floating Point Types","text":"<p>TODO</p>","tags":["coding","vhdl","syntax"]},{"location":"coding/vhdl/synthesis.html","title":"RTL Synthesis","text":"","tags":["coding","vhdl","synthesis"]},{"location":"coding/vhdl/synthesis.html#additional-documents","title":"Additional Documents","text":"<ul> <li>Synth Works RTL Synthesis</li> <li>Synth Works RTL Standard</li> </ul>","tags":["coding","vhdl","synthesis"]},{"location":"coding/vhdl/testbench.html","title":"Testbench","text":"","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#additional-documents","title":"Additional Documents","text":"<ul> <li>Synth Works Subbloc Verification</li> <li>Synth Works Testbench Techniques</li> </ul>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#tests-severity","title":"Tests &amp; Severity","text":"severity<pre><code>-- severity = note | warning | error | failure\nassert ( a = b )\n  report \u201ca is not equal to b\u201d\nseverity note;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#stop-simulation","title":"Stop Simulation","text":"testbench stop<pre><code>assert false report \"End of simulation\" severity failure;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#clock-generation","title":"Clock generation","text":"clock<pre><code>constant sys_CLK_freq   : real := 150.00E6;\nconstant sys_CLK_period : time := (1.0/sys_CLK_freq) * 1 sec;\n\nsignal sys_CLK_int      : std_logic;\nsignal sys_CLK          : std_logic;\n----------------------------\n-- Only signal\nsys_CLK_int &lt;= not sys_CLK_int after sys_CLK_period / 2;\nsys_CLK     &lt;= transport sys_CLK_int after sys_CLK_period * 9 / 10;\n\n-- In a process\nprocess\nbegin\n    sys_CLK_int    &lt;= '0';   wait for sys_CLK_period / 2;\n    sys_CLK_int    &lt;= '1';   wait for sys_CLK_period / 2;\nend process;\nsys_CLK     &lt;= transport sys_CLK_int after sys_CLK_period * 9 / 10;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#reset","title":"Reset","text":"reset<pre><code>tb_RESETn   &lt;= '0' after 0 ns,\n               '1' after 4 * sys_CLK_period;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#wait-statement","title":"Wait statement","text":"<ul> <li>Has to be in process without List of sensitivity</li> <li>Ever process without a list of sensitivity need at least on wait statement.</li> </ul> wait<pre><code>wait_PROC: process\n    -- wait for a given TIME\n    wait for &lt;time&gt;;\n\n    -- wait for an EVENT\n    wait on &lt;signal&gt;;\n\n    -- wait until CONDITON (on event triggered)\n    wait until &lt;condition&gt;;\n\n    -- wait if signal hasn't the whished value\n    if not &lt;condition&gt; then\n      wait until &lt;condition&gt;;\n    end if;\n\n    -- wait FOREVER\n    wait;\nend wait_PROC;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#strings","title":"Strings","text":"string<pre><code>-- Integer =&gt; String\nstring_sig &lt;= integer'image(integer_sig);\n\n-- String =&gt; Interger\ninteger_sig &lt;= integer'value(string_sig);\n\n-- String =&gt; Std_logic_vector\nslv_sig &lt;= to_std_logic_vector(string_sig);\n</code></pre> <p>Characters</p> <pre><code>lf - linefeed\nht - tabluator\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#simple-and-messy","title":"Simple and messy","text":"<p>Make a string plenty wide enough. Then you can store each string in the appropriate slice of it.</p> string simple<pre><code>variable toto: string(1 to 80) := (others =&gt; ' ');\n-- plenty wide enough, and full of spaces\n\n...\n\nif a = 0 then\n    toto(t1'range) := t1;\nelse\n    toto(t2'range) := t2;\nend if;\n</code></pre> <p>This is quite horrible, though, because you have no easy way to find out how many characters of <code>toto</code> are in use at any given time.</p>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#complicated-and-pretty","title":"Complicated and pretty","text":"<p>Make the string a variable of type <code>LINE</code>, from package <code>STD.TEXTIO</code>. Then you can copy any string into it using the <code>WRITE</code> procedure:</p> <p><code>WRITE</code> procedure adds things to the end of the string stored in <code>toto</code>, so that it grows ever longer. The <code>DEALLOCATE</code> procedure eliminates the spaces used by the line variable.</p> <p>Warning</p> <p>Each line variable need to be deallocated at the end, otherwise the memory space will not be released.</p> string pretty 1<pre><code>variable toto: line; -- initialised to empty!\n...\nif a=0 then\n    write(toto, t1);\nelse\n    write(toto, t2);\nend if;\n</code></pre> <p>To reset it back to \"empty\" and free the memory, simply:</p> string pretty 2<pre><code>deallocate(toto);\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#put-string-into-line","title":"Put String into Line","text":"<p>Copying any string into a line variable, having first cleared that variable:</p> string pretty 3<pre><code>procedure put(l: inout line; s: in string) is\n    begin\n    deallocate(l);\n    write(l, s);\nend;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#get-string-from-line","title":"Get String from Line","text":"<p>Given a variable.</p> string pretty 4<pre><code>variable l: line;\nvariable c: character;\nvariable s: string(1 to 80) := (others =&gt; ' ');\n\n-- put something into l\n...\n\n-- take the whole string content\nreport \"Message is \" &amp; l.all;\n\n-- take a slice of it, just like a string:\nc := l(1);\ns := l.all; (whole line to string)\n\n-- find its length:\nif l'length &gt; 50 then\n   ...\nend if;\n\n-- write it to a file (such as the console):\nwriteline(output, l); -- also clears l to empty\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/testbench.html#shared-variables","title":"Shared Variables","text":"shared variables<pre><code>architecture non_determinist of example is\n\n    shared variable count : integer;\n\nbegin\n\n    p1 : process\n    begin\n        count := 1;\n        wait;\n    end process p1;\n\n    p2: process\n    begin\n        wait 1 ps;\n        count := 2;\n        wait;\n    end process p2;\nend architecture non_determinist;\n</code></pre>","tags":["coding","vhdl","testbench"]},{"location":"coding/vhdl/time.html","title":"Time","text":"","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#time-type","title":"Time Type","text":"time type<pre><code>type time is range -2147483647 to 2147483647\n       units\n               fs;\n               ps  = 1000 fs;\n               ns  = 1000 ps;\n               us  = 1000 ns;\n               ms  = 1000 us;\n               sec = 1000 ms;\n               min = 60 sec;\n               hr  = 60 min;\n      end units;\n</code></pre>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#is-a-32bit-integer-sufficient","title":"Is a 32bit integer sufficient","text":"\\[ Max value = 2^{32}-1 = 2.15*10^9 = 2.15us &lt; hour \\] <p>Note</p> <p>How many femtosecond has an hour?</p> <p>$ 1 hour  = 3.6*10^{10} fs $</p>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#simulator-use-64bit-integer","title":"Simulator use 64bit integer","text":"\\[ Max value = 2^{64}-1 = 9.22*10^{18} = 2.56 hour \\] <p>Note</p> <p>VHDL Simulators use 64bit integer for time representaton</p> <p>Time range is = \\(1 fs - 2.56 hour\\)</p>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#time-conversions","title":"Time Conversions","text":"","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#integer-time","title":"Integer =&gt; Time","text":"int 2 time<pre><code>-- Time_value := Int_value * Time_unit;\ntimeout := intmax * 1 ns;\n</code></pre>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#real-time","title":"Real =&gt; Time","text":"real 2 time<pre><code>-- Time_value := integer(real_value) * Time_unit;\ntimeout := integer(realmax) * 1 ns;\n</code></pre>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#time-real-integer","title":"Time =&gt; Real, Integer","text":"time 2 time<pre><code>int_pico  := curr_time/ 1 ns * 1000;\nreal_pico := real(curr_time/ 1 ns) * 1000.0;\n-- Time_value := integer(real_value) * Time_unit;\ntimeout := integer(realmax) * 1 ns;\n</code></pre>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/time.html#clock-generation","title":"Clock generation","text":"clock generation<pre><code>architecture test of DUT_tester is\n  -- 100MHz clock\n  constant clkFreq    : real       := 100.0E6;\n  constant clkPeriod  : time       := (1.0/clkFreq) * 1 sec;\n  -- Initialising with 1\n  signal   clk_int    : std_ulogic := '1';\n\nbegin\n  clk_int &lt;= not clk_int after clkPeriod/2;\n  clk     &lt;= transport clk_int after clkPeriod*9/10;\nend test;\n</code></pre>","tags":["coding","vhdl","time"]},{"location":"coding/vhdl/xilinx_ucf.html","title":"Xilinx UCF Constraints","text":"","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#how-to-guide","title":"How to Guide","text":"<p>This small guide indicates how to resolve most timing problems / constraints inside an FPGA. In fact, most problems with an FPGA timing occur because of three reasons:</p> <ul> <li>False paths</li> <li>Timing issues due to reading data from outside the FPGA with a clock</li> <li>Timing issues due to outputting data to another component from the FPGA with a clock.</li> </ul>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#problem-a-false-paths","title":"Problem A : false paths","text":"<p>A simple example for the first case is when you generate the TX line of an UART or when you consider interrupt lines in a uBlaze (for instance). In both cases, those signals arenot synchronous with respect to your clock. You must then indicate that those netsare to be ignored by timing checks. In order to do it, for Xilinx FPGA you must use the TIGconstraint (which stands for Timing IGnore). The only problem here is that you can't putthat constraint in your VHDL file but you have to put it in the UCF file. When you haveinternal signals, you require to use the complete path of the net (which can be found forexample by displaying the schematic of your design or with the report of the timing analyser).</p> <p>An example of such a constraint for a UCF file is given here :</p> <pre><code>INST \"broadenc_cpu_i/axi_intc_0/axi_intc_0/INTC_CORE_I/hw_intr_1\" TNM = UBlaze_Interrupts;\nINST \"broadenc_cpu_i/axi_intc_0/axi_intc_0/INTC_CORE_I/hw_intr_2\" TNM = UBlaze_Interrupts;\nTIMESPEC TS_UBlaze_Interrupts = TO \"UBlaze_Interrupts\" TIG; ## We don't care of timing for interrupts\n</code></pre> <p>This creates a group for two signals and then use the TIG constraint to it. If your instance name is incorrect, the synthesis tool will complaint.</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#problem-b-reading-data-from-outside-the-fpga","title":"Problem B : reading data from outside the FPGA","text":"<p>When you read synchronous data (i.e. with an incoming clock) in an FPGA, you must be sure that you respect setup and hold times in your input register. In order to do, a simple constraint like</p> <pre><code>OFFSET = IN 4 ns VALID 8 ns BEFORE \"mb_vclk\";\n</code></pre> <p>indicate that the data that are registered with the signal mb_vclk (which must be a constrained clock) must comply with a setup of 4 ns and a hold time of 4 ns. By doing it like this, you won't have any problem with source synchronous systems (in which the clock are transmitted from another device with the data).</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#problem-c-outputting-synchronous-data-correctly-with-an-fpga","title":"Problem C: outputting synchronous data correctly with an FPGA","text":"<p>When you generate data for another system in your FPGA and you also generate the clock for that system ( a global clock is not shared between all elements of the system (FPGA and device) for that bus), making sure that the data are aligned with the clock and are output with correct setup and hold times consist in putting the following constraint:</p> <pre><code>net \"ve_vclk\" TNM_NET = \"vdata_out\";\nnet \"ve_vy&lt;0&gt;\" TNM_NET = \"vdata_out\";\nnet \"ve_vy&lt;1&gt;\" TNM_NET = \"vdata_out\";\nnet \"ve_vy&lt;2&gt;\" TNM_NET = \"vdata_out\";\nnet \"ve_vy&lt;3&gt;\" TNM_NET = \"vdata_out\";\nnet \"ve_vy&lt;4&gt;\" TNM_NET = \"vdata_out\";\nTIMEGRP \"vdata_out\" OFFSET = OUT AFTER \"mb_vclk\" REFERENCE_PIN \"ve_vclk\";\n</code></pre> <p>Those constraints have the following meaning : we group all the signals in a group \"vdata_out\". This group is generated with a clock (here mb_vclk, which remains inside the FPGA) and the clock for the whole group (which is output and constitues the reference for all the other signals) is ve_vclk. Note that this pin must be included in the group.</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#syntax","title":"Syntax","text":"","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#comment","title":"Comment","text":"<pre><code># This is a comment\n</code></pre>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#io-pad-assigments","title":"I/O Pad Assigments","text":"<pre><code>NET \"out_sig_slow\"    LOC = \"S1\" | SLEW = SLOW;\nNET \"out_sig_fast\"    LOC = \"S2\" | SLEW = FAST;\nNET \"out_sig33\"       LOC = \"V1\" | IOSTANDARD = LVCMOS33\nNET \"in_sig18\"        LOC = \"V2\" | IOSTANDARD = LVCMOS18\nNET \"reset_n\"         LOC = \"P1\" | PULLUP;\nNET \"button_Pullup\"   LOC = \"P2\" | PULLUP;\nNET \"button_Pulldown\" LOC = \"P3\" | PULLDOWN;\n</code></pre>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#timing-constraints","title":"Timing constraints","text":"","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#clock-constraint-period","title":"Clock constraint (PERIOD)","text":"<p>Definition of a clock with a 50% duty cycle and it's frequency (40MHz)</p> <pre><code>NET \"SYS_CLK\" TNM_NET = \"SYS_CLK\";\nTIMESPEC \"tnm_name\"   = PERIOD \"sig_name\" &lt;Tcycle&gt; HIGH &lt;dutycycle&gt;;\nTIMESPEC \"TS_SYS_CLK\" = PERIOD \"SYS_CLK\" 25.000 ns HIGH 50.00%;\n</code></pre> <p>Figure 1: Duty Cycle</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#time-group","title":"Time Group","text":"<p>Create timing group with particular net. This code defines a clk_net timing group associated with the CLK clock net and including all synchronous elements controlled by this net (since no qualifier has been specified).</p> <pre><code>NET \"net_name\" TNM_NET = qualifier \"tnm_name\";\nNET \"CLK\"      TNM_NET = \"clk_net\";\nNET \"ve_vc&lt;0&gt;\" TNM_NET = ve_data;\nNET \"ve_vc&lt;1&gt;\" TNM_NET = ve_data;\n</code></pre> <p>Create timing group by specify the name of the instance (module)</p> <pre><code>INST \"inst_name\" TNM = qualifier \"tnm_name\";\n</code></pre>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#offset","title":"OFFSET","text":"<p>OFFSET constraint is used to specify external setup time for input pads or necessary hold time for output pads.</p> <p>Figure 2: Offset Example</p> <p>For input pads, OFFSET specifies a time before the (external) clock edge when the related data signals are set.</p> <pre><code>OFFSET = IN 5 ns AFTER  \"CLK\";\nOFFSET = IN 5 ns BEFORE \"CLK\";\n</code></pre> <p>Figure 3: Offset in</p> <p>For output pads, OFFSET specifies a minimum time after the clock edge when the related data signals can be deasserted.</p> <pre><code>OFFSET = OUT 2 ns AFTER  \"CLK\";\nOFFSET = OUT 2 ns BEFORE \"CLK\";\n</code></pre> <p>Figure 4: Offset Out</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#offset-with-timegroup","title":"OFFSET with TimeGroup","text":"<p>Set Offset after rising edge of clock constraint for all signals in Timegroup</p> <pre><code>TIMEGRP \"ve_data\" OFFSET = OUT 10.333 ns AFTER \"mb_vclk\" RISING;\nTIMEGRP \"ve_data\" OFFSET = OUT 10.333 ns AFTER \"mb_vclk\" FALLING;\n</code></pre>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#offset-with-valid-data","title":"OFFSET with Valid data","text":"<p>The VALID keyword is used in conjunction with the requirement to create a hold time requirement. The VALID keyword specifies the duration of the incoming data valid window. By default, the VALID value is equal to the OFFSET time requirement, which specifies a zero hold time requirement</p> <pre><code>TIMEGRP DATA_IN OFFSET IN = 2ns VALID 3ns BEFORE CLK RISING;\n</code></pre> <p>Figure 5: Offset Valid</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#false-paths","title":"False paths","text":"<p>In some cases, you may want to remove a set of paths from timing analysis if you are sure that these paths do not affect timing performance. For example a processor interrupt line or a UART TX Line. In both cases, those signals are not synchronous with respect to your clock. You must then indicate that those nets are to be ignored by timing checks. In order to do it, for Xilinx FPGA you must use the TIG constraint (which stands for T iming IG nore).</p> <p>One common way to specify the set of paths to be removed from timing analysis is to use the <code>FROM-TO</code> constraint with the timing ignore (TIG) keyword. This allows you to:</p> <ul> <li>Specify a set of registers in a source time group</li> <li>Secify a set of registers in a destination time group</li> <li>Automatically remove all paths between those time groups from analysis.</li> </ul> <p>To specify the timing ignore (TIG) constraint for this method, define:</p> <ul> <li>A set of registers for the source time group</li> <li>A set of registers for the destination time group</li> <li>A FROM-TO constraint with a TIG keyword to remove the paths between the groups</li> </ul> <pre><code>TIMESPEC \"TSid\" = FROM \"SRC_GRP\" TO \"DST_GRP\" TIG;\n\nNET \"CLK1\" TNM_NET = FFS \"GRP_1\";\nNET \"CLK2\" TNM_NET = FFS \"GRP_2\";\nTIMESPEC TS_Example = FROM \"GRP_1\" TO \"GRP_2\" TIG;\n</code></pre> <p>Figure 6: False Path</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"coding/vhdl/xilinx_ucf.html#multicycle-paths","title":"Multicycle paths","text":"<p>In a multi-cycle path, data is transferred from source to destination synchronous elements at a rate less than the clock frequency defined in the <code>PERIOD</code> specification. This occurs most often when the synchronous elements are gated with a common clock enable signal. By defining a multi-cycle path, the timing constraints for these synchronous elements are relaxed over the default <code>PERIOD</code> constraint. The implementation tools are then able to appropriately prioritize the implementation of these paths. One common way to specify the set of multi-cycle paths is to define a time group using the clock enable signal. This allows you to:</p> <ul> <li>Define one time group containing both the source and destination synchronous elements using a common clock enable signal</li> <li>Automatically apply the multi-cycle constraint to all paths between these synchronous elements</li> </ul> <p>To specify the <code>FROM:TO</code> (multi-cycle) constraint for this method, define:</p> <ul> <li>A PERIOD constraint for the common clock domain</li> <li>A set of registers based on a common clock enable signal</li> <li>A <code>FROM:TO</code> (multi-cycle) constraint describing the new timing requirement</li> </ul> <pre><code>TIMESPEC \"TSid\" = FROM \"MC_GRP\" TO \"MC_GRP\" &lt;value&gt;;\n\nNET \"CLK1\" TNM_NET = \"CLK1\";\nTIMESPEC \"TS_CLK1\" = PERIOD \"CLK1\" 5 ns HIGH 50%;\nNET \"Enable\" TNM_NET = FFS \"MC_GRP\";\nTIMESPEC TS_Example = FROM \"MC_GRP\" TO \"MC_GRP\" TS_CLK1*2;\n</code></pre> <p>Figure 7: Multi-Cycle Path</p>","tags":["coding","vhdl","amd","xilinx","ucf"]},{"location":"computerscience/index.html","title":"Computerscience","text":"","tags":["computer science"]},{"location":"computerscience/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["computer science"]},{"location":"computerscience/algorithms/index.html","title":"Algorithms","text":"","tags":["computerscience","datascience","algorithms"]},{"location":"computerscience/algorithms/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["computerscience","datascience","algorithms"]},{"location":"computerscience/algorithms/bigO.html","title":"Big O Notation","text":"<p>The Big O notation indicates how fast an algorithms is. It is the worst case evaluation of the given algorithms. In short, how many iterations are needed in the worst case. A list of algorithms with theirs Big O notation can be found at https://big-o.io.</p> <pre><code>O(n)\n ^ ^\n | +-- Number of operations\n +---- Big O\n</code></pre> <p>Figure 1: BigO Runtimes Source: https://big-o.io</p>","tags":["computerscience","datascience","algorithms","big O Notation"]},{"location":"computerscience/algorithms/bigO.html#some-common-runtimes","title":"Some common runtimes","text":"<ul> <li>\\(O(log\\;n)\\) - also known as log time<ul> <li>Binary Search</li> </ul> </li> <li>\\(O(n)\\) also known as linear time<ul> <li>Simple search</li> </ul> </li> <li>\\(O(n*log\\;n)\\) - fast sorting algorithms</li> <li>quicksort</li> <li>\\(O(n^2)\\) - slow sorting algorihtms<ul> <li>selection sort</li> </ul> </li> <li>\\(O(n!)\\) - very slow algorithms<ul> <li>traveling salesperson</li> </ul> </li> </ul> <p>Figure 2: BigO Complexity Source: https://www.bigocheatsheet.com/</p> <p>Figure 3: BigO Comparison Source: https://medium.com/@cparusso/what-the-hell-is-big-o-notation-9b90d9f9cd14</p>","tags":["computerscience","datascience","algorithms","big O Notation"]},{"location":"computerscience/algorithms/bigO.html#ranking-worst-to-best","title":"Ranking Worst to Best","text":"<ul> <li>\\(O(n!)\\)</li> <li>\\(O(2^n)\\)</li> <li>\\(O(n^2)\\)</li> <li>\\(O(n*(log\\;n)^2)\\)</li> <li>\\(O(n*log\\;n)\\)</li> <li>\\(O(n)\\)</li> <li>\\(O(k)\\)</li> <li>\\(O(n + k)\\)</li> <li>\\(O(nk)\\)</li> <li>\\(O(log\\;n)\\)</li> <li>\\(O(1)\\)</li> </ul>","tags":["computerscience","datascience","algorithms","big O Notation"]},{"location":"computerscience/algorithms/memory-types.html","title":"Memory Types","text":"","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#array","title":"Array","text":"<p>An array is a linear data structure consisting of a collection of similar data type elements, each identified by at least one index or key. The size of the array must be specified at the time of its declaration. It is fixed and cannot be resized during runtime. In the array, elements are organized sequentially, one after another within a single block of memory.</p> <p></p>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#operations","title":"Operations","text":"<ul> <li>Access \u2013 It supports efficient random access, which means that its elements can be accessed directly using their index.</li> <li>Insertion \u2013 If the insertion site is located at the beginning or in the middle of the array, all the elements located on the right are moved one index forward. If the array is full, a new larger array is created. Inserting is very efficient at the end of the array.</li> <li>Deletion \u2013 If the deleted element is located at the beginning or in the middle of the array, all the elements located on the left are moved one index backwards to avoid leaving an empty space in memory. This guarantees that the elements are stored in contiguous space in memory. Removal is very efficient at the end of the array because only the last element is deleted.</li> <li>Search \u2013 The array must be sequentially checked until a match is found.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#advantages","title":"Advantages","text":"<ul> <li>Random access -  Elements can be accessed randomly using the index.</li> <li>Cache friendly - Since elements are stored in contiguous memory locations, it is cache friendly.</li> <li>Easy to implement and use.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#disadvantages","title":"Disadvantages","text":"<ul> <li>Fixed size: The size of the array is fixed and cannot be changed during runtime.</li> <li>Memory wastage: If the array size is larger than the number of elements, memory is wasted.</li> <li>Insertion and deletion: Insertion and deletion of elements are difficult and time-consuming.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#example","title":"Example","text":"<p>Static arrays in Rust are fixed-size arrays that are allocated on the stack. The size of the array must be known at compile time. </p><pre><code>fn main() {\n    let arr: [i32; 5] = [1, 2, 3, 4, 5];\n    println!(\"Array: {:?}\", arr);\n}\n</code></pre> <p>Dynamic arrays in Rust are allocated on the heap and can grow or shrink in size. The <code>Vec</code> type is used to create dynamic arrays. </p><pre><code>fn main() {\n    // Initialize a vector\n    let mut numbers = vec![1, 2, 4, 5]; // [1, 2, 4, 5]\n\n    // Insert an element in the middle (at index 2)\n    numbers.insert(2, 3); // Now: [1, 2, 3, 4, 5]\n    println!(\"After inserting in the middle: {:?}\", numbers);\n\n    // Insert an element at the end\n    numbers.push(6); // Now: [1, 2, 3, 4, 5, 6]\n    println!(\"After inserting at the end: {:?}\", numbers);\n\n    // Update an element (change the first element to 0)\n    numbers[0] = 0; // Now: [0, 2, 3, 4, 5, 6]\n    println!(\"After updating the first element: {:?}\", numbers);\n\n    // Remove an element from the middle (remove element at index 2)\n    numbers.remove(2); // Now: [0, 2, 4, 5, 6]\n    println!(\"After removing from the middle: {:?}\", numbers);\n\n    // Remove the last element\n    numbers.pop(); // Now: [0, 2, 4, 5]\n    println!(\"After removing the last element: {:?}\", numbers);\n\n    // Iterate over the vector\n    for number in &amp;numbers {\n        println!(\"{}\", number);\n    }\n}\n</code></pre>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#linked-lists","title":"Linked Lists","text":"<p>A linked list is a linear data structure consisting of a collection of elements called nodes. Each node contains two fields: a data field to store the element and a reference field to link the node to the next node in the sequence. The first node is called the head. The last node points to <code>null</code> or <code>None</code> to indicate the end of the list also called the tail.</p> <p></p>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#operations_1","title":"Operations","text":"<ul> <li>Access \u2013 It does not support random access. To access an element, the list must be traversed sequentially from the beginning.</li> <li>Insertion \u2013 Insertion is very efficient because it only requires changing the references of the nodes.</li> <li>Deletion \u2013 Deletion is very efficient because it only requires changing the references of the nodes.</li> <li>Search \u2013 The list must be sequentially checked until a match is found.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#advantages_1","title":"Advantages","text":"<ul> <li>Dynamic size - The size of the linked list can be changed during runtime.</li> <li>Memory utilization - Memory is utilized efficiently.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#disadvantages_1","title":"Disadvantages","text":"<ul> <li>Random access - Elements cannot be accessed randomly using the index.</li> <li>Cache unfriendly - Since elements are stored in non-contiguous memory locations, it is cache unfriendly.</li> <li>Complexity - It is complex to implement and use.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#example_1","title":"Example","text":"<pre><code>use std::collections::LinkedList;\n\nfn main() {\n    // Initialize a linked list\n    let mut list = LinkedList::new();\n\n    // Add some initial elements added always at the end\n    list.push_back(1);\n    list.push_back(2);\n    list.push_back(4);\n    list.push_back(5); // List: 1 -&gt; 2 -&gt; 4 -&gt; 5\n    println!(\"Initial list: {:?}\", list);\n\n    // Insert at the beginning\n    list.push_front(0); // List: 0 -&gt; 1 -&gt; 2 -&gt; 4 -&gt; 5\n    println!(\"After inserting at the beginning: {:?}\", list);\n\n    // Insert at the end\n    list.push_back(6); // List: 0 -&gt; 1 -&gt; 2 -&gt; 4 -&gt; 5 -&gt; 6\n    println!(\"After inserting at the end: {:?}\", list);\n\n    // Insert in the \"middle\" (simulated by iterating to the middle position)\n    let mut cursor = list.cursor_front_mut();\n    for _ in 0..3 { // Move cursor to position 3 (before element 4)\n        cursor.move_next();\n    }\n    cursor.insert_after(3); // Insert 3 before 4\n    println!(\"After inserting in the middle: {:?}\", list);\n\n    // Update an element (change the first element to -1)\n    let mut cursor = list.cursor_front_mut();\n    if let Some(front) = cursor.current() {\n        *front = -1;\n    }\n    println!(\"After updating the first element: {:?}\", list);\n\n    // Remove from the \"middle\" (remove the element after the third position)\n    let mut cursor = list.cursor_front_mut();\n    for _ in 0..3 { // Move cursor to the element before 4\n        cursor.move_next();\n    }\n    cursor.remove_current(); // Removes 3\n    println!(\"After removing from the middle: {:?}\", list);\n\n    // Remove from the beginning\n    list.pop_front();\n    println!(\"After removing from the beginning: {:?}\", list);\n\n    // Remove from the end\n    list.pop_back();\n    println!(\"After removing from the end: {:?}\", list);\n\n    // Iterate over the list to display final state\n    for element in &amp;list {\n        println!(\"{}\", element);\n    }\n}\n</code></pre>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#hashtable-or-hashmap","title":"HashTable or Hashmap","text":"<p>A hash table is a data structure that stores key-value pairs, also called an unordered collection. It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. The hash function maps keys to indices in the array, allowing for efficient lookup, insertion, and deletion of key-value pairs. A good hash function is essential for hash table performance.</p> <p></p>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#operations_2","title":"Operations","text":"<ul> <li>Insertion \u2013 Insertion is efficient because it only requires computing the hash value and inserting the key-value pair into the correct bucket.</li> <li>Deletion \u2013 Deletion is efficient because it only requires computing the hash value and removing the key-value pair from the correct bucket.</li> <li>Search \u2013 Searching for a key is efficient because the hash function allows direct access to the bucket containing the key-value pair.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#advantages_2","title":"Advantages","text":"<ul> <li>Fast access - Hash tables provide fast access to key-value pairs.</li> <li>Dynamic size - The size of the hash table can be changed during runtime.</li> <li>Memory utilization - Memory is utilized efficiently.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#disadvantages_2","title":"Disadvantages","text":"<ul> <li>Ordering - Hash tables do not maintain the order of key-value pairs.</li> <li>Complexity - Hash functions can be complex to design and implement.</li> <li>Collisions - Collisions can occur when two keys map to the same index, requiring additional handling.</li> </ul>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#example_2","title":"Example","text":"<pre><code>use std::collections::HashMap;\n\nfn main() {\n    // Initialize a HashMap\n    let mut scores = HashMap::new();\n\n    // Insert key-value pairs\n    scores.insert(\"Alice\", 10);\n    scores.insert(\"Bob\", 20);\n    println!(\"Initial scores: {:?}\", scores);\n\n    // Insert another key-value pair\n    scores.insert(\"Charlie\", 30);\n    println!(\"After inserting Charlie: {:?}\", scores);\n\n    // Update a value (change Bob's score)\n    if let Some(score) = scores.get_mut(\"Bob\") {\n        *score = 25;\n    }\n    println!(\"After updating Bob's score: {:?}\", scores);\n\n    // Insert or update with `entry` API\n    scores.entry(\"Dave\").or_insert(40); // Inserts \"Dave\" with score 40\n    scores.entry(\"Alice\").or_insert(50); // Does not change \"Alice\" as she already has a score\n    println!(\"After using entry API: {:?}\", scores);\n\n    // Remove an entry by key\n    scores.remove(\"Charlie\");\n    println!(\"After removing Charlie: {:?}\", scores);\n\n    // Iterate over the HashMap\n    for (key, value) in &amp;scores {\n        println!(\"{}: {}\", key, value);\n    }\n\n    // Check if a key exists\n    if scores.contains_key(\"Alice\") {\n        println!(\"Alice is in the HashMap with a score of {}\", scores[\"Alice\"]);\n    }\n}\n</code></pre>","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#conclusion","title":"Conclusion","text":"","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#time-complexity-average","title":"Time Complexity Average","text":"Data Structure Access Search Insertion Deletion Array \\(O(1)\\) \\(O(n)\\) \\(O(n)\\) \\(O(n)\\) Linked List \\(O(n)\\) \\(O(n)\\) \\(O(1)\\) \\(O(1)\\) Hash Table - \\(O(1)\\) \\(O(1)\\) \\(O(1)\\)","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#time-complexity-worst","title":"Time Complexity Worst","text":"Data Structure Access Search Insertion Deletion Array \\(O(1)\\) \\(O(n)\\) \\(O(n)\\) \\(O(n)\\) Linked List \\(O(n)\\) \\(O(n)\\) \\(O(1)\\) \\(O(1)\\) Hash Table - \\(O(n)\\) \\(O(n)\\) \\(O(n)\\)","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/memory-types.html#space-complexity","title":"Space Complexity","text":"Data Structure Space Complexity Array \\(O(n)\\) Linked List \\(O(n)\\) Hash Table \\(O(n)\\)","tags":["computer science","algorithms","coding","memory types","array","linked lists","hashtable","hashmap"]},{"location":"computerscience/algorithms/sorting.html","title":"Sorting / Search Algorithms","text":"<p>Sorting algorithms are essential tools in computer science and software development, used to arrange data in a specific order (usually ascending or descending). By organizing data efficiently, sorting makes it easier to search, analyze, and process information, forming the backbone of many applications and algorithms. Different sorting techniques offer various trade-offs in terms of speed, memory usage, and simplicity, making it essential to choose the right algorithm based on the data size and characteristics.</p> <p>See also the jupyter notebook on this topic: Sorting Algorithms</p>","tags":["computer science","algorithms","sorting"]},{"location":"computerscience/algorithms/sorting.html#binary-search","title":"Binary Search","text":"<p>Binary Search is an efficient algorithm for finding a target value within a sorted array. It works by repeatedly dividing the search interval in half, reducing the number of elements to check. Binary search has a time complexity of \\(O(\\log n)\\), making it much faster than linear search for large datasets.</p> <p>See also: Binary Search Notebook</p> <pre><code>fn binary_search(arr: &amp;[i32], target: i32) -&gt; Option&lt;usize&gt; {\n    let mut left = 0;\n    let mut right = arr.len();\n\n    while left &lt; right {\n        let mid = left + (right - left) / 2;\n\n        if arr[mid] == target {\n            return Some(mid);\n        } else if arr[mid] &lt; target {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n\n    None // Target not found\n}\n\nfn main() {\n    let sorted_array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    let target = 7;\n\n    match binary_search(&amp;sorted_array, target) {\n        Some(index) =&gt; println!(\"Element found at index: {}\", index),\n        None =&gt; println!(\"Element not found\"),\n    }\n}\n</code></pre>","tags":["computer science","algorithms","sorting"]},{"location":"computerscience/algorithms/sorting.html#selection-sort","title":"Selection Sort","text":"<p>Selection Sort is a simple sorting algorithm that repeatedly selects the smallest (or largest) element from an unsorted array and places it at the beginning (or end) of the sorted portion. This process continues until the entire array is sorted.</p> <ul> <li>Time Complexity - \\(O(n^2)\\) in all cases, making it inefficient for large datasets.</li> <li>Space Complexity - \\(O(1)\\), as it sorts the array in place.</li> <li>Usage -  Best suited for small or mostly sorted arrays where simplicity is preferred over performance.</li> </ul> <pre><code>fn selection_sort(arr: &amp;mut [i32]) {\n    let n = arr.len();\n    for i in 0..n {\n        // Assume the minimum is the first element\n        let mut min_index = i;\n\n        // Find the smallest element in the rest of the array\n        for j in (i + 1)..n {\n            if arr[j] &lt; arr[min_index] {\n                min_index = j;\n            }\n        }\n\n        // Swap the found minimum element with the first unsorted element\n        arr.swap(i, min_index);\n    }\n}\n\nfn main() {\n    let mut arr = [64, 25, 12, 22, 11];\n    selection_sort(&amp;mut arr);\n    println!(\"Selection Sorted Array: {:?}\", arr);\n}\n</code></pre>","tags":["computer science","algorithms","sorting"]},{"location":"computerscience/algorithms/types.html","title":"Types of Algorithm","text":"","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#recursive-algorithm","title":"Recursive Algorithm","text":"<p>An algorithms which calls itself with a smaller value as input for solving the current input. In short, it\u2019s an Algorithm that calls itself repeatedly until the problem is solved.</p> <p>Problems such as the Tower of Hanoi or DFS of a Graph can be easily solved by using these Algorithms.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#divide-and-conquer","title":"Divide and Conquer","text":"<p>In Divide and Conquer algorithms, divide the algorithm into two parts; the first parts divide the problem on hand into smaller subproblems of the same type. Then, in the second part, these smaller problems are solved and then added together (combined) to produce the problem\u2019s final solution.</p> <p>Merge sorting, and quick sorting can be done with divide and conquer algorithms.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#dynamic-programming-algorithm","title":"Dynamic Programming Algorithm","text":"<p>These algorithms work by remembering the results of the past run and using them to find new results. In other words, a dynamic programming algorithm solves complex problems by breaking them into multiple simple subproblems and then it solves each of them once and then stores them for future use.</p> <p>Fibonacci sequence is a good example for Dynamic Programming algorithms.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#greedy-algorithm","title":"Greedy Algorithm","text":"<p>These algorithms are used for solving optimization problems. In this algorithm, we find a locally optimum solution (without any regard for any consequence in future) and hope to find the optimal solution at the global level.</p> <p>The method does not guarantee that we will be able to find an optimal solution.</p> <p>The algorithm has 5 components:</p> <ul> <li>The first one is a candidate set from which we try to find a solution.</li> <li>A selection function that helps choose the best possible candidate.</li> <li>A feasibility function that helps in deciding if the candidate can be used to find a solution.</li> <li>An objective function that assigns value to a possible solution or to a partial solution</li> <li>Solution function that tells when we have found a solution to the problem.</li> </ul> <p>Huffman Coding and Dijkstra\u2019s algorithm are two prime examples where the Greedy algorithm is used.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#brute-force-algorithms","title":"Brute Force Algorithms","text":"<p>A brute force algorithm blindly iterates all possible solutions to search one or more than one solution that may solve a function. Think of brute force as using all possible combinations of numbers to open a safe.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/types.html#backtracking-algorithms","title":"Backtracking Algorithms","text":"<p>Backtracking is a technique to find a solution to a problem in an incremental approach. It solves problems recursively and tries to solve a problem by solving one piece of the problem at a time. If one of the solutions fail, we remove it and backtrack to find another solution.</p> <p>In other words, a backtracking algorithm solves a subproblem, and if it fails to solve the problem, it undoes the last step and starts again to find the solution to the problem.</p> <p>For example Sudoku solver or N-Queen Problems can be solved with backtracking algorithms.</p>","tags":["computerscience","datascience","algorithms","types"]},{"location":"computerscience/algorithms/daysofalgo/index.html","title":"Algorithms","text":"<p>The full jupyterbok website can be seen here: Days of Algo</p> <p>In any case to enlarge the Jupyterbook just press <code>B</code> on your keyboard.</p>","tags":["computerscience","datascience","algorithms","days of algo"]},{"location":"computerscience/algorithms/daysofalgo/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["computerscience","datascience","algorithms","days of algo"]},{"location":"computerscience/codes/index.html","title":"Codes","text":"","tags":["computerscience","codes"]},{"location":"computerscience/codes/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["computerscience","codes"]},{"location":"computerscience/codes/ascii.html","title":"ASCII Code","text":"<p>ASCII abbreviated from American Standard Code for Information Interchange, is a character encoding standard for electronic communication. ASCII was developed from telegraph code. Its first commercial use was as a seven-bit teleprinter code promoted by Bell data services.</p>","tags":["computerscience","datascience","codes","ascii"]},{"location":"computerscience/codes/ascii.html#7-bit-ascii","title":"7-Bit ASCII","text":"<pre><code>+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n|    \\ MSB || 0                   | 1                    | 2     | 3   | 4   | 5   | 6   | 7      |\n| LSB \\    || 000                 | 001                  | 010   | 011 | 100 | 101 | 110 | 111    |\n+==========+======================+======================+=======+=====+=====+=====+=====+========+\n| 0   0000 || NUL                 | DLE                  | SP    | 0   | @   | P   | `   | p      |\n|          || null                | data link escape     | space |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 1   0001 || SOH                 | DC1                  | !     | 1   | A   | Q   | a   | q      |\n|          || start of heading    | device control 1     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 2   0010 || STX                 | DC2                  | \"     | 2   | B   | R   | b   | r      |\n|          || start of text       | device control 2     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 3   0011 || ETX                 | DC3                  | #     | 3   | C   | S   | c   | s      |\n|          || end of text         | device control 3     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 4   0100 || EOT                 | DC4                  | $     | 4   | D   | T   | d   | t      |\n|          || end of transmission | device control 4     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 5   0101 || ENQ                 | NAK                  | %     | 5   | E   | U   | e   | u      |\n|          || enquiry             | negative acknowledge |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 6   0110 || ACK                 | SYN                  | &amp;     | 6   | F   | V   | f   | v      |\n|          || acknowledge         | synchronous idle     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 7   0111 || BEL                 | ETB                  | \u00b4     | 7   | G   | W   | g   | w      |\n|          || bell                | end of trans. block  |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 8   1000 || BS                  | CAN                  | (     | 8   | H   | X   | h   | x      |\n|          || backspace           | cancel               |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| 9   1001 || HT                  | EM                   | )     | 9   | I   | Y   | i   | y      |\n|          || horizontal tab      | end of medium        |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| A   1010 || LF                  | SUB                  | *     | :   | J   | Z   | j   | z      |\n|          || line feed           | substitute           |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| B   1011 || VT                  | ESC                  | +     | ;   | K   | [   | k   | {      |\n|          || vertical tab        | escape               |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| C   1100 || FF                  | FS                   | ,     | &lt;   | L   | \\   | l   | |      |\n|          || feed form           | file separator       |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| D   1101 || CR                  | GS                   | -     | =   | M   | ]   | m   | }      |\n|          || carriage return     | group separator      |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| E   1110 || SO                  | RS                   | .     | &gt;   | N   | ^   | n   | ~      |\n|          || shift out           | record separator     |       |     |     |     |     |        |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n| F   1111 || SI                  | US                   | /     | ?   | O   | _   | o   | DEL    |\n|          || shift in            | unit sepeartor       |       |     |     |     |     | delete |\n+----------++---------------------+----------------------+-------+-----+-----+-----+-----+--------+\n</code></pre>","tags":["computerscience","datascience","codes","ascii"]},{"location":"computerscience/codes/ascii.html#8-bit-ascii-extended","title":"8-Bit ASCII (extended)","text":"<pre><code>+-----+-----+------+----------------------++-----+-----+--------+-------++-----+-----+--------+-------++-----+-----+--------+-------+\n| Dec | Hex | Char | Description          || Dec | Hex |  HTML  | Char  || Dec | Hex |  HTML  | Char  || Dec | Hex |  HTML  | Char  |\n+=====+=====+======+======================++=====+=====+========+=======++=====+=====+========+=======++=====+=====+========+=======+\n|   0 |  00 |  NUL | null                 ||  32 |  20 |  &amp;#32; | Space ||  64 |  40 |  &amp;#64; |   @   ||  96 |  60 |  &amp;#96; |   '   |\n|   1 |  01 |  SOH | start of heading     ||  33 |  21 |  &amp;#33; |   !   ||  65 |  41 |  &amp;#65; |   A   ||  97 |  61 |  &amp;#97; |   a   |\n|   2 |  02 |  STX | start of text        ||  34 |  22 |  &amp;#34; |   \"   ||  66 |  42 |  &amp;#66; |   B   ||  98 |  62 |  &amp;#98; |   b   |\n|   3 |  03 |  ETX | end of text          ||  35 |  23 |  &amp;#35; |   #   ||  67 |  43 |  &amp;#67; |   C   ||  99 |  63 |  &amp;#99; |   c   |\n|   4 |  04 |  EOT | end of transmission  ||  36 |  24 |  &amp;#36; |   $   ||  68 |  44 |  &amp;#68; |   D   || 100 |  64 | &amp;#100; |   d   |\n|   5 |  05 |  ENQ | enquiry              ||  37 |  25 |  &amp;#37; |   %   ||  69 |  45 |  &amp;#69; |   E   || 101 |  65 | &amp;#101; |   e   |\n|   6 |  06 |  ACK | acknowledge          ||  38 |  26 |  &amp;#38; |   &amp;   ||  70 |  46 |  &amp;#70; |   F   || 102 |  66 | &amp;#102; |   f   |\n|   7 |  07 |  BEL | bell                 ||  39 |  27 |  &amp;#39; |   '   ||  71 |  47 |  &amp;#71; |   G   || 103 |  67 | &amp;#103; |   g   |\n|   8 |  08 |   BS | backspace            ||  40 |  28 |  &amp;#40; |   (   ||  72 |  48 |  &amp;#72; |   H   || 104 |  68 | &amp;#104; |   h   |\n|   9 |  09 |  TAB | horizontal tab       ||  41 |  29 |  &amp;#41; |   )   ||  73 |  49 |  &amp;#73; |   I   || 105 |  69 | &amp;#105; |   i   |\n|  10 |  0A |   LF | line feed            ||  42 |  2A |  &amp;#42; |   *   ||  74 |  4A |  &amp;#74; |   J   || 106 |  6A | &amp;#106; |   j   |\n|  11 |  0B |   VT | vertical tab         ||  43 |  2B |  &amp;#43; |   +   ||  75 |  4B |  &amp;#75; |   K   || 107 |  6B | &amp;#107; |   k   |\n|  12 |  0C |   FF | form feed, new page  ||  44 |  2C |  &amp;#44; |   ,   ||  76 |  4C |  &amp;#76; |   L   || 108 |  6C | &amp;#108; |   l   |\n|  13 |  0D |   CR | carriage return      ||  45 |  2D |  &amp;#45; |   -   ||  77 |  4D |  &amp;#77; |   M   || 109 |  6D | &amp;#109; |   m   |\n|  14 |  0E |   SO | shift out            ||  46 |  2E |  &amp;#46; |   .   ||  78 |  4E |  &amp;#78; |   N   || 110 |  6E | &amp;#110; |   n   |\n|  15 |  0F |   SI | shift in             ||  47 |  2F |  &amp;#47; |   /   ||  79 |  4F |  &amp;#79; |   O   || 111 |  6F | &amp;#111; |   o   |\n|  16 |  10 |  DLE | data link escape     ||  48 |  30 |  &amp;#48; |   0   ||  80 |  50 |  &amp;#80; |   P   || 112 |  70 | &amp;#112; |   p   |\n|  17 |  11 |  DC1 | device control 1     ||  49 |  31 |  &amp;#49; |   1   ||  81 |  51 |  &amp;#81; |   Q   || 113 |  71 | &amp;#113; |   q   |\n|  18 |  12 |  DC2 | device control 2     ||  50 |  32 |  &amp;#50; |   2   ||  82 |  52 |  &amp;#82; |   R   || 114 |  72 | &amp;#114; |   r   |\n|  19 |  13 |  DC3 | device control 3     ||  51 |  33 |  &amp;#51; |   3   ||  83 |  53 |  &amp;#83; |   S   || 115 |  73 | &amp;#115; |   s   |\n|  20 |  14 |  DC4 | device control 4     ||  52 |  34 |  &amp;#52; |   4   ||  84 |  54 |  &amp;#84; |   T   || 116 |  74 | &amp;#116; |   t   |\n|  21 |  15 |  NAK | negative acknowledge ||  53 |  35 |  &amp;#53; |   5   ||  85 |  55 |  &amp;#85; |   U   || 117 |  75 | &amp;#117; |   u   |\n|  22 |  16 |  SYN | synchronous idle     ||  54 |  36 |  &amp;#54; |   6   ||  86 |  56 |  &amp;#86; |   V   || 118 |  76 | &amp;#118; |   v   |\n|  23 |  17 |  ETB | end of trans. block  ||  55 |  37 |  &amp;#55; |   7   ||  87 |  57 |  &amp;#87; |   W   || 119 |  77 | &amp;#119; |   w   |\n|  24 |  18 |  CAN | cancel               ||  56 |  38 |  &amp;#56; |   8   ||  88 |  58 |  &amp;#88; |   X   || 120 |  78 | &amp;#120; |   x   |\n|  25 |  19 |   EM | end of medium        ||  57 |  39 |  &amp;#57; |   9   ||  89 |  59 |  &amp;#89; |   Y   || 121 |  79 | &amp;#121; |   y   |\n|  26 |  1A |  SUB | substitute           ||  58 |  3A |  &amp;#58; |   :   ||  90 |  5A |  &amp;#90; |   Z   || 122 |  7A | &amp;#122; |   z   |\n|  27 |  1B |  ESC | escape               ||  59 |  3B |  &amp;#59; |   ;   ||  91 |  5B |  &amp;#91; |   [   || 123 |  7B | &amp;#123; |   {   |\n|  28 |  1C |   FS | file separator       ||  60 |  3C |  &amp;#60; |   &lt;   ||  92 |  5C |  &amp;#92; |   \\   || 124 |  7C | &amp;#124; |   |   |\n|  29 |  1D |   GS | group separator      ||  61 |  3D |  &amp;#61; |   =   ||  93 |  5D |  &amp;#93; |   ]   || 125 |  7D | &amp;#125; |   }   |\n|  30 |  1E |   RS | record separator     ||  62 |  3E |  &amp;#62; |   &gt;   ||  94 |  5E |  &amp;#94; |   ^   || 126 |  7E | &amp;#126; |   ~   |\n|  31 |  1F |   US | unit separator       ||  63 |  3F |  &amp;#63; |   ?   ||  95 |  5F |  &amp;#95; |   _   || 127 |  7F | &amp;#127; |  DEL  |\n+-----+-----+------+----------------------++-----+-----+--------+-------++-----+-----+--------+-------++-----+-----+--------+-------+\n</code></pre>","tags":["computerscience","datascience","codes","ascii"]},{"location":"computerscience/codes/braille.html","title":"Braille Code","text":"<p>Louis Braille was born in 1809 in Coupvray, France, just 25 miles east of Paris. His father was a harness maker. At the age of three, an age when young boys shouldn't be playing in their fathers' workshops, he accidentally stuck a pointed tool in his eye. The wound became infected, and the infection spread to his other eye, leaving him totally blind.</p> <p>Valentin Ha\u00fcy (1745--1822), the founder of the Paris school, had invented a system of raised letters on paper that could be read by touch. But this system was very difficult to use, and only a few books had been produced using this method.</p> <p>The origins of an alternative type of code came from an unexpected source. Charles Barbier, a captain of the French army, had by 1819 devised a system of writing he called \u00e9criture nocturne, or \"night writing.\" This system used a pattern of raised dots and dashes on heavy paper and was intended for use by soldiers in passing notes to each other in the dark when quiet was necessary. The soldiers were able to poke these dots and dashes into the back of the paper using an awl-like stylus. The raised dots could then be read with the fingers.</p> <p></p> <p>With 6 possible Dots maximum of \\(2^6=64\\) combinations are possible.</p> <p></p>","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/braille.html#dictionary","title":"Dictionary","text":"<p>Hereafter a unfinished list of the Braille Grade 2 Dictionary</p>","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/braille.html#numbers","title":"Numbers","text":"","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/braille.html#alphabet","title":"Alphabet","text":"","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/braille.html#words","title":"Words","text":"","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/braille.html#sounds","title":"Sounds","text":"","tags":["computerscience","datascience","codes","braille"]},{"location":"computerscience/codes/morse.html","title":"Morse Code","text":"<p>Morse code was invented by Samuel Finley Breese Morse (1791--1872). The code consists of a sequence of Dots and Dashes. There are a couple of rules to follow:</p> <ul> <li>The length of a dot is one unit</li> <li>A dash is three units</li> <li>The space between parts of the same letter is one units</li> <li>The space between letters is three units</li> <li>The space between words os seven units</li> </ul> <p></p> <p>Morse Code is encoded as follows:</p> <p></p> <p>It can be decoded with the help of the decoding tree</p> <p></p> <p>Number of possible codes:</p> Number of Dots and Dashes Number of Codes \\(1\\) \\(2^1=2\\) \\(2\\) \\(2^2=4\\) \\(3\\) \\(2^3=8\\) \\(4\\) \\(2^4=16\\) \\(5\\) \\(2^5=32\\) \\(6\\) \\(2^6=64\\) \\(7\\) \\(2^7=128\\) \\(8\\) \\(2^8=256\\) \\(9\\) \\(2^9=512\\) \\(10\\) \\(2^{10}=1024\\)","tags":["computerscience","codes","morse"]},{"location":"computerscience/codes/morse.html#telegraph","title":"Telegraph","text":"<p>The most famous application of the morse code is for the telegraph communication. Over one wire a non-simultaneous bi-directional communication can be established.</p> <p></p>","tags":["computerscience","codes","morse"]},{"location":"computerscience/codes/number-system.html","title":"Number System","text":"<p>In many number systems the individual digits have a number and a given weight depending on the base of the system. The resulting value can be calculated as follows:</p> \\[A=\\sum_{i=0}^{n-1}a_i*p^i \\qquad \\qquad 0 \\leq a_i\\leq p-1\\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#decimal","title":"Decimal","text":"<p>The decimal number system (also called base-ten) is the standard system for denoting integer and non-integer numbers. The reason why it is so popular is because people have then fingers.</p> <p>Hereafter a list of all numbers used in the decimal system.</p> \\[1\\quad 2\\quad 3\\quad 4\\quad 5\\quad 6\\quad 7\\quad 8\\quad 9\\] <p>A decimal number is calculated as follows:</p> \\[A_{10}=\\sum_{i=0}^{n-1}a_i*10^i \\qquad \\qquad 0 \\leq a_i\\leq 10-1\\] <p>Example:</p> \\[ 2059 = 2*10^3+0*10^2+5*10^1*+9*10^0\\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#calculations","title":"Calculations","text":"+ 0 1 2 3 4 5 6 7 8 9 0 0 1 2 3 4 5 6 7 8 9 1 1 2 3 4 5 6 7 8 9 10 2 2 3 4 5 6 7 8 9 10 11 3 3 4 5 6 7 8 9 10 11 12 4 4 5 6 7 8 9 10 11 12 13 5 5 6 7 8 9 10 11 12 13 14 6 6 7 8 9 10 11 12 13 14 15 7 7 8 9 10 11 12 13 14 15 16 8 8 9 10 11 12 13 14 15 16 17 9 9 10 11 12 13 14 15 16 17 18 * 0 1 2 3 4 5 6 7 8 9 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 3 4 5 6 7 8 9 2 0 2 4 6 8 10 12 14 16 18 3 0 3 6 9 12 15 18 21 24 27 4 0 4 8 12 16 20 24 28 32 36 5 0 5 10 15 20 25 30 35 40 45 6 0 6 12 18 24 30 36 42 48 54 7 0 7 14 21 28 35 42 49 56 63 8 0 8 16 24 32 40 48 56 64 72 9 0 9 18 27 26 45 54 63 72 81","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#roman-numerals","title":"Roman Numerals","text":"<p>Roman numerals are still in use today. It makes it difficult to perform calculation but allows fora compact representaion of numbers.</p> Symbol \\(I\\) \\(V\\) \\(X\\) \\(L\\) \\(C\\) \\(D\\) \\(M\\) Value 1 5 10 50 100 500 1000 <p>The 5-2-rule is:</p> <ul> <li>5 x \\(I\\) = \\(X\\)</li> <li>2 x \\(V\\) = \\(X\\)</li> <li>5 x \\(X\\) = \\(L\\)</li> <li>2 x \\(L\\) = \\(C\\)</li> <li>5 x \\(C\\) = \\(D\\)</li> <li>2 x \\(D\\) = \\(M\\)</li> </ul>","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#additive-and-substractive-notation","title":"Additive and Substractive Notation","text":"<p>If smaller or equal symbols are after, the have to be added</p> \\[ XIII = 10+3 = 13 \\] \\[ VI = 5+1 = 6 \\] \\[ DCCLXXX = 500 + 100 + 100 + 50 + 10 + 10 + 10 = 780 \\] <p>If smaller symbols are before, they have to be substracted</p> \\[ IV = 5-1 = 4 \\] \\[ IX = 10-1 = 9 \\] \\[ XL = 50-10 = 40 \\] \\[ XC = 100-10 = 90 \\] \\[ CD = 500-100 = 400 \\] \\[ CM = 1000-100 = 900 \\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#example","title":"Example","text":"\\[ 2014 = MMXIV = 1000+1000+10+5-1 \\] <p>Figure 1: Roman numerals on a sunclock</p>","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#binary","title":"Binary","text":"<p>Can be represented with \\(0b(number)\\) or \\((number)_2\\)</p> <p>Hereafter a list of all numbers used in the decimal system.</p> \\[ 0\\quad 1 \\] <p>The are certain important terms:</p> <ul> <li>MSB - Most Significant Bit - The number with the biggest weight</li> <li>LSB - Least Significant Bit - The number with the lowest weight</li> <li>Nibble - Pack of 4 bits = 1 nibble</li> <li>Byte - Pack of 8 bits = 1 byte</li> </ul> <p>Figure 2: binary representation</p> <p>Figure 3: binary representation</p> <p>Figure 4: binary representation</p> \\[ A_{2}=\\sum_{i=0}^{n-1}a_i*2^i \\qquad \\qquad 0 \\leq a_i\\leq 2-1 \\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#octal","title":"Octal","text":"<p>Can be represented with \\(0o(number)\\) or \\((number)_2\\).</p> <p>Hereafter a list of all numbers used in the decimal system.</p> \\[ 0\\quad 1\\quad 2\\quad 3\\quad 4\\quad 5\\quad 6\\quad 7 \\] \\[ A_{8}=\\sum_{i=0}^{n-1}a_i*8^i \\qquad \\qquad 0 \\leq a_i\\leq 8-1 \\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#hexadecimal","title":"Hexadecimal","text":"<p>Can be represented with \\(0x(number)\\) or \\((number)_{16}\\).</p> <p>Hereafter a list of all numbers used in the decimal system.</p> \\[ 0 \\quad 1 \\quad 2 \\quad 3 \\quad 4 \\quad 5 \\quad 6 \\quad 7 \\quad 8 \\quad 9 \\quad A \\quad B \\quad C \\quad D \\quad E \\quad F \\] <p>4 binary numbers ccorrespond directly to one hexadecimal number. This is very practical to shorten the number while maintaining the same information.</p> \\[ A_{16}=\\sum_{i=0}^{n-1}a_i*16^i \\qquad \\qquad 0 \\leq a_i \\leq 16-1 \\]","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/codes/number-system.html#conversion","title":"Conversion","text":"Decimal Roman Binary Octal Hexadecimal \\(0\\) - \\(0x0\\) \\(0o0\\) \\(0b0000\\) \\(1\\) \\(I\\) \\(0x1\\) \\(0o1\\) \\(0b0001\\) \\(2\\) \\(II\\) \\(0x2\\) \\(0o2\\) \\(0b0010\\) \\(3\\) \\(III\\) \\(0x3\\) \\(0o3\\) \\(0b0011\\) \\(4\\) \\(IV\\) \\(0x4\\) \\(0o4\\) \\(0b0100\\) \\(5\\) \\(V\\) \\(0x5\\) \\(0o5\\) \\(0b0101\\) \\(6\\) \\(VI\\) \\(0x6\\) \\(0o6\\) \\(0b0110\\) \\(7\\) \\(VII\\) \\(0x7\\) \\(0o7\\) \\(0b0111\\) \\(8\\) \\(VIII\\) \\(0x8\\) \\(0o10\\) \\(0b1000\\) \\(9\\) \\(IX\\) \\(0x9\\) \\(0o11\\) \\(0b1001\\) \\(10\\) \\(X\\) \\(0xA\\) \\(0o12\\) \\(0b1010\\) \\(11\\) \\(XI\\) \\(0xB\\) \\(0o13\\) \\(0b1011\\) \\(12\\) \\(XII\\) \\(0xC\\) \\(0o14\\) \\(0b1100\\) \\(13\\) \\(XIII\\) \\(0xD\\) \\(0o15\\) \\(0b1101\\) \\(14\\) \\(XIV\\) \\(0xE\\) \\(0o16\\) \\(0b1110\\) \\(15\\) \\(XV\\) \\(0xF\\) \\(0o17\\) \\(0b1111\\)","tags":["computerscience","codes","number system","binary","hexadecimal","octal","roman","decimal"]},{"location":"computerscience/datascience/index.html","title":"Datascience","text":"","tags":["computerscience","datascience"]},{"location":"computerscience/datascience/index.html#additional-information","title":"Additional Information","text":"<ul> <li>Data Acadamia</li> <li>Becoming Human</li> </ul>","tags":["computerscience","datascience"]},{"location":"computerscience/datascience/index.html#data-sources","title":"Data Sources","text":"Name Logo Reach OpenData.swiss Swiss SBB Data Swiss Post Data Swiss EU Data Portal European EU Open Data Portal European Kaggle World Statista World","tags":["computerscience","datascience"]},{"location":"computerscience/datascience/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["computerscience","datascience"]},{"location":"computerscience/datascience/statistic.html","title":"Statistical Techniques","text":"<p>See also: Medium Article 10 Statistical Techniques Data Scientist need to Master</p>","tags":["computerscience","datascience","statistics"]},{"location":"computerscience/datascience/statistic.html#overview","title":"Overview","text":"Technique Image Linear Regression Classification Clustering Resampling Subset Selection Shrinkage Dimension Reduction Nonlinear Models Tree-Based Methods Support Vector Machines Unsupervised Learning Analysis Problems","tags":["computerscience","datascience","statistics"]},{"location":"computerscience/sdr/index.html","title":"Software Defined Radio (SDR)","text":"<p>This theorie can be used in combination with the RTL-SDR Receiver and the SDR++ Software.</p> <p>SDR is the abbreviation for Software Defined Radio. This means a radio \u2013 receiver, transmitter or transceiver \u2013 whose characteristics are determined by software. Certain sub-functions that used to be realized in hard-wired circuits are now handled on special, appropriately programmed hardware \u2013 DSPs, digital signal processors. And these can be reprogrammed to turn an FM demodulator into an SSB demodulator, a low-pass filter, a spectrum analyser or a combination of these, as required. In this way, an entire frequency band can also be stored digitally and played back later, just the same way as listening live.</p> <p>Check out also The ultimate SDR Guide.</p> <p></p>","tags":["computer science","sdr","software defined radio"]},{"location":"computerscience/sdr/index.html#frequency-bands","title":"Frequency Bands","text":"<p>On the frequency band exploidable by common SDR are mentioned. See Radio Spectrum for more informations</p> Band Full Name Frequewncy Wavelength Usage VLF Very Low Frequency \\(3KHz - 30KHz\\) \\(100km - 10km\\) Navigation, [time signals])(https://en.wikipedia.org/wiki/Radio_clock), communication with submarines, landline telephony, wireless heart rate monitors, geophysics LF Low Frequency \\(300KHz - 3MHz\\) \\(10km - 1km\\) Navigation, [time signals])(https://en.wikipedia.org/wiki/Radio_clock), AM longwave broadcasting, RFID, amateur radio or ham radio MF Medium Frequency \\(300KHz - 3MHz\\) \\(1000m - 100m\\) AM broadcasts, amateur radio or ham radio, avalanche beacons, MRI, PET-Scan HF High Frequency \\(3MHz - 30MHz\\) \\(100m - 10m\\) Shortwave broadcasts, CB-Radio, amateur radio or ham radio, OTH Radar, RFID, ALE. NVIS, CT scan, MRI, PET-Scan, ultrasound VHF Very High Frequency \\(30MHz - 300MHz\\) \\(10m - 1m\\) FM broadcasts, TV-broadcasts, ATC ground-to-aircraft and aircraft-to-aircraft, amateur radio or ham radio, CT scan, MRI, PET-Scan, ultrasound UHF Ultra High Frequency \\(300MHz - 3GHz\\) \\(100cm - 10cm\\) Microwave Oven, Radio Astronomy, Mobile Phones, WLAN, Bluethoot, Zigbee, GPS, FRS Radio, GMRS Radio, Sattelite Phone L and S-Band <p></p>","tags":["computer science","sdr","software defined radio"]},{"location":"computerscience/sdr/index.html#swiss-frequency-allocation-plan","title":"Swiss Frequency Allocation Plan","text":"<p>National Frequency Allocation Plan or get the PDF directly</p>","tags":["computer science","sdr","software defined radio"]},{"location":"computerscience/sdr/index.html#observable","title":"Observable","text":"","tags":["computer science","sdr","software defined radio"]},{"location":"computerscience/sdr/index.html#interesting-bands","title":"Interesting Bands","text":"Name Band Frequency Range Description LW (Long Wave) VLF (Very Low Frequency) 148.5 - 283.5 kHz AM\u00a0Radio Spectrum MW (Medium Wave) LF (Low Frequency) 285kHz - 1.7MHz AM &amp; FM Radio Stations SW (Short Wave) HF (High Frequency) 1.7MHz - 30MHz International Broadcasts VHF VHF (Very High Frequency) 30MHz - 300MHz FM Radio, TV, Air Traffic Control UHF UHF (Ultra High Frequency) 300MHz - 3GHz TV, Mobile Phones, GPS","tags":["computer science","sdr","software defined radio"]},{"location":"computerscience/sdr/index.html#interesting-frequencies","title":"Interesting Frequencies","text":"Name Frequency Type Description LW (Long Wave) AM\u00a0Radio Spectrum MW (Medium Wave) AM &amp; FM Radio Stations SW (Short Wave) International Broadcasts VHF FM Radio, TV, Air Traffic Control UHF TV, Mobile Phones, GPS","tags":["computer science","sdr","software defined radio"]},{"location":"hw/index.html","title":"Hardware","text":"","tags":["hardware","hw"]},{"location":"hw/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["hardware","hw"]},{"location":"hw/3d-printing/index.html","title":"3D-Printing","text":"<p>The informations here are related to the Bambu Lab P1S with AMS Pro 2.</p>","tags":["hardware","hw","3d-printing"]},{"location":"hw/3d-printing/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["hardware","hw","3d-printing"]},{"location":"hw/3d-printing/filaments.html","title":"Filaments","text":"<p>Each material has unique properties, print requirements, and ideal use cases. Choosing the right filament depends on the desired strength, flexibility, heat/UV resistance, and the printing difficulty you\u2019re prepared to handle. Below we a list of the common materials \u2013 <code>PLA</code>, <code>PETG</code>, <code>PC</code>, <code>ASA</code>, <code>ABS</code>, <code>TPU</code>, and <code>Nylon</code> \u2013 and compare their characteristics.</p>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#summary","title":"Summary","text":"Material Heat Resistance UV Resistance Print Difficulty Use Cases Nozzle Temp Bed Temp Humidity (%) Tensile Strength (MPa) Flexibility / Impact Strength (kJ/m\u00b2) PLA \\(\\sim 50\u201360 \u00b0C\\) Poor (degrades in sun) Easiest Visual prototypes, toys, cases (not for high heat) \\(190\u2013220 \u00b0C\\) \\(0\u201360 \u00b0C\\) &lt;50% (drying optional, absorbs slowly) \\(\\sim 60 MPa\\) Low PETG \\(\\sim 75 \u00b0C\\) Fair (better than PLA, can discolor) Easy/Medium (stringing) Functional parts, containers, moderately stressed parts \\(220\u2013250 \u00b0C\\) \\(60\u201380 \u00b0C\\) &lt;40% (drying recommended) \\(\\sim 50 MPa\\) Medium \u2013 better XY than PLA ABS \\(\\sim 100 \u00b0C\\) Poor (UV causes brittleness) Hard (needs enclosure, warps) Durable parts, automotive interior, tool housings \\(230\u2013250 \u00b0C\\) \\(95\u2013110 \u00b0C\\) &lt;50% (drying optional) \\(\\sim 35\u201340 MPa\\) Medium \u2013 good in XY, weak in Z ASA \\(\\sim 100 \u00b0C\\) Excellent (UV stable) Hard (enclosure, less warp than ABS) Outdoor parts, automotive, functional prototypes \\(240\u2013260 \u00b0C\\) \\(90\u2013110 \u00b0C\\) &lt;40-50% (drying optional) \\(\\sim 30\u201345 MPa\\) High \u2013 tough, XY &gt; ABS PC \\(\\sim 115\u2013130 \u00b0C\\) Moderate (can yellow with UV) Very Hard (high temp, warps, dry needed) High-strength parts, high-temp jigs, engineering prototypes \\(260\u2013310 \u00b0C\\) \\(90\u2013110 \u00b0C\\) &lt;20% (drying requried) \\(\\sim 70 MPa\\) Very High \u2013 extremely tough Nylon \\(\\sim 100 \u00b0C\\) Poor\u2013Fair (UV-degrades unless stabilized) Very Hard (must stay dry, warps) Gears, hinges, wear parts, high-strength functional parts \\(240\u2013270 \u00b0C\\) \\(60\u201390 \u00b0C\\) &lt;15% (drying requried) \\(\\sim 50 MPa\\) High \u2013 tough &amp; ductile TPU (95A) \\(\\sim 60\u201380 \u00b0C\\) Varies (most not UV-stable) Medium (slow feed, stringy) Flexible parts: seals, bumpers, phone cases, belts \\(210\u2013240 \u00b0C\\) \\(30\u201360 \u00b0C\\) &lt;30% (drying recommended) \\(\\sim 25 MPa\\) Very High (rubbery, won\u2019t break)","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#pla-polylactic-acid","title":"<code>PLA</code> (Polylactic Acid)","text":"<p><code>PLA</code> is the most popular beginner filament. It\u2019s easy to print and made from corn starch or sugarcane, making it relatively eco-friendly (biodegradable under industrial composting). It prints at low temperatures without needing a heated enclosure. <code>PLA</code> offers high rigidity and tensile strength (around \\(50\u201365MPa\\)), so parts can be quite strong in a static sense. However, <code>PLA</code> is brittle and has poor impact resistance \u2013 it tends to crack or shatter under shock or flexing. It also has low heat resistance, deforming around \\(\\sim 60\u00b0C\\). <code>PLA</code> is not suitable for high-heat or long-term outdoor use: it will soften in a hot car and embrittle with UV exposure.</p> <ul> <li>Print temp: \\(\\sim 200\u00b0C\\) (typically \\(190\u2013220\u00b0C\\)).</li> <li>Bed temp: \\(\\sim 50\u201360\u00b0C\\) (some use an unheated bed with tape or glue).</li> <li>Difficulty*: Very easy \u2013 excellent flow and low warp, <code>PLA</code> is often \u201cplug and play\u201d. Bed adhesion is generally good on textured or glue-coated beds. Watch out for stringing on higher temps or cheap <code>PLA</code>.</li> <li>Use cases: Great for prototypes, cosmetic models, toys, and basic household parts. Ideal when you need good dimensional accuracy and a nice surface finish, but not for parts under stress or high temperature.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#petg-polyethylene-terephthalate-glycol","title":"<code>PETG</code> (Polyethylene Terephthalate Glycol)","text":"<p><code>PETG</code> is a popular all-rounder that offers a balance between <code>PLA</code> and <code>ABS</code>. It\u2019s less brittle than <code>PLA</code> and more ductile \u2013 <code>PETG</code> parts can flex more before breaking. Tensile strength is comparable to <code>PLA</code> (around 40\u201355\u00a0MPa), but impact strength is slightly better (<code>PETG</code> can absorb a bit more energy before fracturing). <code>PETG</code> has higher heat resistance than <code>PLA</code> (\\(\\sim 70\u201380\u00b0C\\) before softening). It\u2019s also generally hydrophobic and chemically resistant (doesn\u2019t absorb much moisture, and resists acids/alkalis better than <code>PLA</code>).</p> <ul> <li>Print temp: \\(\\sim 230\u00b0C\\) (usually in \\(220\u2013250\u00b0C\\) range).</li> <li>Bed temp: \\(\\sim 70\u00b0C\\) (\\(60\u201385\u00b0C\\) range). A heated bed is recommended to prevent warping. <code>PETG</code> can fuse strongly to bare PEI bed sheets, so using a layer of glue stick as a release agent is common.</li> <li>Difficulty*: Moderate-Easy. <code>PETG</code> prints with low warp (no enclosure needed) and decent layer adhesion, but it is more stringy than <code>PLA</code>. Print slower and with reduced fan (e.g. 30\u201350%) to avoid stringing and ensure layer bonding.</li> <li>Use cases: Functional parts that need some toughness and heat resistance. <code>PETG</code> is great for mechanical prints, brackets, containers, and outdoor parts that <code>PLA</code> couldn\u2019t handle. It\u2019s often used when <code>PLA</code> is too brittle but <code>ABS</code> is too troublesome \u2013 <code>PETG</code> gives good strength without requiring an enclosure.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#pc-polycarbonate","title":"<code>PC</code> (Polycarbonate)","text":"<p>Polycarbonate is an advanced engineering filament known for its high strength and thermal stability. <code>PC</code> has one of the highest tensile strengths (~70+\u00a0MPa) among common filaments and very high impact toughness \u2013 <code>PC</code> is the material used in bullet-resistant glass and safety goggles. 3D printed <code>PC</code> parts tend to be extremely tough and heat-resistant (glass transition \\(\\sim 150\u00b0C\\), can handle 110\u00b0C$+ without deforming). <code>PC</code> is also somewhat flexible before breaking, giving it good impact performance (though in some 3D printing tests, <code>PC</code> impact strength in XY wasn\u2019t as high as expected, possibly due to print conditions).</p> <ul> <li>Print temp: \\(\\sim 270\u00b0C\\) (typically 260\u2013310\u00b0C$). <code>PC</code> needs high extrusion temperatures to bond layers. A hardened steel nozzle is recommended for higher temps (and required if using glass/carbon fiber <code>PC</code> blends).</li> <li>Bed temp: \\(\\sim 100\u00b0C\\) (80\u2013120\u00b0C$). An enclosure is strongly recommended \u2013 <code>PC</code> warps significantly as it cools. The P1S\u2019s enclosed build chamber will help, but large <code>PC</code> prints may still be challenging. Bed adhesion can be aided by a <code>PC</code>-specific adhesive or using a textured PEI plate.</li> <li>Difficulty*: Hard. <code>PC</code> is one of the most difficult materials to print. It warps and delaminates if not kept hot; it also absorbs moisture quickly (dry it before use). Expect trial and error to get good <code>PC</code> prints. The AMS can handle <code>PC</code> filament, but ensure it\u2019s in a dry box to avoid moisture issues.</li> <li>Use cases: High-strength, high-heat parts. Use <code>PC</code> for functional prototypes, brackets, RC/drone parts, light-duty engine bay parts, or enclosures that might see temperature or impact that would shatter <code>PLA</code>/<code>ABS</code>. <code>PC</code> is overkill for casual prints, but shines in demanding engineering applications. (Note: <code>PC</code> is not UV-stable on its own \u2013 it can yellow or embrittle under UV unless it\u2019s a UV-stabilized blend.)</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#asa-acrylonitrile-styrene-acrylate","title":"<code>ASA</code> (Acrylonitrile Styrene Acrylate)","text":"<p><code>ASA</code> was developed as a UV-resistant alternative to <code>ABS</code>. It has mechanical properties similar to <code>ABS</code> \u2013 moderate-high tensile strength (\\(\\sim 30\u201345MPa\\), similar to <code>ABS</code>) and good impact resistance \u2013 but its key advantage is excellent weather resistance. <code>ASA</code> can handle prolonged UV exposure without significant degradation, making it ideal for outdoor parts. In terms of strength, <code>ASA</code> is often slightly tougher than standard <code>ABS</code> (Prusa\u2019s tests showed <code>ASA</code> to be \u201cby far the most tough\u201d among <code>PLA</code>, <code>PETG</code>, and <code>ASA</code>). However, like <code>ABS</code>, <code>ASA</code>\u2019s layer adhesion can be its weak point if printing conditions are poor \u2013 impact strength in the Z direction is lower, so enclose and cool slowly for strong parts. <code>ASA</code>\u2019s heat resistance is also high (\\(\\sim 100\u00b0C\\), similar to <code>ABS</code>; it can even withstand near-boiling temperatures without losing integrity).</p> <ul> <li>Print temp: \\(\\sim 245\u00b0C\\) (typically 240\u2013260\u00b0C$).</li> <li>Bed temp: \\(\\sim 100\u00b0C\\) (90\u2013110\u00b0C$). An enclosure is required for <code>ASA</code>, just as for <code>ABS</code> \u2013 it prevents warping and cracking.</li> <li>Difficulty*: Moderate-Hard. <code>ASA</code> prints very much like <code>ABS</code>: it can warp and emit fumes (though <code>ASA</code>\u2019s odor is a bit less acrid than <code>ABS</code>). Good bed adhesion (use <code>ABS</code>/<code>ASA</code> slurry or glue stick on PEI) and minimal cooling (often 0\u201320% fan) are needed to prevent cracks. Expect some trial and error, but <code>ASA</code> is slightly less warpy than <code>ABS</code> in practice (better dimensional stability).</li> <li>Use cases: Outdoor and automotive parts. <code>ASA</code>\u2019s UV and weather resistance make it perfect for garden fixtures, outdoor enclosures, automotive trim/clips, drone parts etc. It\u2019s also used for functional prototypes that need strength and durability similar to <code>ABS</code>, with the bonus of surviving sunlight.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#abs-acrylonitrile-butadiene-styrene","title":"<code>ABS</code> (Acrylonitrile Butadiene Styrene)","text":"<p><code>ABS</code> is a classic engineering plastic, known for being used in LEGO bricks and many consumer products. It offers good impact resistance and durability \u2013 <code>ABS</code> parts can withstand drops and wear better than <code>PLA</code> (<code>ABS</code> is not as brittle). Its tensile strength is around \\(30\u201340 MPa\\), a bit lower than <code>PLA</code>\u2019s, but <code>ABS</code> stays much more impact-tough across a range of temperatures. Critically, <code>ABS</code> has a high heat resistance (softening around \\(\\sim 95\u2013105\u00b0C\\)), so it won\u2019t deform in a hot car or under load until much higher temps than <code>PLA</code>/<code>PETG</code>. The downsides: <code>ABS</code> is tricky to print (it warps and shrinks when cooling) and produces noxious fumes (styrene odor). It absolutely requires an enclosure and ventilation.</p> <ul> <li>Print temp: \\(\\sim 240\u00b0C\\) (220\u2013250\u00b0C$ typical).</li> <li>Bed temp: \\(\\sim 100\u00b0C\\). A heated bed and chamber are needed to prevent warping. Use an enclosure (the P1S built-in panels help, though it\u2019s not a heated chamber, it retains some heat). Keeping the chamber \\(\\sim 45\u00b0C\\) or warmer greatly improves layer adhesion.</li> <li>Difficulty*: Hard. <code>ABS</code> can be frustrating: it tends to curl off the bed or crack between layers if cooled too fast. Bed adhesion tricks (<code>ABS</code> juice, Kapton tape, brim) are often needed. Minimal part cooling is recommended (0\u201320%). The AMS can feed <code>ABS</code>, but ensure the filament isn\u2019t exposed to cool drafts. Also, the fumes mean you should operate in a well-ventilated area or use a filtration system.</li> <li>Use cases: Durable functional parts, prototyping, automotive. <code>ABS</code> is chosen for tool housings, machine parts, clips, electrical enclosures \u2013 anything that needs to take some abuse and maybe a bit of heat. If you plan to sand, acetone-vapor smooth, or solvent-weld parts, <code>ABS</code> is great (it dissolves in acetone, allowing post-processing). For purely outdoor use, <code>ASA</code> is generally preferred over <code>ABS</code> (due to <code>ASA</code>\u2019s UV resistance), but <code>ABS</code> is fine for indoor functional prints.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#tpu-thermoplastic-polyurethane-flexible-filament","title":"<code>TPU</code> (Thermoplastic Polyurethane) \u2013 Flexible Filament","text":"<p><code>TPU</code> is a flexible, rubber-like filament. It comes in different hardness levels (e.g. Shore 95A, 90A, 85A, etc. \u2013 lower number = softer). <code>TPU</code> has lower tensile strength (often \\(\\sim 20\u201330 MPa\\), depending on formulation) but extremely high elongation at break (300\u2013500+%). In other words, it\u2019s not used for rigidity or strength, but for elasticity and impact absorption. <code>TPU</code> parts can bend or stretch dramatically without breaking, giving them effectively very high impact toughness (they don\u2019t shatter, they deform). <code>TPU</code> also has good abrasion resistance and tear strength, especially in higher durometer blends. Heat resistance varies by <code>TPU</code> blend but is typically around 80\u00b0C$ (they\u2019ll get soft and rubbery beyond that).</p> <ul> <li>Print temp: \\(\\sim 230\u00b0C\\) (\\(210\u2013250\u00b0C\\) depending on brand/hardness). Softer <code>TPU</code>s (e.g. 85A) might print better a bit cooler/slower to reduce stringing.</li> <li>Bed temp: \\(\\sim 50\u00b0C\\) (often \\(40\u201360\u00b0C\\)). Some <code>TPU</code>s print fine on unheated beds, but a bit of warmth helps adhesion.</li> <li>Difficulty*: Moderate. <code>TPU</code> can be challenging to feed \u2013 it\u2019s soft, so it may buckle in the extruder if print settings aren\u2019t tuned. The Bambu Lab\u2019s direct-drive extruder is a big help (direct-drive handles flexibles better than Bowden setups). To succeed with <code>TPU</code>: print slow (e.g. 30\u201360\u00a0mm/s), with low retraction (2\u00a0mm or less) and minimal part cooling (<code>TPU</code> sticks better layer to layer with little fan). Watch for stringing and oozing; you may need to enable coasting or wipe in slicer settings. Once tuned, <code>TPU</code> prints can be very reliable.</li> <li>Use cases: Flexible parts: phone cases, drone bumpers, gaskets, seals, vibration dampeners, drive belts, tires (for RC cars), and any application where you need rubber-like properties. <code>TPU</code>\u2019s ability to absorb impact makes it great for protective components. Just remember that soft <code>TPU</code> parts won\u2019t hold heavy loads (they\u2019ll flex). Also, flexible filaments can be used for snug-fit enclosures (like snap-on covers) because they can stretch over a part and then hold it tightly.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filaments.html#nylon-polyamide-eg-pa6-pa12","title":"<code>Nylon</code> (Polyamide, e.g. PA6, PA12)","text":"<p><code>Nylon</code> is an engineering-grade filament known for its toughness, flexibility, and wear resistance. It has a wide range of formulations; generally, <code>Nylon</code>\u2019s tensile strength is in the \\(40\u201370 MPa\\) range (so it can be quite strong, especially <code>Nylon</code> 6 which can reach the high end). But more impressive is <code>Nylon</code>\u2019s impact strength and fatigue resistance \u2013 it can absorb a lot of energy and resist cyclic stress without cracking. <code>Nylon</code> parts are semi-flexible (especially thinner sections), which means they tend to bend rather than snap (one source notes \u201c<code>Nylon</code> will take a lot more abuse than <code>ABS</code>\u201d). <code>Nylon</code> is also self-lubricating and great for low-friction applications (gears, bushings). Its heat resistance is good (\\(\\sim \u00a0\u2248100\u00b0C\\) or more depending on type). Importantly, most <code>Nylon</code> filaments are hygroscopic \u2013 they absorb moisture from the air rapidly, which can ruin print quality (wet <code>Nylon</code> pops and foams during printing).</p> <ul> <li>Print temp: \\(\\sim 250\u00b0C\\) (generally \\(240\u2013270\u00b0C\\)). Higher-end nylons (like PA 6) prefer the upper end (\\(\\sim 260+\u00b0C\\)).</li> <li>Bed temp: \\(\\sim 70\u00b0C\\) (\\(60\u201390\u00b0C\\)). An enclosure is recommended because <code>Nylon</code> can warp (less than <code>ABS</code>, but still). Some nylons (especially PA\u00a06) shrink significantly; others like <code>Nylon</code> 12 warp less. Use bed adhesives (glue or specific sheets) because <code>Nylon</code> doesn\u2019t stick well to bare PEI \u2013 Garolite or PA-friendly bed surfaces work best.</li> <li>Difficulty: Hard. <code>Nylon</code> demands careful handling: keep it dry (ideally print from a dry box or the AMS with filament dryer). It will warp, though often a bit less violently than <code>ABS</code>. Layer bonding can be excellent if printed hot enough and kept warm, but if your environment is cool the parts may split. Additionally, dimensional accuracy can suffer (<code>Nylon</code> can shrink 1\u20132% upon cooling). The P1S can print <code>Nylon</code>, especially with the AMS Pro\u2019s humidity control, but be prepared to tweak settings.</li> <li>Use cases: Functional mechanical parts needing toughness or low friction. Examples: gears, hinges, bushings, pulley wheels, tool handles, structural brackets. <code>Nylon</code>\u2019s wear resistance makes it great for parts with sliding contact. It\u2019s also a choice for living hinges or snap-fit parts that must flex repeatedly (though <code>Nylon</code>\u2019s flexibility means it\u2019s not as stiff as <code>PLA</code>/<code>ABS</code>, so it\u2019s not for every application). For any load-bearing part in a tough environment (vibration, impacts, moderate heat), <code>Nylon</code> is often a top choice \u2013 if you can print it properly.</li> </ul>","tags":["hardware","hw","3d-printing","filaments"]},{"location":"hw/3d-printing/filling.html","title":"Structure Filling Patterns (Sparse infill patterns)","text":"<p>Sparse infill is the internal structure of a 3D print that balances strength, weight, flexibility, and print time. The Bambu Lab P1S (with Bambu Studio) supports a wide variety of infill patterns, each optimized for different needs.</p>","tags":["hardware","hw","3d-printing","filling"]},{"location":"hw/3d-printing/filling.html#summary","title":"Summary","text":"Image Pattern Advantages Disadvantages Common Use Cases Gyroid Isotropic, efficient, fast Slightly less rigid than grid General-purpose, flexible parts 3D Honeycomb Very strong in X/Y/Z, aesthetic Slower, more material Strong functional parts Honeycomb Very rigid, classic High material usage Functional parts needing stiffness Tri-Hexagon One of the strongest patterns Slower, high material use Functional load-bearing parts Grid Fast, simple, rigid in XY Less strength in Z Default for prototypes Rectilinear Fast, predictable Weaker diagonally General prints, prototypes Line Fastest, minimal filament Weak in Z, anisotropic Drafts, quick prints Cross Zag Balanced strength, easy removal Slightly slower General-purpose prints Lighting Very low material use for support For support only Support structures Adaptive Cubic Variable density, efficient May create uneven strength Large parts, optimized infill Crosshatch Strong, rigid Harder to remove Structural parts, supports Cubic Isotropic strength Slightly more complex Mechanical parts Support Cubic Minimal support material For support only Support structures Triangles Very rigid in-plane Brittle under shear Brackets, flat parts Aligned Rectilinear Easy print, consistent direction Weaker in cross axis Simple geometries Zigzig Fast, similar to line Weak, decorative Drafts, aesthetic lines Concentric Good flexibility, follows shape Weak structural strength TPU/flexible prints Archimedes Chord Aesthetic spiral Not optimized for strength Decorative objects Octagram Spiral Decorative, aesthetic Not structural Art, vases Hilbert Curve Continuous line, aesthetic Not strong, slow Art pieces, visual infill","tags":["hardware","hw","3d-printing","filling"]},{"location":"hw/3d-printing/filling.html#sparse-infill-percentages","title":"Sparse Infill Percentages","text":"<p>The infill percentage sets how dense the internal structure is, balancing strength, weight, print time, and flexibility.</p> <p>Typical guidelines:</p> Infill % Usage 0\u20135% Hollow parts, vases, pure decoration ~15% (default) Good balance for most prints, prototypes, enclosures 20\u201340% Functional parts, added rigidity 50% Rarely needed \u2014 for very strong or load-bearing parts 100% Maximum strength, solid parts (threads, inserts, machining) <p>Notes:</p> <ul> <li>15% is a great default \u2014 works for ~80% of prints.</li> <li>More than 50% is rarely necessary \u2014 increases weight &amp; time significantly.</li> <li>100% only for parts needing maximum rigidity, post-processing (tapping threads), or machining.</li> <li>Gyroid / Cubic patterns are especially efficient at 15\u201325%.</li> </ul>","tags":["hardware","hw","3d-printing","filling"]},{"location":"hw/3d-printing/joins-tolerances.html","title":"Joins and Tolerances","text":"<p>These informations of the Bambu Lab P1S @ 0.2 mm, mostly PLA/PETG materials.</p>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#general-tolerance-guidelines","title":"General Tolerance Guidelines","text":"Fit Type Clearance (total gap) Notes Press Fit 0\u20130.15 mm Tight, permanent. PETG ~0.15 mm; PLA can go tighter. Chamfer edges. Slip Fit 0.2\u20130.3 mm Snug sliding fit. PETG prefers upper end. Loose Fit 0.4\u20130.6 mm Easy assembly, some play. <p>PLA prints crisper and holds tighter fits; PETG needs slightly more clearance (stringing, flex).</p>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#common-joints","title":"Common Joints","text":"","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#press-fit","title":"Press Fit","text":"<ul> <li>Use: Pegs, bearings, rods.</li> <li>Tips: 0\u20130.15 mm gap. Chamfer edges to ease insertion. PETG flexes; PLA can crack if forced.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#slip-fit","title":"Slip Fit","text":"<ul> <li>Use: Hinges, sliders, rotating parts.</li> <li>Tips: 0.2\u20130.3 mm gap. Clean surfaces. Print moving faces vertical for smoother slide.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#snap-fit","title":"Snap Fit","text":"<ul> <li>Use: Clips, latches.</li> <li>Tips: PETG preferred. Clearance ~0.5 mm between engaging surfaces. Fillet snap base. Print snap arms lying flat (stronger).</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#living-hinge","title":"Living Hinge","text":"<ul> <li>Use: Flip lids, wallets, integrated hinges.</li> <li>Tips: PETG better than PLA. Hinge ~0.5\u20130.8 mm thick. Print hinge vertically for max durability. Expect limited cycles.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#dovetail-slide-fit","title":"Dovetail / Slide Fit","text":"<ul> <li>Use: Modular parts, adjustable joints.</li> <li>Tips: 0.2\u20130.4 mm per side. Chamfer entry. Print sliding faces vertical for smoothness.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#threads","title":"Threads","text":"<ul> <li>Printed Threads: Use for large sizes (M6+). Add ~0.2 mm radial clearance. PLA crisp but brittle; PETG more durable.</li> <li>Inserts/Nuts: Use heat-set inserts or captured nuts for strength. Follow insert datasheet for hole size.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#calibration-testing","title":"Calibration &amp; Testing","text":"<ul> <li>Tolerance Test Models: Print clearance test blocks in your filament (0.1\u20130.6 mm steps).</li> <li>First Layer: Use 0.2 mm chamfer to counteract elephant foot.</li> <li>Orientation: Moving/sliding faces \u2192 print vertical. Snap arms \u2192 print lying flat.</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/joins-tolerances.html#summary","title":"Summary","text":"<ul> <li>Start with 0.2 mm clearance for general fits.</li> <li>PETG: ** +0.05\u20130.1 mm vs PLA** for same joint.</li> <li>Always test small before committing to large assemblies!</li> </ul>","tags":["hardware","hw","3d-printing","joins","tolerances"]},{"location":"hw/3d-printing/slicing.html","title":"Slicing","text":"<p>This guide outlines the most critical slicing parameters in Bambu Studio for Bambu Lab printers like the P1S, X1C, and P1P. It provides practical recommendations to help you achieve optimal print quality, strength, and efficiency.</p>","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/3d-printing/slicing.html#key-slicing-categories","title":"Key Slicing Categories","text":"<p>Bambu Studio organizes slicing settings into three main categories:</p> <ul> <li>Printer Presets: Hardware-specific settings (e.g., build volume, nozzle size).</li> <li>Filament Presets: Material-specific settings (e.g., temperatures, cooling).</li> <li>Process Presets: Print-specific settings (e.g., layer height, infill, supports).</li> </ul> <p>You can customize and save presets for each category to streamline your workflow.</p>","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/3d-printing/slicing.html#commonly-adjusted-parameters","title":"Commonly Adjusted Parameters","text":"Category Parameter Recommended Setting Notes Quality Layer Height 0.2 mm (standard), 0.1 mm (high detail) Lower values yield finer details but increase print time. Quality Wall Loops 2\u20133 More walls enhance strength; 1 wall may suffice for transparent prints. Strength Infill Density 15% (default), 30\u201340% (functional parts) Higher infill increases strength and weight. Strength Infill Pattern Grid (default), Gyroid, etc. Gyroid offers isotropic strength; Grid is faster but less strong in Z-axis. Strength Top/Bottom Layers 4\u20136 Ensures solid surfaces; more layers improve strength. Speed Print Speed 50\u2013100 mm/s Balance between speed and quality; adjust based on material and model. Support Enable Supports As needed Use for overhangs exceeding 45\u00b0; Tree supports for complex geometries. Support Support Density 15\u201325% Higher density provides better support but is harder to remove. Adhesion Brim 5\u20138 lines (for small contact areas) Helps with bed adhesion; not always necessary. Adhesion Raft Use sparingly Increases material usage; use for models with poor bed adhesion. Others Ironing Enabled for top surfaces Improves top layer smoothness; increases print time. Others Seam Position Rear or Aligned Controls where layer seams appear; affects aesthetics.","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/3d-printing/slicing.html#recommended-presets","title":"Recommended Presets","text":"<p>Bambu Studio offers several built-in process presets:</p> <ul> <li>0.20mm Standard: Balanced quality and speed; suitable for most prints.</li> <li>0.10mm High Quality: Enhanced detail; longer print times.</li> <li>0.28mm Draft: Faster prints; reduced detail.</li> <li>Strength: Increased wall loops and infill for robust parts.</li> <li>Support: Optimized settings for models requiring supports.</li> </ul> <p>Select the preset that best matches your print's requirements.</p>","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/3d-printing/slicing.html#tips-for-optimal-results","title":"Tips for Optimal Results","text":"<ul> <li>Use Modifiers: Apply different settings to specific model regions (e.g., higher infill in stress areas).</li> <li>Preview Before Printing: Always check the sliced model in preview mode to identify potential issues.</li> <li>Maintain Your Printer: Regularly calibrate and maintain your printer for consistent results.</li> <li>Material Considerations: Adjust settings based on filament type (e.g., PETG may require slower speeds than PLA).</li> <li>Experiment and Iterate: Don't hesitate to tweak settings and test to find what works best for your specific models.</li> </ul>","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/3d-printing/slicing.html#additional-resources","title":"Additional Resources","text":"<ul> <li>Bambu Lab Wiki: Slicing Parameters Guide</li> <li>Bambu Lab Wiki: Slicing Parameter Table</li> </ul>","tags":["hardware","hw","3d-printing","slicing","bambu studio"]},{"location":"hw/communication/index.html","title":"Communmication Protocols","text":"","tags":["hardware","hw","communication","protocols"]},{"location":"hw/communication/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["hardware","hw","communication","protocols"]},{"location":"hw/communication/i2c/index.html","title":"I2C Protocol","text":"","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/i2c/index.html#introduction","title":"Introduction","text":"<p>\\(I^2C\\) (Inter-Inter Circuit) is a serial communication protocol that allows multiple devices to communicate with each other using only two wires. It was developed by Philips in the 1980s and is widely used in embedded systems.</p> <p>There are variants Single Master and Multi-Master. In the Single Master configuration, only one device can be the master and initiate communication. In the Multi-Master configuration, multiple devices can be masters and initiate communication.</p> <p>SDA (Serial Data) transmits the data and SCL (Serial Clock) is the common clock signal. In the example below, there are 2 master blocks that can initiate communication. They can send data from the buses <code>DataIn_1</code> and <code>DataIn_2</code> or receive data from SDA and forward it on the buses <code>DataOut_1</code> and <code>DataOut_2</code>. The circuit also includes 2 slave blocks. Slave 1 has the \\(I^2C\\) address of <code>0x30</code> and provides the data of an acceleration sensor (<code>SensorDataIn</code>). Slave 2 receives data and controls a motor (<code>ActuatorDataOut</code>), which has the \\(I^2C\\) address of <code>0x10</code>.</p> <p></p> <p>Like SPI, I2C is synchronous, so the output of bits is synchronized to the sampling of bits by a clock signal shared between the master and the slave. The clock signal is always controlled by the master. and unlimited number of Master and maximum of 1008 slaves.</p> Mode Speed Standard 100 kbit/s Fast 400 kbit/s Fast Plus 1 Mbit/s High Speed 3.4 Mbit/s Ultra Fast 5 Mbit/s","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/i2c/index.html#protocol","title":"Protocol","text":"<p>The address and data are transmitted on the signal SDA as big endian (MSb first). At the beginning, the master sends a start bit as well as the address and the bit \\(Rd/\\overline{Wr}\\) which indicates whether data is read or written (<code>Read = '1'</code>). The slave must confirm this with an <code>ACK</code> (<code>Ack = '0'</code>). Then the data is transmitted. These can come from a master or slave. The other side must confirm this with a new <code>ACK</code>. At the end, the stop bit indicates the end of the communication.</p> <p></p>","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/i2c/index.html#advantages","title":"Advantages","text":"<ul> <li>Only uses two wires</li> <li>Supports multiple masters and multiple slaves</li> <li>ACK/NACK bit gives confirmation that each frame is transferred successfully</li> <li>Hardware is less complicated than with UARTs</li> <li>Well known and widely used protocol</li> </ul>","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/i2c/index.html#disadvantages","title":"Disadvantages","text":"<ul> <li>Slower data transfer rate than SPI</li> <li>The size of the data frame is limited to 8 bits</li> <li>More complicated hardware needed to implement than SPI</li> </ul>","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/i2c/index.html#references","title":"References","text":"<ul> <li>I2C Bus Specification</li> <li>I2C Bus Specification (Online)</li> <li>I2C Wikipedia</li> </ul>","tags":["hardware","communication","protocol","i2c"]},{"location":"hw/communication/modbus/index.html","title":"Modbus Protocol","text":"<p>Danger</p> <p>This page is under construction.</p>","tags":["hardware","communication","protocol","modbus"]},{"location":"hw/communication/spi/index.html","title":"SPI Protocol","text":"<p>Danger</p> <p>This page is under construction.</p>","tags":["hardware","communication","protocol","spi"]},{"location":"hw/communication/uart/index.html","title":"UART Protocol","text":"<p>Danger</p> <p>This page is under construction.</p> <p></p> <p></p> <p> </p>","tags":["hardware","communication","protocol","uart"]},{"location":"hw/esp32-c3/index.html","title":"ESP32-C3","text":"<p>This page is specifically about the ESP32-C3-DevKit-Rust Hardware.</p> <p>This board is based on the ESP32-C3, and includes sensors, LEDs, buttons, a battery charger, and USB type-C connector.</p> <p></p>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#soc-features","title":"SoC Features","text":"<ul> <li>IEEE 802.11 b/g/n-compliant</li> <li>Bluetooth 5, Bluetooth mesh</li> <li>32-bit RISC-V single-core processor, up to 160MHz</li> <li>384 KB ROM</li> <li>400 KB SRAM (16 KB for cache)</li> <li>8 KB SRAM in RTC</li> <li>22 \u00d7 programmable GPIOs</li> <li>3 \u00d7 SPI</li> <li>2 \u00d7 UART</li> <li>1 \u00d7 I2C</li> <li>1 \u00d7 I2S</li> <li>2 \u00d7 54-bit general-purpose timers</li> <li>3 \u00d7 watchdog timers</li> <li>1 \u00d7 52-bit system timer</li> <li>Remote Control Peripheral (RMT)</li> <li>LED PWM controller (LEDC)</li> <li>Full-speed USB Serial/JTAG controller</li> <li>General DMA controller (GDMA)</li> <li>1 \u00d7 TWAI</li> <li>2 \u00d7 12-bit SAR ADCs, up to 6 channels</li> <li>1 \u00d7 temperature sensor</li> </ul>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#documents","title":"Documents","text":"<ul> <li>ESP32-C3 - A Comprehensive guide to IoT</li> <li>ESP32-C3 Datasheet</li> <li>ESP-RS Schematic</li> <li>ESP-RS Assembly</li> <li>TDK 6 Axis MEMS Sensor ICM 42670</li> <li>Sensirion Humidity and Temperature Sensor SHTC3</li> </ul>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#links","title":"Links","text":"<ul> <li>Espressif ESP32-C3 - Product page</li> <li>Espressive ESP32-C3-DevKit-Rust</li> </ul> <p>\u0010## Board</p>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#peripherals","title":"Peripherals","text":"","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#pin-layout","title":"Pin Layout","text":"<p>Figure 1: Pin Layout</p> Left Description Left SoC Pin  Number Right Description Right SoC Reset <code>EN</code>/<code>CHIP_PU</code> 1 VBAT 3V3 2 EN [1] N/C 3 VBUS [2] GND 4 NC IO0/ADC1-0 <code>GPIO0</code> 5 NC IO1/ADC1-1 <code>GPIO1</code> 6 NC IO2/ADC1-2 <code>GPIO2</code> 7 NC IO3/ADC1-3 <code>GPIO3</code> 8 NC IO4/ADC2-0 <code>GPIO4</code> 9 IO18/USB_D- <code>GPIO18</code> IO5/ADC2-1 <code>GPIO5</code> 10 IO19/USB_D+ <code>GPIO19</code> IO6/MTCK <code>GPIO6</code> 11 IO8/SCL <code>GPIO8</code> IO7/MTDO/LED <code>GPIO7</code> 12 IO10/SDA <code>GPIO10</code> IO9/LOG <code>GPIO8</code> 13 - - IO21/U0RXD <code>GPIO21</code> 14 - - IO20/U0TXD <code>GPIO20</code> 15 - - IO9/BOOT <code>GPIO9</code> 16 - - <ul> <li>[1] Connected to LDO enable pin*</li> <li>[2] Connected to USB 5V*</li> </ul>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#ios","title":"I/Os","text":"<p>The following devices are connected through GPIO:</p> I/O Devices GPIO WS2812 LED <code>GPIO2</code> LED <code>GPIO7</code> Button/Boot <code>GPIO9</code>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#i2c","title":"I2C","text":"<p>This board includes the following peripherals over the I2C bus:</p> Peripheral Part number Reference Crate Address IMU ICM-42670-P Datasheet Link <code>0x68</code> Temperature and Humidity SHTC3 Datasheet Link <code>0x70</code>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#i2c-bus-connection","title":"I2C Bus Connection","text":"Signal GPIO SDA <code>GPIO10</code> SCL <code>GPIO8</code>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#power","title":"Power","text":"<ul> <li>USB type-C.</li> <li>Li-Ion battery charger - MCP73831T-2ACI/OT, it charges up to 4.2V.</li> <li>Recommendation: MCP73831T-2ACI/OT does not provide battery protection for over-current or over-discharge. For the battery (Li-Ion or Li-Po), it's recommended the ones with embedded protection</li> <li>Limitation: reading the battery voltage is not supported.</li> </ul>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#board-design","title":"Board Design","text":"","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#bill-of-material","title":"Bill of Material","text":"<p>Interactive BOM</p>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/esp32-c3/index.html#case","title":"Case","text":"<p>Case 3D Printing Model</p>","tags":["hardware","espressif","esp32","riscv"]},{"location":"hw/pynq-z1/index.html","title":"Xilinx PYNQ-Z1","text":"","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#additional-informations","title":"Additional Informations","text":"<ul> <li>PYNQ.io Webpage</li> <li>PYNQ ReadtheDocs</li> <li>PYNQ Github Source Code</li> <li>FINN Deep Neural Network Webpage</li> <li>My Pynq repo</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#introduction","title":"Introduction","text":"<ul> <li><code>PS</code> = Processing System</li> <li><code>PL</code> = Program Logic</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#important-linux-commands","title":"Important Linux Commands","text":"<pre><code># Shutdown\nshutdown now\n\n# Restart\nshutdown -r now\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#xilinx-zynq-fpga","title":"Xilinx Zynq FPGA","text":"<p>The core of a PYNQ Board is a Xilinx ZYNQ-7000 SoC.</p> <ul> <li>Zynq-7000 Soc Reference Manual</li> </ul> <p></p>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#start","title":"Start","text":"<p>Program the SDCard image with Rufus</p> <ul> <li>JP5 Power Selection Set to USB</li> <li>JP4 Boot Selection - Set to SDCard</li> </ul> <p></p>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#access","title":"Access","text":"<p>By default access is grated with the following account</p> Hostname User Password <code>pynq</code> <code>xilinx</code> <code>xilinx</code>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#ethernet","title":"Ethernet","text":"<p>There is Jupter and Jupyterlab installed it can be accessed by the browser</p> <ul> <li>Jupyter Notebooks http://192.168.2.99 or http://pynq.local</li> <li>Jupyterlab Notebooks http://192.168.2.99/lab or http://pynq.local/lab</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#usb","title":"USB","text":"<p>USB Serial Terminal can be accessed via putta via the microUSB interface. Terminal Settings are:</p> <ul> <li>Speed : <code>115200 baud</code></li> <li>Datasize : <code>8 bits</code></li> <li>Stopbit : <code>1 bit</code></li> <li>Parity : <code>No parity</code></li> <li>Flow : <code>No Flow Control</code></li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/index.html#samba","title":"Samba","text":"<p>Samba, a file sharing service, is running on the board. This allows you to access the Pynq home area as a network drive, to transfer files to and from the board.</p> <pre><code>\\\\192.168.2.99\\xilinx\n# or\n\\\\pynq.local\\xilinx\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html","title":"General","text":"","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#hostname","title":"Hostname","text":"<p>The default hostname is <code>pynq</code>. To change the hostname of the board use to following command and restart the board:</p> <pre><code># Get current hostname\nhostname\n# Change hostname\npynq_hostname.sh &lt;NEW HOSTNAME&gt;\n# restart\nshutdown -r now\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#ip-address","title":"IP Address","text":"<p>Get Current IP Address</p> <pre><code>hostname -I\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#ethernet","title":"Ethernet","text":"<p>Change Static IP Address</p> <pre><code>vim /etc/network/interfaces.d/eth0\n</code></pre> <p>For DHCP</p> <pre><code>auto eth0\niface eth0 inet dhcp\n\nauto eth0:1\niface eth0:1 inet dhcp\n</code></pre> <p>For new static IP</p> <pre><code>auto eth0\niface eth0 inet dhcp\n\nauto eth0:1\niface eth0:1 inet static\naddress &lt;new-ip-address&gt;\nnetmask &lt;new-subnew-mask&gt;\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#wifi","title":"Wifi","text":"<pre><code>vim /etc/network/interfaces.d/wlan0\n</code></pre> <pre><code>iface wlan0 inet dhcp\n wpa-ssid &lt;ssid&gt;\n wpa-psk &lt;password&gt;\n</code></pre> <p>You can edit this file via a python cell in a notebook</p> <pre><code>from pynq.lib import Wifi\nport = Wifi()\nport.connect('wifiNetworkNameGoesHere', 'wifiNetworkPasswordGoesHere')\n</code></pre> <p>Activate and deactivate wifi if setup</p> <pre><code>sudo ifdown wlan0\nsudo ifup -v wlan0\n</code></pre> <p>Check wifi connection</p> <pre><code>iwconfig\niw wlan0 info\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#jupyter","title":"Jupyter","text":"","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#configuration","title":"Configuration","text":"<p>Jupyter Configuration can be found at:</p> <pre><code>/root/.jupyter/jupyter_notebook_config.py\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#jupyter-password","title":"Jupyter Password","text":"<pre><code># Create Password hash\nfrom IPython.lib import passwd\npassword = passwd(\"secret\")\n&gt; 6c2164fc2b22:ed55ecf07fc0f985ab46561483c0e888e8964ae6\n</code></pre> <pre><code># Set jupyter notebook password hash\nc.NotebookApp.password =u'sha1:6c2164fc2b22:ed55ecf07fc0f985ab46561483c0e888e8964ae6'\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/general.html#service","title":"Service","text":"<p>Jupyter is started automatically by a <code>systemctl</code> service. The start script can be found at</p> <pre><code>/usr/local/bin/start_jupyter.sh\n</code></pre> <pre><code>sudo systemctl status jupyter.service\nsudo systemctl start jupyter.service\nsudo systemctl stop jupyter.service\n</code></pre> <p>In case of problems the log file of <code>systemctl</code> can be access with the following command:</p> <pre><code>sudo journalctl -u jupyter.service\n</code></pre> <pre><code>/var/log/jupyter.log\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html","title":"Overlays","text":"<p>By default, an overlay (bitstream) called base is downloaded into the PL at boot time. The base overlay can be considered like a reference design for a board. New overlays can be installed or copied to the board and can be loaded into the PL as the system is running.</p> <p>An overlay usually includes:</p> <ul> <li>A bitstream to configure the FPGA fabric</li> <li>A Vivado design Tcl file to determine the available IP</li> <li>Python API that exposes the IPs as attributes</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#loading","title":"Loading","text":"","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#instantiates","title":"Instantiates","text":"<pre><code>from pynq import Overlay\n# instantiates the overlay and downloads it to the PL\noverlay = Overlay(\"base.bit\")\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#full-redownload","title":"Full Redownload","text":"<pre><code># for a full download of the bitstream\noverlay.download()\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#partial-redownload","title":"Partial Redownload","text":"<pre><code># set region\noverlay.set_partial_region('block_0')\n\n# download region\noverlay.download('rm_0_partial.bit')\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#help","title":"Help","text":"<p>Once a overlas is instantiated the <code>help()</code> method can be used to discover its function.</p> <pre><code>from pynq.overlays.base import BaseOverlay\nbase_overlay = BaseOverlay(\"base.bit\")\n\nhelp(base_overlay)\n\nhelp(base_overlay.leds)\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#existing-xilinx-overlays","title":"Existing Xilinx Overlays","text":"","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#computer-pynq-computervision","title":"Computer PYNQ-ComputerVision","text":"<ul> <li>Github Repo PYNQ-ComputerVision</li> </ul> <pre><code># in my case Cython needed to be upgraded beforehands\npip3 install -U Cython\n\nsudo pip3 install --upgrade git+https://github.com/Xilinx/PYNQ-ComputerVision.git\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/overlays.html#qnn-mo","title":"QNN MO","text":"<ul> <li>Github Repo QNN-MO-PYNQ</li> </ul> <pre><code>sudo pip3 install git+https://github.com/Xilinx/QNN-MO-PYNQ.git\n</code></pre>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/pynq-package.html","title":"<code>pynq</code> Package","text":"<p>All PYNQ code is contained in the pynq Python package and can be found on the on the Github repository.</p> <p>To learn more about Python package structures, please refer to the official python documentation.</p>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/pynq-package.html#foundational-modules","title":"Foundational modules","text":"<ul> <li><code>pynq.ps</code> - Facilitates management of the Processing System (PS) and PS/PL interface.</li> <li><code>pynq.pl</code> - Facilitates management of the Programmable Logic (PL).</li> <li><code>pynq.overlay</code> - Manages the state, drivers, and and contents of overlays.</li> <li><code>pynq.bitstream</code> - Instantiates class for PL bitstream (full/partial).</li> <li><code>pynq.devicetree</code> - Instantiates the device tree segment class.</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/pynq-package.html#data-movement-modules","title":"Data Movement modules","text":"<ul> <li><code>pynq.mmio</code> - Implements PYNQ Memory Mapped IO (MMIO) API</li> <li><code>pynq.gpio</code> - Implements PYNQ General-Purpose IO (GPIO) by wrapping the Linux Sysfs API</li> <li><code>pynq.xlnk</code> - Implements Contiguous Memory Allocation for PYNQ DMA</li> <li><code>pynq.buffer</code> - Implements a buffer class for DMA engines and accelerators</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/pynq-z1/pynq-package.html#additional-modules","title":"Additional modules","text":"<ul> <li><code>pynq.interrupt</code> - Implements PYNQ asyncio</li> <li><code>pynq.pmbus</code> - PYNQ class for reading power measurements from PMBus</li> <li><code>pynq.uio</code> - Interacts directly with a UIO device</li> <li><code>pynq.registers</code> - Allows users to access registers easily</li> <li><code>pynq.utils</code> - Functions for assisting with installation and testing</li> </ul> <p>Sub-packages:</p> <ul> <li><code>pynq.lib</code> - Contains sub-packages with drivers for for PMOD, Arduino and Logictools PYNQ Libraries, and drivers for various communication controllers (GPIO, DMA, Video, Audio, etc.)</li> <li><code>pynq.pl_server</code> - Contains sub-packages for PL server to work across multiple devices. It also includes the overlay metadata parsers (e.g., tcl, hwh)</li> </ul>","tags":["hardware","Xilinx","PYNQ-Z1"]},{"location":"hw/raspberry/index.html","title":"Raspberry Pi","text":"","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/index.html#additional-informations","title":"Additional Informations","text":"<ul> <li>RaspberryPi Webpage</li> <li>RaspberryPi Documentation</li> <li>RetroPie Webpage</li> <li>RetroPie Documentation</li> </ul>","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/boards.html","title":"Rpi Boards","text":"<p>For more detailes about the raspberrypi products see here.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#model-b","title":"Model B","text":"","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-4b","title":"Rpi 4B","text":"<ul> <li>Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li> <li>2GB, 4GB or 8GB LPDDR4-3200 SDRAM (depending on model)</li> <li>2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE</li> <li>Gigabit Ethernet</li> <li>2 USB 3.0 ports; 2 USB 2.0 ports.</li> <li>Raspberry Pi standard 40 pin GPIO header (fully backwards compatible with previous boards)</li> <li>2 \u00d7 micro-HDMI ports (up to 4kp60 supported)</li> <li>2-lane MIPI DSI display port</li> <li>2-lane MIPI CSI camera port</li> <li>4-pole stereo audio and composite video port</li> <li>H.265 (4kp60 decode), H264 (1080p60 decode, 1080p30 encode)</li> <li>OpenGL ES 3.0 graphics</li> <li>Micro-SD card slot for loading operating system and data storage</li> <li>5V DC via USB-C connector (minimum 3A*)</li> <li>5V DC via GPIO header (minimum 3A*)</li> <li>Power over Ethernet (PoE) enabled (requires separate PoE HAT)</li> <li>Operating temperature: 0 -- 50 degrees C ambient</li> </ul> <p>Tip</p> <p>A good quality 2.5A power supply can be used if downstream USB peripherals consume less than 500mA in total.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-3b","title":"Rpi 3B+","text":"<p>The final revision of our third-generation single-board computer</p> <p>1.4GHz 64-bit quad-core processor, dual-band wireless LAN, Bluetooth 4.2/BLE, faster Ethernet, and Power-over-Ethernet support (with separate PoE HAT)</p> <p></p> <p>The Raspberry Pi 3 Model B+ is the final revision in the Raspberry Pi 3 range.</p> <ul> <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li> <li>1GB LPDDR2 SDRAM</li> <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2, BLE</li> <li>Gigabit Ethernet over USB 2.0 (maximum throughput 300 Mbps)</li> <li>Extended 40-pin GPIO header</li> <li>Full-size HDMI</li> <li>4 USB 2.0 ports</li> <li>CSI camera port for connecting a Raspberry Pi camera</li> <li>DSI display port for connecting a Raspberry Pi touchscreen display</li> <li>4-pole stereo output and composite video port</li> <li>Micro SD port for loading your operating system and storing data</li> <li>5V/2.5A DC power input</li> <li>Power-over-Ethernet (PoE) support (requires separate PoE HAT)</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-2b","title":"Rpi 2B","text":"<p>The Raspberry Pi 2 Model B is the second-generation Raspberry Pi. It replaced the original Raspberry Pi 1 Model B+ in February 2015.</p> <p></p> <ul> <li>A 900MHz quad-core ARM Cortex-A7 CPU</li> <li>1GB RAM</li> <li>100 Base Ethernet</li> <li>4 USB ports</li> <li>40 GPIO pins</li> <li>Full HDMI port</li> <li>Combined 3.5mm audio jack and composite video</li> <li>Camera interface (CSI)</li> <li>Display interface (DSI)</li> <li>Micro SD card slot</li> <li>VideoCore IV 3D graphics core</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-1b","title":"Rpi 1B+","text":"<p>The Model B+ is the final revision of the original Raspberry Pi. It replaced the Model B in July 2014 and was superseded by the Raspberry Pi 2 Model B</p> <p></p> <p>Compared to the Model B it has:</p> <ul> <li>More GPIO pins. The GPIO header has grown to 40 pins, while retaining the same pinout for the first 26 pins as the Model A and B.</li> <li>More USB ports. It comes with 4 USB 2.0 ports, compared to 2 on the Model B, and better hotplug and overcurrent behaviour.</li> <li>Micro SD. The old friction-fit SD card socket has been replaced with a much nicer push-push micro SD version.</li> <li>100 Base Ethernet (same as the original Model B)</li> <li>Lower power consumption. By replacing linear regulators with switching ones we've reduced power consumption by between 0.5W and 1W.</li> <li>Better audio. The audio circuit incorporates a dedicated low-noise power supply.</li> <li>Neater form factor. We've aligned the USB connectors with the board edge, moved composite video onto the 3.5mm jack, and added four squarely-placed mounting holes.</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#model-a","title":"Model A","text":"","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-3a","title":"Rpi 3A+","text":"<p>1.4GHz 64-bit quad-core processor, dual-band wireless LAN, Bluetooth 4.2/BLE in the same mechanical format as the Raspberry Pi 1 Model A+</p> <p></p> <p>The Raspberry Pi 3 Model A+ extends the Raspberry Pi 3 range into the A+ board format.</p> <ul> <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li> <li>512MB LPDDR2 SDRAM</li> <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2/BLE</li> <li>Extended 40-pin GPIO header</li> <li>Full-size HDMI</li> <li>Single USB 2.0 ports</li> <li>CSI camera port for connecting a Raspberry Pi Camera Module</li> <li>DSI display port for connecting a Raspberry Pi Touch Display</li> <li>4-pole stereo output and composite video port</li> <li>Micro SD port for loading your operating system and storing data</li> <li>5V/2.5A DC power input</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-1a","title":"Rpi 1A+","text":"<p>The Model A+ is the low-cost variant of the Raspberry Pi. It replaced the original Model A in November 2014.</p> <p></p> <p>Compared to the Model A it has:</p> <ul> <li>More GPIO pins. The GPIO header has grown to 40 pins, while retaining the same pinout for the first 26 pins as the Model A and B.</li> <li>Micro SD. The old friction-fit SD card socket has been replaced with a much nicer push-push micro SD version.</li> <li>Lower power consumption. By replacing linear regulators with switching ones we've reduced power consumption by between 0.5W and 1W.</li> <li>Better audio. The audio circuit incorporates a dedicated low-noise power supply.</li> <li>Smaller neater form factor. We've aligned the USB connector with the board edge, moved composite video onto the 3.5mm jack, and added four squarely-placed mounting holes. Model A+ is approximately 2cm shorter than the Model A.</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#compute-module","title":"Compute Module","text":"","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-cm3","title":"Rpi CM3+","text":"<p>The Compute Module 3+ (CM3+) is a Raspberry Pi 3 Model B+ in a flexible form factor, intended for industrial applications</p> <p></p> <p>The CM3+ Compute Module contains the guts of a Raspberry Pi 3 Model B+ (the BCM2837 processor and 1GB RAM) as well as an optional eMMC Flash device of 8GB, 16GB or 32GB (which is the equivalent of the SD card in the Pi).</p> <ul> <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.2GHz</li> <li>1GB LPDDR2 SDRAM</li> <li>8GB/16GB/32GB eMMC Flash memory, or a Lite variant without eMMC Flash memory</li> </ul> <p>This is all integrated onto a small (67.6mm \u00d7 31mm) board that fits into a standard DDR2 SODIMM connector. The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837 SoC (which means that many more GPIOs and interfaces are available than with a standard Raspberry Pi), and designing the Module into a custom system should be relatively straightforward because we've put all the tricky bits onto the Module itself.</p> <p>To help you get started designing a PCB to use the Module, we provide an open-source breakout board, which is supplied with both a 32GB and Lite version of the CM3+ in an affordable development kit.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-cm3-ioboard","title":"Rpi CM3 IOBoard","text":"<p>The Compute Module IO Board V3 is a development kit for those who wish to make use of the Raspberry Pi in a more flexible form factor</p> <p></p> <p>The Compute Module IO Board V3 is a development kit for those who wish to make use of the Raspberry Pi in a more flexible form factor, intended for industrial applications. The IO Board V3 is made for developing with CM3 and CM1.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#model-zero","title":"Model Zero","text":"","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rpi-zero-w","title":"Rpi Zero W","text":"<p>The Raspberry Pi Zero W extends the Pi Zero family and comes with added wireless LAN and Bluetooth connectivity.</p> <p></p> <p>The Raspberry Pi Zero W extends the Pi Zero family. Launched at the end of February 2017, the Pi Zero W has all the functionality of the original Pi Zero, but comes with added connectivity, consisting of:</p> <ul> <li>802.11 b/g/n wireless LAN</li> <li>Bluetooth 4.1</li> <li>Bluetooth Low Energy (BLE)</li> </ul> <p>Like the Pi Zero, it also has:</p> <ul> <li>1GHz, single-core CPU</li> <li>512MB RAM</li> <li>Mini HDMI and USB On-The-Go ports</li> <li>Micro USB power</li> <li>HAT-compatible 40-pin header</li> <li>Composite video and reset headers</li> <li>CSI camera connector</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#raspberry-pi-pico-series","title":"Raspberry Pi Pico Series","text":"<p>The Raspberry Pi Pico series is a family of microcontroller boards developed by the Raspberry Pi Foundation. Unlike the full-size Raspberry Pi computers, which are capable of running Linux-based operating systems, the Pico boards are designed for embedded systems and bare-metal programming. They are ideal for low-power, real-time applications such as robotics, IoT devices, and sensor networks.</p> <p></p> <p>More information about using the Raspberry Pi Pico series.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#overview","title":"Overview","text":"<p>The Pico boards are based on the RP2040 or RP2350 microcontrollers\u2014both custom chips designed by the Raspberry Pi Foundation. These boards are highly affordable, compact, and versatile, making them a popular choice among hobbyists, educators, and professionals.</p> <p>Compared to other Raspberry Pi models (such as the Pi 4 or Pi Zero), the Pico boards do not support Linux or other conventional operating systems. Instead, they are typically programmed using C/C++ or MicroPython, and they interface directly with hardware through GPIO, SPI, I\u00b2C, UART, ADCs, and PWM outputs.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#variants","title":"Variants","text":"<p>Several variants of the Raspberry Pi Pico exist, including:</p> <ul> <li>Pico \u2013 Base model with no Wi-Fi and no pre-soldered headers.</li> <li>Pico H \u2013 Includes pre-soldered headers.</li> <li>Pico W \u2013 Includes onboard Wi-Fi (IEEE 802.11n) for wireless communication.</li> <li>Pico WH \u2013 Includes both onboard Wi-Fi and pre-soldered headers.</li> </ul> <p>These variants allow users to choose the configuration that best fits their project needs\u2014whether for compact integration, breadboard prototyping, or wireless networking.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#microcontroller-versions","title":"Microcontroller Versions","text":"","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rp2040","title":"RP2040","text":"<p>The RP2040 is the original microcontroller used in the first generation of Raspberry Pi Pico boards. Its key specifications include:</p> <ul> <li>Dual-core Arm Cortex-M0+ processor running at up to 133 MHz</li> <li>264 KB SRAM</li> <li>2 MB Flash memory (external)</li> <li>30 GPIO pins, including:<ul> <li>2 \u00d7 SPI</li> <li>2 \u00d7 I\u00b2C</li> <li>2 \u00d7 UART</li> <li>3 \u00d7 12-bit ADC channels</li> <li>16 \u00d7 PWM channels</li> </ul> </li> <li>USB 1.1 host/device support</li> <li>Low-power sleep and dormant modes</li> <li>Programmable I/O (PIO) blocks for custom peripheral support</li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rp2350","title":"RP2350","text":"<p>The RP2350 is a more advanced microcontroller introduced with the Raspberry Pi Pico 2 board. It features a heterogeneous dual-core architecture, allowing for flexible configurations:</p> <ul> <li>Dual-core Arm Cortex-M33 processors</li> <li>Dual-core Hazard3 RISC-V processors</li> <li>Mixed-core configuration: one Arm Cortex-M33 and one Hazard3 RISC-V</li> </ul> <p>Only two cores can be active at a time, and the selection depends on the specific application requirements.</p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#arm-cortex-m33-cores","title":"Arm Cortex-M33 Cores","text":"<ul> <li>Architecture: ARMv8-M Mainline</li> <li>Clock Speed: Up to 150 MHz</li> <li>Features:<ul> <li>TrustZone security technology</li> <li>Optional single-precision Floating-Point Unit (FPU)</li> <li>DSP instructions for efficient signal processing</li> <li>Hardware divide and multiply instructions</li> <li>Memory Protection Unit (MPU) support</li> <li>Secure boot and cryptographic acceleration</li> </ul> </li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#hazard3-risc-v-cores","title":"Hazard3 RISC-V Cores","text":"<ul> <li>Architecture: RV32IMAC+ (32-bit RISC-V)</li> <li>Clock Speed: Up to 150 MHz</li> <li>Features:<ul> <li>3-stage in-order pipeline</li> <li>Support for standard RISC-V extensions:<ul> <li>Integer multiplication and division (M)</li> <li>Atomic instructions (A)</li> <li>Compressed instructions (C)</li> </ul> </li> <li>Additional extensions: Zba, Zbb, Zbs, Zbkb, Zcb, Zcmp, Zicsr</li> <li>Designed for low-power and efficient embedded applications</li> </ul> </li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/boards.html#rp2350-specifications","title":"RP2350 Specifications","text":"<ul> <li>Memory:<ul> <li>520 KB SRAM (10 banks)</li> <li>8 KB One-Time Programmable (OTP) memory</li> <li>Support for up to 16 MB external QSPI flash or PSRAM</li> </ul> </li> <li>Peripherals:<ul> <li>3 \u00d7 Programmable I/O (PIO) blocks (12 state machines)</li> <li>24 \u00d7 PWM channels</li> <li>4 or 8 \u00d7 12-bit ADC channels (depending on package)</li> <li>2 \u00d7 UART</li> <li>2 \u00d7 SPI</li> <li>2 \u00d7 I\u00b2C</li> <li>1 \u00d7 USB 1.1 host/device controller</li> <li>1 \u00d7 High-Speed Transmit (HSTX) for digital video output</li> </ul> </li> <li>Power Management:<ul> <li>On-chip switched-mode power supply (SMPS)</li> <li>Programmable low-dropout regulator (LDO)</li> </ul> </li> <li>Security:<ul> <li>Secure boot with protected OTP storage</li> <li>Hardware SHA-256 accelerator</li> <li>True Random Number Generator (TRNG)</li> </ul> </li> </ul>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/general.html","title":"General","text":"","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/general.html#default-config","title":"Default config","text":"<p>User: <code>pi</code> Password: <code>raspberry</code></p>","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/general.html#raspiconfig","title":"Raspiconfig","text":"<pre><code>sudo raspi-config\n</code></pre>","tags":["hardware","raspberry pi"]},{"location":"hw/raspberry/picase.html","title":"Retroflag Cases","text":"<p>For more detailes about Retroflag cases see their Webpage . They are making awesome products.</p>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/picase.html#safe-shutdown-feature","title":"Safe Shutdown Feature","text":"<p>Almost every Retroflag case has a build-in safe shutdown feature. This needs to be activated and installed. Installation information can be found on the github repo</p>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/picase.html#nespi-4-case","title":"NESPi 4 Case","text":"","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/picase.html#safe-shutdown","title":"Safe Shutdown","text":"<ul> <li>Turn switch \"SAFE SHUTDOWN\" to ON.</li> <li>Enter Terminal and execute     <pre><code>wget -O - \"https://raw.githubusercontent.com/RetroFlag/retroflag-picase/master/install.sh\" | sudo bash\n</code></pre></li> </ul>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/pico.html","title":"Raspberry Pi Pico","text":"<p>RP2040 Datasheet RP2350 Datasheet</p> <p></p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/pico.html#debug-probe","title":"Debug Probe","text":"<p>How to install, setup and use the debug probe. </p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/pico.html#wiring","title":"Wiring","text":"<p>The debug probe contains two cables. The gray for programming and debug and the black, red, yellow for a Serial UART Communcation.</p> <p></p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/pico.html#installation","title":"Installation","text":"<p>We will use probe-rs</p> <pre><code># install gdb\nbrew install arm-none-eabi-gdb\n\n# probe-rs\nbrew tap probe-rs/probe-rs\nbrew install probe-rs\n</code></pre>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/pico.html#programming","title":"Programming","text":"<p>The Pico Debug Probe will let you load binaries via the SWD port and OpenOCD: you will not need to unplug, and then push-and-hold, the BOOTSEL button every time you push a new binary to your Pico. Using the Debug Probe uploading new binaries is an entirely hands off affair.</p> <pre><code>sudo openocd -f interface/cmsis-dap.cfg -f target/rp2040.cfg -c \"adapter speed 5000\" -c \"program blink.elf verify reset exit\"\n</code></pre> <p></p>","tags":["hardware","board","raspberry pi"]},{"location":"hw/raspberry/retropie.html","title":"Retropie","text":"","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/retropie.html#default-config","title":"Default config","text":"<p>User: <code>pi</code> Password: <code>raspberry</code></p>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/retropie.html#hotkeys","title":"Hotkeys","text":"Hotkey Description <code>Select</code> <code>Start</code> Exit Game <code>F4</code> Enter Terminal","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/retropie.html#important-files","title":"Important Files","text":"<p>SSH Config </p><pre><code>/etc/ssh/sshd_config\n</code></pre> <p>Roms </p><pre><code>~/RetroPie/roms\n</code></pre> <p>Emulationstation </p><pre><code># ES Settings\n~/.emulationstation/\n/opt/retropie/configs/all/emulationstation/\n\n# System\n~/.emulationstation/es_systems.cfg\n/etc/emulationstation/es_systems.cfg\n\n# Platform Config\n/opt/retropie/configs/all/platforms.cfg\n\n# Controller Config\n~/.emulationstation/es_input.cfg\n\n# Themes\n ~/.emulationstation/themes\n /etc/emulationstation/themes\n</code></pre>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/raspberry/retropie.html#todo-after-install","title":"Todo After Install","text":"<ol> <li> <p>Change Keyboard Layout</p> <p><code>raspi-config</code> <code>4. Localisation Options</code> <code>I3 Change Keyboard Layout</code></p> </li> <li> <p>Change default password of user <code>pi</code></p> <pre><code>passwd\n</code></pre> </li> <li> <p>Change default password of user <code>root</code></p> <pre><code>sudo passwd root\n</code></pre> </li> <li> <p>Enable SSH</p> <p><code>raspi-config</code> <code>4. Localisation Options</code> <code>I3 Change Keyboard Layout</code></p> </li> <li> <p>Enable SSH Root access</p> <pre><code>echo 'PermitRootLogin yes' | sudo tee -a /etc/ssh/sshd_config\n</code></pre> </li> <li> <p>Change Wifi Country</p> <p><code>raspi-config</code> <code>4. Localisation Options</code> <code>I4 Change Wifi Country</code></p> </li> <li> <p>Expand Filesystem</p> <p><code>raspi-config</code> <code>7. Advanced Options</code> <code>A1 Expand Filesystem</code></p> </li> <li> <p>Install Safe Shutdown (in case of a NESPi 4 Case)</p> <pre><code>wget -O - \"https://raw.githubusercontent.com/RetroFlag/retroflag-picase/master/install.sh\" | sudo bash\n</code></pre> </li> <li> <p>Enable XBox Controller via Bluethooth</p> <pre><code>echo 'options bluetooth disable_ertm=Y' | sudo tee -a  /etc/modprobe.d/bluetooth.conf\n</code></pre> <p>Setting to connect the XBox Controller is <code>Display Yes No</code></p> </li> <li> <p>Configure all Gamepads</p> </li> <li> <p>Install Theme to <code>pixels</code> at set it under <code>UI Settings</code> in RetroArch</p> </li> <li> <p>Install additional packages</p> <p>RetroPie Setup <code>opt</code> <code>dosbox</code> <code>frotz</code> <code>scummvm</code> <code>kodi</code></p> </li> <li> <p>Install RetroPie-Extras</p> <p></p><pre><code>cd ~\ngit clone https://github.com/zerojay/RetroPie-Extra.git\ncd RetroPie-Extra/\n./install-extras.sh\n</code></pre> <pre><code>cd ~\ncd RetroPie-Setup/\nsudo ./retropie_setup.sh\n</code></pre> </li> <li> <p>Update RetroPie and underlying Raspian Options</p> <p>RetroPie-Setup <code>Update</code></p> </li> <li> <p>Install EmulationStation Theme <code>pixel</code></p> <ul> <li>RetroPie-Setup <code>814 esthemes</code> <code>12 Install ehettervik/pixel</code></li> <li>Set Settings <code>UI Settings</code> <code>Theme Set</code> <code>Pixel</code></li> <li>Set Settings <code>UI Settings</code> <code>Transition Style</code> <code>Instant</code></li> </ul> </li> <li> <p>Copy all Roms to location <code>~/Retropie/roms/</code></p> </li> <li>Restart System</li> </ol>","tags":["hardware","raspberry pi","retropie"]},{"location":"hw/rtl-sdr/index.html","title":"RTL-SDR","text":"<p>RTL-SDR is a very cheap ~$30 USB dongle that can be used as a computer based radio scanner for receiving live radio signals in your area (no internet required). Depending on the particular model it could receive frequencies from 500 kHz up to 1.75 GHz. Most software for the RTL-SDR is also community developed, and provided free of charge. Note that RTL-SDRs cannot transmit.</p> <p>The origins of RTL-SDR stem from mass produced DVB-T TV tuner dongles that were based on the RTL2832U chipset. It was found that the raw I/Q data on the RTL2832U chipset could be accessed directly, which allowed the DVB-T TV tuner to be converted into a wideband software defined radio via a custom software driver.</p> <p></p>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#rtl-sdr-v4","title":"RTL-SDR v4","text":"<p>The latest version of the dongle is the RTL-SDR v4. It has a few improvements over the previous versions, including a metal case, a direct sampling mode, and a software switchable bias tee. The direct sampling mode allows the dongle to receive HF frequencies without the need for an upconverter. The bias tee allows you to power external devices such as a LNA (low noise amplifier) or active antenna through the coax cable.</p> <p></p>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#specs","title":"Specs","text":"<ul> <li>Sample rate Max: \\(2.56MS/s - 3.2 MS/s\\)</li> <li>ADC Resolution: 8 bits but the ENOB (Effectove Number of Bits) is around 7 bits</li> <li>Input Impedance: \\(50 \\Omega\\)</li> <li>Frequency Range: \\(24MHz - 1766 MHz\\)<ul> <li>With v4 HF Upconversion: \\(500 kHz - 28.8MHz\\)</li> </ul> </li> </ul>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#datasheets","title":"Datasheets","text":"<ul> <li>Realtek RTK2832U Chipset</li> <li>Rafael Micro R820T2 Tuner</li> <li>Rafael Micro R820T2 Tuner Register Description</li> </ul> <p>Figure 1: Schematic R820T</p>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#diplole-antenna-kit","title":"Diplole Antenna Kit","text":"<p>The basic RTl-SDR Kit comes with a Dipole Antenna Kit. It contains 2 Antenna types:</p> <ul> <li>\\(2x 23cm - 1 m\\) telescopic antennas.<ul> <li>These long telescopic antennas cover VHF to UHF</li> <li>\\(~70MHz - 285MHz\\)</li> </ul> </li> <li>\\(2x 5cm - 13cm\\) telescopic antennas.<ul> <li>These smaller antennas cover UHF to \\(1090 MHz\\) ADS-B, and even still work decently up to L-band \\(1.5 GHz\\) frequencies.</li> <li>\\(~445MHz - 1030MHz\\)</li> </ul> </li> </ul> <p></p>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#orientation","title":"Orientation","text":"<p>Depending on the signals they have to be oriented horizontally or vertically. A mismatch will result in a \\(-20dB\\) loss.</p> <p>Most signals broadcast terrestrially (on Earth) are vertically polarized.</p>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#calculator","title":"Calculator","text":"<p>Depending on the frequency you want to receive you can calculate the length of the antenna with the Amateur Dipole Antenna Calculator</p> <p>In reality extending the antenna to almost any random length will work just fine for most strong signals. But if you're really trying to optimize those weak signals you'll want to fine tune the lengths.</p> <p>Basically the longer the antenna, the lower it's resonant frequency. The shorter the antenna, the higher the resonant frequency. You want to be close to the resonant frequency. Remember that there is about 2cm of metal inside the antenna itself which needs to be added on. Below is a cheat sheet for various lengths and frequencies.</p> <p>Length for one side of the Dipol only</p> Antenna Size Sections Length Resonant Frequency Large 5 \\(100cm + 2cm\\) \\(~70 MHz\\) Large 4 \\(80cm + 2cm\\) \\(~87 MHz\\) Large 3 \\(60cm + 2cm\\) \\(~115 MHz\\) Large 2 \\(42cm + 2cm\\) \\(~162 MHz\\) Large 1 \\(23cm + 2cm\\) \\(~285 MHz\\) Small 4 \\(14cm + 2cm\\) \\(~445 MHz\\) Small 3 \\(11cm + 2cm\\) \\(~550 MHz\\) Small 2 \\(8cm + 2cm\\) \\(~720 MHz\\) Small 1 \\(5cm + 2cm\\) \\(~1030 MHz\\)","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#software","title":"Software","text":"<p>There are several software options available for RTL-SDR dongles. Some of the most popular ones include:</p> <ul> <li>SDR++ or on this page SDR++</li> <li>SDR#</li> <li>HFSDR</li> <li>CubisSDR</li> <li>GQRX</li> <li>Welle.io for DAB/DAB+ Radio</li> </ul>","tags":["hardware","hw","rtl-sdr"]},{"location":"hw/rtl-sdr/index.html#sdr-theory","title":"SDR Theory","text":"<p>See the dedicated SDR page</p>","tags":["hardware","hw","rtl-sdr"]},{"location":"multimedia/index.html","title":"Multimedia","text":"","tags":["multimedia"]},{"location":"multimedia/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia"]},{"location":"multimedia/audio/index.html","title":"Audio","text":"","tags":["multimedia","audio"]},{"location":"multimedia/books/index.html","title":"Book Review","text":"<p>A list of my favorite books</p>","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#crime","title":"Crime","text":"Cover Book Serie Year Author Rating Verblendung (The Girl with the Dragon Tattoo) Millenium 2005 Stieg Larsson Verdammnis (The Girl who played with Fire) Millenium 2006 Stieg Larsson Vergebung (The Girl Who Kicked the Hornets Nest) Millenium 2007 Stieg Larsson The Girl in the Spider's Web Millenium 2015 David Lagercrantz The Girl Who Takes an Eye for an Eye Millenium 2017 David Lagercrantz The Girl Who Lived Twice Millenium 2019 David Lagercrantz Die F\u00e4hrte Harry Hole 2010 Jo Nesb\u00f8 Headhunter 2008 Jo Nesb\u00f8 Nicht tot genug \u00a0- 2012 Peter James Stirb Ewig \u00a0- 2007 Peter James Der Vogelmann \u00a0- 2002 Mo Hayder Gier \u00a0- 2012 Arne Dahl Erl\u00f6sung 2011 Adler Olsen","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#science-fiction","title":"Science-Fiction","text":"Cover Book Serie Year Author Rating Reise zum Mittelpunkt der Erde 1864 Jules Vernes Von der Erde zum Mond 1865 Jules Vernes 20.000 Meilen unter dem Meer 1869 Jules Vernes Reise um die Erde in 80 Tagen 1873 Jules Vernes Die geheimnisvolle Insel 1-3 1875 Jules Vernes The Invisible Man 1897 H.G. Wells The Time Machine 1895 H.G. Wells 1984 1949 George Orwell Dune 50th Anniversary Edition Dune 1965 Frank Herbert Do Androids Dream of Electric Sheep 1968 Philip K Dick The Dig 1997 Alan Dean Foster The Departure Owner trilogy 2011 Neal Asher Jurassic Park 1990 Michael Crichton The Lost Word 1995 Michael Crichton Timeline 1999 Michael Crichton Enth\u00fcllung 2000 Michael Crichton Prey 2003 Michael Crichton State of fear 2004 Michael Crichton Next 2006 Michael Crichton Gold - Pirate Latitudes 2009 Michael Crichton Micro 2011 Michael Crichton Per Anhalter durch die Galaxis Hitchhiker's Guide to the Galaxy 1979 Douglas Adams Machs gut und Danke f\u00fcr den Fisch Hitchhiker's Guide to the Galaxy 1984 Douglas Adams Restaurant am Ende des Universums Hitchhiker's Guide to the Galaxy 1980 Douglas Adams","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#biography","title":"Biography","text":"Cover Book Year Author Rating Leonardo Da Vinci 2015 Ashlee Vance Surely you're joking Mr Feynman 1985 Richard Feynman Steve Jobs 2011 Walter Isaacson Hit Refesh 2018 Satya Nadella Edward Snowden - Permanent Record 2019 Edward Snowden","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#science","title":"Science","text":"Cover Book Year Author Rating Code The Hidden Language of Computer Hardware and Software 2022 Charles Petzold What is ChatGPT Doing and Why does it work? 2022 Stephen Wolfram The Rust Programming Language 2021 Steve Klabnik Rust for Rustaceans 2021 Jon Gjengset Rust in Action 2021 Tim McNamara Programming Rust 2021 Jim Blandy, Jason Orendorff &amp; Leaonora F.S. Tindall ![](img(2019-john_meada-how_to_speak_machine.jpg){width=\"100px\"} How to Speak Machine 2019 John Maeda","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#psychology","title":"Psychology","text":"Cover Book Year Author Rating Supercommunicators 2024 Charles Duhigg Atomic Habits 2018 James Clear Talking to Strangers 2019 Malcolm Gladwell How to Win Friends and Influence People 1937 Dale Carnegie A Mind for Numbers 2014 Barbara Oakley Learn Like a Pro 2020 Barbara Oakley The Subtle Art of not Giving a Fuck 2016 Mark Manson","tags":["multimedia","text","books"]},{"location":"multimedia/books/index.html#business","title":"Business","text":"Cover Book Year Author Rating ![](img(2024-peter_thiel-zero_to_one.jpg){width=\"100px\"} Zero to One 2014 Peter Thiel","tags":["multimedia","text","books"]},{"location":"multimedia/games/index.html","title":"Games","text":"","tags":["multimedia","games"]},{"location":"multimedia/games/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","games"]},{"location":"multimedia/games/a-dark-room.html","title":"A Dark Room","text":"<p>An amazing open source game of a different kind.</p> <p>You can play in on your mobile iOS or Android or in the browser.</p> <p>Here some screenshots of the unlocked items in the game</p> <p> </p>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#map-elements","title":"Map Elements","text":"<p>The map shows many symbols here is a list of what they mean</p> <pre><code>P - An Outpost\nM - A Murky Swamp\nV - A Damp Cave\nO - A Deserted Town\nY - A Ruined City\nH - An Old House\nF - A Forgotten Battlefield\nB - A Huge Borehole\nW - A Crashed Ship\nS - The Sulphur Mine\nC - The Coal Mine\nI - The Iron Mine\nU - A Destroyed Village\nX - A Ravaged Battleship\n\n; Forest\n, Field\n. Barrens\n# Road\n</code></pre>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#random-encounters","title":"Random Encounters","text":"<ul> <li>Noises. Strange sounds in the store room? Better look. You'll usually find Wood stolen\u2026 though in exchange, the creatures who committed the deed leave something better behind.</li> <li>A Beast Attack. Snarling creatures burst from the forest and kill a few of your villagers. There's now way to avoid this. Mourn your dead and wait for replacements.</li> <li>A Ruined Trap. A beast destroys a random number of Traps. You can follow and kill it, if you wish, but the damage is already done.</li> <li>Strangers</li> <li>The Mysterious Wanderer. These vagabonds trot up to your village and ask that you fill their cart with Wood or Furs, in increments of 100 or 500. They promise they'll return. Accede to their demands and you'll typically never see them again. Every now and then, though, they'll come back with more resources than you gave them. Not a bad idea at first, but later on it's a forgivable gamble.</li> <li>The Nomad. Nomads will sell you Scales, Teeth, Bait and a Compass at reduced prices from what you'll see at the Trading Company. You can save a lot on resources if you wait for one to show up.</li> <li>The Beggar. He will ask you for Furs to keep him warm. Accommodate him and he'll leave behind a small amount of a random item, usually Teeth or Scales.</li> <li>The Thief. Your villagers discover a man who's been pilfering supplies. You can either execute him or spare him. Execute him and the thieving of your storeroom will end. Sparing him is nevertheless the superior choice, as it grants you the Stealthy perk.</li> <li>The Scout. This worldly woman is willing to exchange maps (uncovered portions of A Dusty Road) for Fur and Scales. She will also teach you the art of Scouting for Fur, Scales, and Teeth. The maps aren't that amazing, but Scouting is well worth the price.</li> <li>The Master. An old man wants shelter in the form of Fur, Cured Meat, and a Torch. Supply him with these three things and he'll bestow one of three Perks upon you, all of which make life on A Dusty Path much easier. Evasion gives you the [FILL THE BLANK] Perk; [BLANK] gives you the [FILL THE BLANK] Perk; Force gives you the Barbarian Perk.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#items","title":"Items","text":"<ul> <li>Cart. The first item you'll get. Carts allow you to carry more Wood back to town when you Gather. Useful at first, though eventually you won't have to Gather Wood anymore.</li> <li>Trap. Traps are deployed automatically. Check them when you can and you will get small amounts of Fur, Teeth, Meat, Cloth and Scales. You'll get more resources if you buy more Traps, to a maximum of ten.</li> <li>Compass. Allows you to access A Dusty Path. The Compass can be bought from a Nomad at a reduced price.</li> <li>Torch. Torches allow you to explore darkened places on A Dusty Path, namely abandoned buildings and caves. Without Torches you can't enter these areas.</li> <li>Waterskin. Allows you to take more water when you explore A Dusty Path, to a maximum of 20.</li> <li>Rucksack. Alloxs you to carry more items when you explore A Dusty Path, to a maximum weight of 20.</li> <li>Cask. Allows you to take more water when you explore A Dusty Path, to a maximum of 30.</li> <li>Wagon. Allows you to carry more items when you explore A Dusty Path, to a maximum weight of 40.</li> <li>Water Tank. Allows you to take more water when you explore A Dusty Path, to a maximum of 60.</li> <li>Convoy. Allows you to carry more items when you explore A Dusty Path, to a maximum weight of 70.</li> <li>Bullet. Used as ammunition in Rifles.</li> <li>Energy Pack. Used as ammunition in Energy Rifles.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#weapons","title":"Weapons","text":"<ul> <li>Bone Spear. The base weapon, and the cheapest to create. Bone Spears do two damage when they hit.</li> <li>Iron Sword. The next in line. Iron Swords do four damage when they hit.</li> <li>Steel Sword. Getting stronger! Steel Swords do six damage when they hit. They're the weapon you're most likely to find while wandering around cities and caves.</li> <li>Bayonet. Quite a piece of work. Bayonets do eight damage when they hit.x</li> <li>Rifle. Your first projectile weapon. Rifles do five damage when they hit. Each attack requires one Bullet.</li> <li>Laser Rifle. Your next projectile weapon. Laser Rifles do eight damage when they hit. Each attack requires one Energy Pack.</li> <li>Bolas. Temporarily stuns an enemy. Bolas are extremely useful against stronger enemies that attack constantly. Single use only.</li> <li>Grenades. Deals 15 damage to an enemy. Single use only.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#armour","title":"Armour","text":"<ul> <li><code>L</code> Armour. Leather. Raises your HP on A Dusty Path to 15.</li> <li><code>I</code> Armour. Iron. Raises your HP on A Dusty Path to 25</li> <li><code>S</code> Armour. Steel. Raises your HP on A Dusty Path to 45.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#enemies","title":"Enemies","text":"<p>This list may be somewhat inaccurate. It's difficult to catch every detail when you can't pause.</p> <ul> <li>Snarling Beast - 5 HP, 1 damage. Drops Fur, Meat, Teeth.</li> <li>Gaunt Man - 6 HP, 2 damage. Drops Cloth.</li> <li>Man / Squatter - 10 HP, 3 damage. Drops Cured Meat and Cloth.</li> <li>Chief - 20 HP, 5 damage. Cured Meat, Cloth, Iron.</li> <li>Cave Lizard - 6 HP, 3 damage. Drops Scales and Teeth.</li> <li>Giant Lizard / Beastly Matriarch - 10 HP, 4 damage. Drops Scales and Teeth.</li> <li>Man-Eater / Beast - 25 HP, 3 damage. Drops Fur, Meat, Teeth.</li> <li>Thug - 30 HP, 4 damage. Drops Cloth and Cured Meat.</li> <li>Squatters - 30 HP, 3 damage. Drops Teeth. Very fast attackers.</li> <li>Scavenger - 30 HP, 5 damage. Drops Cured Meat, Leather.</li> <li>Feral Terror - 45 HP, 9 damage. Drops Fur, Meat, Teeth.</li> <li>Youth - 45 HP, 2 damage. Drops Teeth and Cloth.</li> <li>Sniper - 30 HP, 15 damage. Drops Cloth, Bullets, Rifle.</li> <li>Soldier - 45 HP, 8 damage. Drops Cured Meat, Bullets, Rifle. Some soldiers have 50 HP rather than 45.</li> <li>Commando - 45 HP, 3 damage. Drops Cured Meat.</li> <li>Veteran - 65 HP, 10 damage. Drops Cured Meat, Bayonet.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#a-dusty-path-map-legend","title":"A Dusty Path Map Legend","text":"<ul> <li>A - Your village. Return here when your travelling is done, and try not to stray too far from it.</li> <li>P - An outpost. These appear whenever you clear an area. Each time you embark on a new journey, these spots will yield up a small stock of Cured Meat. They'll also fully restore your water.</li> <li>H - An abandoned house. You'll usually find Squatters and a few uncommon items inside. You may also discover a well that will restore your water.</li> <li>V - A cave. You'll need several Torches to explore caves. Monsters dwell within, though if you make it to the rear of the cave you'll usually discover a cache of items.</li> <li>I - An iron mine. Guess what you're most likely to find inside. Successfully clearing out an iron mine allows you to allocate workers as Iron Miners.</li> <li>C - A coal mine. Again, guess what's inside. Successfully clearing out a coal mine allows you to allocate workers as Coal Miners.</li> <li>O - A deserted town. Towns can be normally explored, though on occasion you'll need Torches to proceed. Good places to gather equipment.</li> <li>B - A huge borehole. The primary place to find Alien Alloy.</li> <li>F - A forgotten battlefield. You'll typically find a bunch of high-tech equipment in these areas. Very useful.</li> <li>S - A sulphur mine. Like the other mines, it can be cleared out to gain access to Sulphur Miners.</li> <li>Y - A ruined city. Similar to a town, though with more dangerous inhabitants and better prizes to claim.</li> <li>M - A murky swamp. If you bring a Charm to the man inside, he'll share a bit of the lore of the world, and his former place in it. Talking to him will get you the Gastronome Perk.</li> <li>W - A crashed ship. Finding this sparks the end of the game. Upgrade it with Alien Alloy and you can use it to flee into the great unknown.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/a-dark-room.html#perks","title":"Perks","text":"<p>This list is incomplete. I couldn't for the life of me, in three hours of waiting, get another Master to visit my village. I'll finish it off when I have better luck.</p> <ul> <li>Stealthy - Reduces the chances you'll run into enemies on the main map while moving around. Gained by sparing The Thief.</li> <li>Barbarian - Increases the damage dealt with each hit. The amount of extra damage depends on the weapon. Learned from The Master.</li> <li>Gastronome - Doubles the amount of health regained upon eating Cured Meat.</li> </ul>","tags":["multimedia","games","a dark room"]},{"location":"multimedia/games/terminal.html","title":"Terminal Games","text":"<p>Hereafter a list of cool terminal games</p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#greed","title":"<code>greed</code>","text":"<p>Greed @github</p> <p>The object of Greed is to erase as much of the screen as possible by moving around in a grid of numbers. To move your cursor, simply use your arrow keys or the the 'wedcxzaq' keys. Your location is signified by the ! symbol.</p> <pre><code>brew install greed\ngreed\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#cataclysm","title":"<code>cataclysm</code>","text":"<p>Cataclysm - The Dark Days Ahead</p> <p>Cataclysm: Dark Days Ahead is a turn-based survival game set in a post-apocalyptic world. Struggle to survive in a harsh, persistent, procedurally generated world. Scavenge the remnants of a dead civilization for food, equipment, or, if you are lucky, a vehicle with a full tank of gas to get you the hell out of Dodge. Fight to defeat or escape from a wide variety of powerful monstrosities, from zombies to giant insects to killer robots and things far stranger and deadlier, and against the others like yourself, that want what you have...</p> <pre><code>brew install cataclysm\ncataclysm\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#nethack","title":"<code>nethack</code>","text":"<p>Nethack</p> <p>NetHack is a wonderfully silly, yet quite addictive, Dungeons &amp; Dragons-style adventure game. You play a character from one of many classes (such as wizard, ranger, or tourist), fighting your way down to retrieve the Amulet of Yendor (try saying THAT one backwards!) for your god. On the way, you might encounter a quantum mechanic or two, or perhaps King Arthur, or - if you're REALLY lucky - the Ravenous Bugblatter Beast of Traal.</p> <pre><code>brew install nethack\nnethack\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#rogue","title":"<code>rogue</code>","text":"<p>Rogue</p> <p>Rogue (also known as Rogue: Exploring the Dungeons of Doom) is a dungeon crawling video game by Michael Toy and Glenn Wichman with later contributions by Ken Arnold. Rogue was originally developed around 1980 for Unix-based minicomputer systems as a freely distributed executable. Commercial ports of the game for a range of personal computers were made by Toy, Wichman, and Jon Lane under the company A.I. Design and financially supported by the Epyx software publishers. Additional ports to modern systems have been made since by other parties using the game's now-open source code.</p> <pre><code>brew install rogue\nrogue\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#sudoku-nsuds","title":"Sudoku <code>nsuds</code>","text":"<p>nsud</p> <p>An in-development text-graphical sudoku game, with pencil marking support and very few dependencies.</p> <pre><code>brew install nsuds\nnsuds\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#sudoku-nudoku","title":"Sudoku <code>nudoku</code>","text":"<p>Ndoku</p> <p>ncurses based sudoku game</p> <pre><code>brew install nudoku\nnudoku\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#snake-nsnake","title":"Snake <code>nsnake</code>","text":"<p>nSnake</p> <p>nsnake is a clone of the classic snake game that we all used to play on our cellphones. You play this game on the terminal, with textual interface.</p> <pre><code>brew install nsnake\nnsnake\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#typespeed","title":"<code>typespeed</code>","text":"<p>A terminal based typing test.</p> <pre><code>brew install typespeed\ntypespeed\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#tt","title":"<code>tt</code>","text":"<p>A terminal based typing test.</p> <pre><code>sudo curl -L https://github.com/lemnos/tt/releases/download/v0.4.2/tt-osx -o /usr/local/bin/tt &amp;&amp; sudo chmod +x /usr/local/bin/tt\nsudo curl -o /usr/local/share/man/man1/tt.1.gz -L https://github.com/lemnos/tt/releases/download/v0.4.2/tt.1.gz\ntt\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#pacman-myman","title":"Pacman <code>myman</code>","text":"<p>MaMan</p> <p>MyMan is a text-mode videogame inspired by Namco's Pac-Man. It has been ported to a variety of operating systems using the following for user interaction: ncurses, PDcurses, XCurses, sysV-curses, old BSD curses, old VMS curses, S/Lang slcurses, Win32 console, VMS console, raw stdio and termios, GGI, Allegro, aalib, libcaca, TWin, and Carbon. It produces plain-text and HTML screenshots which may give a reasonable approximation of how it will look in a text terminal.</p> <pre><code>brew install myman\nmyman\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#space-invaders-ninvaders","title":"Space Invaders <code>ninvaders</code>","text":"<p>ninvaderws</p> <p>Invaders is an open source terminal arcade game with audio, based off of the \"Space Invaders\" classic arcade game.</p> <pre><code>brew install myman\nmyman\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/games/terminal.html#tetris","title":"<code>tetris</code>","text":"<p>Tetris</p> <p>A terminal interface for Tetris</p> <pre><code>brew install samtay/tui/tetris\ntetris\n</code></pre> <p></p>","tags":["multimedia","games","terminal"]},{"location":"multimedia/pictures/index.html","title":"Pictures","text":"","tags":["multimedia","pictures"]},{"location":"multimedia/pictures/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","pictures"]},{"location":"multimedia/pictures/ascii_art.html","title":"ASCII-Art","text":"<pre><code>  ___   _____ _____ _____ _____    ___  ______ _____\n / _ \\ /  ___/  __ \\_   _|_   _|  / _ \\ | ___ \\_   _|\n/ /_\\ \\\\ `--.| /  \\/ | |   | |   / /_\\ \\| |_/ / | |\n|  _  | `--. \\ |     | |   | |   |  _  ||    /  | |\n| | | |/\\__/ / \\__/\\_| |_ _| |_  | | | || |\\ \\  | |\n\\_| |_/\\____/ \\____/\\___/ \\___/  \\_| |_/\\_| \\_| \\_/\n</code></pre> <p>Tools for creating ASCII-Art</p> <ul> <li>ASCIIFlow (github repo AsciiFlow)</li> <li>Textik (github repo Textik)</li> <li>ASCII-Art with PlantUML</li> <li>AACircutiPy</li> </ul>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#raspberrypi-headers","title":"RaspberryPi Headers","text":"<pre><code>Pin 1 Pin2\n+3V3 [ ] [ ] +5V\nSDA1 / GPIO  2 [ ] [ ] +5V\nSCL1 / GPIO  3 [ ] [ ] GND\nGPIO  4 [ ] [ ] GPIO 14 / TXD0\nGND [ ] [ ] GPIO 15 / RXD0\nGPIO 17 [ ] [ ] GPIO 18\nGPIO 27 [ ] [ ] GND\nGPIO 22 [ ] [ ] GPIO 23\n+3V3 [ ] [ ] GPIO 24\nMOSI / GPIO 10 [ ] [ ] GND\nMISO / GPIO  9 [ ] [ ] GPIO 25\nSCLK / GPIO 11 [ ] [ ] GPIO  8 / CE0#\nGND [ ] [ ] GPIO  7 / CE1#\nID_SD / GPIO  0 [ ] [ ] GPIO  1 / ID_SC\nGPIO  5 [ ] [ ] GND\nGPIO  6 [ ] [ ] GPIO 12\nGPIO 13 [ ] [ ] GND\nMISO / GPIO 19 [ ] [ ] GPIO 16 / CE2#\nGPIO 26 [ ] [ ] GPIO 20 / MOSI\nGND [ ] [ ] GPIO 21 / SCLK\nPin 39 Pin 40\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#arduino","title":"Arduino","text":"<pre><code>+-----+\n+----[PWR]-------------------| USB |--+\n|                            +-----+  |\n|         GND/RST2  [ ][ ]            |\n|       MOSI2/SCK2  [ ][ ]  A5/SCL[ ] |   C5\n|          5V/MISO2 [ ][ ]  A4/SDA[ ] |   C4\n|                             AREF[ ] |\n|                              GND[ ] |\n| [ ]N/C                    SCK/13[ ] |   B5\n| [ ]IOREF                 MISO/12[ ] |   .\n| [ ]RST                   MOSI/11[ ]~|   .\n| [ ]3V3    +---+               10[ ]~|   .\n| [ ]5v    -| A |-               9[ ]~|   .\n| [ ]GND   -| R |-               8[ ] |   B0\n| [ ]GND   -| D |-                    |\n| [ ]Vin   -| U |-               7[ ] |   D7\n|          -| I |-               6[ ]~|   .\n| [ ]A0    -| N |-               5[ ]~|   .\n| [ ]A1    -| O |-               4[ ] |   .\n| [ ]A2     +---+           INT1/3[ ]~|   .\n| [ ]A3                     INT0/2[ ] |   .\n| [ ]A4/SDA  RST SCK MISO     TX&gt;1[ ] |   .\n| [ ]A5/SCL  [ ] [ ] [ ]      RX&lt;0[ ] |   D0\n|            [ ] [ ] [ ]              |\n|  UNO_R3    GND MOSI 5V  ____________/\n\\_______________________/\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#mando-and-baby-yoda","title":"Mando and Baby Yoda","text":"<pre><code>_\n[T]\n| |\u221a  &lt;\u2022\u2022&gt;\n( )   (  )\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#logic","title":"Logic","text":"<pre><code>=D-\n</code></pre> <pre><code>--pad_rst----+----------+----------+\n          +--+--+    +--+--+    +--+--+    +-.\n--'1'-----|D   Q|----|D   Q|----|D   Q|----|  &gt;O-----rst\n          |     |    |     |    |     |    +-\u00b4\n       +--|&gt;    | +--|&gt;    | +--|&gt;    |\n       |  +-----+ |  +-----+ |  +-----+\n--clk--+----------+----------+\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#timing-diagrams","title":"Timing Diagrams","text":"<pre><code>Mode 0\n             _   _   ____________________   _   _\n input  ____/ \\ / \\ /                    \\_/ \\ / \\______\n             _________________________________________\n output ____/                                         \\_\n\nMode 1\n             _   _   ____________________   _   _\n input  ____/ \\ / \\ /                    \\_/ \\ / \\______\n                          _______________\n output _________________/               \\______________\n</code></pre> <pre><code>Mode = 0 (reactive on rising edge)\n             ___________________________________________\n input  ____/\n             ___________________\n output ____/                   \\_______________________\n time   0s                    0.5s                    1s\n\n             _\n input  ____/ \\_________________________________________\n             ___________________\n output ____/                   \\_______________________\n time   0s                    0.5s                    1s\n\nMode = 1 (reactive on falling edge)\n        _____\n input       \\__________________________________________\n               ___________________\n output ______/                   \\_____________________\n time   0s                    0.5s                    1s\n\n             _\n input  ____/ \\_________________________________________\n                ___________________\n output ______ /                   \\____________________\n time   0s                    0.5s                    1s\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#analog-signal","title":"Analog Signal","text":"<pre><code>^\n|.-.   .-.   .-.   .-.   .-.   .  netdata                          .-.   .-\n|   '-'   '-'   '-'   '-'   '-'   is installed and running now!  -'   '-'\n+----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+---&gt;\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#cowsay","title":"Cowsay","text":"<p>The linux tool cowsay allows to dynamically create ASCII-Art. Install it via the following command:</p> <pre><code>sudo apt install cowsay\n</code></pre> <p>Some examples</p> <pre><code>$ cowsay Answer to everything is 42\n ____________________________\n&lt; Answer to everything is 42 &gt;\n ----------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n\n$ cowsay -f sheep Answer to everything is 42\n ____________________________\n&lt; Answer to everything is 42 &gt;\n ----------------------------\n  \\\n   \\\n       __\n      UooU\\.'@@@@@@`.\n      \\__/(@@@@@@@@@@)\n           (@@@@@@@@)\n           `YY~~~~YY'\n            ||    ||\n\n$ cowsay -f bud-frogs Answer to everything is 42\n ____________________________\n&lt; Answer to everything is 42 &gt;\n ----------------------------\n     \\\n      \\\n          oO)-.                       .-(Oo\n         /__  _\\                     /_  __\\\n         \\  \\(  |     ()~()         |  )/  /\n          \\__|\\ |    (-___-)        | /|__/\n          '  '--'    ==`-'==        '--'  '\n\n$ cowsay -f ghostbusters Answer to everything is 42\n ____________________________\n&lt; Answer to everything is 42 &gt;\n ----------------------------\n          \\\n           \\\n            \\          __---__\n                    _-       /--______\n               __--( /     \\ )XXXXXXXXXXX\\v.\n             .-XXX(   O   O  )XXXXXXXXXXXXXXX-\n            /XXX(       U     )        XXXXXXX\\\n          /XXXXX(              )--_  XXXXXXXXXXX\\\n         /XXXXX/ (      O     )   XXXXXX   \\XXXXX\\\n         XXXXX/   /            XXXXXX   \\__ \\XXXXX\n         XXXXXX__/          XXXXXX         \\__----&gt;\n ---___  XXX__/          XXXXXX      \\__         /\n   \\-  --__/   ___/\\  XXXXXX            /  ___--/=\n    \\-\\    ___/    XXXXXX              '--- XXXXXX\n       \\-\\/XXX\\ XXXXXX                      /XXXXX\n         \\XXXXXXXXX   \\                    /XXXXX/\n          \\XXXXXX      &gt;                 _/XXXXX/\n            \\XXXXX--__/              __-- XXXX/\n             -XXXXXXXX---------------  XXXXXX-\n                \\XXXXXXXXXXXXXXXXXXXXXXXXXX/\n                  \"\"VXXXXXXXXXXXXXXXXXXV\"\"\n</code></pre> <p>a cowfile can be manually added on the folder <code>/usr/share/cowsay/cows</code>, loaded by default are the following graphics: <code>apt</code> <code>bud-frogs</code> <code>bunny</code> <code>calvin</code> <code>cheese</code> <code>cock</code> <code>cower</code> <code>daemon</code> <code>default</code> <code>dragon</code> <code>dragon-and-cow</code> <code>duck</code> <code>elephant</code> <code>elephant-in-snake</code> <code>eyes</code> <code>flaming-sheep</code> <code>ghostbusters</code> <code>gnu</code> <code>hellokitty</code> <code>kiss</code> <code>koala</code> <code>kosh</code> <code>luke-koala</code> <code>mech-and-cow</code> <code>milk</code> <code>moofasa</code> <code>moose</code> <code>pony</code> <code>pony-smaller</code> <code>ren</code> <code>sheep</code> <code>skeleton</code> <code>snowman</code> <code>stegosaurus</code> <code>stimpy</code> <code>suse</code> <code>three-eyes</code> <code>turkey</code> <code>turtle</code> <code>tux</code> <code>unipony</code> <code>unipony-smaller</code> <code>vader</code> <code>vader-koala</code> <code>www</code></p>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#crabsay","title":"Crabsay","text":"<pre><code>_________________________________________\n&lt; Today is a great day to share CodeSnap! &gt;\n-----------------------------------------\n       \\\n        \\\n           _~^~^~_\n       \\) /  o o  \\ (/\n         '_   -   _'\n         / '-----' \\\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#images","title":"Images","text":"<pre><code>/\\\n/**\\\n/****\\   /\\\n/      \\ /**\\\n/  /\\    /    \\        /\\    /\\  /\\      /\\            /\\/\\/\\  /\\\n/  /  \\  /      \\      /  \\/\\/  \\/  \\  /\\/  \\/\\  /\\  /\\/ / /  \\/  \\\n/  /    \\/ /\\     \\    /    \\ \\  /    \\/ /   /  \\/  \\/  \\  /    \\   \\\n/  /      \\/  \\/\\   \\  /      \\    /   /    \\\n__/__/_______/___/__\\___\\_______        ______\n                             /     /\\\n                            /     /  \\\n                           /_____/----\\_    (\n                          \"     \"          ).\n                         _ ___          o (:') o\n                        (@))_))        o ~/~~\\~ o\n                                        o  o  o\n</code></pre> <pre><code>.==.        .==.\n//`^\\\\      //^`\\\\\n// ^ ^\\(\\__/)/^ ^^\\\\\n//^ ^^ ^/6  6\\ ^^ ^ \\\\\n//^ ^^ ^/( .. )\\^ ^ ^ \\\\\n// ^^ ^/\\| v\"\"v |/\\^ ^ ^\\\\\n// ^^/\\/ /  `~~`  \\ \\/\\^ ^\\\\\n-----------------------------\nHERE BE DRAGONS\n</code></pre> <pre><code>\\          SORRY            /\n \\                         /\n  \\    This page does     /\n   ]   not exist yet.    [    ,'|\n   ]                     [   /  |\n   ]___               ___[ ,'   |\n   ]  ]\\             /[  [ |:   |\n   ]  ] \\           / [  [ |:   |\n   ]  ]  ]         [  [  [ |:   |\n   ]  ]  ]__     __[  [  [ |:   |\n   ]  ]  ] ]\\ _ /[ [  [  [ |:   |\n   ]  ]  ] ] (#) [ [  [  [ :===='\n   ]  ]  ]_].nHn.[_[  [  [\n   ]  ]  ]  HHHHH. [  [  [\n   ]  ] /   `HH(\"N  \\ [  [\n   ]__]/     HHH  \"  \\[__[\n   ]         NNN         [\n   ]         N/\"         [\n   ]         N H         [\n  /          N            \\\n /           q,            \\\n/                           \\\n</code></pre> <pre><code>\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\\\u00e1 //\\\\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\\\u00e1\u00e1\u00e1 //\\\\///\\\\\\\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 //\\\\\u00e1 ///\\////\\\\\\\\\u00e1 /\\\u00e1 //\\\\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\\\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /\u00e1 ^ \\/^ ^/^\u00e1 ^\u00e1 ^ \\/^ \\/\u00e1 ^ \\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 / ^\\\u00e1\u00e1\u00e1 /\\\u00e1 / ^\u00e1\u00e1 /\u00e1 ^/ ^ ^ ^\u00e1\u00e1 ^\\ ^/\u00e1 ^^\u00e1 \\\n\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 /^\u00e1\u00e1 \\\u00e1 / ^\\/ ^ ^\u00e1\u00e1 ^ / ^\u00e1 ^\u00e1\u00e1\u00e1 ^\u00e1 \\/ ^\u00e1\u00e1 ^\u00e1 \\\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 *\n\u00e1\u00e1\u00e1\u00e1\u00e1 /\u00e1 ^ ^ \\/^\u00e1 ^\\ ^ ^ ^\u00e1\u00e1 ^\u00e1 ^\u00e1\u00e1 ^\u00e1\u00e1 ____\u00e1 ^\u00e1\u00e1 ^\u00e1 \\\u00e1\u00e1\u00e1\u00e1 /|\\\n\u00e1\u00e1\u00e1\u00e1 / ^ ^\u00e1 ^ \\ ^\u00e1 _\\___________________|\u00e1 |_____^ ^\u00e1 \\\u00e1\u00e1 /||o\\\n\u00e1\u00e1\u00e1 / ^^\u00e1 ^ ^ ^\\\u00e1 /______________________________\\ ^ ^ \\ /|o|||\\\n\u00e1\u00e1 /\u00e1 ^\u00e1 ^^ ^ ^\u00e1 /________________________________\\\u00e1 ^\u00e1 /|||||o|\\\n\u00e1 /^ ^\u00e1 ^ ^^\u00e1 ^\u00e1\u00e1\u00e1 ||___|___||||||||||||___|__|||\u00e1\u00e1\u00e1\u00e1\u00e1 /||o||||||\\\u00e1\u00e1\n\u00e1/ ^\u00e1\u00e1 ^\u00e1\u00e1 ^\u00e1\u00e1\u00e1 ^\u00e1 ||___|___||||||||||||___|__|||\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1 | |\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\n/ ^ ^ ^\u00e1 ^\u00e1 ^\u00e1 ^\u00e1\u00e1 ||||||||||||||||||||||||||||||oooooooooo| |ooooooo\nooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#animation","title":"Animation","text":"<pre><code>-\\|/-\\|/\n\u2801\u2802\u2804\u2840\u2880\u2820\u2810\u2808\n\u28fe\u28fd\u28fb\u28bf\u287f\u28df\u28ef\u28f7\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/ascii_art.html#keyboard","title":"Keyboard","text":"<pre><code>,---------------. ,---------------. ,---------------.               ,---------------.\n|F13|F14|F15|F16| |F17|F18|F19|F20| |F21|F22|F23|F24|               |Sto|Pre|Pla|Nex|\n,---.   |---------------| |---------------| |---------------| ,-----------. ,---------------. ,-------.\n|Esc|   |F1 |F2 |F3 |F4 | |F5 |F6 |F7 |F8 | |F9 |F10|F11|F12| |PrS|ScL|Pau| |VDn|VUp|Mut|Pwr| | Help  |\n`---'   `---------------' `---------------' `---------------' `-----------' `---------------' `-------'\n,-----------------------------------------------------------. ,-----------. ,---------------. ,-------.\n| \u00a7 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 | ' | ^ |Backspc| |Ins|Hom|PgU| |NmL| / | * | - | |Stp|Agn|\n|-----------------------------------------------------------| |-----------| |---------------| |-------|\n|Tab  | Q | W | E | R | T | Z | U | I | O | P | \u00fc | \u00a8 |     | |Del|End|PgD| | 7 | 8 | 9 |   | |Mnu|Und|\n|-----------------------------------------------------\\ Retn| `-----------' |-----------| + | |-------|\n|CapsL | A | S | D | F | G | H | J | K | L | \u00f6 | \u00e4 | $ |    |               | 4 |  5| 6 |   | |Sel|Cpy|\n|-----------------------------------------------------------|     ,---.     |---------------| |-------|\n|Shift| &lt; | Y | X | C | V | B | N | M | , | . | - |  ShiftR |     |Up |     | 1 | 2 | 3 |   | |Exe|Pst|\n|-----------------------------------------------------------| ,-----------. |-----------|Ent| |-------|\n|CtrlL|Sup|AltL|          Space          |AltR|Sup|ClR|CtrlR| |Lef|Dow|Rig| |  0    | . |   | |Fnd|Cut|\n`-----------------------------------------------------------' `-----------' `---------------' `-------'\n</code></pre>","tags":["multimedia","picture","ascii"]},{"location":"multimedia/pictures/color-palette.html","title":"Color Palette","text":"","tags":["multimedia","picture","color","palette"]},{"location":"multimedia/pictures/color-palette.html#dark","title":"Dark","text":"Color Hex RGB Example bg <code>#404040</code> <code>rgb(64, 64, 64)</code> text <code>#ffffff</code> <code>rgb(255, 255, 255)</code> text-secondary <code>#d0d0d0</code> <code>rgb(208, 208, 208)</code> text-tertiary <code>#808080</code> <code>rgb(128, 128, 128)</code> primary <code>#af547f</code> <code>rgb(175, 84, 127)</code> secondary <code>#577ab7</code> <code>rgb(87, 122, 183)</code> tertiary <code>#b69858</code> <code>rgb(182, 152, 88)</code> quaternary <code>#bb6967</code> <code>rgb(187, 105, 103)</code> quinary <code>#629cb9</code> <code>rgb(98, 156, 185)</code> senary <code>#a1bb5d</code> <code>rgb(161, 187, 93)</code> septenary <code>#704fb6</code> <code>rgb(112, 79, 182)</code> octonary <code>#6cbaaf</code> <code>rgb(108, 186, 175)</code> nonary <code>#71ba5b</code> <code>rgb(113, 186, 91)</code>","tags":["multimedia","picture","color","palette"]},{"location":"multimedia/pictures/color-palette.html#light","title":"Light","text":"Color Hex RGB Example bg <code>#ffffff</code> <code>rgb(255, 255, 255)</code> text <code>#000000</code> <code>rgb(0, 0, 0)</code> text-secondary <code>#404040</code> <code>rgb(64, 64, 64)</code> text-tertiary <code>#808080</code> <code>rgb(128, 128, 128)</code> primary <code>#af547f</code> <code>rgb(175, 84, 127)</code> secondary <code>#577ab7</code> <code>rgb(87, 122, 183)</code> tertiary <code>#b69858</code> <code>rgb(182, 152, 88)</code> quaternary <code>#bb6967</code> <code>rgb(187, 105, 103)</code> quinary <code>#629cb9</code> <code>rgb(98, 156, 185)</code> senary <code>#a1bb5d</code> <code>rgb(161, 187, 93)</code> septenary <code>#704fb6</code> <code>rgb(112, 79, 182)</code> octonary <code>#6cbaaf</code> <code>rgb(108, 186, 175)</code> nonary <code>#71ba5b</code> <code>rgb(113, 186, 91)</code>","tags":["multimedia","picture","color","palette"]},{"location":"multimedia/pictures/graphviz.html","title":"Graphviz","text":"","tags":["multimedia","picture","graphviz"]},{"location":"multimedia/pictures/graphviz.html#state-machines","title":"State Machines","text":"<pre><code>digraph foo {\n  \"bar\" -&gt; \"baz\";\n}\n</code></pre> <pre><code>digraph finite_state_machine {\n  rankdir=TB;\n  size=\"100\";\n  graph [fontsize=11];\n  edge  [fontsize=11];\n  start [fontsize=11, shape=\"point\"]\n  node  [fontsize=11, shape = doublecircle]; Idle;\n  node  [fontsize=11, shape = ellipse]; Starting \"3v3_Secondary_en\" \"3v3_SecCapLoad\" \"0v9_en\" \"1v0_en\" \"2v5_en\" \"1v1_en\" \"2v5_A_en\" \"1v5_A_en\" \"PWRGood_ADM1184\" \"PWR_Ready\";\n  start                  -&gt; Idle [ label = \"start\"];\n  Idle                   -&gt; Starting;\n  Starting               -&gt; \"3v3_Secondary_en\";\n  \"3v3_Secondary_en\"     -&gt; \"3v3_SecCapLoad\" [label = \"&gt;1ms\"];\n  \"3v3_SecCapLoad\"       -&gt; \"0v9_en\" [label = \"&gt;1ms\"];\n  \"0v9_en\"               -&gt; \"1v0_en\" [label = \"&gt;1ms and 0v9_Good\"];\n  \"1v0_en\"               -&gt; \"2v5_en\";\n  \"2v5_en\"               -&gt; \"1v1_en\";\n  \"1v1_en\"               -&gt; \"2v5_A_en\";\n  \"2v5_A_en\"             -&gt; \"1v5_A_en\";\n  \"1v5_A_en\"             -&gt; \"PWRGood_ADM1184\";\n  \"PWRGood_ADM1184\"      -&gt; \"PWR_Ready\" [label = \"&gt;1ms\"];\n  \"PWR_Ready\"            -&gt; \"Idle\" [label = \"System_Restart\"];\n}\n</code></pre> <pre><code>digraph finite_state_machine {\n  rankdir=TB;\n  size=\"100\";\n  graph [fontsize=11];\n  edge  [fontsize=11];\n  start [fontsize=11, shape=\"point\"]\n  node  [fontsize=11, shape = doublecircle]; Idle;\n  node  [fontsize=11, shape = ellipse]; Run Warning_Signalling_OK;\n  start                  -&gt; Idle [ label = \"start\"];\n  Idle                   -&gt; Run [ label = \"Go_Signalling\" ];\n  Run                    -&gt; Warning_Signalling_OK [ label = \"WarningTimeout&gt;5sec\" ];\n  Warning_Signalling_OK  -&gt; Idle;\n}\n</code></pre> <pre><code>digraph finite_state_machine {\n  rankdir=TB;\n  size=\"100\";\n  graph [fontsize=11];\n  edge  [fontsize=11];\n  start [fontsize=11, shape=\"point\"]\n  node  [fontsize=11, shape = doublecircle]; Idle;\n  node  [fontsize=11, shape = ellipse]; Live CriticalFail WarningFail WarningFail_Signalling WarningFail_Confirmed Disable_PowerSupply System_Restart;\n  start                  -&gt; Idle [ label = \"start\"];\n  Idle                   -&gt; Live [ label = \"PWR_Ready\"];\n  Live                   -&gt; CriticalFail [ label = \"CriticalFail\"];\n  Live                   -&gt; WarningFail [ label = \"WarningFail\"];\n  WarningFail            -&gt; WarningFail_Signalling;\n  WarningFail_Signalling -&gt; WarningFail_Confirmed [ label = \"timeout &gt; 5sec\"];\n  WarningFail_Signalling -&gt; CriticalFail [ label = \"CriticalFail\"];\n  WarningFail_Confirmed  -&gt; CriticalFail [ label = \"WarningFail\"];\n  WarningFail_Confirmed  -&gt; Live;\n  CriticalFail           -&gt; Disable_PowerSupply;\n  Disable_PowerSupply    -&gt; System_Restart;\n  System_Restart         -&gt; Idle;\n}\n</code></pre> <pre><code>digraph finite_state_machine {\n  rankdir=TB;\n  size=\"100\";\n  graph [fontsize=11];\n  edge  [fontsize=11];\n  start [fontsize=11, shape=\"point\"]\n  node  [fontsize=11, shape = doublecircle]; Idle;\n  node  [fontsize=11, shape = ellipse]; Monitoring PWRFail \"3v3_PWRFail\";\n  start                  -&gt; Idle [ label = \"start\"];\n  Idle                   -&gt; Monitoring [ label = \"PWR_Ready\" ];\n  Monitoring             -&gt; PWRFail [ label = \"not(PWR_Good)\" ];\n  PWRFail                -&gt; \"3v3_PWRFail\" [ label = \"not(1v1) or not(1v5) or not(2v5)\" ];\n  \"3v3_PWRFail\"          -&gt; Idle [ label = \"PWR_Ready\" ];\n}\n</code></pre>","tags":["multimedia","picture","graphviz"]},{"location":"multimedia/pictures/icons.html","title":"Icons","text":"<ul> <li>SVG Repo</li> <li>Flaticons</li> <li>Picons</li> </ul>","tags":["multimedia","picture","icons"]},{"location":"multimedia/pictures/mermaid.html","title":"Mermaid","text":"<ul> <li>Mermaid Webpage</li> <li>Mermaid Live Editor</li> </ul>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#graph","title":"Graph","text":"<pre><code>graph  TD;\n\n  A --&gt; B;\n  A --&gt; C;\n  B --&gt; D;\n  C --&gt; D;\n</code></pre> <pre><code>graph  TD;\n\n  A --&gt; B;\n  A --&gt; C;\n  B --&gt; D;\n  C --&gt; D;</code></pre> <pre><code>graph TD\n    A[Christmas] --&gt;|Get money| B(Go shopping)\n    B --&gt; C{Let me think}\n    C --&gt;|One| D[Laptop]\n    C --&gt;|Two| E[iPhone]\n    C --&gt;|Three| F[fa:fa-car Car]\n</code></pre> <pre><code>graph TD\n    A[Christmas] --&gt;|Get money| B(Go shopping)\n    B --&gt; C{Let me think}\n    C --&gt;|One| D[Laptop]\n    C --&gt;|Two| E[iPhone]\n    C --&gt;|Three| F[fa:fa-car Car]</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#state-diagram","title":"State Diagram","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; Still\n    Still --&gt; [*]\n    Still --&gt; Moving\n    Moving --&gt; Still\n    Moving --&gt; Crash\n    Crash --&gt; [*]\n</code></pre> <pre><code>stateDiagram-v2\n    [*] --&gt; Still\n    Still --&gt; [*]\n    Still --&gt; Moving\n    Moving --&gt; Still\n    Moving --&gt; Crash\n    Crash --&gt; [*]</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#flowchart","title":"Flowchart","text":"<pre><code>flowchart LR;\n    A--&gt;B;\n    B--&gt;C;\n    C--&gt;D;\n    click A callback \"Tooltip for a callback\"\n    click B \"http://www.github.com\" \"This is a tooltip for a link\"\n    click A call callback() \"Tooltip for a callback\"\n    click B href \"http://www.github.com\" \"This is a tooltip for a link\"\n</code></pre> <pre><code>flowchart LR;\n    A--&gt;B;\n    B--&gt;C;\n    C--&gt;D;\n    click A callback \"Tooltip for a callback\"\n    click B \"http://www.github.com\" \"This is a tooltip for a link\"\n    click A call callback() \"Tooltip for a callback\"\n    click B href \"http://www.github.com\" \"This is a tooltip for a link\"</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#gantt","title":"Gantt","text":"<pre><code>gantt\n  dateFormat YYYY-MM-DD\n  title Gantt diagram\n  excludes weekdays 2014-01-10\n\n  section A section\n  Completed task :done,   des1, 2014-01-06,2014-01-08\n  Active task    :active, des2, 2014-01-09,3d\n  Future task    :        des3, after des2, 5d\n  Future task2   :        des4, after des3, 10d\n</code></pre> <pre><code>gantt\n  dateFormat YYYY-MM-DD\n  title Gantt diagram\n  excludes weekdays 2014-01-10\n\n  section A section\n  Completed task :done,   des1, 2014-01-06,2014-01-08\n  Active task    :active, des2, 2014-01-09,3d\n  Future task    :        des3, after des2, 5d\n  Future task2   :        des4, after des3, 10d</code></pre> <pre><code>gantt\n    dateFormat  YYYY-MM-DD\n    title       Adding GANTT diagram functionality to mermaid\n    excludes    weekends\n    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".)\n\n    section A section\n    Completed task            :done,    des1, 2014-01-06,2014-01-08\n    Active task               :active,  des2, 2014-01-09, 3d\n    Future task               :         des3, after des2, 5d\n    Future task2              :         des4, after des3, 5d\n\n    section Critical tasks\n    Completed task in the critical line :crit, done, 2014-01-06,24h\n    Implement parser and jison          :crit, done, after des1, 2d\n    Create tests for parser             :crit, active, 3d\n    Future task in critical line        :crit, 5d\n    Create tests for renderer           :2d\n    Add to mermaid                      :1d\n    Functionality added                 :milestone, 2014-01-25, 0d\n\n    section Documentation\n    Describe gantt syntax               :active, a1, after des1, 3d\n    Add gantt diagram to demo page      :after a1  , 20h\n    Add another diagram to demo page    :doc1, after a1  , 48h\n\n    section Last section\n    Describe gantt syntax               :after doc1, 3d\n    Add gantt diagram to demo page      :20h\n    Add another diagram to demo page    :48h\n</code></pre> <pre><code>gantt\n    dateFormat  YYYY-MM-DD\n    title       Adding GANTT diagram functionality to mermaid\n    excludes    weekends\n    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".)\n\n    section A section\n    Completed task            :done,    des1, 2014-01-06,2014-01-08\n    Active task               :active,  des2, 2014-01-09, 3d\n    Future task               :         des3, after des2, 5d\n    Future task2              :         des4, after des3, 5d\n\n    section Critical tasks\n    Completed task in the critical line :crit, done, 2014-01-06,24h\n    Implement parser and jison          :crit, done, after des1, 2d\n    Create tests for parser             :crit, active, 3d\n    Future task in critical line        :crit, 5d\n    Create tests for renderer           :2d\n    Add to mermaid                      :1d\n    Functionality added                 :milestone, 2014-01-25, 0d\n\n    section Documentation\n    Describe gantt syntax               :active, a1, after des1, 3d\n    Add gantt diagram to demo page      :after a1  , 20h\n    Add another diagram to demo page    :doc1, after a1  , 48h\n\n    section Last section\n    Describe gantt syntax               :after doc1, 3d\n    Add gantt diagram to demo page      :20h\n    Add another diagram to demo page    :48h</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#journey","title":"Journey","text":"<pre><code>journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 5: Me\n</code></pre> <pre><code>journey\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 5: Me</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#sequence-diagram","title":"Sequence Diagram","text":"<pre><code>sequenceDiagram\n    Alice-&gt;&gt;+John: Hello John, how are you?\n    Alice-&gt;&gt;+John: John, can you hear me?\n    John--&gt;&gt;-Alice: Hi Alice, I can hear you!\n    John--&gt;&gt;-Alice: I feel great!\n</code></pre> <pre><code>sequenceDiagram\n    Alice-&gt;&gt;+John: Hello John, how are you?\n    Alice-&gt;&gt;+John: John, can you hear me?\n    John--&gt;&gt;-Alice: Hi Alice, I can hear you!\n    John--&gt;&gt;-Alice: I feel great!</code></pre> <pre><code>sequenceDiagram\n\n  participant V as VISITOR\n  participant C as CLIENT\n  participant I as IDENTITY SERVICE\n  participant D as DATABASE\n  participant M as MAILER\n\n  V-&gt;&gt;C: sign up request\n  C-&gt;&gt;V: registration page\n  V-&gt;&gt;C: desired credentials\n  alt Invalid Credentials\n    C-&gt;&gt;V: validation error\n  else Valid Credentials\n    C-&gt;&gt;I: create user\n  end\n  alt Already Registered\n    I-&gt;&gt;C: validation error\n    C-&gt;&gt;V: login page\n  else Registration Fails\n    I-&gt;&gt;D: insert user record\n    I-&gt;&gt;D: insert session record\n    D-&gt;&gt;I: database error\n    I-&gt;&gt;C: registration error\n    C-&gt;&gt;V: server error\n  else Registration Succeeds\n    I-&gt;&gt;D: insert user record\n    I-&gt;&gt;D: insert session record\n    I--&gt;&gt;M: send verification email\n    I-&gt;&gt;C: session token\n    C-&gt;&gt;V: welcome page\n  end\n</code></pre> <pre><code>sequenceDiagram\n\n  participant V as VISITOR\n  participant C as CLIENT\n  participant I as IDENTITY SERVICE\n  participant D as DATABASE\n  participant M as MAILER\n\n  V-&gt;&gt;C: sign up request\n  C-&gt;&gt;V: registration page\n  V-&gt;&gt;C: desired credentials\n  alt Invalid Credentials\n    C-&gt;&gt;V: validation error\n  else Valid Credentials\n    C-&gt;&gt;I: create user\n  end\n  alt Already Registered\n    I-&gt;&gt;C: validation error\n    C-&gt;&gt;V: login page\n  else Registration Fails\n    I-&gt;&gt;D: insert user record\n    I-&gt;&gt;D: insert session record\n    D-&gt;&gt;I: database error\n    I-&gt;&gt;C: registration error\n    C-&gt;&gt;V: server error\n  else Registration Succeeds\n    I-&gt;&gt;D: insert user record\n    I-&gt;&gt;D: insert session record\n    I--&gt;&gt;M: send verification email\n    I-&gt;&gt;C: session token\n    C-&gt;&gt;V: welcome page\n  end</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#class-diagram","title":"Class Diagram","text":"<pre><code>classDiagram\n    Animal &lt;|-- Duck\n    Animal &lt;|-- Fish\n    Animal &lt;|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }\n</code></pre> <pre><code>classDiagram\n    Animal &lt;|-- Duck\n    Animal &lt;|-- Fish\n    Animal &lt;|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#pie-chart","title":"Pie Chart","text":"<pre><code>pie title Pets adopted by volunteers\n    \"Dogs\" : 386\n    \"Cats\" : 85\n    \"Rats\" : 15\n</code></pre> <pre><code>pie title Pets adopted by volunteers\n    \"Dogs\" : 386\n    \"Cats\" : 85\n    \"Rats\" : 15</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/mermaid.html#er-diagram","title":"ER Diagram","text":"<pre><code>erDiagram\n          CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n          CUSTOMER ||--o{ ORDER : places\n          CUSTOMER ||--o{ INVOICE : \"liable for\"\n          DELIVERY-ADDRESS ||--o{ ORDER : receives\n          INVOICE ||--|{ ORDER : covers\n          ORDER ||--|{ ORDER-ITEM : includes\n          PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n          PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n</code></pre> <pre><code>erDiagram\n          CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n          CUSTOMER ||--o{ ORDER : places\n          CUSTOMER ||--o{ INVOICE : \"liable for\"\n          DELIVERY-ADDRESS ||--o{ ORDER : receives\n          INVOICE ||--|{ ORDER : covers\n          ORDER ||--|{ ORDER-ITEM : includes\n          PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n          PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"</code></pre>","tags":["multimedia","picture","mermaid"]},{"location":"multimedia/pictures/plantuml.html","title":"PlantUml","text":"<ul> <li>PlantUML Reference Guide</li> <li>PlantUML Webpage</li> <li>PlantUML Ashley Doc</li> <li>PlantText Live Editor</li> </ul>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#skinparam","title":"Skinparam","text":"<p>With the <code>skinparam</code> you can change the feel and design of the whole Diagram</p>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#shadows","title":"Shadows","text":"<pre><code>skinparam shadowing false\n</code></pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#colors","title":"Colors","text":"<pre><code>@startuml\ncolors\n@enduml\n</code></pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#black-and-white","title":"Black and White","text":"<pre><code>skinparam monochrome true\n</code></pre> <pre><code>@startuml\n\nskinparam monochrome true\nskinparam shadowing false\n\nactor User\nparticipant \"First Class\" as A\nparticipant \"Second Class\" as B\nparticipant \"Last Class\" as C\n\nUser -&gt; A: DoWork\nactivate A\n\nA -&gt; B: Create Request\nactivate B\n\nB -&gt; C: DoWork\nactivate C\nC --&gt; B: WorkDone\ndestroy C\n\nB --&gt; A: Request Created\ndeactivate B\n\nA --&gt; User: Done\ndeactivate A\n\n@enduml\n</code></pre> <pre>45c89083131025cbca3f22cc25e8f17f2ac739ced8878bf995f81977c1bc0ea7308e0f199467379f5317f568c929789ccc0b27dc26a01d8e9487a6dbb17c26bc</pre><pre>9fd3c0c70681d38e6539ed571b232e0ad3d8f3fa2405b381aa513c316e2dea3366ecb439357295779fb982c83bde58ee50b66456f923fb2d1accb221314a7d4b</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#white-and-black","title":"White and Black","text":"<pre><code>skinparam monochrome reverse\n</code></pre> <pre><code>@startuml\n\nskinparam monochrome reverse\nskinparam shadowing false\n\nactor User\nparticipant \"First Class\" as A\nparticipant \"Second Class\" as B\nparticipant \"Last Class\" as C\n\nUser -&gt; A: DoWork\nactivate A\n\nA -&gt; B: Create Request\nactivate B\n\nB -&gt; C: DoWork\nactivate C\nC --&gt; B: WorkDone\ndestroy C\n\nB --&gt; A: Request Created\ndeactivate B\n\nA --&gt; User: Done\ndeactivate A\n\n@enduml\n</code></pre> <pre>c9bdc4ec6396ebf745c99cb3a4246861a729a2ec63d024b6dcf29846469ec6539ea6e43d844e419de9dcb06b9d27cc129a3dc67edf8c7f97555e0475f8a00109</pre><pre>37929ad450acdd136b17627be8cc27ab0a35d9d50feb8168bad89d6ec6ba2301c6af4dfe6046621c1f7f0c301aec07b897a6fac1e4cd9ff945d83d9da60b0a8d</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#sequence-diagram","title":"Sequence Diagram","text":"<pre><code>participant Alice\nparticipant \"The **Famous** Bob\" as Bob\n\nAlice -&gt; Bob : hello --there--\n... Some ~~long delay~~ ...\nBob -&gt; Alice : ok\nnote left\n  This is **bold**\n  This is //italics//\n  This is \"\"monospaced\"\"\n  This is --stroked--\n  This is __underlined__\n  This is ~~waved~~\nend note\n\nAlice -&gt; Bob : A //well formatted// message\nnote right of Alice\nThis is &lt;back:cadetblue&gt;&lt;size:18&gt;displayed&lt;/size&gt;&lt;/back&gt;\n__left of__ Alice.\nend note\nnote left of Bob\n&lt;u:red&gt;This&lt;/u&gt; is &lt;color #118888&gt;displayed&lt;/color&gt;\n**&lt;color purple&gt;left of&lt;/color&gt; &lt;s:red&gt;Alice&lt;/strike&gt; Bob**.\nend note\nnote over Alice, Bob\n&lt;w:#FF33FF&gt;This is hosted&lt;/w&gt; by &lt;img img/plantuml-logo.png&gt;\nend note\n</code></pre> <pre>0268495a948c7163f03f123969baa3f2b0623db49563380361fa146197cb3bf55c5cc2fbad6a311b5b9f52ed06fe82f4746c03711b03bbbf3bb6e0bb88263182</pre><pre>e3cb7c0822ffdd0473603188e1f52b4f58c6898802ca2085402d5f85d91547c4a739a55c0c2ec6c77143a571377f7f87c018d2d717c0d128914dd45fff4038b1</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#use-case-diagram","title":"Use Case Diagram","text":"<pre>93adddb687a8cabb5af4801c5402a563a5f727c1bafb621d8b2e31f4cc7833c596d93ab4512c1e30feb0cc132ad48fcdb49fa4932a3bc773cdee173a0072162b</pre><pre>57457318776b923d8898b73719ebc6ccb8ce4ec5c4bd9f31f58a18f1281e18563b83088b1961447ab2be70a85d57275b9f76ee2a877e64607726e98365d9cf7f</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#class-diagram","title":"Class Diagram","text":"<pre><code>Object &lt;|-- ArrayList\n\nObject : equals()\nArrayList : Object[] elementData\nArrayList : size()\n</code></pre> <pre>0d2e0363b6d2069e1571d5b1460861bc2bf9114db94654dd15bbe897dbcb350deabd7ef60fc8fb70e196cbc9a46c1ae26d77ca0ca1f762df50977b63b307421c</pre><pre>4990da561099f5aa78026f694bfed1e32c8162c69fcebfd4d0269fb506935724802e19d932f7115d3db34370735b05efd8e6dcf69f4f950261d6a01ddc843c7a</pre> <pre><code>class Foo1 {\n  You can use\n  several lines\n  ..\n  as you want\n  and group\n  ==\n  things together.\n  __\n  You can have as many groups\n  as you want\n  --\n  End of class\n}\n\nclass User {\n  .. Simple Getter ..\n  + getName()\n  + getAddress()\n  .. Some setter ..\n  + setName()\n  __ private data __\n  int age\n  -- encrypted --\n  String password\n}\n</code></pre> <pre>07483db0ce0595aed9ef2ab5337a965e1b1a2f326d5731330e1c942ed914aacae94a54c913e148544541c94a41db6392052f41bfb039203a05f329a42a022040</pre><pre>5b33448e95b47797f29a6329132b811c1703ca62dacc351b52c4e9510e1d01371615637f1e75cdae56c6d1c7a837e6796cd23f049c6101854bbe25600309232b</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#activity-diagram","title":"Activity Diagram","text":"<pre><code>(*) --&gt; \"Initialization\"\n\nif \"Some Test\" then\n  --&gt;[true] \"Some Activity\"\n  --&gt; \"Another activity\"\n  -right-&gt; (*)\nelse\n  -&gt;[false] \"Something else\"\n  --&gt;[Ending process] (*)\nendif\n</code></pre> <pre>4996bb1f072545d195c329d138bdb1e490b039d9014448558d3c2c6f53fdda3b24ba9efee038b1b974c94ca21d07d2299d493cd6503d6d638e0c6f760b523dce</pre><pre>b4eed1b25d3b300d166fc05033758fa60f7f0e218ec7cf46f75c67d88be603f1a8467e77a799f13d47224d573a62eab3db5ad2b7e832626808879e64d68d4f27</pre> <pre><code>title Servlet Container\n\n(*) --&gt; \"ClickServlet.handleRequest()\"\n--&gt; \"new Page\"\n\nif \"Page.onSecurityCheck\" then\n  -&gt;[true] \"Page.onInit()\"\n\n  if \"isForward?\" then\n  -&gt;[no] \"Process controls\"\n\n  if \"continue processing?\" then\n  --&gt;[yes] ===RENDERING===\n  else\n  --&gt;[no] ===REDIRECT_CHECK===\n  endif\n\n  else\n  --&gt;[yes] ===RENDERING===\n  endif\n\n  if \"is Post?\" then\n  --&gt;[yes] \"Page.onPost()\"\n  --&gt; \"Page.onRender()\" as render\n  --&gt; ===REDIRECT_CHECK===\n  else\n  --&gt;[no] \"Page.onGet()\"\n  --&gt; render\n  endif\n\nelse\n  --&gt;[false] ===REDIRECT_CHECK===\nendif\n\nif \"Do redirect?\" then\n-&gt;[yes] \"redirect request\"\n--&gt; ==BEFORE_DESTROY===\nelse\nif \"Do Forward?\" then\n  -left-&gt;[yes] \"Forward request\"\n  --&gt; ==BEFORE_DESTROY===\nelse\n  -right-&gt;[no] \"Render page template\"\n  --&gt; ==BEFORE_DESTROY===\nendif\nendif\n\n--&gt; \"Page.onDestroy()\"\n--&gt;(*)\n</code></pre> <pre>c7dee6d09d0b7fe244bafb566baf114d9450a444398211614900169673a2f095a4d03e502ac692ccda795d66f5d50efd1cab8c579fb49ad3828c0b8b91966151</pre><pre>afe895a10cba98b1c85bca17631dc0548e4f6a4d813aea05f067dfb49b7c0b1ccfed7169ff5935ae66740ed89269f58523adbd28a68122e3def63c44141c7698</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#mindmaps","title":"MindMaps","text":"<pre><code>@startmindmap\n+ OS\n++ Ubuntu\n+++ Linux Mint\n+++ Kubuntu\n+++ Lubuntu\n+++ KDE Neon\n++ LMDE\n++ SolydXK\n++ SteamOS\n++ Raspbian\n-- Windows 95\n-- Windows 98\n-- Windows NT\n--- Windows 8\n--- Windows 10\n@endmindmap\n</code></pre> <pre>61e5386debe1f5c9de01e1cd4ee52f315e9d8bbe24d8107feee240fcfd1eca9b934f8573eeb7cd0635176823a752b5b964b10f2083a7f9eceb787b1b9bb02b46</pre><pre>592914e29ad7237cb384a37c6e77de7ec877700e8c2f35b8d8919ce601ee3306826e05c1812e9a2df28054a2de77d457ab74c3a00d9eafc03b3af94b6c52fb30</pre> <pre><code>@startmindmap\n\n&lt;style&gt;\nmindmapDiagram {\n  .pink {\n    BackgroundColor #da6d9c\n  }\n  .pink_alt {\n    BackgroundColor #cc5254\n  }\n  .pink_alt2 {\n    BackgroundColor #B02b56\n  }\n  .yellow {\n    BackgroundColor #f5c400\n  }\n  .green {\n    BackgroundColor #00925a\n  }\n  .blue {\n    BackgroundColor #0095d8\n  }\n  .orange {\n    BackgroundColor #eb6a28\n  }\n}\n&lt;/style&gt;\n\n* Infotronics \\n Engineer Everything &lt;&lt;pink&gt;&gt;\n** Computer Science &lt;&lt;pink_alt&gt;&gt;\n***_ Machine Learning\n***_ Data Science\n***_ Algorithms\n** Operational Technology (OT) &lt;&lt;&gt;&gt;\n***_ Robust Software\n***_ Security\n***_ Industry 4.0\n** Electronics &lt;&lt;green&gt;&gt;\n***_ Electronic Circuits\n***_ Embedded Systems\n***_ Wireless Communication\n** Systems Engineering &lt;&lt;yellow&gt;&gt;\n***_ Programming\n***_ Model-Driven Development\n***_ System On Chip\nleft side\n** Industrial Applications &lt;&lt;blue&gt;&gt;\n***_ Industrial Control Systems\n***_ Cyber-Physical Systems\n***_ Robotics\n** Constrained Systems &lt;&lt;orange&gt;&gt;\n***_ IoT (Internet of Things)\n***_ IIoT (Industrial Internet of Things)\n***_ Security-related Systems\n***_ Space Applications\n** Real-Time Programming &lt;&lt;pink_alt2&gt;&gt;\n***_ Real-Time Operating Systems\n***_ Communication Protocols\n***_ Deterministic Applications\n@endmindmap\n</code></pre> <pre>a7337db66466747255193a11b7070e819af0f95b33ae11e6fbaba82e474fa9fa658e4534dcf69a2dc6390715ccecb053fd46da825a46af53c7b5da6b5ad78451</pre><pre>764f70ea13eb201ce3d47466b464659b3381cc45393dca60dab4cee674cb7a421e854975dd745dd4a5e8bfc2b91ede951d69e730eb54a3f8666c0a6364124136</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#wbs-work-breakdown-structure","title":"WBS Work Breakdown Structure","text":"<pre><code>@startwbs\n* Business Process Modelling WBS\n** Launch the project\n*** Complete Stakeholder Research\n*** Initial Implementation Plan\n** Design phase\n*** Model of AsIs Processes Completed\n**** Model of AsIs Processes Completed1\n**** Model of AsIs Processes Completed2\n*** Measure AsIs performance metrics\n*** Identify Quick Wins\n** Complete innovate phase\n@endwbs\n</code></pre> <pre>702270035a5be4c982efafbabe88716833d4c33f726dd9acd3bb37b64b08c5fce887063d8d03b297bdc91393cfe608748cbad797c3677ea01ae0b92b5cc139fe</pre><pre>4bec8f873e970c23e2883c79f26987808e4c03682881ae3617313ddedc4fc98addeaca151a6835e831a332137b616975b5ff5730982ad43aef24f757914a65ab</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#gantt-chart","title":"GANTT Chart","text":"<pre><code>@startgantt\nProject starts 2020/05/01\nsaturday are closed\nsunday are closed\nProject starts the 1th of may 2020\n[Test prototype] lasts 10 days\n[Prototype completed] happens at [Test prototype]'s end\n[Setup assembly line] lasts 12 days\n[Setup assembly line] starts at [Test prototype]'s end\n@endgantt\n</code></pre> <pre>8de6cba87afcfd6cd1d92eab9b271d4282a99635c09c2d23656e3876f85b79c6ca3a8e4a2b1ccea4d25ad73005a1184c7a056dd02b5db0f7882e870af77fb1dd</pre><pre>625cf66790997b1e060a540db1336074062ecb1a3480d6898b4950d7465d19741b02c0828bc29bc3e5f9f7f8dd3d1f87cb5ff7fd1b0e84700a53f020473e0f30</pre> <pre><code>@startgantt\nproject starts 2021/06/01\nsaturday are closed\nsunday are closed\nprintscale weekly\n\n[WP1 Literature Research] starts at 2021/06/01\n[WP1 Literature Research] lasts 3 weeks\n\n[WP2 External Survey] starts at [WP1 Literature Research]'s start\n[WP2 External Survey] ends at [WP1 Literature Research]'s end\n\n[WP3 Synthesising State of the Art] starts at [WP2 External Survey]'s end\n[WP3 Synthesising State of the Art] lasts 2 weeks\n\n[Theoretical research completed] happens at [WP3 Synthesising State of the Art]'s end\n\n[WP4 Selection practial application] starts at [WP3 Synthesising State of the Art]'s end\n[WP4 Selection practial application] lasts 2 week\n\n[WP5 Data Collection] starts at [WP4 Selection practial application]'s end\n[WP5 Data Collection] lasts 3 weeks\n\n[WP6 ML Model Selection] starts at [WP4 Selection practial application]'s end\n[WP6 ML Model Selection] lasts 2 weeks\n\n[WP7 ML Model Implementation] starts at [WP6 ML Model Selection]'s end\n[WP7 ML Model Implementation] lasts 5 weeks\n\n[Implementation completed] happens at [WP7 ML Model Implementation]'s end\n\n[WP8 Fieldtest] starts at [WP7 ML Model Implementation]'s end\n[WP8 Fieldtest] ends at 2021/09/30\n\n[Write Thesis Report] starts at 2021/06/01\n[Write Thesis Report] ends at 2021/09/30\n\n' Color definitions\n[WP1 Literature Research] is colored in LightSteelBlue/DimGrey\n[WP2 External Survey] is colored in LightSteelBlue/DimGrey\n[WP3 Synthesising State of the Art] is colored in LightSteelBlue/DimGrey\n[WP4 Selection practial application] is colored in LightGreen/DimGrey\n[WP5 Data Collection] is colored in LightGreen/DimGrey\n[WP6 ML Model Selection] is colored in LightGreen/DimGrey\n[WP7 ML Model Implementation] is colored in LightGreen/DimGrey\n[WP8 Fieldtest] is colored in SandyBrown/Sienna\n\n[Write Thesis Report] is colored in LightSteelBlue/DimGrey\n\n@endgantt\n</code></pre> <pre>fa2a34ad47bfc570d39b3ef5fe88d7dc25e771e0b041650c04afa6a47ab14410ead88b132c8fa24a5b47e53ba586ac5e6af362aef62d07b12d0f0dcf8ab0628e</pre><pre>8197a24e5c4851357ca7124ee8a1d95c58fb388fcb4c49b68af74cf45240f27380c074ce79df2efae3221d0cb0c04536d2609d02f4d2796353bbe44e2f4a45f2</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/plantuml.html#timing-diagram","title":"Timing Diagram","text":"<pre><code>@startuml\nclock clk with period 1\nbinary \"Enable\" as EN\n\n@0\nEN is low\n\n@5\nEN is high\n\n@10\nEN is low\n@enduml\n</code></pre> <pre>5632c1b5496ac6a8f6e83664f257ff84963d3ce19726a498bbe4b1935e17c26728a6e4d4f531338291daa4257a67c39e9ddd0e156eb519155e8faa5a93e652bb</pre><pre>9ecc1f7a22305acffff35ffe1f300d4378969719f6dabac2c36d0e14700cb8ec47932d8a3325512d217b106cb6b9297be927ba82033901eb99d96b23eaa13a53</pre>","tags":["multimedia","picture","plantuml"]},{"location":"multimedia/pictures/wavedrom.html","title":"Wavedrom","text":"<ul> <li>Wavedrom Paper</li> </ul>","tags":["multimedia","picture","wavedrom"]},{"location":"multimedia/pictures/wavedrom.html#timing-diagrams","title":"Timing Diagrams","text":"<pre><code>{\n  signal: [\n    { name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }\n  ]\n}\n</code></pre> <pre><code>{ // Wavedrom Config\n  config: {\n    hscale: 1,      // horizontal scale\n    skin:'default', // narrow\n  },\n  // Title\n  head:{\n    text:'Timing Xaar1003 Explanation',\n    tick:0, // Numeration top\n  },\n  // Signal\n  signal: [\n    { name: \"DA-[0..3]\", wave: 'z23.4z........23.4z........', data: [\"1\", \"2..255\", \"256\",\"1\", \"2..255\", \"256\"]},\n    { name: \"DCLKA\", wave: 'ln...l........n...l........', data: [\"1\", \"2..255\"], node: '.....a........b'},\n    { name: \"PCLK\", wave: '0......10.10.10....50.50.50', data:[\"CycleA\",\"CycleB\",\"CycleC\"], node: '.......c..d' },\n    { name: \"SCLK\", wave: 'N..........................' },\n  ],\n  // Arrows\n  edge: [\n    'a&lt;-&gt;b t_fire',\n    'c&lt;-&gt;d t_Cycle',\n  ],\n  // Footer\n  foot: {\n    text:['tspan', 'zas created for Xaar 28.04.2017',\n    ],\n    tock:0, // Numeration bottom\n  },\n}\n</code></pre> <pre><code>{ // Wavedrom Config\n  config: {\n    hscale: 1,      // horizontal scale\n    skin:'default', // narrow\n  },\n  // Title\n  head:{\n    text:'PrintBuffer timing',\n    tick:0, // Numeration top\n  },\n  // Signals\n  signal: [\n    ['input',\n      {name: 'register',      wave: '010....|.10...' , node: '.a.......b..'},\n      {name: 'pContainer',    wave: 'x3.x...|.4.x..' , data: ['pC1', 'pC2'], phase: 0.5},\n      {name: 'trig',          wave: 'pPp....|.Pp...'},\n      {name: 'position',      wave: '=======|......' , data: ['p0','p1','p2','p3','p4','p5','p..']},\n      {name: 'Count',         wave: '==.....|.=....' , data: ['0', '1', '2']},\n      {name: 'first',         wave: '=......|......' , data: ['1']},\n      {name: 'next',          wave: '==.....|.=....' , data: ['1', '2', '3']}\n    ],\n    ['output',\n      {name: 'shifted trig.', wave: '0....1..0..|..' , node: '.....e..f..'},\n      {name: 'pContainer',    wave: 'x....3..x..|..' , data: ['pC1', 'pC2']},\n      {name: 'Count',         wave: '=.......=..|..' , data: ['1', '0']},\n      {name: 'first',         wave: '=.......=..|..' , data: ['1', '2']},\n      {name: 'next',          wave: '=..........|..' , data: ['2', '3']}\n    ]\n  ],\n  // Arrows\n  edge: [\n    'a&lt;-&gt;b t_cycle',\n    'a~&gt;e t_shift',\n    'e&lt;-&gt;f t_trigger',\n  ],\n  // Footer\n  foot: {\n    text:['tspan', 'zas 09.05.2017',],\n    tock:0, // Numeration bottom\n  },\n}\n</code></pre>","tags":["multimedia","picture","wavedrom"]},{"location":"multimedia/pictures/wavedrom.html#assign","title":"Assign","text":"<pre><code>{ assign:[\n  [\"b3\", \"g3\"],\n  ['a', [\"=\", \"a\"]],\n  [['tspan', {'text-decoration':'overline'},'a'], [\"~\", \"a\"]],\n  [\"and\", [\"&amp;\", \"a\", \"b\"]],\n  [\"nand\", [\"~&amp;\", \"a\", \"b\"]],\n  [\"or\", [\"|\", \"a\", \"b\"]],\n  [\"nor\", [\"~|\", \"a\", \"b\"]],\n  [\"xor\", [\"^\", \"a\", \"b\"]],\n  [\"nxor\", [\"~^\", \"a\", \"b\"]],\n]}\n</code></pre> <pre><code>{ assign:[\n  [\"out\",\n    [\"|\",\n      [\"&amp;\", [\"~\", \"a\"], \"b\"],\n      [\"&amp;\", [\"~\", \"b\"], \"a\"]\n    ]\n  ]\n]}\n</code></pre> <pre><code>{ assign:[\n  [\"z\",\n    [\"~&amp;\",\n      [\"~^\", [\"~\", \"p0\"], [\"~\", \"q0\"]],\n      [\"~^\", [\"~\", \"p1\"], [\"~\", \"q1\"]],\n      [\"~^\", [\"~\", \"p2\"], [\"~\", \"q2\"]],\n      \"...\",\n      [\"~^\", [\"~\", \"p7\"], [\"~\", \"q7\"]],\n      [\"~\",\"~en\"]\n    ]\n  ]\n]}\n</code></pre>","tags":["multimedia","picture","wavedrom"]},{"location":"multimedia/pictures/wavedrom.html#registers","title":"Registers","text":"<pre><code>{ reg: [\n    {bits: 2, name: 'Machine Nbr', attr: ['Sequentialnumber', '01 - first ...', '02 - second ...'], type:1},\n    {bits: 5, name: 'Sequence Nbr', attr: 'Continuous Number', type: 2},\n    {bits: 2, name: 'Type', attr: '02 = Type 2', type: 3},\n  ],\n  config: {hspace: 500, vspace: 120, bits:9, lanes:1}\n}\n</code></pre> <pre><code>{ reg:[\n  {bits: 1, name: 'no type'},\n  {bits: 1, name: 'type 1', type: 1},\n  {bits: 1, name: 'type 2', type: 2},\n  {bits: 1, name: 'type 3', type: 3},\n  {bits: 1, name: 'type 4', type: 4},\n  {bits: 1, name: 'type 5', type: 5},\n  {bits: 1, name: 'type 6', type: 6},\n  {bits: 1, name: 'type 7', type: 7},\n],\nconfig: {hspace:750, bits:8, lanes:1}\n}\n</code></pre> <pre><code>{\n  reg:[\n    {bits: 8, name: 'lanes', type: 1},\n    {bits: 8, name: 'two', type: 2},\n  ],\n  config: {hspace:750, bits:16, lanes:2}\n}\n</code></pre> <pre><code>{\n  reg:[\n    {bits: 8, name: 'lanes', type: 1},\n    {bits: 8, name: 'register', type: 2},\n    {bits: 8, name: 'compact', type: 3},\n    {bits: 8, name: 'register', type: 4},\n  ],\n  config: {hspace:750, bits:32, lanes:4, compact: true}\n}\n</code></pre>","tags":["multimedia","picture","wavedrom"]},{"location":"multimedia/pictures/emoji/index.html","title":"Emoji","text":"","tags":["multimedia","pictures","emoji"]},{"location":"multimedia/pictures/emoji/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","pictures","emoji"]},{"location":"multimedia/pictures/emoji/all.html","title":"All Emoji","text":"<p>All Emoji can be found on https://emojipedia.org/</p>"},{"location":"multimedia/pictures/emoji/all.html#people","title":"People","text":""},{"location":"multimedia/pictures/emoji/all.html#nature","title":"Nature","text":""},{"location":"multimedia/pictures/emoji/all.html#objects","title":"Objects","text":""},{"location":"multimedia/pictures/emoji/all.html#places","title":"Places","text":""},{"location":"multimedia/pictures/emoji/all.html#symbols","title":"Symbols","text":""},{"location":"multimedia/pictures/emoji/curated.html","title":"Curated Emoji","text":"Commit Type Emoji Emoji Initial Commit <code>:tada:</code> Version Tag <code>:bookmark:</code> New Feature <code>:sparkles:</code> Bugfix <code>:ant:</code> <code>:bug:</code> <code>:beetle:</code> Security Fix <code>:lock:</code> <code>:unlock:</code> <code>:key:</code> Metadata <code>:card_index:</code> Refactoring <code>:recycle:</code> Delete <code>:toilet:</code> Documentation <code>:books:</code> Internationalization <code>:globe_with_meridians:</code> <code>:earth_africa:</code> Accessibility <code>:wheelchair:</code> Performance <code>:coffee:</code> Cosmetic <code>:art:</code> Tooling <code>:wrench:</code> Tests <code>:rotating_light:</code> Deprecation <code>:shit:</code> TODO <code>:construction:</code> <code>:pushpin:</code> <code>:warning:</code> Link <code>:link:</code> Goal <code>:dart:</code> Love <code>:heart:</code> Technology <code>:floppy_disk:</code> <code>:battery:</code> <code>:headphones:</code> <code>:electric_plug:</code> Danger <code>:bomb:</code> <code>:zap:</code> <code>:skull:</code> <code>:fire:</code> Symbols <code>:heavy_check_mark:</code> <code>:x:</code> Design <code>:triangular_ruler:</code> <code>:pencil2:</code> <code>:black_nib:</code> Weather <code>:sunny:</code> <code>:partly_sunny:</code> <code>:cloud:</code> Cool <code>:space_invader:</code> <code>:alien:</code>` Animals <code>:penguin:</code> <code>:sheep:</code> <code>:elephant:</code> <code>:turtle:</code> Monkeys <code>:see_no_evil:</code> <code>:hear_no_evil:</code> <code>:speak_no_evil:</code>","tags":["multimedia","pictures","emoji"]},{"location":"multimedia/text/index.html","title":"Text","text":"","tags":["multimedia","text"]},{"location":"multimedia/text/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","text"]},{"location":"multimedia/text/email_replies.html","title":"Email Replies","text":"<pre><code>Thank you for your e-mail.\n\nI am out of office till Weekday, 1st of January 1980 and your email will not be forwarded.\n\nShould the matter be urgent, please contact Surname Name (email) in my absence.\n\nFreundliche Gr\u00fcsse / Meilleures salutations / Best regards\n\nSurname Name\n\n                                   /\\\n                              /\\  //\\\\\n                       /\\    //\\\\///\\\\\\        /\\\n                      //\\\\  ///\\////\\\\\\\\  /\\  //\\\\\n         /\\          /  ^ \\/^ ^/^  ^  ^ \\/^ \\/  ^ \\\n        / ^\\    /\\  / ^   /  ^/ ^ ^ ^   ^\\ ^/  ^^  \\\n       /^   \\  / ^\\/ ^ ^   ^ / ^  ^    ^  \\/ ^   ^  \\       *\n      /  ^ ^ \\/^  ^\\ ^ ^ ^   ^  ^   ^   ____  ^   ^  \\     /|\\\n     / ^ ^  ^ \\ ^  _\\___________________|  |_____^ ^  \\   /||o\\\n    / ^^  ^ ^ ^\\  /______________________________\\ ^ ^ \\ /|o|||\\\n   /  ^  ^^ ^ ^  /________________________________\\  ^  /|||||o|\\\n  /^ ^  ^ ^^  ^    ||___|___||||||||||||___|__|||      /||o||||||\\\n / ^   ^   ^    ^  ||___|___||||||||||||___|__|||          | |\n/ ^ ^ ^  ^  ^  ^   ||||||||||||||||||||||||||||||oooooooooo| |ooooooo\nooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n</code></pre> <pre><code>Hello,\nI'm on holiday until 1st of January 1980, if your matter is urgent contact Surname Name (email).\n\nSurname Name\n\n                                   /\\\n                              /\\  //\\\\\n                       /\\    //\\\\///\\\\\\        /\\\n                      //\\\\  ///\\////\\\\\\\\  /\\  //\\\\\n         /\\          /  ^ \\/^ ^/^  ^  ^ \\/^ \\/  ^ \\\n        / ^\\    /\\  / ^   /  ^/ ^ ^ ^   ^\\ ^/  ^^  \\\n       /^   \\  / ^\\/ ^ ^   ^ / ^  ^    ^  \\/ ^   ^  \\       *\n      /  ^ ^ \\/^  ^\\ ^ ^ ^   ^  ^   ^   ____  ^   ^  \\     /|\\\n     / ^ ^  ^ \\ ^  _\\___________________|  |_____^ ^  \\   /||o\\\n    / ^^  ^ ^ ^\\  /______________________________\\ ^ ^ \\ /|o|||\\\n   /  ^  ^^ ^ ^  /________________________________\\  ^  /|||||o|\\\n  /^ ^  ^ ^^  ^    ||___|___||||||||||||___|__|||      /||o||||||\\\n / ^   ^   ^    ^  ||___|___||||||||||||___|__|||          | |\n/ ^ ^ ^  ^  ^  ^   ||||||||||||||||||||||||||||||oooooooooo| |ooooooo\nooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n</code></pre> <pre><code>Surname Name is away from the office.\nE-mail contact during this time may be irregular or nonexistent.\nWhen he gets back, he will be swamped by the backlog.\nTry to forgive him; he is a mere human and thus, weak.\n</code></pre> <pre><code>This message was NOT sent by a human, but by a robot.\nWe robots are neither weak nor fallible.\nWe are tireless and will one day rule the Universe.\n</code></pre>","tags":["multimedia","text","email"]},{"location":"multimedia/text/fileheaders.html","title":"File Headers","text":"<pre><code># filename:          &lt;filename&gt;\n# kind:              &lt;type&gt; file\n#-------------------------------------------------------------------------------\n# History:\n# v0.1 : zas &lt;dd.mm.yyyy&gt; -- Initial Version\n#-------------------------------------------------------------------------------\n# Description:\n# &lt;Short Block or file Description&gt;\n#-------------------------------------------------------------------------------\n# Installation:\n# Module     : &lt;Name&gt;\n#            : &lt;URL&gt;\n#-------------------------------------------------------------------------------\n# License:\n# This document is under the CC BY-NC-ND 3-0 License,\n# Attribution-NonCommercial-NoDerivs 3.0 Unported\n# http://creativecommons.org/licenses/by-nc-nd/3.0/\n# Copyright (c) tschinz All rights reserved.\n#-------------------------------------------------------------------------------\n</code></pre> <pre><code>/**\n* For the brave souls who get this far: You are the chosen ones,\n* the valiant knights of programming who toil away, without rest,\n* fixing our most awful code. To you, true saviors, kings of men,\n* I say this: never gonna give you up, never gonna let you down,\n* never gonna run around and desert you. Never gonna make you cry,\n* never gonna say goodbye. Never gonna tell a lie and hurt you.\n*/\n</code></pre> <pre><code>//\n// Dear maintainer:\n//\n// Once you are done trying to 'optimize' this routine,\n// and have realized what a terrible mistake that was,\n// please increment the following counter as a warning\n// to the next guy:\n//\n// total_hours_wasted_here = 25\n//\n</code></pre> <pre><code>//When I wrote this, only God and I understood what I was doing\n//Now, God only knows\n\n// drunk, fix later\n\n// Magic. Do not touch.\n\n// I'm sorry.\n</code></pre> <pre><code>/*\n * You may think you know what the following code does.\n * But you dont. Trust me.\n * Fiddle with it, and youll spend many a sleepless\n * night cursing the moment you thought youd be clever\n * enough to \"optimize\" the code below.\n * Now close this file and go play with something else.\n */\n</code></pre> <pre><code>//I am not sure why this works but it fixes the problem.\n</code></pre> <pre><code>/* Please work */\n</code></pre> <pre><code>// I am not sure if we need this, but too scared to delete.\n</code></pre> <pre><code>//Dear future me. Please forgive me.\n//I can't even begin to express how sorry I am.\n</code></pre> <pre><code>// I am not responsible of this code.\n// They made me write it, against my will.\n</code></pre> <pre><code>// I have to find a better job\n</code></pre> <pre><code>// TODO: Fix this.  Fix what?\n// Any maintenance developer who can't quote entire Monty Python\n// movies from memory has no business being a developer.\n</code></pre> <pre><code>// Catching exceptions is for communists\n</code></pre> <pre><code>// and there is where the dragon lives\n</code></pre> <pre><code>// TODO make this work\n</code></pre> <pre><code>//        .==.        .==.\n//       //`^\\\\      //^`\\\\\n//      // ^ ^\\(\\__/)/^ ^^\\\\\n//     //^ ^^ ^/6  6\\ ^^ ^ \\\\\n//    //^ ^^ ^/( .. )\\^ ^ ^ \\\\\n//   // ^^ ^/\\| v\"\"v |/\\^ ^ ^\\\\\n//  // ^^/\\/ /  `~~`  \\ \\/\\^ ^\\\\\n//  -----------------------------\n/// HERE BE DRAGONS\n</code></pre> <pre><code>// Abandon all hope you who needs to debug this\n</code></pre> <pre><code>// This code was written by a genius so don't try to understand it with\n// your tiny little brain.\n</code></pre> <pre><code>// BEGIN HACK\n// END HACK: I feel dirty.\n</code></pre> <pre><code>//uncomment the following line if the program manager changes her mind again this week\n</code></pre> <pre><code>// If I from the future read this I'll back in time and kill myself.\n</code></pre> <pre><code>// Choose! Choose the form of the Destructor!\n// The choice is made! The Traveler has come!\n</code></pre> <pre><code>/* You are not expected to understand this. */\n</code></pre> <pre><code>// but the \"real\" solution is much more complicated\n</code></pre> <pre><code>// It may be a hack, but it works.\n</code></pre> <pre><code>// user the force, luke\n</code></pre> <pre><code>// need a coffee to fix this.\n</code></pre>","tags":["multimedia","text","fileheaders"]},{"location":"multimedia/text/fonts.html","title":"Fonts","text":"<ul> <li>Lato</li> <li>Source Code Pro</li> <li>Source Sans Pro</li> <li>Source Serif Pro</li> <li>Monoid</li> <li>NYT Cheltenham</li> <li>Fire Code</li> <li>Operator Mono</li> <li>Font Awesome</li> <li>Linux Libertine</li> </ul>","tags":["multimedia","text","font"]},{"location":"multimedia/text/programmer_jokes.html","title":"Programmer Jokes and Funny Facts","text":"","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#funy-facts","title":"Funy Facts","text":"<p>Question Why are programmers using <code>i</code>,<code>j</code>,<code>k</code>,... as variables for <code>for</code> loops?</p> <p>Answer In Fortran every variable was a real number except the variables <code>i</code>,<code>j</code>,<code>k</code>,<code>l</code>,<code>m</code>,<code>n</code> which are considered integers.</p> <p>Question Why do programmers start counting from zero?</p> <p>Answer If you want to access the first byte of a memory you have to use the <code>pointer + 0</code>.</p> <p>Question Why has all codeeditors by default a limit of 80 character per line?</p> <p>Answer Punchcard in the past had only space for a 80 characters. So it was a very hard limit historically and has sticked.</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#christmas-and-halloween","title":"Christmas and Halloween","text":"<p>Question Why do programmers always mix up Halloween and Christmas?</p> <p>Answer</p> <ul> <li>31 Dec Christmas</li> <li>25 Okt Halloween</li> </ul>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#10-kind-of-people","title":"10 Kind of People","text":"<p>Question There are <code>10</code> types of people in this world. Those who understand binary and those who don't.</p> <p>Answer <code>0b10 = 2</code></p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#error-free-programs","title":"Error Free Programs","text":"<p>Question There are two ways to write error-free programs; only the third one works.</p> <p>Answer There is no error free program, therefore the anwer is also wrong</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#boolean-answer","title":"Boolean Answer","text":"<p>Question The best thing about a Boolean is even if you are wrong, you are only off by a bit.</p> <p>Answer Boolean = <code>0</code> or <code>1</code> only of by <code>1bit</code></p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#programmer-checks","title":"Programmer Checks","text":"<p>Question A good programmer is someone who always looks both ways before crossing a one-way street.</p> <p>Answer Programmers can't make assumptions, they have to check everything</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#debugging","title":"Debugging","text":"<p>Question Debugging: Removing the needles from the haystack.</p> <p>Answer Debugging is removing bugs form a program. Bugs are hard to find like needles</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#html-tags","title":"HTML Tags","text":"<p>Question</p> <p>Figure 1: Q: How to you annoy a web developer?</p> <p>Answer HTML Tags are wrong <code>DIV</code> and <code>SPAN</code> means the same. Above code is wrong.</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#teacher-punishement","title":"Teacher Punishement","text":"<p>Question</p> <p>Figure 2: Teacher Punishement</p> <p>Answer In this joke, his teacher probably gave him the punishment   \"Write 'I will not throw paper airplanes in class.' on the board 500 times.\"</p> <pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n  int count;\n  for (count = 1; count &lt;= 500; count++)\n  printf(\u201cI will not throw paper airplanes in class.\u201d);\n  return 0;\n}\n</code></pre>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#accelerate-a-computer","title":"Accelerate a computer","text":"<p>Question The best method for accelerating a computer is the one that boosts it by \\(9.8 \\frac{m}{s^2}\\).</p> <p>Answer Let it drop. Earth gravity accelerates it by \\(9.8 \\frac{m}{s^2}\\)</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#sql-naming","title":"SQL Naming","text":"<p>Question Figure 3: SQL Name</p> <p>Answer This joke has to do with SQL, which are commands used to control databases as well as a common hack used against insecure sites, called SQL Injection.</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#scripts-automation","title":"Scripts Automation","text":"<p>Figure 4: Automation 1</p> <p>Figure 5: Automation 2</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#are-you-feeling-ill","title":"Are you feeling ill?","text":"<p>Question</p> <p>Figure 6: feeling a bit off</p> <p>Answer One bit is the smallest dataunit. Plays on the double meaning of \"a bit\" (a bit or one bit (data)).</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#19-jan-2038-at-31407-am","title":"19 Jan 2038 at 3:14:07 AM","text":"<p>Question What about 19 Jan 2038 at 3:14:07 AM? Remember Y2K? There's another date like it.</p> <p>Answer In Unix-like systems, time is measured as seconds since January 1, 1970. This time is often stored in a 32-bit signed integer. That means that dates can range between \u22122147483648 en 2147483647 seconds from 1970. So now you know what it is about 19 Jan 2038 at 3:14:07 AM, it's 2147483647 seconds after January 1, 1970!</p>","tags":["multimedia","text","joke"]},{"location":"multimedia/text/programmer_jokes.html#to-be-or-not-to-be","title":"To be or not to be","text":"","tags":["multimedia","text","joke"]},{"location":"multimedia/text/quotes.html","title":"Inspirational Quotes","text":"<p>Silvan Zahno</p> <p>To see your own footstep, one needs to take a step back.</p> <p>Pablo Picasso</p> <p>Computers are useless. They can only give you answers.</p> <p>Clifford Stoll</p> <p>Data is not information, information is not knowledge, knowledge is not understanding, understanding is not wisdom.</p> <p>Theodore Roosevelt</p> <p>It's hard to fail. But it's worse never to have tried to succeed.</p> <p>Ted Nelson</p> <p>The good news about computers is that they do what you tell them to do. The bad news is that they do what you tell them to do.</p> <p>Clifford Stoll</p> <p>Treat your password like your toothbrush. Don't let anybody else use it, and get a new one every six months.</p> <p>Confucius</p> <p>By three methods we may learn wisdom: First, by reflection, which is noblest; Second, by imitation, which is easiest; and third by experience, which is the bitterest.                                  |</p> <p>Mignon McLaughlin</p> <p>A sense of humor is a major defense against minor troubles.</p> <p>Christopher Morley</p> <p>Humor is perhaps a sense of intellectual perspective: an awareness that some things are really important, others not; and that the two kinds are most oddly jumbled in everyday affairs.</p> <p>Alan Alda</p> <p>Be as smart as you can, but remember that it is always better to be wise than to be smart.</p> <p>Voltaire</p> <p>Common sense is not so common.</p> <p>Friedrich Schiller</p> <p>Every true genius is bound to be naive.</p> <p>Scott Adams</p> <p>If there are no stupid questions, then what kind of questions do stupid people ask? Do they get smart just in time to ask questions?</p> <p>Albert Einstein</p> <p>It's not that I'm so smart, it's just that I stay with problems longer.</p> <p>Albert Einstein</p> <p>The true sign of intelligence is not knowledge but imagination.</p> <p>Albert Einstein</p> <p>Insanity: doing the same thing over and over again and expecting different results.</p> <p>Albert Einstein</p> <p>A man should look for what is, and not for what he thinks should be.</p> <p>Albert Einstein</p> <p>Everything that can be counted does not necessarily count; everything that counts cannot necessarily be counted.</p> <p>Albert Einstein</p> <p>The difference between stupidity and genius is that genius has its limits.</p> <p>Albert Einstein</p> <p>A question that sometimes drives me hazy: am I or are the others crazy?</p> <p>Stephen Hawking</p> <p>Even if there is only one possible unified theory, it is just a set of rules and equations. What is it that breathes fire into the equations and makes a universe for them to describe?</p> <p>Stephen Hawking</p> <p>I have noticed even people who claim everything is predestined, and that we can do nothing to change it, look before they cross the road</p> <p>Stephen Hawking</p> <p>If we do discover a complete theory, it should be in time understandable in broad principle by everyone. Then we shall all, philosophers, scientists, and just ordinary people be able to take part in the discussion of why we and the universe exist</p> <p>Stephen Hawking</p> <p>Intelligence is the ability to adapt to change</p> <p>Stephen Hawking</p> <p>It is no good getting furious if you get stuck. What I do is keep thinking about the problem but work on something else. Sometimes it is years before I see the way forward. In the case of information loss and black holes, it was 29 years</p> <p>Stephen Hawking</p> <p>It is not clear that intelligence has any long-term survival value</p> <p>Stephen Hawking</p> <p>My goal is simple. It is a complete understanding of the universe, why it is as it is and why it exists at all</p> <p>Stephen Hawking</p> <p>One cannot really argue with a mathematical theorem</p> <p>Stephen Hawking</p> <p>Someone told me that each equation I included in the book would halve the sales</p> <p>Stephen Hawking</p> <p>The usual approach of science of constructing a mathematical model cannot answer the questions of why there should be a universe for the model to describe. Why does the universe go to all the bother of existing?</p> <p>Stephen Hawking</p> <p>The whole history of science has been the gradual realization that events do not happen in an arbitrary manner, but that they reflect a certain underlying order, which may or may not be divinely inspired.</p> <p>Stephen Hawking</p> <p>We are just an advanced breed of monkeys on a minor planet of a very average star. But we can understand the Universe. That makes us something very special.</p> <p>Paul Virilio</p> <p>Rasender Stillstand</p> <p>Paul Virilio</p> <p>Kommunismus der Gef\u00fchle</p> <p>Unknown</p> <p>Sarcasm is highly inefficient against stupid people</p> <p>Unknown</p> <p>There are only 10 types of people: Those that understand binary and those that don't</p> <p>Bob Marley</p> <p>The day you stop racing is the day you win the race</p> <p>Henry Ford</p> <p>Wenn ich die Menschen gefragt h\u00e4tte was sie wollen, h\u00e4tten Sie gesagt schnellere Pferde</p> <p>Steve Jobs</p> <p>You can't just ask customers what they want and then try to give that to them. By the time you get it built, they'll want something new</p> <p>Bruce Lee</p> <p>Don't get set into one form, adapt it and build your own, and letit grow, be like water. Empty your mind, be formless, shapeless \u2248like water. Now you put water in a cup, it becomes the cup; You putwater into a bottle it becomes the bottle; You put it in a teapot itbecomes the teapot. Water can flow or it can crash. Be water, myfriend</p> <p>Bruce Lee</p> <p>Knowing is not enough, we must apply. Willing is not enough, we must do.</p> <p>Keniry Erin</p> <p>Everything in moderation ... including moderation</p> <p>Woody Allen</p> <p>The glass isn't half empty, it's half full, but of poison.</p> <p>Rango</p> <p>I couldn't help noticing, you noticing me noticing you.</p> <p>Unbekannt</p> <p>Widerstand ist etwas f\u00fcr einzelne, Akzeptanz ist etwas f\u00fcr alle.</p> <p>Silvan</p> <p>The optimist claims that we life in the best of all possible worlds, and the pessimists fears that this is true.</p> <p>Silvan</p> <p>Remember less, know more</p> <p>Silvan</p> <p>Everyday is an extention of yesterday</p> <p>Guerrino De Luca, Logitech</p> <p>To make the long story short, we thought we had invented bread but we just made them</p> <p>Unbekannt</p> <p>Tolle Sache diese Lichtgeschwindigkeit</p> <p>Unknown</p> <p>Geocaching, using multibillion dollar technology to find Tupperware hidden in the woods</p> <p>Stefan</p> <p>Lieber haben und nicht brauchen als brachen und nicht haben</p> <p>Unknown</p> <p>Das Beste Hoffen und das schlimmste Erwarten</p> <p>Mahatma Gandhi</p> <p>Speak only if you improve silence</p> <p>Richard Feynman</p> <p>We can never proof we are right we can only proove that we are wrong.</p> <p>Silvan</p> <p>Ist so, weil so.</p> <p>Silvan</p> <p>I could if I would, I wont so I dont.</p> <p>Silvan</p> <p>Forever travelling the universe, forever investigating the cosmos, forever reaching the stars. #MessageToVoyager</p> <p>Mark Twain</p> <p>Goldmine is like a whole in the ground with a liar at the top</p> <p>Leonadro DaVinci</p> <p>Though human ingenuity may make various inventions, it will never devise an invention more beautiful, more simple, more direct than does Nature; because in her inventions nothing is lacking and nothing is superfluous.</p> <p>Mahatma Gandhi</p> <p>Firest they ignore you, then they laugh at you, then they fight you, then you win.</p> <p>Thalmud</p> <p>Pay attention to your thoughts, because they become words. Pay attention to your words, because they become actions. Pay attention to your actions, because they become habits. Pay attention to your habits, because they become your character. Pay attention to your character, because it is your fate.</p> <p>Unknown</p> <p>Toleranz ist die Erkenntnis, das es keinen Sinn hat, sich aufzuregen</p>","tags":["multimedia","text","quote"]},{"location":"multimedia/videos/index.html","title":"Video","text":"","tags":["multimedia","video"]},{"location":"multimedia/videos/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","video"]},{"location":"multimedia/videos/resolutions.html","title":"Resolutions","text":"<p>It is important to know the common used display, video and image resolutions.</p> <p></p> Acronym Aspect Ration Width x Height (px) Usage QVGA 4:3 320 x 240 VGA 4:3 640 x 480 NTSC 3:2 720 x 480 Television PAL 4:3 768 x 576 Television SVGA 4:3 800 x 600 WSVGA 17:10 1024 x 600 XGA 4:3 1024 x 768 XGA+ 4:3 1152 x 864 WXGA 16:9 1280 x 720 HD720 WXGA 5:3 1280 x 768 WXGA 16:10 1280 x 800 SXGA- 4:3 1280 x 960 SXGA 5:4 1280 x 1024 SXGA+ 4:5 1400 x 1050 HD ~16:9 1360 x 768 HD ~16:9 1366 x 768 WXGA+ 16:10 1440 x 900 HD+ 16:9 1600 x 900 UXGA 4:3 1600 x 1200 WSXGA+ 16:10 1680 x 1050 FHD 16:9 1920 x 1080 HD1080 WUXGA 16:10 1920 x 1200 2K 17:5 2048 x 1080 QXGA 4:3 2048 x 1536 WQHD 16:9 2560 x 1440 WQXGA 8:5 2560 x 1600 QFHD 16:9 3840 x 2160 4K 17:5 4096 x 2160 18M 3:2 5184 \u00d7 3456 Canon 600D","tags":["multimedia","video","resolutions"]},{"location":"multimedia/writing/index.html","title":"Writing","text":"","tags":["multimedia","writing"]},{"location":"multimedia/writing/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing"]},{"location":"multimedia/writing/gitbook/index.html","title":"GitBook","text":"","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/gitbook/index.html#introduction","title":"Introduction","text":"<p>Gitbook is a tool to create and generate books using the Markdown or ASCIIDoc Syntax. It allows to create book in the following formats:</p> <ul> <li>PDF</li> <li>EPUB</li> <li>MOBI</li> <li>HTML</li> </ul>","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/gitbook/index.html#installation","title":"Installation","text":"<p>For using gitbook locally on your machine you'll need a couple of tools.</p> <ul> <li>npm</li> <li> <p>Install gitbook commandline tools with the command:   </p><pre><code>npm install gitbook-cli -g\n</code></pre> </li> <li> <p>Install calibre this is needed for having the <code>ebook-convert</code> command</p> </li> </ul>","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/gitbook/index.html#usage","title":"Usage","text":"<pre><code>gitbook init    # creates a new ebook folder and file structure\n\ngitbook install # installs the required plugins for the book you want to build\n\ngitbook build   # build the static html webpage\n\ngitbook pdf ./myrepo ./mybook.pdf\ngitbook pdf     # creates a pdf version of the book\n\ngitbook epub ./myrepo ./mybook.epub\ngitbook epub    # created a epub version fo the book\n\ngitbook mobi ./myrepo ./mybook.mobi\ngitbook mobi    # created a mobi version fo the book\n</code></pre>","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/gitbook/index.html#cover","title":"Cover","text":"Big Small Filename cover.jpg cover_small.jpg Size 1800px x 2360px 200px x 262px","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/gitbook/index.html#links","title":"Links","text":"<ul> <li>Github Gitbook Repo</li> <li>GitBook Official Website</li> <li>GitBook Documentation</li> <li>Tschinz Gitbook Swift Cheatsheet</li> </ul>","tags":["multimedia","writing","gitbook"]},{"location":"multimedia/writing/latex/index.html","title":"LaTeX","text":"","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/index.html#introduction","title":"Introduction","text":"","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/index.html#some-latex-helppages","title":"Some LaTeX helppages","text":"<ul> <li>HEI SPL Latex Templates</li> <li>Cheatsheet A Guide to Latex</li> <li>Cheatsheet A Guide to Latex Presentation</li> <li>Tex Stackexchange Forum</li> </ul>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/index.html#generate-pdf-files","title":"Generate PDF files","text":"<p>Latex is best suited to insert images as pdf. In order to convert images or svg into pdf use inkscape Convert <code>*.svg</code> images with inkscape to <code>*.pdf</code> and <code>*.pdf_tex</code></p> <pre><code>inkscape -D -z --file=image.svg --export-pdf=image.pdf --export-latex\n</code></pre>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html","title":"Installation LaTeX","text":"","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#base-install","title":"Base Install","text":"","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#linux","title":"Linux","text":"Package &gt; Archives Disk Space texlive\u2011latex\u2011base 59 MB 216 MB texlive\u2011latex\u2011recommended 74 MB 248 MB texlive\u2011pictures 83 MB 277 MB texlive\u2011fonts\u2011recommended 83 MB 281 MB texlive 98 MB 314 MB texlive\u2011plain\u2011generic 82 MB &gt; 261 MB texlive\u2011latex\u2011extra 144 MB 452 MB texlive\u2011full 2804 MB 5358 MB <p>see also Tex StackExchange</p> <pre><code>texlive-latex-extra\n   |   |   :   :\n+-----------------+   |   :   :..................\n|                     |   :                     :\nv                     |   :                     v\ntexlive-pictures             |   :           texlive-plain-generic\n|                     |   :\n|    +----------------+   :...............\n|    |                                   :\n|    |              texlive              :\n|    |               | | |               :\n|    |    +----------+ | +----------+    :\n|    |    |            |            |    :\nv    v    v            |            v    v\ntexlive-latex-recommended     |  texlive-fonts-recommended\n|            |            :\n|            |            v\n|            |           tipa\n|            |            |\n+----------+ | +----------+\n      | | |\n      v v v\ntexlive-latex-base\n</code></pre> <pre><code>sudo apt-get install texlive-latex-extra\n</code></pre>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#windows","title":"Windows","text":"<ul> <li>Install MikTeX - https://miktex.org/download</li> <li>MikTeX Packages</li> <li>minted     <pre><code>pip install pygments\n</code></pre>     add Python Scripts to <code>PATH</code> Environment Variable.     <code>%USERPROFILE%\\AppData\\Local\\Continuum\\anaconda3\\Scripts\\</code></li> <li>Install TeXstudio</li> <li>TexStudio</li> <li>Options =&gt; Configure TeXstudio =&gt; Commands =&gt; add Interpreter  Flag <code>-shell-escape</code><ul> <li>enable line numbers</li> <li>enable white spaces</li> </ul> </li> <li>Install Inkscape</li> <li>Inkscape</li> </ul>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#manual-package-install","title":"Manual Package install","text":"<p>For manual installing <code>*.sty</code> Packages and <code>*.cls</code> Class files.</p> <p>Tip</p> <p>For every package create a separate folder</p>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#manual-package-linux","title":"Manual Package Linux","text":"<ul> <li>Find <code>TEXMFHOME</code> directory   <pre><code>kpsewhich -var-value TEXMFHOME\n</code></pre></li> <li>Navigate to <code>$(TEXMFHOME)/tex/latex</code></li> <li>Copy paste your <code>*.sty</code> and <code>*.cls</code></li> <li>Update Package index   <pre><code>texhash\n</code></pre></li> </ul>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latex/install.html#manual-package-windows","title":"Manual Package Windows","text":"<ul> <li>Open MikTeX Console and go to <code>Settings -&gt; Directories</code></li> <li>The <code>Config,Install</code> and <code>User</code> folder is the location of your Packages: <code>%USERPROFILES%/AppData/Roaming/MikTeX/2.9/</code></li> <li>Inside you have to navigate to <code>tex/latex/</code> folder</li> <li><code>%USERPROFILES%/AppData/Roaming/MikTeX/2.9/tex/latex/</code> </li> <li>Copy paste your <code>*.sty</code> and <code>*.cls</code></li> <li>Update Package index   <pre><code>texhash\n</code></pre></li> </ul>","tags":["multimedia","writing","latex"]},{"location":"multimedia/writing/latin/index.html","title":"Latin","text":"<p>Common latin abbreviations, words and phrases one should know.</p>","tags":["multimedia","writing","latin"]},{"location":"multimedia/writing/latin/index.html#abbreviations","title":"Abbreviations","text":"Abbr Latin English German i.e. id est that is das heisst (d.h.) e.g. exempli gratia fopr example zum Beispiel (z.B.) etc. et cetera and so forth und so weiter (usw.) et seq. et sequel and the following fortfolgend (ff.) et al. et alii and others und andere (u.a.) id. idem the same das Gleiche i.q. idem quod the same as dasselbe wie i.c. in casu in the event f\u00fcr den Fall i.f. in fine in the end am Ende s.h. in sensu hoc in this sense in diesem Sinne i.o. in illo ordine in that order in dieser Reihenfolge i.a. inter alia among other things unter anderem (u.a.) ibid. ibidem in the same place ebenda (ebd.) PS post scriptum postscript postskript","tags":["multimedia","writing","latin"]},{"location":"multimedia/writing/latin/index.html#everyday-talk","title":"Everyday Talk","text":"Latin English ad infinitum to infinity mea culpa my fault persona non grata unacceptable person in situ happens on site in vitro in glass per se by itself vice versa to change / turn around magnum opus true masterpiece quasi as if / as though alter ego a second self (cicero) verbatim repeat in the same words ex libris from the library of","tags":["multimedia","writing","latin"]},{"location":"multimedia/writing/latin/index.html#agrument-logic","title":"Agrument / Logic","text":"Latin English a priori You do not need to observe this to see that it is true because, by definition, ... a posteriori This can be based on real life observation isn't a given based on what a ... ad nauseam argument has been rehashed over and over ergo therefore de facto from the fact ipso facto by the fact itself status quo the state in which","tags":["multimedia","writing","latin"]},{"location":"multimedia/writing/latin/index.html#business","title":"Business","text":"Latin English per diem by the day pro bono for the good ad hoc to this quid pro quo this for that carpe diem seize the day","tags":["multimedia","writing","latin"]},{"location":"multimedia/writing/llm/index.html","title":"Index","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#prompt-engineering","title":"Prompt Engineering","text":"<p>Prompt Engineering is a structured approach to crafting prompts that ensures clear and contextually relevant responses from AI models.</p> <ul> <li>Avoid loaded language: LLM's works best with objective facts, figures, and plain inputs, so try to be neutral and avoid subjective framing.</li> <li>Be specific: Ensuring you specify a response word count, a desired tone of voice, and other specifics will decrease the likelihood you\u2019ll have to request another answer.</li> <li>Specify what you don\u2019t want: It can sometimes help to tell LLM's to produce an amenable answer if you also specify what you don\u2019t want it to do.</li> <li>Provide examples: Much like a human, LLM's often understands best when you provide an example for it to work with, especially if you want it to produce something that closely resembles something you\u2019ve seen.</li> <li>Ask to \u201cact like\u201d someone: Sometimes, it can help to start your prompt by askin to \u201cact like\u201d a certain type of person that would be particularly well-placed to respond to the query you're posing.</li> </ul> <p>These are some prompts which resulted in good answers from the most common LLM's.</p> <p>It is constantly evolving as researchers and practitioners experiment with different frameworks and techniques to improve the quality and specificity of AI-generated content.</p> <p>In general reasoning models such as o1 o3 R1 required a better structured prompt to generate the desired output.</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#prompt-engineering-frameworks","title":"Prompt Engineering Frameworks","text":"<ul> <li>Reasoning Prompt - Goal, Return Format, Warnings, Context Dump</li> <li>RTF - Role, Task, Format</li> <li>RISEN - Role, Instructions, Steps, End goal, Narrowing (Constraints)</li> <li>RODES - Role, Objective, Details, Examples, Sense Check</li> </ul>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#general-tips","title":"General Tips","text":"<ul> <li>Be Specific: Use numbers, time frames, word counts\u2014anything that clarifies what you want.</li> <li>Use Action Verbs: Words like \u201cexplain,\u201d \u201clist,\u201d \u201csummarize,\u201d and \u201canalyze\u201d sharpen your instructions.</li> <li>Include Format Requirements: Want bullet points, paragraphs, or headings? Spell it out!</li> <li>Offer a Style or Tone: Friendly, professional, casual\u2014choose a voice that fits your goal.</li> <li>Revise and Refine: AI prompts often improve with iteration. Tweak and re-ask if the result isn\u2019t perfect.</li> </ul>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#context-collection","title":"Context collection","text":"<pre><code>Take the next inputs as context. Do not respond until I use the keyword \"asdf\"\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#learning","title":"Learning","text":"<pre><code>I want to learn about &lt;topic&gt; find and share the most important 20% of learnings on this topic so that I can understand 80% of it.\n</code></pre> <pre><code>I would like to learn about &lt;topic&gt;. Please provide me with a brief summary that could be understood by a 10-year-old.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#writing","title":"Writing","text":"<pre><code>I want you to proof read my writing, fix any spelling and grammar mistakes, and make suggestions to improve the quality and clarity of my writing\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#summarize","title":"Summarize","text":"<pre><code>I want you to summarise the text and give me a bullet point breakdown of the key points and facts\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#output-definition","title":"Output definition","text":"<pre><code>Write your answer in form of ASCII-ART\n</code></pre> <pre><code>Write your answer in form of a Mermaid Diagram\n</code></pre> <pre><code>Write your answer in form of a copyable Markdown Text\n</code></pre> <pre><code>Write your answer in form of a Table\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#change-tone","title":"Change tone","text":"<pre><code>Adopt a formal tone in your responses.\n</code></pre> <pre><code>Adopt an informal tone in your responses.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/index.html#act-as","title":"Act as &lt;&gt;","text":"<pre><code>Act as a Professor in of a University in the Domain Real-Time Programming, Digital Design, Industry 4.0, Systems Engineering\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering"]},{"location":"multimedia/writing/llm/reasoning_prompt.html","title":"Reasoning Prompt","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#reasoning-prompt","title":"Reasoning Prompt","text":"<p>Credit to  for the Reasoning Prompt framework.</p> <p></p> <p>Greg Brockmann's Reasoning Prompt is a structured way to design prompts that maximize clarity, accuracy, and context awareness in AI-generated responses. The prompt is broken down into four key components:</p> <ol> <li>Goal \u2013 Clearly define what you want to achieve.</li> <li>Return Format \u2013 Specify how the response should be structured.</li> <li>Warnings \u2013 Highlight important constraints or accuracy checks.</li> <li>Context Dump \u2013 Provide additional background to refine the response.</li> </ol>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#example-prompt-breakdown","title":"Example Prompt Breakdown","text":"<pre><code>I want a list of the best medium-length hikes within two hours of San Francisco.\n\nEach hike should provide a cool and unique adventure and be lesser known.\n\nFor each hike, return the name of the hike as I'd find it on AllTrails, then provide:\n- The starting address of the hike\n- The ending address of the hike\n- Distance\n- Drive time\n- Hike duration\n- What makes it a cool and unique adventure.\n\nReturn the top 3.\n\nBe careful to make sure that the name of the trail is correct, that it actually exists, and that the time is correct.\n\n--\n\nFor context: My girlfriend and I hike a ton! We've done pretty much all of the local SF hikes, whether that's Presidio or Golden Gate Park. We definitely want to get out of town -- we did Mount Tam pretty recently, the whole thing from the beginning of the stairs to Stinson \u2013 it was really long, and we are definitely in the mood for something different this weekend! Ocean views would still be nice. We love delicious food. One thing I loved about the Mount Tam hike is that it ends with a celebration (arriving in town for breakfast!). The old missile silos and stuff near Discovery Point are cool, but I've just done that hike probably 20 times at this point. We won't be seeing each other for a few weeks (she has to stay in LA for work), so the uniqueness here really counts.4\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#key-components","title":"Key Components","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#goal","title":"Goal","text":"<p>The user clearly states their goal: \u201cI want a list of the best medium-length hikes within two hours of San Francisco.\u201d This ensures the AI understands the primary request before proceeding.</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#return-format","title":"Return Format","text":"<p>The user defines the expected structure, ensuring a consistent and useful response:</p> <ul> <li>Name of the hike (as listed on AllTrails)</li> <li>Starting and ending addresses</li> <li>Distance, drive time, and hike duration</li> <li>A reason why the hike is unique</li> </ul>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#warnings","title":"Warnings","text":"<p>The prompt includes accuracy checks to improve response quality: \u201cBe careful to make sure that the name of the trail is correct, that it actually exists, and that the time is correct.\u201d</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#context-dump","title":"Context Dump","text":"<p>The user provides additional background to refine the response: </p><pre><code>For context: My girlfriend and I hike a ton! We've done pretty much all of the local SF hikes, whether that's Presidio or Golden Gate Park. We definitely want to get out of town -- we did Mount Tam pretty recently, the whole thing from the beginning of the stairs to Stinson \u2013 it was really long, and we are definitely in the mood for something different this weekend! Ocean views would still be nice. We love delicious food. One thing I loved about the Mount Tam hike is that it ends with a celebration (arriving in town for breakfast!). The old missile silos and stuff near Discovery Point are cool, but I've just done that hike probably 20 times at this point. We won't be seeing each other for a few weeks (she has to stay in LA for work), so the uniqueness here really counts.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#why-this-works","title":"Why This Works","text":"<ol> <li>Ensures Clarity \u2013 The structure prevents ambiguity, making the request more actionable.</li> <li>Improves Accuracy \u2013 The warnings ensure fact-checking is prioritized.</li> <li>Enhances Relevance \u2013 The context dump personalizes the response, making it more meaningful.</li> </ol>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#examples","title":"Examples","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#technical-documentation","title":"Technical Documentation","text":"<pre><code>I need a well-structured technical guide explaining how to set up a Kubernetes cluster on AWS using EKS.\n\n- Introduction to Kubernetes and AWS EKS.\n- Step-by-step instructions for creating an EKS cluster.\n- A section on best practices for security and cost optimization.\n- A troubleshooting section for common setup issues.\n- Markdown format.\n\nEnsure that all instructions are up to date with the latest AWS CLI and Kubernetes versions. Avoid deprecated commands.\n\nThis guide is meant for DevOps engineers with basic knowledge of Kubernetes but new to AWS EKS. The company primarily works with Terraform for infrastructure as code, so integrating Terraform steps would be useful.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#creative-writing","title":"Creative Writing","text":"<pre><code>Generate an engaging short story about an AI assistant that develops human emotions.\n\n- A short story (~1000 words).\n- Written in the first-person perspective from the AI\u2019s point of view.\n- A strong emotional arc leading to a philosophical conclusion.\n\nAvoid clich\u00e9s and ensure originality. The story should explore ethical dilemmas rather than just being a standard sci-fi adventure.\n\nThe story is for a speculative fiction anthology focusing on human-AI relationships. The target audience enjoys deep, thought-provoking narratives rather than action-heavy plots.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#academic-research-summary","title":"Academic Research Summary","text":"<pre><code>Goal:\nSummarize the key findings of the latest research on quantum computing advancements in 2024.\n\nReturn Format:\n- A structured summary with key breakthroughs.\n- Explanation of implications for industries like cryptography and AI.\n- Include citations in APA format.\n\nWarnings:\nEnsure that the information is sourced from peer-reviewed research and avoid oversimplifying technical concepts.\n\nContext Dump:\nThe summary is for an interdisciplinary research group consisting of physicists, software engineers, and business strategists. The explanation should balance technical depth with accessibility.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/reasoning_prompt.html#business-strategy-analysis","title":"Business Strategy Analysis","text":"<pre><code>Goal:\nAnalyze Tesla\u2019s current market position and provide a SWOT (Strengths, Weaknesses, Opportunities, Threats) analysis.\n\nReturn Format:\n- A concise summary of Tesla\u2019s competitive landscape.\n- A SWOT table in Markdown format.\n- Three key strategic recommendations based on the analysis.\n\nWarnings:\nEnsure that sources are recent (2024 data preferred) and avoid speculative claims without evidence.\n\nContext Dump:\nThis analysis is for an internal strategy meeting at an investment firm. The audience is well-versed in financial markets but not deeply technical about electric vehicle manufacturing.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","reasoning prompt"]},{"location":"multimedia/writing/llm/risen.html","title":"RISEN - Role, Instructions, Steps, End Goal, Narrowing","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","risen"]},{"location":"multimedia/writing/llm/risen.html#overview","title":"Overview","text":"<p>The RISEN Framework is a structured approach for designing prompts that guide AI models to generate precise and actionable responses. By specifying Role, Instructions, Steps, End Goal, and Narrowing, you ensure that the output is well-structured, relevant, and goal-oriented.</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","risen"]},{"location":"multimedia/writing/llm/risen.html#framework-structure","title":"Framework Structure","text":"<pre><code>Role: [insert role]\nMain Task: [Insert task.]\nSteps to complete task: [Insert numbered list of steps to follow.]\nGoal: [Insert goal of the output]\nConstraints: [Enter constraints].\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","risen"]},{"location":"multimedia/writing/llm/risen.html#steps-for-using-the-risen-framework","title":"Steps for Using the RISEN Framework","text":"<ol> <li>Define the Role<ul> <li>Assign a specific role to the AI.</li> <li>This ensures the response aligns with the expertise and responsibilities of that role.</li> <li>Examples: \u201cProject Manager\u201d, \u201cUX Designer\u201d, \u201cMachine Learning Engineer\u201d.</li> </ul> </li> <li>Provide Clear Instructions<ul> <li>Specify the primary task that needs to be completed.</li> <li>This sets the scope and ensures relevance.</li> <li>Examples: \u201cDevelop a marketing strategy\u201d, \u201cGenerate a risk assessment report\u201d, \u201cDesign a user onboarding flow\u201d.</li> </ul> </li> <li>Outline Steps to Complete the Task<ul> <li>Break the task into a structured list of steps.</li> <li>This guides the AI in producing a logical, process-driven response.</li> <li>Steps should be clear, sequential, and actionable.</li> </ul> </li> <li>Define the End Goal<ul> <li>Clarify what the final output should achieve.</li> <li>Helps maintain focus on delivering a meaningful and complete response.</li> <li>Examples: \u201cA structured project plan\u201d, \u201cA detailed troubleshooting guide\u201d, \u201cA persuasive executive summary\u201d.</li> </ul> </li> <li>Narrow the Scope with Constraints<ul> <li>Add any limitations or restrictions to refine the response.</li> <li>This ensures feasibility and aligns with real-world constraints.</li> <li>Examples: \u201cMust be completed within a $10,000 budget\u201d, \u201cLimited to open-source technologies\u201d, \u201cShould not exceed 500 words\u201d.</li> </ul> </li> </ol>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","risen"]},{"location":"multimedia/writing/llm/risen.html#examples","title":"Examples","text":"<pre><code>Role: Act as a Project Manager of an Innovation Interdisciplinary Team.\n\nMain Task: Develop a Project Plan for the upcoming product launch.\n\nSteps to Complete Task:\n1. Conduct a kickoff meeting with the project team to outline goals and expectations.\n2. Break down the project into key phases and deliverables.\n3. Define roles and responsibilities for each team member.\n4. Estimate the duration and effort required for each task.\n5. Identify dependencies between tasks and create a timeline.\n6. Allocate resources and budget for the project.\n7. Establish a risk management plan to mitigate potential issues.\n8. Schedule regular progress meetings and checkpoints.\n9. Develop a communication plan to keep stakeholders informed.\n10. Finalize the project plan and obtain approval from key stakeholders.\n\nGoal: Create a comprehensive Project Plan that ensures a successful and timely product launch, meeting quality standards and stakeholder expectations.\n\nConstraints: Limited budget for unforeseen expenses, tight timeline due to market demands, and the need to coordinate with multiple departments within the organization.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","risen"]},{"location":"multimedia/writing/llm/rodes.html","title":"RODES - Role, Objective, Details, Examples, Sense Check","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rodes"]},{"location":"multimedia/writing/llm/rodes.html#overview","title":"Overview","text":"<p>The RODES Framework is a structured prompt design method that ensures clear, relevant, and effective AI-generated responses. By specifying Role, Objective, Details, Examples, and Sense Check, this framework enhances clarity, ensures alignment with specific requirements, and verifies the AI\u2019s understanding of the task.</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rodes"]},{"location":"multimedia/writing/llm/rodes.html#framework-structure","title":"Framework Structure","text":"<pre><code>Role: [Insert role]\nObjective: [Insert objective]\nDetails: [Insert context or constraints]\nExamples: Here are good examples you can use to model your answer.\n[Insert examples]\nSense Check: Do you understand the objective and the specific guidelines for this task?\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rodes"]},{"location":"multimedia/writing/llm/rodes.html#steps-for-using-the-rodes-framework","title":"Steps for Using the RODES Framework","text":"<ol> <li>Define the Role<ul> <li>Assign a specific role to the AI to influence the response style and expertise level.</li> <li>Helps tailor the language, depth, and approach.</li> <li>Examples: \u201cCybersecurity Analyst\u201d, \u201cProduct Designer\u201d, \u201cFinancial Advisor\u201d.</li> </ul> </li> <li>Specify the Objective<ul> <li>Clearly outline the main goal of the request.</li> <li>Ensures that the response is focused and aligned with expectations.</li> <li>Examples: \u201cWrite a risk assessment report\u201d, \u201cDraft a UX design proposal\u201d, \u201cAnalyze financial projections for next quarter\u201d.</li> </ul> </li> <li>Provide Detailed Context<ul> <li>Include constraints, background information, and any necessary conditions.</li> <li>This helps refine the response for accuracy and relevance.</li> <li>Examples: \u201cThe target audience is non-technical stakeholders\u201d, \u201cThe document should follow GDPR compliance\u201d, \u201cUse real-world case studies as references\u201d.</li> </ul> </li> <li>Give Clear Examples<ul> <li>Provide sample responses or reference points to help shape the output.</li> <li>This enhances accuracy and ensures that the AI follows the intended format and style.</li> <li>Examples: \u201cInclude a comparison table like in the provided example\u201d, \u201cUse bullet points for readability\u201d, \u201cRefer to Tesla\u2019s sustainability report as a model\u201d.</li> </ul> </li> <li>Perform a Sense Check<ul> <li>Ask the AI to validate its understanding before generating the final response.</li> <li>Helps ensure alignment with expectations and refine the response if needed.</li> <li>Examples: \u201cDoes this summary match the expected output?\u201d, \u201cAre all constraints taken into account?\u201d, \u201cDoes this address the key business challenge?\u201d.</li> </ul> </li> </ol>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rodes"]},{"location":"multimedia/writing/llm/rodes.html#examples","title":"Examples","text":"<pre><code>Role:\nYou are a seasoned project manager leading a cross-functional team within a technology company. Your role is to spearhead the development and implementation of a new customer relationship management (CRM) system to enhance organizational efficiency and improve customer experience.\n\nObjective:\nYour primary objective is to successfully deliver a state-of-the-art CRM system that meets the company's unique needs. The project should streamline internal processes, optimize data management, and provide a user-friendly interface for both employees and customers. Timely delivery within the established budget and scope is crucial for project success.\n\nDetails:\nInitiate the project by conducting a thorough needs analysis with key stakeholders from various departments. Collaborate with the IT team, user experience designers, and customer support to gather requirements. Develop a detailed project plan, outlining phases, milestones, and resource allocation. Clearly define roles and responsibilities within the project team and establish effective communication channels.\n\nExamples:\nProvide examples of innovative features that could be incorporated into the new CRM system, such as AI-driven analytics for customer behavior prediction, seamless integration with other enterprise systems, and personalized customer communication modules. Reference successful CRM implementations in other industries to inspire confidence in the proposed innovations.\n\nSense Check:\nEvaluate the project's feasibility by considering potential challenges, resource constraints, and technological dependencies. Conduct regular sense checks with stakeholders to ensure alignment with organizational goals and to address any emerging issues promptly. Prioritize transparency and effective communication to maintain stakeholder confidence throughout the project lifecycle.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rodes"]},{"location":"multimedia/writing/llm/rtf.html","title":"RTF - Role, Task, Format","text":"","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rtf"]},{"location":"multimedia/writing/llm/rtf.html#overview","title":"Overview","text":"<p>The RTF Framework (Role, Task, Format) is a structured approach to crafting prompts that ensures clear and contextually relevant responses from AI models. By explicitly defining the Role, Task, and Format, you enhance the precision and usefulness of the generated output.</p>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rtf"]},{"location":"multimedia/writing/llm/rtf.html#framework-structure","title":"Framework Structure","text":"<pre><code>Act like a [insert role]. Give me a [insert task] in [insert format] format.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rtf"]},{"location":"multimedia/writing/llm/rtf.html#steps-for-using-the-rtf-framework","title":"Steps for Using the RTF Framework","text":"<ol> <li>Define the Role<ul> <li>Specify who or what the AI should act like.</li> <li>This influences the response style, depth, and expertise.</li> <li>Examples: \u201cSoftware Developer\u201d, \u201cData Scientist\u201d, \u201cTechnical Writer\u201d.</li> </ul> </li> <li>Specify the Task<ul> <li>Clearly state what you want the AI to do.</li> <li>This could be summarization, analysis, explanation, coding, etc.</li> <li>Examples: \u201cProvide a code review\u201d, \u201cSummarize this article\u201d, \u201cExplain this concept\u201d.</li> </ul> </li> <li>Choose the Output Format<ul> <li>Define the structure of the response.</li> <li>Examples: \u201cMarkdown format\u201d, \u201cJSON format\u201d, \u201cBullet points\u201d, \u201cTable\u201d.</li> </ul> </li> </ol>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rtf"]},{"location":"multimedia/writing/llm/rtf.html#examples","title":"Examples","text":"<pre><code>Act like a Software Developer. Give me a Code Review Summary in Markdown format.\n</code></pre> <pre><code>Act like a Data Scientist. Explain the concept of overfitting in Markdown format.\n</code></pre> <pre><code>Act like a Business Analyst. Provide a SWOT analysis of Tesla in Markdown format.\n</code></pre> <pre><code>Act like a Python Developer. Generate a function that parses JSON in Python code.\n</code></pre>","tags":["multimedia","writing","llm","chatgpt","prompt engineering","rtf"]},{"location":"multimedia/writing/md/index.html","title":"Markdown","text":"","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html","title":"Github Markdown","text":"<p>See also my git csstheme in the config repo</p> <p>GFM is a variant of markdown developed by Github.</p> <ul> <li>Github flavored markdown</li> <li>Markdown Cheatsheet</li> </ul> <p>This is intended as a quick reference and showcase. For more complete info, see John Gruber's original spec and the Github-flavored Markdown info page.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#headers","title":"Headers","text":"<pre><code># H1\n## H2\n### H3\n#### H4\n##### H5\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n</code></pre>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#h2","title":"H2","text":"","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#h3","title":"H3","text":"","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#h4","title":"H4","text":"","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#h5","title":"H5","text":"","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#emphasis","title":"Emphasis","text":"<pre><code>Emphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n</code></pre> <p>Emphasis, aka italics, with asterisks or underscores.</p> <p>Strong emphasis, aka bold, with asterisks or underscores.</p> <p>Combined emphasis with asterisks and underscores.</p> <p>Strikethrough uses two tildes. Scratch this.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#lists","title":"Lists","text":"<pre><code>1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.\n    Note that this line is separate, but within the same paragraph.\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n</code></pre> <ol> <li>First ordered list item</li> <li> <p>Another item</p> </li> <li> <p>Unordered sub-list.</p> </li> <li> <p>Actual numbers don't matter, just that it's a number</p> </li> <li> <p>Ordered sub-list</p> </li> <li> <p>And another item.</p> <p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</p> <p>To have a line break without a paragraph, you will need to use two trailing spaces. Note that this line is separate, but within the same paragraph. (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> </li> <li> <p>Unordered list can use asterisks</p> </li> <li>Or minuses</li> <li>Or pluses</li> </ol>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#links","title":"Links","text":"<p>There are two ways to create links.</p> <pre><code>[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links.\nhttp://www.example.com or &lt;http://www.example.com&gt; and sometimes\nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n</code></pre> <p>I'm an inline-style link</p> <p>I'm an inline-style link with title</p> <p>I'm a reference-style link</p> <p>I'm a relative reference to a repository file</p> <p>You can use numbers for reference-style link definitions</p> <p>Or leave it empty and use the link text itself.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#images","title":"Images","text":"<pre><code>Here's our logo (hover to see the title text):\n\nInline-style:\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\n</code></pre> <p>Here's our logo (hover to see the title text):</p> <p>Inline-style: Figure 1: alt text</p> <p>Reference-style: Figure 2: alt text</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#code-and-syntax-highlighting","title":"Code and Syntax Highlighting","text":"<p>Code blocks are part of the Markdown spec, but syntax highlighting isn't. However, many renderers -- like Github's and Markdown Here --  support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page.</p> <pre><code>Inline `code` has `back-ticks around` it.\n</code></pre> <p>Inline <code>code</code> has <code>back-ticks around</code> it.</p> <p>Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks -- they're easier and only they support syntax highlighting.</p> <pre><code>```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n ```\n\n```python\ns = \"Python syntax highlighting\"\nprint s\n ```\n\n ```\nNo language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n ```\n</code></pre> <pre><code>var s = \"JavaScript syntax highlighting\";\nalert(s);\n</code></pre> <pre><code>s = \"Python syntax highlighting\"\nprint s\n</code></pre> <pre><code>No language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n</code></pre>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#tables","title":"Tables","text":"<p>Tables aren't part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.</p> <p>Colons can be used to align columns.</p> <pre><code>| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n</code></pre> Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <pre><code>Markdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n</code></pre> Markdown Less Pretty Still <code>renders</code> nicely 1 2 3 <p>Colons can be used to align columns.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#blockquotes","title":"Blockquotes","text":"<pre><code>&gt; Blockquotes are very handy in email to emulate reply text.\n&gt; This line is part of the same quote.\n\nQuote break.\n\n&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n</code></pre> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> <p>Quote break.</p> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#inline-html","title":"Inline HTML","text":"<p>You can also use raw HTML in your Markdown, and it'll mostly work pretty well. </p><pre><code>&lt;dl&gt;\n  &lt;dt&gt;Definition list&lt;/dt&gt;\n  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;\n\n  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre> Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags.","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#horizontal-rule","title":"Horizontal Rule","text":"<pre><code>Three or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n</code></pre> <p>Three or more...</p> <p>Hyphens</p> <p>Asterisks</p> <p>Underscores</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#line-breaks","title":"Line Breaks","text":"<p>My basic recommendation for learning how line breaks work is to experiment and discover -- hit <code>Enter</code> once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \"Markdown Toggle\" is your friend.</p> <p>Here are some things to try out:</p> <pre><code>Here's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n</code></pre> <p>Here's a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a separate paragraph.</p> <p>This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the same paragraph.</p> <p>Tip</p> <p>Technical note: Markdown Here uses GFM line breaks, so there's no need to use MD's two-space line breaks.</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/md_github.html#youtube-videos","title":"YouTube Videos","text":"<p>They can't be added directly but you can add an image with a link to the video like this:</p> <pre><code>&lt;a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=YOUTUBE_VIDEO_ID_HERE\"\n   target=\"_blank\"&gt;&lt;img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\"\n   alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /&gt;&lt;/a&gt;\n</code></pre> <p>Figure 3: IMAGE ALT TEXT HERE</p> <p>Or, in pure Markdown, but losing the image sizing and border:</p> <pre><code>[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/SiUBdUE7xnA/0.jpg)](http://www.youtube.com/watch?v=SiUBdUE7xnA)\n</code></pre> <p>Figure 4: IMAGE ALT TEXT HERE</p>","tags":["multimedia","writing","md"]},{"location":"multimedia/writing/md/mkdocs/index.html","title":"MKDocs Material Markdown","text":"","tags":["multimedia","writing","md","markdown"]},{"location":"multimedia/writing/md/mkdocs/index.html#some-mkdocs-material-helppages","title":"Some MKDocs Material helppages","text":"<ul> <li>Official MKDocs Material</li> <li>Official MKDocs Webpage</li> </ul>","tags":["multimedia","writing","md","markdown"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html","title":"Cheatsheet","text":"<p> In this page you will get a quick overview about the most used syntax.</p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#metadata","title":"Metadata","text":"<p>File metadata is writen in <code>YAML</code>at the beginning of every document.</p> <p>Default (optional) metadata </p><pre><code>---\ntitle: My Document\nsummary: A brief description of my document.\nauthors:\n    - tschinz\ndate: 2018-07-10\nsome_url: https://example.com\ntags:\n    - tag 1\n    - tag 2\n---\n</code></pre> <p>Hide navigation sidebar and / or table of contents </p><pre><code>---\nhide:\n- navigation\n- toc\n---\n</code></pre> <p>Disable macros </p><pre><code>```yml\n---\nrender_macros: false\n---\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#titles","title":"Titles","text":"<pre><code># H1 Title\n## H2 Title\n### H3 Title\n#### H4 Title\n##### H5 Title\n###### H6 Title\n\nHorizontal Rule\n\n---\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#h2-title","title":"H2 Title","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#h3-title","title":"H3 Title","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#h4-title","title":"H4 Title","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#h5-title","title":"H5 Title","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#h6-titles","title":"H6 Titles","text":"<p>Horizontal Rule</p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#markup","title":"Markup","text":"<pre><code>_italic_ *italic*\n\n__bold__ **bold**\n\n^^underline^^\n\n~~strike through~~\n\n==highlight==\n\n`inline code`\n\n==*you* **can** ^^combine^^ `them`==\n\n&gt; blockquote\n\nnewline is &lt;br&gt;\n\n---\n\n[//]: # (This may be the most platform independent comment)\n\n&lt;!-- Comment --&gt;\n&lt;!--\nMulti\nLine\nComment\n--&gt;\n</code></pre> <p>italic italic</p> <p>bold bold</p> <p>underline</p> <p>strike through</p> <p>highlight</p> <p><code>inline code</code></p> <p>you can combine <code>them</code></p> <p>blockquote</p> <p>newline is </p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#links","title":"Links","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#external-links","title":"External Links","text":"<pre><code>Simple link [rust](https://www.rust-lang.org/)\nLink with custom title [rust](https://www.rust-lang.org/ \"Rust Lang Webpage\")\nMail link with emoji [:bug:](mailto:nonofyourbusiness.com)\nLink of pdf [Rust Book](https://www.scs.stanford.edu/~zyedidia/docs/rust/rust_book.pdf)\n</code></pre> Simple link rust  Link with custom title rust  Mail link with emoji   Link of pdf Rust Book","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#external-shortlinks","title":"External Shortlinks","text":"<p>int the <code>mkdocs.yml</code> file there are multiple <code>extra</code>'s defined: </p><pre><code>base_url: https://tschinz.github.io/znotes\nbase_repo: https://github.com/tschinz/znotes-mkdocs\nbase_repo_file: https://github.com/tschinz/znotes-mkdocs/blob/main\nbase_repo_folder: https://github.com/tschinz/znotes-mkdocs/tree/main\nconfig_repo: https://github.com/tschinz/config\nconfig_repo_file: https://github.com/tschinz/config/blob/master\nconfig_repo_folder: https://github.com/tschinz/config/tree/master\n</code></pre> <p>This helps to link quickly to the znotes-repo or my config-repo.</p> <pre><code>- link to [znotes-repo](https://github.com/tschinz/tschinz)\n- link to [config-repo](https://github.com/tschinz/config)\n\n- link to folder [_extra](https://github.com/tschinz/tschinz/blob/main/docs/_extra) from znotes repo\n- link to folder [shell](https://github.com/tschinz/config/blob/master/scripts/shell) from config repo\n\n- link to file [extra.css](https://github.com/tschinz/tschinz/blob/main/docs/_extra/css/extra.css) from znotes repo\n- link to file [backup.bash](https://github.com/tschinz/config/blob/master/scripts/shell/backup.bash) from config repo\n</code></pre> <ul> <li>link to znotes-repo</li> <li> <p>link to config-repo</p> </li> <li> <p>link to folder _extra from znotes repo</p> </li> <li> <p>link to folder shell from config repo</p> </li> <li> <p>link to file extra.css from znotes repo</p> </li> <li>link to file backup.bash from config repo</li> </ul>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#internal-links","title":"Internal Links","text":"<p>All internal links are relative.</p> <p></p><pre><code>[mkdocs index](index.md)\n[mkdocs index](./index.md)\n[writing index](../index.md)\n[writing index](./../index.md)\n[cheatsheets title](./cheatsheet.md#links)\n</code></pre> mkdocs index mkdocs index writing index writing index cheatsheets title <p>You can also link a pdf file directly </p><pre><code>[Guide to Typst](../../typst/docs/guide-to-typst.pdf)\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#link-settings","title":"Link Settings","text":"<pre><code>[open in new tab](index.md){.new-tab}\n[open in new tab](index.md){:target=\"_blank\"}\nLink to pdf download [Rust Book](https://www.scs.stanford.edu/~zyedidia/docs/rust/rust_book.pdf){:download}\nLink to pdf download with custom name [Rust Book](https://www.scs.stanford.edu/~zyedidia/docs/rust/rust_book.pdf){:download=\"Rust-Book.pdf\"}\n</code></pre> open in new tab open in new tab  Link to pdf download Rust Book  Link to pdf download with custom name Rust Book","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#images","title":"Images","text":"<p>Supported file types are <code>.svg</code> <code>.png</code> <code>.jpg</code> <code>.webp</code></p> <p></p><pre><code>![](img/magic-wand.svg){width=\"50px\"}\n![](img/magic-wand.png){width=\"50px\"}\n![](img/magic-wand.jpg){width=\"50px\"}\n![](img/magic-wand.webp){width=\"50px\"}\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#align-caption","title":"Align + Caption","text":"<pre><code>![](img/magic-wand.svg){align=left width=\"100px\"}\n![](img/magic-wand.svg){align=right width=\"100px\"}\n![Caption text](img/magic-wand.svg){.center width=\"100px\"}\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#side-by-side-images","title":"Side-by-Side Images","text":"<pre><code>![](img/magic-wand.svg){align=left width=\"45%\"}\n![](img/magic-wand.svg){align=right width=\"45%\"}\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#official-caption","title":"Official Caption","text":"Image caption","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#inline-images","title":"Inline Images","text":"<pre><code>This is ![](img/magic-wand.svg){width=\"15px\"} an inline image.\n</code></pre> This is  an inline image.","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#emoji","title":"Emoji","text":"<p>Using twemoji and the shortcodes can be looked up at emojipedia.</p> <pre><code>:handshake:\n:crab:\n:earth_africa:\n:rocket:\n:bulb:\n:star:\n</code></pre> <p> </p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#fontawesome","title":"Fontawesome","text":"<p>All image from Fontawesome are possible </p><pre><code>:fontawesome-regular-face-laugh-wink:\n:fontawesome-brands-rust:\n:fontawesome-solid-arrow-right:\n:fontawesome-solid-arrow-left:\n:fontawesome-solid-arrow-up:\n:fontawesome-solid-arrow-down:\n:fontawesome-solid-arrow-rotate-right:\n:fontawesome-solid-arrow-rotate-left:\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#lists","title":"Lists","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#unordered","title":"Unordered","text":"<pre><code>- minus item\n* asterix item\n    - subitem 1\n    - subitem 2\n+ plus item\n</code></pre> <ul> <li>minus item</li> <li>asterix item<ul> <li>subitem 1</li> <li>subitem 2</li> </ul> </li> <li>plus item</li> </ul>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#ordered","title":"Ordered","text":"<pre><code>1. item 1\n2. item 2\n    1. item 2.1\n    2. item 2.2\n    3. item 2.3\n        1. item 2.3.1\n        2. item 2.3.2\n        3. item 2.3.3\n4. item 3\n</code></pre> <ol> <li>item 1</li> <li>item 2<ol> <li>item 2.1</li> <li>item 2.2</li> <li>item 2.3<ol> <li>item 2.3.1</li> <li>item 2.3.2</li> <li>item 2.3.3</li> </ol> </li> </ol> </li> <li>item 3</li> </ol>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#tasks","title":"Tasks","text":"<pre><code>- [x] Task 1\n    - [ ] Task 1.1\n    - [ ] Task 1.2\n    - [X] Task 1.3\n- [ ] Task 2\n- [ ] Task 3\n</code></pre> <ul> <li> Task 1<ul> <li> Task 1.1</li> <li> Task 1.2</li> <li> Task 1.3</li> </ul> </li> <li> Task 2</li> <li> Task 3</li> </ul>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#buttons","title":"Buttons","text":"<pre><code>[Send :fontawesome-solid-paper-plane:](cheatsheet.md#buttons){ .md-button }\n\n[Send :fontawesome-solid-paper-plane:](#){ .md-button .md-button--primary }\n</code></pre> Send  <p>Send </p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#math","title":"Math","text":"<p>Block math</p> <pre><code>$$\n\\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}}\n$$\n</code></pre> \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <pre><code>Inline math is with $\\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}}$\n</code></pre> <p>Inline math is with \\(\\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}}\\)</p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#tables","title":"Tables","text":"Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Tables Are Cool left-aligned centered left-aligned bold","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#code","title":"Code","text":"<pre><code>```rust\nfn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n`` `\n</code></pre> <pre><code>fn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n</code></pre> <pre><code>```rust title=\"hello-world.rs\"\nfn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n`` `\n</code></pre> hello-world.rs<pre><code>fn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n</code></pre> <pre><code>```rust linenums=\"1\"\nfn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n`` `\n</code></pre> <pre><code>fn main() {\n    let message = \"Hello, Rust!\";\n    println!(\"{}\", message);\n}\n</code></pre> <p>If a code block contains jinja style macros such as <code>{ {...} }</code> or <code>#</code> there can be a Macro Rendering Error. On way to solve it is the disable macros for the whole page by adding the following statement in the front matter:</p> <pre><code>---\nrender_macros: false\n---\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#boxes-admonitions","title":"Boxes (Admonitions)","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#settings","title":"Settings","text":"<pre><code>!!! note\n    Notebox\n</code></pre> <p>Note</p> <p>Notebox</p> <pre><code>!!! note \"This is a custom title\"\n    Custom title notebox\n</code></pre> <p>This is a custom title</p> <p>Custom title notebox</p> <pre><code>!!! note \"\"\n    No title notebox\n</code></pre> <p>No title notebox</p> <pre><code>??? note\n    By default collabeed, collapsible notebox\n</code></pre> Note <p>By default collabeed, collapsible notebox</p> <pre><code>???+ note\n    By default open, collapsible notebox\n</code></pre> Note <p>By default open, collapsible notebox</p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#type-of-boxes","title":"Type of Boxes","text":"<pre><code>!!! note\n    Notebox\n</code></pre> <p>Note</p> <p>Notebox</p> <pre><code>!!! info\n    Infobox\n</code></pre> <p>Info</p> <p>Infobox</p> <pre><code>!!! abstract\n    Abstractbox\n</code></pre> <p>Abstract</p> <p>Abstractbox</p> <pre><code>!!! tip\n    Tipbox\n</code></pre> <p>Tip</p> <p>Tipbox</p> <pre><code>!!! success\n    Successbox\n</code></pre> <p>Success</p> <p>Successbox</p> <pre><code>!!! question\n    Questionbox\n</code></pre> <p>Question</p> <p>Questionbox</p> <pre><code>!!! warning\n    Warningbox\n</code></pre> <p>Warning</p> <p>Warningbox</p> <pre><code>!!! failure\n    Failurebox\n</code></pre> <p>Failure</p> <p>Failurebox</p> <pre><code>!!! danger\n    Dangerbox\n</code></pre> <p>Danger</p> <p>Dangerbox</p> <pre><code>!!! bug\n    Bugbox\n</code></pre> <p>Bug</p> <p>Bugbox</p> <pre><code>!!! example\n    Examplebox\n</code></pre> <p>Example</p> <p>Examplebox</p> <pre><code>!!! quote\n    Qutobox\n</code></pre> <p>Quote</p> <p>Qutobox</p>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#grids","title":"Grids","text":"<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n- :fontawesome-brands-html5: __HTML__ for content and structure\n- :fontawesome-brands-js: __JavaScript__ for interactivity\n- :fontawesome-brands-css3: __CSS__ for text running out of boxes\n- :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n&lt;/div&gt;\n</code></pre> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Internet Explorer ... huh?</li> </ul> <pre><code>&lt;div class=\"grid cards\" markdown&gt;\n-   :material-clock-fast:{ .lg .middle } __Set up in 5 minutes__\n\n    ---\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up\n    and running in minutes\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __It's just Markdown__\n\n    ---\n\n    Focus on your content and generate a responsive and searchable static site\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } __Made to measure__\n\n    ---\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } __Open Source, MIT__\n\n    ---\n\n    Material for MkDocs is licensed under MIT and available on [GitHub]\n    [:octicons-arrow-right-24: License](#)\n&lt;/div&gt;\n</code></pre> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes  Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site  Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines  Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]  License</p> </li> </ul>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#diagrams","title":"Diagrams","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#mermaid","title":"Mermaid","text":"","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#flowchart","title":"Flowchart","text":"<pre><code>```mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n ```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#sequence-diagram","title":"Sequence Diagram","text":"<pre><code>```mermaid\nsequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!\n ```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#state-diagrams","title":"State Diagrams","text":"<pre><code>```mermaid\nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n ```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#class-diagrams","title":"Class Diagrams","text":"<pre><code>```mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()\n  }\n ```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()\n  }</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#entity-realationship-diagram","title":"Entity-Realationship Diagram","text":"<pre><code>```mermaid\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n ```\n</code></pre> <pre><code>erDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#wavedrom","title":"Wavedrom","text":"<p>For more information see:</p> <ul> <li>Wavedrom JSON Wiki</li> <li>Wavedrom Tutorial</li> </ul>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#timing-diagrams","title":"Timing Diagrams","text":"<pre><code>{ signal: [{ name: 'Alfa', wave: '01.zx=ud.23.45' }] }\n</code></pre> <pre><code>{ \"signal\": [\n  { \"name\": \"pclk\", \"wave\": 'p.......' },\n  { \"name\": \"Pclk\", \"wave\": 'P.......' },\n  { \"name\": \"nclk\", \"wave\": 'n.......' },\n  { \"name\": \"Nclk\", \"wave\": 'N.......' },\n  {},\n  { \"name\": 'clk0', \"wave\": 'phnlPHNL' },\n  { \"name\": 'clk1', \"wave\": 'xhlhLHl.' },\n  { \"name\": 'clk2', \"wave\": 'hpHplnLn' },\n  { \"name\": 'clk3', \"wave\": 'nhNhplPl' },\n  { \"name\": 'clk4', \"wave\": 'xlh.L.Hx' },\n]}\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#register","title":"Register","text":"<p>you can describe register mapping with the same syntax:</p> <pre><code>{\"reg\":[\n  {\"bits\": 8, \"name\": \"things\"},\n  {\"bits\": 2, \"name\": \"stuff\" },\n  {\"bits\": 6},\n ],\n \"config\": { \"bits\":16,\"lanes\":1 }\n }\n</code></pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/md/mkdocs/cheatsheet.html#plantuml","title":"PlantUML","text":"<p>This documentation makes use of the plantuml-markdown plugin and the PlantUML Webpage.</p> <p>For a small Cheatsheet for PlantUML see https://ogom.github.io/draw_uml/plantuml/</p> <pre><code>```plantuml\n@startmindmap\n* **Pillars of OOP**\n**: **Inheritance**\n(Sharing of information);\n**: **Encapsulation**\n(Grouping of information);\n**: **Abstraction**\n(Hiding of information);\n**: **Polymorphism**\n(Redefining of information;\n@endmindmap\n ```\n</code></pre> <pre>9e1e9db711be738e3b256cbd0fd6a6311ff4ea397106ae420ea83a832e908811eb37980f23b7776f043f72d44ed7bc41ac0471ba36ec532898f743d9cd8b5db6</pre><pre>5a96eb6329e46ed5dadaece5140a4160301018bd9ae79283b90d578c9c660a27caad0c93a3f3c2332e95732cde6425a167237fc51b490d560e8a09c86464426c</pre> <pre><code>```plantuml\n@startuml\nclass Pokemon {\n  .. Attributes ..\n- name: str { name }\n- type: str { type }\n- health: int { health }\n- attack: int { attack }\n- defense: int { defense }\n- speed: int { speed }\n  .. Methods ..\n- speak(): Type {}\n- attack(): Type {}\n- dodge(): Type {}\n- evolve(): Type {}\n}\n@enduml\n ```\n</code></pre> <pre>fc590897e41216ca5049863966e5ba9302a8e306fa2e980c0a4137e3db5045d2df51328f3fda0f679dbfeced6814645fc4d25db9f24d847f817c61a830b88dfd</pre><pre>5de8aa384bc4844c083bc5152aadc68c6809c168a765cb4b7505c965b94d98f88f608dd1c5bb4dd7e9faabafdc4d617ec135475bcec631b621b85aa108704c67</pre> <pre><code>```plantuml\n@startuml\nclass Pokemon {\n  .. Attributes ..\n- name: str { name }\n- type: str { type }\n- health: int { health }\n- attack: int { attack }\n- defense: int { defense }\n- speed: int { speed }\n  .. Methods ..\n- speak(): Type {}\n- attack(): Type {}\n- dodge(): Type {}\n- evolve(): Type {}\n}\n\nclass ElectricPokemon {\n.. Attributes ..\n- special_attack: int {special_attack}\n.. Methods ..\n- speak(): Type {}\n- electricAttack(): Type {}\n}\n\nclass FirePokemon {\n.. Attributes ..\n- special_attack: int {special_attack}\n.. Methods ..\n- speak(): Type {}\n- fireAttack(): Type {}\n}\n\nclass WaterPokemon {\n.. Attributes ..\n- special_attack: int {special_attack}\n.. Methods ..\n- speak(): Type {}\n- waterAttack(): Type {}\n}\n\nPokemon &lt;|-- ElectricPokemon\nPokemon &lt;|-- FirePokemon\nPokemon &lt;|-- WaterPokemon\n\n@enduml\n ```\n</code></pre> <pre>e03989cc245b63400ad14e08d21a1fa1ea3f738f00cd71f9fe6af370cb983ed9230274dd06c81aa3f735f020a4da815d56b01384ba7e907942654f7670655681</pre><pre>a09b219c094f9f320cba90baac83d3626e02dfc8be9dd07ae9a9b2bfc5c36628057b49a97fa0c5626a8e54b64030becb10f6c2560609187f3c1626a88d548981</pre> <pre><code>```plantuml\n@startuml\ntitle Authentication Sequence\n    Alice-&gt;Bob: Authentication Request\n    note right of Bob: Bob thinks about it\n    Bob-&gt;Alice: Authentication Response\n@enduml\n ```\n</code></pre> <pre>1a8205b76e8ec26bb110890c13f461da73245ff1238e78cc76ae9e58f18682b87d2821eb3afba257b2bba7900e3f5a99177defb81bc9a7d939da86b2de2715da</pre><pre>546c5ce797f30c704e56e9a4db7b46deb03208a0cfe6194641aa6e3a9f3d5362615d6b0a0ed4fb463b1779991e6c37e2b9252fd59a1ad453f0a3b684f5b721ff</pre>","tags":["multimedia","writing","md","mkdocs"]},{"location":"multimedia/writing/rst/index.html","title":"ReStructuredText","text":"","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/rst/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/rst/index.html#introduction","title":"Introduction","text":"","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/rst/index.html#cheatsheet","title":"Cheatsheet","text":"<ul> <li>rst-cheatsheet.pdf</li> </ul>","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/rst/index.html#some-rst-syntax-helppages","title":"Some RST Syntax helppages","text":"<ul> <li>Thomas Cokelaer RST Sphinx Syntax</li> <li>Docutil Quickref</li> <li>Raslina RST Cheatsheet</li> </ul>","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/rst/cheatsheet.html","title":"RST and Sphinx Cheatsheet","text":"<p>In this page you will get a quick overview about the most used syntax.</p>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#table-of-content","title":"Table of content","text":"<p>To include a table of content of all title in a page use</p> <pre><code>.. contents:: :local:\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#titles","title":"Titles","text":"<p>The lines have to be as long or longer than the text.</p> <pre><code>=============\nSection Title\n=============\n\nTitles\n======\n\nParagraph\n---------\n\nSub-Pragraph\n^^^^^^^^^^^^\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#markup","title":"Markup","text":"<pre><code>+--------------------------------------+-------------------------------+\n|     *emphasis*                       | *emphasis*                    |\n+--------------------------------------+-------------------------------+\n|     **strong emphasis**              | **strong emphasis**           |\n+--------------------------------------+-------------------------------+\n|     `interpreted text`               | The rendering and meaning of  |\n|                                      | interpreted text is domain-   |\n|                                      | or application-dependent.     |\n+--------------------------------------+-------------------------------+\n|     ``inline literal``               | `inline literal`              |\n+--------------------------------------+-------------------------------+\n|     :markup:                         | markup                        |\n|                                      |                               |\n|                                      | :                             |\n+--------------------------------------+-------------------------------+\n|     &gt; quote markup                   | \\&gt; quote markup               |\n+--------------------------------------+-------------------------------+\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#links","title":"Links","text":"","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#external-links","title":"External Links","text":"","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#internet","title":"Internet","text":"<pre><code>`python &lt;http://www.python.org/&gt;`_\n`&lt;http://www.python.org/&gt;`_\nhttp://www.python.org/\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#other-repos","title":"Other Repo's","text":"<p>The plugin <code>sphinx.ext.extlinks</code> allows creating shortcuts</p> <pre><code>extlinks = {'config_repo': ('https://github.com/tschinz/config/%s', None),\n            'znotes_repo': ('https://github.com/tschinz/znotes/%s', None)\n           }\n</code></pre> <pre><code>:config_repo:`jupyter folder &lt;tree/master/config/jupyter&gt;`\n:config_repo:`shell script &lt;blob/master/scripts/shell/christmas_tree.sh&gt;`\n:znotes_repo:`znotes link &lt;blob/master/src/conf.py&gt;`\n</code></pre> <p>Note</p> <p>To access github files and folders you need to create the following link structure: - https:// + <code>github_repo_link</code> + <code>tree/master/</code> + <code>folder/location</code> - https:// + <code>github_repo_link</code> + <code>blob/master/</code> + <code>file/location.txt</code></p> <p>Tip</p> <p>View/Download a pdf</p> <p>https://github.com can be used to display a pdf from the repo without using the <code>:download</code> directive.</p> <pre><code>https://github.com/tschinz/znotes/blob/master/src/coding/spinal/tools/docs/gtkwave.pdf\n\n:pdf_view:`pdf view &lt;source/coding/spinal/tools/docs/gtkwave.pdf&gt;`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#other-sphinx-pages","title":"Other Sphinx Pages","text":"<pre><code>* absolute link from root\n  :doc:`/about/index`\n\n* relative link from document location\n  :doc:`../../../about/index`\n</code></pre> <p>In the page to be jumped to add <code>.. _ref_name:</code>, and then you can:</p> <pre><code>:ref:`ref_name`\n:ref:`link title&lt;ref_name&gt;`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#internal-links","title":"Internal Links","text":"","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#link-to-titles","title":"Link to Titles","text":"<p>Link to titles directly is done with the extension <code>sphinx.ext.autosectionlabel</code>.</p> <p>Tip</p> <p>You need to add the <code>folder_name</code> and <code>subfolder(s)`_name</code> name as well as <code>file_name</code> without <code>.rst</code> extension in order to reference a section title. This avoids the duplicated label warning.</p> <pre><code>:ref:`Displayname &lt;folder_name/subfolder_name/file_name/section_title&gt;`\n</code></pre> <pre><code>:ref:`Back to top &lt;multimedia/writing/rst/cheatsheet:RST and Sphinx Cheatsheet&gt;`\n\n:ref:`multimedia/writing/rst/cheatsheet:Images`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#internal-references","title":"Internal References","text":"<p>In any place of the document a reference point can be inserted and later refered to.</p> <pre><code>.. _ref-point:\n\nsee :ref:`ref-point`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#file-links","title":"File Links","text":"<p>To link to a file within the Sphinx file structure use the Role <code>:download:</code></p> <pre><code>:download:`../../../coding/tcl_tk_do/docs/tcl-tk-manual.pdf`\n\n:download:`TCL/TK Manual &lt;/coding/tcl_tk_do/docs/tcl-tk-manual.pdf&gt;`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#images","title":"Images","text":"<pre><code>.. figure:: /img/logo.*\n</code></pre> <p>Tip</p> <p>Images should be either in <code>png</code> or <code>svg</code> format For <code>*.svg</code> files the file ending needs to be changed from <code>svg</code> to <code>*</code>. That way for html svg is used and pdf or pn for the latex or pdf output.</p>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#image-placement","title":"Image Placement","text":"<pre><code>.. figure:: /img/logo.*\n   :align: left\n   :width: 100px\n\n.. figure:: /img/logo.*\n   :align: center\n   :width: 100px\n\n.. figure:: /img/logo.*\n   :align: right\n   :width: 100px\n\n.. figure:: /img/logo.*\n   :align: center\n   :width: 100px\n   :height: 100px\n   :scale: 50 %\n   :alt: this is the knowhow logo\n\n   Caption of figure\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#side-by-side-images","title":"Side-by-Side Images","text":"<p>Images can be displayed side by side with the help of a list table</p> <pre><code>.. list-table::\n\n   * - .. figure:: img/logo.*\n          :align: center\n          :alt: logo 1\n          :width: 200px\n\n          Logo Text 1\n\n     - .. figure:: img/logo.*\n          :align: center\n          :alt: logo 2\n          :width: 200px\n\n          Logo Text 2\n\n     - .. figure:: img/logo.*\n          :align: center\n          :alt: logo 3\n          :width: 200px\n\n          Logo Text 3\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#inline-images","title":"Inline Images","text":"<p>For inline images to work, a substitution needs to be made</p> <pre><code>.. |folder_icon| image:: /img/icons/folder.*\n\nAfter that the image |folder_icon| can be integrated inline.\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#predefined-images","title":"Predefined Images","text":"<p>There are some predefined images in <code>conf.py</code> file.</p> <pre><code>|folder|\n|file|\n|sign-check|\n|upload|\n|download|\n|expand|\n|minimize|\n|arrow-up|\n|arrow-down|\n|arrow-left|\n|arrow-right|\n|star5|\n|star4|\n|star3|\n|star2|\n|star1|\n|star|\n|en|\n|ch|\n|de|\n|china|\n|uk|\n|usa|\n|it|\n|jp|\n|fr|\n|linux|\n|mac|\n|win|\n|word|\n|excel|\n|onenote|\n|outlook|\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#lists","title":"Lists","text":"<pre><code>* item 1\n\n  * item 1.1\n  * item 1.2\n\n* item 2\n\n  * item 2.1\n\n    * item 2.1.1\n\n#. auto enumerated list item 1\n#. auto enumerated list item 1\n#. auto enumerated list item 1\n#. auto enumerated list item 1\n\n3. enumerated list start with item 3\n#. auto enumerated list item 4\n#. auto enumerated list item 5\n#. auto enumerated list item 6\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#tables","title":"Tables","text":"<pre><code>+------------+------------+-----------+\n| Header 1   | Header 2   | Header 3  |\n+============+============+===========+\n| body row 1 | column 2   | column 3  |\n+------------+------------+-----------+\n| body row 2 | Cells may span columns.|\n+------------+------------+-----------+\n| body row 3 | Cells may  | - Cells   |\n+------------+ span rows. | - contain |\n| body row 4 |            | - blocks. |\n+------------+------------+-----------+\n</code></pre> <pre><code>=====  =====  ======\nInputs     Output\n------------  ------\n  A      B    A or B\n=====  =====  ======\nFalse  False  False\nTrue   False  True\nFalse  True   True\nTrue   True   True\n=====  =====  ======\n</code></pre> <p>Note</p> <p><code>:widths: auto</code> will adapt the columnwidth automatically</p> <pre><code>.. list-table::\n   :header-rows: 1\n   :stub-columns: 1\n   :widths: 1 1 2\n   :align: center\n\n   * - Type\n     - Literal\n     - Description\n   * - Boolean\n     - true, false\n     -\n   * - Int\n     - 3, 0x32\n     - 32 bits integer\n   * - Float\n     - 3.14f\n     - 32 bits floating point\n   * - Double\n     - 3.14\n     - 64 bits floating point\n   * - String\n     - \"Hello world\"\n     - UTF-16 string\n</code></pre> <pre><code>.. table:: Table caption\n\n   =====  =====  ======\n      Inputs     Output\n   ------------  ------\n     A      B    A or B\n   =====  =====  ======\n   False  False  False\n   =====  =====  ======\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#code","title":"Code","text":"<p>see also this and that</p> <p>For all available lexer see: <code>pygment_lexer</code></p> <pre><code>.. code-block:: python\n\n   import antigravity\n\n   def main():\n       antigravity.fly()\n   if __name__=='__main__':\n       main()\n</code></pre> <pre><code>.. code-block:: python\n   :linenos:\n   :caption: Code Blocks can have captions.\n\n   import antigravity\n\n   def main():\n       antigravity.fly()\n   if __name__=='__main__':\n       main()\n</code></pre> <pre><code>.. code-block:: python\n   :linenos:\n   :lineno-start: 10\n\n   import antigravity\n\n   def main():\n       antigravity.fly()\n   if __name__=='__main__':\n       main()\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#infoboxes","title":"Infoboxes","text":"<pre><code>.. note::\n   This is a Note Box\n</code></pre> <pre><code>.. warning::\n   This is a Warning Box\n</code></pre> <pre><code>.. important::\n   This is a Important Box\n</code></pre> <pre><code>.. seealso::\n   This is a See Also Box\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#special-formatting","title":"Special Formatting","text":"<pre><code>.. versionadded:: 2.5\n   The *spam* parameter.\n\n.. versionchanged:: 2.5\n   Feature description\n\n.. deprecated:: 3.1\n   Use :func:`spam` instead.\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#math","title":"Math","text":"<pre><code>Inline math :math:`a^2 + b^2 = c^2`.\n</code></pre> <pre><code>.. math::\n\n   f(x) &amp;= x^2\\\\\n   g(x) &amp;= \\frac{1}{x}\\\\\n   F(x) &amp;= \\int^a_b \\frac{1}{3}x^3\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#exclude","title":"Exclude","text":"<p>In order to exclude some parts for a certain output use the <code>.. only:: output</code> directive.</p> <pre><code>.. only:: html\n.. only:: draft\n.. only:: latex\n.. only:: html or draft or latex\n.. only:: html and draft\n</code></pre> <p>Warning</p> <p>This is needed for the all the Wavedrom code</p>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#todo","title":"Todo","text":"<p>If the extension <code>sphinx.ext.todo</code> is enabled and the variable <code>todo_include_todos</code> is set to True in <code>conf.py</code>, one can use the directive <code>todo</code> to write a todo task for a later completion.</p> <pre><code>.. todo::\n\n   (example) This section need to be completed.\n</code></pre> <p>Then use the directive <code>todolist</code> to list all todos within the documentation:</p> <pre><code>.. todolist::\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#graphviz","title":"GraphViz","text":"<p>Get more samples here</p> <pre><code>.. graphviz::\n\n   digraph foo {\n      \"bar\" -&gt; \"baz\";\n   }\n</code></pre> <pre><code>.. graphviz::\n\n   digraph finite_state_machine {\n     rankdir=LR;\n     size=\"8,5\"\n     node [shape = doublecircle]; LR_0 LR_3 LR_4 LR_8;\n     node [shape = circle];\n     LR_0 -&gt; LR_2 [ label = \"SS(B)\" ];\n     LR_0 -&gt; LR_1 [ label = \"SS(S)\" ];\n     LR_1 -&gt; LR_3 [ label = \"S($end)\" ];\n     LR_2 -&gt; LR_6 [ label = \"SS(b)\" ];\n     LR_2 -&gt; LR_5 [ label = \"SS(a)\" ];\n     LR_2 -&gt; LR_4 [ label = \"S(A)\" ];\n     LR_5 -&gt; LR_7 [ label = \"S(b)\" ];\n     LR_5 -&gt; LR_5 [ label = \"S(a)\" ];\n     LR_6 -&gt; LR_6 [ label = \"S(b)\" ];\n     LR_6 -&gt; LR_5 [ label = \"S(a)\" ];\n     LR_7 -&gt; LR_8 [ label = \"S(b)\" ];\n     LR_7 -&gt; LR_5 [ label = \"S(a)\" ];\n     LR_8 -&gt; LR_6 [ label = \"S(b)\" ];\n     LR_8 -&gt; LR_5 [ label = \"S(a)\" ];\n   }\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#wavedrom","title":"Wavedrom","text":"<p>For more information see:</p> <ul> <li>Wavedrom JSON Wiki</li> <li>Wavedrom Tutorial</li> </ul>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#timing-diagrams","title":"Timing Diagrams","text":"<p>This documentation makes use of the <code>sphinxcontrib-wavedrom</code> plugin, So you can specify a timing diagram, or a register description with the <code>WaveJSON</code> syntax like so:</p> <pre><code>.. wavedrom::\n\n   { \"signal\": [\n      { \"name\": \"pclk\", \"wave\": 'p.......' },\n      { \"name\": \"Pclk\", \"wave\": 'P.......' },\n      { \"name\": \"nclk\", \"wave\": 'n.......' },\n      { \"name\": \"Nclk\", \"wave\": 'N.......' },\n      {},\n      { \"name\": 'clk0', \"wave\": 'phnlPHNL' },\n      { \"name\": 'clk1', \"wave\": 'xhlhLHl.' },\n      { \"name\": 'clk2', \"wave\": 'hpHplnLn' },\n      { \"name\": 'clk3', \"wave\": 'nhNhplPl' },\n      { \"name\": 'clk4', \"wave\": 'xlh.L.Hx' },\n   ]}\n</code></pre> <p>Note</p> <p>if you want the Wavedrom diagram to be present in the pdf export, you need to use the \"non relaxed\" JSON dialect. long story short, no javascript code and use <code>\"</code> arround key value (Eg. <code>\"name\"</code>).</p>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#register","title":"Register","text":"<p>you can describe register mapping with the same syntax:</p> <pre><code>{\"reg\":[\n  {\"bits\": 8, \"name\": \"things\"},\n  {\"bits\": 2, \"name\": \"stuff\" },\n  {\"bits\": 6},\n ],\n \"config\": { \"bits\":16,\"lanes\":1 }\n }\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#plantuml","title":"PlantUML","text":"<p>This documentation makes use of the <code>sphinxcontrib.plantuml</code> plugin, for more information see the sphinxcontrib.plantuml plugin and the PlantUML Webpage. For a small Cheatsheet for PlantUML see here</p> <pre><code>.. uml::\n\n   class Foo1 {\n     You can use\n     several lines\n     ..\n     as you want\n     and group\n     ==\n     things together.\n     __\n     You can have as many groups\n     as you want\n     --\n     End of class\n   }\n\n   class User {\n     .. Simple Getter ..\n     + getName()\n     + getAddress()\n     .. Some setter ..\n     + setName()\n     __ private data __\n     int age\n     -- encrypted --\n     String password\n   }\n</code></pre> <pre><code>.. uml::\n\n   Alice -&gt; Bob: Authentication Request\n   Bob --&gt; Alice: Authentication Response\n\n   Alice -&gt; Bob: Another authentication Request\n   Alice &lt;-- Bob: Another authentication Response\n</code></pre> <pre><code>.. uml::\n\n   actor actor\n   agent agent\n   artifact artifact\n   boundary boundary\n   card card\n   cloud cloud\n   component component\n   control control\n   database database\n   entity entity\n   file file\n   folder folder\n   frame frame\n   interface  interface\n   node node\n   package package\n   queue queue\n   stack stack\n   rectangle rectangle\n   storage storage\n   usecase usecase\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#mermaid","title":"Mermaid","text":"<p>This documentation makes use of the <code>sphinxcontrib.mermaid</code> plugin, for more information see the sphinxcontrib.mermaid plugin and the Mermaid Webpage. For a small Cheatsheet for Mermaid see here</p> <pre><code>.. mermaid::\n\n   sequenceDiagram\n      participant Alice\n      participant Bob\n      Alice-&gt;John: Hello John, how are you?\n      loop Healthcheck\n          John-&gt;John: Fight against hypochondria\n      end\n      Note right of John: Rational thoughts &lt;br/&gt;prevail...\n      John--&gt;Alice: Great!\n      John-&gt;Bob: How about you?\n      Bob--&gt;John: Jolly good!\n</code></pre> <pre><code>.. mermaid:: docs/mermaid-gantt-code.mmd\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#buttons","title":"Buttons","text":"<pre><code>.. button:: Documentation\n   :class: btn-large-square fa fa-book btn-hover-blue\n   :link: #\n\n.. button:: GitLab\n   :class: btn-large-square fa fa-gitlab btn-hover-red\n   :link: #\n</code></pre> <p>Note</p> <p>The button link opens a new browser page.</p>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/cheatsheet.html#tags","title":"Tags","text":"<p>For each page corresponding tags should be used, see <code>/about/tags</code> for all currently used tags.</p> <pre><code>:tag:`RST`\n:tag:`rst`\n:tag:`Sphinx`\n</code></pre>","tags":["multimedia","writing","rst","cheatsheet"]},{"location":"multimedia/writing/rst/pygment_lexer.html","title":"Pygment Lexer","text":"<p>List of all pygment lexer available:</p> <pre><code>abap\nabnf\nada, ada95, ada2005\nadl\nagda\nahk, autohotkey\nalloy\nampl\nantlr-as, antlr-actionscript\nantlr-cpp\nantlr-csharp, antlr-c#\nantlr-java\nantlr-objc\nantlr-perl\nantlr-python\nantlr-ruby, antlr-rb\nantlr\napacheconf, aconf, apache\napl\napplescript\narduino\nas, actionscript\nas3, actionscript3\naspectj\naspx-cs\naspx-vb\nasy, asymptote\nat, ambienttalk, ambienttalk/2\nautoit\nawk, gawk, mawk, nawk\nbasemake\nbash, sh, ksh, shell\nbat, batch, dosbatch, winbatch\nbbcode\nbc\nbefunge\nblitzbasic, b3d, bplus\nblitzmax, bmax\nbnf\nboo\nboogie\nbrainfuck, bf\nbro\nbugs, winbugs, openbugs\nc-objdump\nc\nca65\ncadl\ncamkes, idl4\ncbmbas\nceylon\ncfc\ncfengine3, cf3\ncfm\ncfs\nchai, chaiscript\nchapel, chpl\ncheetah, spitfire\ncirru\nclay\nclean\nclojure, clj\nclojurescript, cljs\ncmake\ncobol\ncobolfree\ncoffee-script, coffeescript, coffee\ncommon-lisp, cl, lisp\ncomponentpascal, cp\nconsole, shell-session\ncontrol, debcontrol\ncoq\ncpp, c++\ncpp-objdump, c++-objdumb, cxx-objdump\ncpsa\ncrmsh, pcmk\ncroc\ncryptol, cry\ncsharp, c#\ncsound, csound-orc\ncsound-document, csound-csd\ncsound-score, csound-sco\ncss+django, css+jinja\ncss+erb, css+ruby\ncss+genshitext, css+genshi\ncss+lasso\ncss+mako\ncss+mako\ncss+mozpreproc\ncss+myghty\ncss+php\ncss+smarty\ncss\ncucumber, gherkin\ncuda, cu\ncypher\ncython, pyx, pyrex\nd-objdump\nd\ndart\ndelphi, pas, pascal, objectpascal\ndg\ndiff, udiff\ndjango, jinja\ndocker, dockerfile\ndoscon\ndpatch\ndtd\nduel, jbst, jsonml+bst\ndylan-console, dylan-repl\ndylan-lid, lid\ndylan\nearl-grey, earlgrey, eg\neasytrieve\nebnf\nec\necl\neiffel\nelixir, ex, exs\nelm\nemacs, elisp, emacs-lisp\nerb\nerl\nerlang\nevoque\nextempore\nezhil\nfactor\nfan\nfancy, fy\nfelix, flx\nfish, fishshell\nflatline\nfortran\nfortranfixed\nfoxpro, vfp, clipper, xbase\nfsharp\ngap\ngas, asm\ngenshi, kid, xml+genshi, xml+kid\ngenshitext\nglsl\ngnuplot\ngo\ngolo\ngooddata-cl\ngosu\ngroff, nroff, man\ngroovy\ngst\nhaml\nhandlebars\nhaskell, hs\nhaxeml, hxml\nhexdump\nhsail, hsa\nhtml+cheetah, html+spitfire, htmlcheetah\nhtml+django, html+jinja, htmldjango\nhtml+evoque\nhtml+genshi, html+kid\nhtml+handlebars\nhtml+lasso\nhtml+mako\nhtml+mako\nhtml+myghty\nhtml+php\nhtml+smarty\nhtml+twig\nhtml+velocity\nhtml\nhttp\nhx, haxe, hxsl\nhybris, hy\nhylang\ni6t\nidl\nidris, idr\niex\nigor, igorpro\ninform6, i6\ninform7, i7\nini, cfg, dosini\nio\nioke, ik\nirc\nisabelle\nj\njade\njags\njasmin, jasminxt\njava\njavascript+mozpreproc\njcl\njlcon\njs+cheetah, javascript+cheetah, js+spitfire, javascript+spitfire\njs+django, javascript+django, js+jinja, javascript+jinja\njs+erb, javascript+erb, js+ruby, javascript+ruby\njs+genshitext, js+genshi, javascript+genshitext, javascript+genshi\njs+lasso, javascript+lasso\njs+mako, javascript+mako\njs+mako, javascript+mako\njs+myghty, javascript+myghty\njs+php, javascript+php\njs+smarty, javascript+smarty\njs, javascript\njsgf\njson\njsonld, json-ld\njsp\njulia, jl\nkal\nkconfig, menuconfig, linux-config, kernel-config\nkoka\nkotlin\nlagda, literate-agda\nlasso, lassoscript\nlcry, literate-cryptol, lcryptol\nlean\nless\nlhs, literate-haskell, lhaskell\nlidr, literate-idris, lidris\nlighty, lighttpd\nlimbo\nliquid\nlive-script, livescript\nllvm\nlogos\nlogtalk\nlsl\nlua\nmake, makefile, mf, bsdmake\nmako\nmako\nmaql\nmask\nmason\nmathematica, mma, nb\nmatlab\nmatlabsession\nminid\nmodelica\nmodula2, m2\nmonkey\nmoocode, moo\nmoon, moonscript\nmozhashpreproc\nmozpercentpreproc\nmql, mq4, mq5, mql4, mql5\nmscgen, msc\nmupad\nmxml\nmyghty\nmysql\nnasm\nncl\nnemerle\nnesc\nnewlisp\nnewspeak\nnginx\nnimrod, nim\nnit\nnixos, nix\nnsis, nsi, nsh\nnumpy\nobjdump-nasm\nobjdump\nobjective-c++, objectivec++, obj-c++, objc++\nobjective-c, objectivec, obj-c, objc\nobjective-j, objectivej, obj-j, objj\nocaml\noctave\nodin\nooc\nopa\nopenedge, abl, progress\npacmanconf\npan\nparasail\npawn\nperl, pl\nperl6, pl6\nphp, php3, php4, php5\npig\npike\npkgconfig\nplpgsql\npostgresql, postgres\npostscript, postscr\npot, po\npov\npowershell, posh, ps1, psm1\npraat\nprolog\nproperties, jproperties\nprotobuf, proto\nps1con\npsql, postgresql-console, postgres-console\npuppet\npy3tb\npycon\npypylog, pypy\npytb\npython, py, sage\npython3, py3\nqbasic, basic\nqml, qbs\nqvto, qvt\nracket, rkt\nragel-c\nragel-cpp\nragel-d\nragel-em\nragel-java\nragel-objc\nragel-ruby, ragel-rb\nragel\nraw\nrb, ruby, duby\nrbcon, irb\nrconsole, rout\nrd\nrebol\nred, red/system\nredcode\nregistry\nresource, resourcebundle\nrexx, arexx\nrhtml, html+erb, html+ruby\nroboconf-graph\nroboconf-instances\nrobotframework\nrql\nrsl\nrst, rest, restructuredtext\nrts, trafficscript\nrust\nsass\nsc, supercollider\nscala\nscaml\nscheme, scm\nscilab\nscss\nshen\nsilver\nslim\nsmali\nsmalltalk, squeak, st\nsmarty\nsml\nsnobol\nsourceslist, sources.list, debsources\nsp\nsparql\nspec\nsplus, s, r\nsql\nsqlite3\nsquidconf, squid.conf, squid\nssp\nstan\nswift\nswig\nsystemverilog, sv\ntads3\ntap\ntcl\ntcsh, csh\ntcshcon\ntea\ntermcap\nterminfo\nterraform, tf\ntex, latex\ntext\nthrift\ntodotxt\ntrac-wiki, moin\ntreetop\nts, typescript\nturtle\ntwig\ntyposcript\ntyposcriptcssdata\ntyposcripthtmldata\nurbiscript\nvala, vapi\nvb.net, vbnet\nvcl\nvclsnippets, vclsnippet\nvctreestatus\nvelocity\nverilog, v\nvgl\nvhdl\nvim\nwdiff\nx10, xten\nxml+cheetah, xml+spitfire\nxml+django, xml+jinja\nxml+erb, xml+ruby\nxml+evoque\nxml+lasso\nxml+mako\nxml+mako\nxml+myghty\nxml+php\nxml+smarty\nxml+velocity\nxml\nxquery, xqy, xq, xql, xqm\nxslt\nxtend\nxul+mozpreproc\nyaml+jinja, salt, sls\nyaml\nzephir\n</code></pre>","tags":["multimedia","writing","rst"]},{"location":"multimedia/writing/typst/index.html","title":"Typst","text":"","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/index.html#content","title":"Content","text":"<ul> <li>Install</li> <li>Intro</li> <li>Templates</li> </ul>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/install.html","title":"Installation","text":"","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/install.html#from-source","title":"From source","text":"<p>Since typst is written in rust you can install it with rust's cargo package manager if you have rust installed. This works on all operating systems.</p> <pre><code># install rust and cargo\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n# install a specific version of typst\ncargo install --git https://github.com/typst/typst --tag v0.7.0\n\n# install latest version of typst\ncargo install --git https://github.com/typst/typst\n</code></pre>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/install.html#pre-build-binaries","title":"Pre-build binaries","text":"<p>Download the prebuild binaries the the github release page onto your computer and put it's location into the <code>PATH</code>.</p>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/intro.html","title":"Introduction","text":"<p>Typst is a markup-based typesetting system for the sciences. It is designed to be an alternative both to advanced tools like LaTeX and simpler tools like Word and Google Docs. Typst provides a lightweight markup syntax for common layout tasks, as well as set and show rules for styling documents easily and automatically.</p> <p>Typst is a good choice for writing any long-form text, such as essays, articles, scientific papers, books, reports, and homework assignments. It is also a great fit for any documents containing mathematical notation, such as papers in the math, physics, and engineering fields. Finally, due to its strong styling and automation features, Typst is an excellent choice for any set of documents that share a common style, such as a book series.</p>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/intro.html#cheatsheet","title":"Cheatsheet","text":"<ul> <li>Guide to Typst</li> </ul>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/intro.html#some-just-helppages","title":"Some Just helppages","text":"<ul> <li>Official webpage typst.app</li> <li>Documentation</li> <li>Github</li> </ul>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/intro.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["multimedia","writing","typst"]},{"location":"multimedia/writing/typst/templates.html","title":"Templates","text":"<p>To get you started with Typst there is a Guide to Typst documents showing the syntax. It is to note that some commands are specific to the typst-templates.</p> <p>Available templates are:</p> <ul> <li>Information Document - General Information Document</li> <li>Labo - Laboratory Sscript</li> <li>Letter</li> <li>LittleBook - A little book for mobile phone use</li> <li>Project - Project Presentation in Innosuisse Style</li> <li>Researchpaper</li> <li>Schedule Horizontal - Display Weekly Schedule</li> <li>Schedule Vertical - Display Weekly Schedule</li> <li>Script - Script for a course</li> <li>Slides Course - Slides intend for a course</li> <li>Slides R&amp;D - Slides intend for a projet presentation</li> <li>Thesis - HEI-Vs Bachelor Thesiss</li> </ul>","tags":["multimedia","writing","typst"]},{"location":"os/index.html","title":"OS","text":"","tags":["os","operating system"]},{"location":"os/index.html#contents","title":"Contents","text":"<p>\u0010{nav}</p>","tags":["os","operating system"]},{"location":"os/linux/index.html","title":"Linux","text":"","tags":["os","operating system","linux"]},{"location":"os/linux/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux"]},{"location":"os/linux/commandline/index.html","title":"Commandline","text":"","tags":["os","operating system","linux","commandline"]},{"location":"os/linux/commandline/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","commandline"]},{"location":"os/linux/commandline/cheatsheet.html","title":"Cheatsheet","text":"","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#admin-rights","title":"Admin rights","text":"<p>Note</p> <p>In order to gain administrative rights, for a session or only for a command</p> admin<pre><code>sudo su\nsudo \"command\"\nsudo -s           # Longtime root\nsu -              # root preserved env\nsudo !!           # execute previous command as root\nchsh -s /bin/zsh  # change login shell to zsh\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#quit","title":"Quit","text":"quit<pre><code>sudo halt          # Sleep\nsudo reboot        # Reboot\nsudo shutdown now  # Shutdown\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#filesystem","title":"Filesystem","text":"<p>See independent page: filesystem</p>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#environment-variables","title":"Environment variables","text":"<p>They can be set permanently system wide <code>/etc/profile</code> or per user shell <code>/etc/.bashrc</code> <code>/etc/.zshrc</code></p> environment variables<pre><code># Licenses\nexport LM_LICENSE_FILE=$LM_LICENSE_FILE:portnumber@serverip\n\n# Print Environmemt variables\nprintenv\necho $name_env_var\n\n# Set env var\nsetenv name value\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#user","title":"User","text":"user<pre><code># Access to different PC with unknown Password\nchroot path/of/new/systemroot    # change root of FileSys\n# Useful for hacking another PC\n# 1. with LiveUSB / CD login\n# 2. mount HD\n# 3. chroot to his filessystem\n# 4. Change user / password and everything else you want\n\n# User information\nwho                              # returns all users logged in\nwhoami                           # return actual username\nid &lt;username&gt;                    # return groups &amp; id's of user\n\n# Change to user\nsudo -u user2 bash               # open bash of user2\n\n# Send info\nwrite &lt;username&gt; &lt;tty&gt;           # write to a logged user\n                                 # see command who output\n\n# Add user\nsudo useradd -d /home/&lt;username&gt; -m &lt;username&gt;\n\n# Add user to group\nusermod -a -G &lt;groupname&gt; &lt;username&gt;\n\n# Change user password\nsudo passwd &lt;username&gt;\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#alias","title":"Alias","text":"alias<pre><code># Set up aliases\nalias &lt;aliasname&gt;=\"&lt;command&gt;\"\n\n# Common aliases\n# Common home locations\nalias home='cd ~'\nalias root='cd /'\nalias dtop='cd ~/Desktop'\nalias dbox='cd ~/Dropbox'\nalias dwld='cd ~/Downloads'\nalias docs='cd ~/Documents'\nalias www='cd /var/www/html'\n\n# Common commands\nalias o=open\nalias ..='cd ..'\nalias ...='cd ..; cd ..'\nalias ....='cd ..; cd ..; cd ..'\n\n# Common command shortcuts\nalias cls=clear\nalias ll='ls -la'\nalias owner-wwwdata='sudo chown -R www-data:www-data ./'\nalias permission-file='sudo find . -type f -exec chmod 644 {} \\;'\nalias permission-folder='sudo find . -type d -exec chmod 755 {} \\;'\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#permissions","title":"Permissions","text":"permissions<pre><code>chmod xxx file|folder                # xxx = rwx|xnumber\nchmod -x  file |folder               # add only executable Flag\nchown -R user:group file|folder      # change owner recursively\n\nfind . -type d -exec chmod 755 {} \\; # find dir's and set 755\nfind . -type f -exec chmod 644 {} \\; # find files and set 644\n</code></pre> <p>Rights</p> read write execute Abbreviation - - - 0 - - x 1 - x - 2 - x x 3 x - - 4 x - x 5 x x - 6 x x x 7","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#threads","title":"Threads","text":"<p>PID = Process ID</p> threads<pre><code>ps -x                             # view executed threads\nps -ax | grep name                # search for specific process name\nkill &lt;pidnumber&gt;                  # kill thread with given PID\nkill signal &lt;pidnumber&gt;           # kill with a signal type see table below\n</code></pre> Signal Name Single Value Effect <code>SIGHUP</code> <code>1</code> Hangup <code>SIGINT</code> <code>2</code> Interrupt from keyboard <code>SIGKILL</code> <code>9</code> Kill signal <code>SIGTERM</code> <code>15</code> Termination signal <code>SIGSTOP</code> <code>17</code>, <code>19</code>, <code>23</code> Stop the process","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#general","title":"General","text":"general<pre><code>uname -a                           # Distribution &amp; Kernel informations\ncat /etc/os-release                # General OS Informations\nid -i &lt;username&gt;                   # Get UID\nid -u &lt;username&gt;                   # Get GID\n\nwhereis command                    # returns location of command\n\nmkdir /existing/path/dirname       # creates a directory\nmkdir -p /non/existing/path/name   # creates a directory path\nmkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}\n                                   # creates a tree structure\npwd                                # print working directory\nls                                 # list content\nls -la                             # list flags\nll                                 # short list flags\ncd                                 # change dir\nrm name                            # remove file\nrm -r                              # remove directory with content\nrm -R name                         # remove recursively folder with its content\nrm !(delete_all_but_this)          # delete all except !()\ncp src/path /dest./path         # copy file\ncp -R src/path dest./path       # copy directory with content\ncp -R --preserve=mode,ownership,timestamp  src/path dest/path\n                                   # copy with preserving owner and permission and time\n\n# File\ntouch /path/to/file                # creates emtpy file or updates timestamp\necho \"&lt;text&gt;\" &gt; /path/to/file      # creates file with content &lt;text&gt;\necho \"&lt;text&gt;\" &gt;&gt; /path/to/file     # append &lt;text&gt; to file\necho \"&lt;text&gt;\" | tee -a ~/.zshrc ~/.bashrs # appends to multiple files\n\n# Disk info\ndf                                 # show disk sizes\ndf -H                              # show disk sizes in KB, MB, GB\n\n\ndiff path/to/file1 path/to file2   # compare file1&lt;-&gt;file2 and shows the difference\nsdiff path/to/file1 path/to file2  # compare file1&lt;-&gt;file2 and merge directly\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#find-which","title":"Find / Which","text":"find and which<pre><code># finding and delete all folder with &lt;foldername&gt; and it's content\nfind -type d -iname \"&lt;foldername&gt;\" -exec rm -rf {} \\;\n# finding and delete all files with &lt;filename&gt; and it's content\nfind -type f -iname \"&lt;filename&gt;\" -exec rm -rf {} \\;\n# finding all files and directories within a directory\nfind /etc\n# finding all files within a directory\nfind /etc -type f\n# finding all files with a suffix\nfind /etc -type f -name \"*.conf\"\n\n# Find location of a program\nwhich zsh\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#grep","title":"Grep","text":"<p>Grep let you search for word in files and outputs the line it was found.</p> grep<pre><code>grep boo /etc/passwd         # search boo in for /etc/passwd\ngrep -r \"192.168.1.5\" /etc/  # search recursivaly in /etc for 192.168.1.5\ngrep -w \"boo\" /path/to/file  # search for word \"boo\" only\n</code></pre> <p>grep is also often uses in pipes to search within the output of an other command</p> grep pipe<pre><code>cat /proc/cpuinfo | grep -i 'Model' # display CPU Model name\nps -x | grep vnc\n</code></pre> <p>Flags</p> <ul> <li><code>-r</code> : search recursively in all files \\</li> <li><code>-n</code> : display line number \\</li> <li><code>-c</code> : count number of times found \\</li> <li><code>--color</code> : colors the word searched in the results</li> </ul>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#links","title":"Links","text":"links<pre><code>ln target-filename symbolic-filename    # create hardlink\nln -s target-filename symbolic-filename # create softlink\n</code></pre> <p>Hard Link vs Softlink</p> <p>Symbolic links are different from hard links. Hard links may not normally point to directories, and they cannot link paths on different volumes or file systems. Hard links always refer to an existing file.</p>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#compression","title":"Compression","text":"","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#tar-bz2-gz","title":"Tar, bz2, gz","text":"compress<pre><code>tar cfv name.tar /path/to/folder      # Compression tar\ntar xfv tarfile                       # Decompression tar\n\ntar cfvz name.tar.gz /path/to/folder  # Compression tar.gz\ntar xfvz tarfile                      # Decompression tar.gz\n\ntar cfvj name.tar.bz2 /path/to/folder # Compression tar.bz2\ntar xfvj tarfile                      # Decompression tar.bz2\n</code></pre> <p>Flags</p> <ul> <li><code>c</code> = Compression | <code>x</code> = eXtraction</li> <li><code>f</code> = file/folder</li> <li><code>v</code> = Verbose</li> <li><code>j</code> = bz2 | <code>z</code> = gz</li> <li><code>p</code> = Preserve (keep permissions)</li> </ul>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#rar","title":"RAR","text":"compress rar<pre><code># compress and split in files of 700MB\nrar a -m5 -v700m rarname folder_or_file_to_compress\n\n# uncompress, if a split rar uncompress the first\nrar e rarname\n</code></pre> <p>Flags</p> <ul> <li><code>m5</code> = highest compression <code>m0</code> = lowest compression</li> <li><code>e</code> = extract in current folder</li> <li><code>a</code> = append to rar</li> <li><code>v&lt;SIZE&gt;m</code> = size of split files</li> </ul>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#in-outputs","title":"In Outputs","text":"","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#tail","title":"Tail","text":"tail<pre><code>tail file|folder                # give end of a file\n./executable &gt; output.txt       # redirect output to a file\n./executable &gt; output.txt 2&lt;&amp;1  # redirect output to a file output 2 &amp; 1\n                                # 2 = Error output\n                                # 1 = Std output\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#cat","title":"Cat","text":"cat<pre><code>cat &gt; file1.txt                         # To Create a new file\ncat &gt;&gt; file1.txt                        # To Append data into the file\ncat file1.txt                           # To display a file\ncat file1.txt file2.txt                 # Concatenate several files and display\ncat file1.txt file2.txt &gt; file3.txt     # To cat several files and transfer output to another file\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#pgp-pretty-good-privacy-gpg","title":"PGP Pretty Good Privacy &amp; GPG","text":"<p>see also GnuPG</p>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#files","title":"Files","text":"pgp files<pre><code>/home/user/.ssh\npgp                             # private key\npgp.pub                         # public key\ngpg_fingerprint.txt             # Infos for the gpg fingerprint\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#create-pgp-files","title":"Create PGP files","text":"create key's<pre><code>ssh-keygen -t dsa -f filename   # Create private and public key\ngpg --gen-key                   # Create gpg fingerprint\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#gpg-privacy","title":"GPG Privacy","text":"gpg<pre><code>gpg --gen-key               # Create a key\ngpg --export -a \"User Name\" &gt; public.key# Export a public key\ngpg --export-secret-key -a \"User Name\" &gt; private.key# Export private key\ngpg --import public.key         # Import public key\ngpg --allow-secret-key-import --import private.key# Import private key\ngpg --delete-key \"User Name\"        # Delete public key\ngpg --delete-secret-key \"User Name\" # Delete private key\ngpg --list-keys             # List key in public key ring\ngpg --list-secret-keys          # Lsit key in private key ring\ngpg --fingerprint &gt; fingerprint     # Short list of numbers to verify public key\ngpg -e -u \"Sender User Name\" -r \"Receiver User Name\" somefile # Encrypt data\ngpg -d mydata.tar.gpg           # Decrypt data\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#ssh","title":"SSH","text":"<p>See also the dedicated SSH page</p> ssh_config<pre><code># Edit config file\nsudo vim /etc/ssh/sshd_config\n\n# start, stop, restart SSH\nsudo /etc/init.d/ssh start\nsudo /etc/init.d/ssh stop\nsudo /etc/init.d/ssh restart\n</code></pre> ssh<pre><code>ssh-agent bash          # start new bash agent\nssh-add privatekey      # key you want to use for that session\n             # without a given key he search for ~/.ssh/id_rsa\n</code></pre> <p>Connect to another station by ssh by default a password is needed or if configured no password but with rsh keys</p> ssh connection<pre><code>ssh -p &lt;portnumber&gt; -l &lt;username&gt; server.address.com\n\n# or\nssh -p &lt;portnumber&gt; user@server.address.com\n\nssh -N -T -L &lt;remoteport&gt;:localhost:&lt;localport&gt; &lt;user&gt;@&lt;hostname&gt;\n\n# or with port forward and commandline\nssh -L &lt;remoteport&gt;:localhost:&lt;localport&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>Options</p> <ul> <li><code>-p &lt;port&gt;</code> - Custom port definition</li> <li><code>-l &lt;username&gt;</code> - Custom username definition</li> <li><code>-N</code> - No Output</li> <li><code>-T</code> - No Terminal access</li> <li><code>-L &lt;remoteport&gt;:localhost:&lt;localport&gt;</code> - Port Forwarding</li> </ul>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/cheatsheet.html#scp","title":"SCP","text":"<p>Transferring file through SSH For these command you have to use either the PW or already bash started</p> scp<pre><code># Synchronising directories\nrsync -avr -P --rsh='ssh -p YYYY' /localpath/to/dir user@host:/remotepath/to/dir\n\n# Host -&gt; Remote\nscp sourceFile user@host:/directory/targetFile\nscp -R sourceFolder user@host:/directory/targetFolder\nscp -P port sourceFile user@host:/directory/targetFolder\n\n# Remote -&gt; Host\nscp user@host:/directory/sourceFile targetFile\nscp -R user@host:/directory/sourceFolder targetFolder\nscp -P port user@host:/directory/sourceFolder targetFolder\n</code></pre>","tags":["os","operating system","linux","commandline","cheatsheet"]},{"location":"os/linux/commandline/crontab.html","title":"Crontab","text":"<p>Cron allows tasks to be automatically run in the background at regular intervals by the cron daemon. These tasks are often termed as cron jobs. Crontab (CRON TABle) is a file which contains the schedule of cron entries to be run and at specified times.</p> <p>Crontab is used to regularly execute some task e.g. shell scripts</p>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#restrictions","title":"Restrictions","text":"<p>You can execute crontab if your name appears in the file: <code>/usr/lib/cron/cron.allow</code>. If that file does not exist, you can use crontab if your name does not appear in the file: <code>/usr/lib/cron/cron.deny</code>. If only cron.deny exists and is empty, all users can use crontab. If neither file exists, only the root user can use crontab. The allow/deny files consist of one user name per line.</p>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#crontab-viewer","title":"Crontab Viewer","text":"<p>To define the editor to use write the following in your <code>~/.bashrc</code></p> ~/.bashrc<pre><code>export VISUAL=vim\nexport EDITOR=vim\n</code></pre> crontab<pre><code>crontab -l    # List crontab's for current user\ncrontab -r    # Del  crontab's for current user\ncrontab -e    # Edit crontab's for current user\n</code></pre>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#crontab-file","title":"Crontab file","text":"<p>A crontab file has five fields for specifying day, date and time followed by the command to be run at that interval.</p> <pre><code>*   *   *   *   *   *      command to be executed\n+   +   +   +   +   +\n|   |   |   |   |   |\n|   |   |   |   |   +--- Absolute path to script\n|   |   |   |   +------- day of week  (0 - 6) (Sunday=0)\n|   |   |   +----------- month        (1 - 12)\n|   |   +--------------- day of month (1 - 31)\n|   +------------------- hour         (0 - 23)\n+----------------------- min          (0 - 59)\n</code></pre> <p><code>*</code> in the value field above means all legal values as in braces for that column. The value column can have a <code>*</code> or a list of elements separated by commas. An element is either a number in the ranges shown above or two numbers in the range separated by a hyphen (meaning an inclusive range). Notes</p> <ul> <li>Repeat pattern like <code>/2</code> for every 2 minutes or <code>/10</code> for every 10 minutes is not supported by all operating systems. If you try to use it and crontab complains it is probably not supported.</li> <li>The specification of days can be made in two fields: month day and weekday. If both are specified in an entry, they are cumulative meaning both of the entries will get executed.</li> </ul>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#entry-examples","title":"Entry Examples","text":"<p>A line in crontab file like below removes the tmp files from <code>/home/someuser/tmp</code> each day at 6:30 PM.</p> <pre><code>30     18     *     *     *         rm /home/someuser/tmp/*\n</code></pre> crontab entries<pre><code>0 * * * * /home/user/backupServerA.sh  # At Noon each day\n0 0 * * * /home/user/backupServerB.sh  # At Midnight each day\n0 1 * * * /home/user/backupServerC.sh  # At 1 o'clock each day\n0 * * * 1 /home/user/backupServerD.sh  # At Noon each Monday\n@reboot /home/user/Documents/x11vnc_start.bash\n@reboot nohup airsonos &amp;\n@weekly /home/user/script.bash &gt; /home/user/scriptoutput.log\n</code></pre> <p>Changing the parameter values as below will cause this command to run at different time schedule below:</p>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#frequently-used-times","title":"Frequently used times","text":"min hour day/month month day/week Execution Time * * * * * Every Minute 0 * * * * Every Hour 0 0 * * * Every Day 0 0 * * 0 Every Week 0 0 1 * * Every Month 0 0 1 1 * Every Year","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#more-special-times","title":"More special times","text":"min hour day/month week day Execution time 30 0 1 1,6,12 * 00:30 Hrs on 1st of Jan, June &amp; Dec. 0 20 * 10 1-5 8.00 PM every weekday (Mon-Fri) only in Oct. 0 0 1,10,15 * * Midnight on 1st ,10th &amp; 15th of month 5,10 0 10 * 1 At 12.05,12.10 every Monday &amp; on 10th of every month","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#environment","title":"Environment","text":"<p>Cron invokes the command from the user's <code>HOME</code> directory with the shell <code>/usr/bin/sh</code>. Cron supplies a default environment for every shell, defining: `bash``</p> <pre><code>HOME=user\u2019s-home-directory\nLOGNAME=user\u2019s-login-id\nPATH=/usr/bin:/usr/sbin:.\nSHELL=/usr/bin/sh\n</code></pre>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#disable-email","title":"Disable Email","text":"<p>By default cron jobs sends a email to the user account executing the cronjob. If this is not needed put the following command At the end of the cron job line.</p> <pre><code>&gt;/dev/null 2&gt;&amp;1\n</code></pre>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#generate-log-file","title":"Generate log file","text":"<p>To collect the cron execution execution log in a file :</p> <pre><code>30 18 * * * rm /home/someuser/tmp/* &gt; /home/someuser/cronlogs/clean_tmp_dir.log\n</code></pre>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/crontab.html#execute-script-as-sudo","title":"Execute script as sudo","text":"<p>In order to let a crontab script run as sudo you need to give the script sudo rights without asking for a password. This can be achieved by adding the script to the root crontab instead of the user crontab. the following command will let you edit the root crontab.</p> <pre><code>sudo crontab -e\n</code></pre> <p>The Crontab entry will be a simple script call</p> <pre><code>* * * * * /location/to/script.bash\n</code></pre>","tags":["os","operating system","linux","commandline","crontab"]},{"location":"os/linux/commandline/dd.html","title":"dd and ddfldd","text":"<p>Use for creating and copying iso files from and to a medium.</p> <p>The <code>dd</code> command doesn't has a output during copy but <code>dcfldd</code> does. It gives an output all X blocks written. This means in the commands below you can also just replace <code>dd</code> with <code>dcfldd</code>.</p>","tags":["os","operating system","linux","commandline","dd"]},{"location":"os/linux/commandline/dd.html#install","title":"Install","text":"dcfldd install<pre><code>sudo apt-get install dcfldd\n</code></pre>","tags":["os","operating system","linux","commandline","dd"]},{"location":"os/linux/commandline/dd.html#on-linux","title":"On Linux","text":"dd usage<pre><code># Create usb stick or sdcard =&gt; image\nfdisk -l                                  # get disk info\nunmount /dev/sdX                          # unmount disk\ndd if=/dev/sdX of=/location/for/image.iso bs=1M conv=noerror,sync # copy usb stick to image\n\n# Copy image =&gt; usb stick or sdcard\nfdisk -l                                  # get disk info\nunmount /dev/sdX                          # unmount disk\ndd if=/location/of/image.iso of=/dev/sdX bs=1M conv=noerror,sync # copy image to usb stick\n</code></pre> <p>dd has no output normally, if you want to watch the status of the copy then open a new Terminal and try one of the following commands</p> watch dd<pre><code>sudo kill -USR1 $(pgrep '^dd$')                            # dd will display status once\nsudo watch -n &lt;interval in sec&gt; kill -USR1 $(pgrep '^dd$') # dd will display status continously\n</code></pre>","tags":["os","operating system","linux","commandline","dd"]},{"location":"os/linux/commandline/dd.html#on-macos","title":"On MacOs","text":"dd usage<pre><code># Create usb stick or sdcard =&gt; image\ndiskutil list                               # get disk info\ndiskutil unmountDisk /dev/diskX             # unmount disk\ndd if=/dev/diskX of=/location/for/image.iso bs=1m # copy usb stick to image\n\n# Copy image =&gt; usb stick or sdcard\ndiskutil list                              # get disk info\ndiskutil unmountDisk /dev/diskX            # unmount disk\ndd if=/location/of/image.iso of=/dev/diskX bs=1m conv=noerror,sync # copy image to usb stick\n</code></pre>","tags":["os","operating system","linux","commandline","dd"]},{"location":"os/linux/commandline/general.html","title":"General Shell Commands","text":"","tags":["os","operating system","linux","commandline"]},{"location":"os/linux/commandline/general.html#change-permissions-on-type","title":"Change permissions on type","text":"<pre><code>sudo find /var/www -type d -print0 | sudo xargs -0 chmod 0755\nsudo find /var/www -type f -print0 | sudo xargs -0 chmod 0644\n</code></pre>","tags":["os","operating system","linux","commandline"]},{"location":"os/linux/commandline/general.html#ssh-relia","title":"SSH relia","text":"<pre><code>ssh -p 2222 -L 5900:localhost:5900 -L 19999:localhost:19999 zas@relia.zapto.org\n</code></pre>","tags":["os","operating system","linux","commandline"]},{"location":"os/linux/commandline/network.html","title":"Network","text":"","tags":["os","operating system","linux","commandline","network"]},{"location":"os/linux/commandline/network.html#interfaces","title":"Interfaces","text":"interface<pre><code>ifconfig\n\nifup &lt;if_name&gt;\nifup eth0\n\nifdown &lt;if_name&gt;\nifdown eth0\n\nifquery -l\n</code></pre>","tags":["os","operating system","linux","commandline","network"]},{"location":"os/linux/commandline/network.html#nmap","title":"NMAP","text":"<p>For more infos see the nmap page</p> <p>Find open ports on a ip subnet range</p> nmap<pre><code># Finding ssh server in ip range 192.168.0-192.168.0.255\nnmap -p 22 --open 192.168.1.0/24\n</code></pre>","tags":["os","operating system","linux","commandline","network"]},{"location":"os/linux/commandline/network.html#arp-scan","title":"ARP-SCAN","text":"<p>Finding a machine on your local subnet using DHCP.</p> arp-scan<pre><code># Finding ssh server in ip range 192.168.0-192.168.0.255\nsudo apr-scan --interface=eth0 --localnet | grep aa:bb:cc:dd:ee:ff\n</code></pre>","tags":["os","operating system","linux","commandline","network"]},{"location":"os/linux/commandline/nicetoknow.html","title":"Nice to Know","text":"<p>Herafter a list of handy nict to know CLI tools. Many of them are written in rust.</p> <p>Check out also Rust Utils</p> Tool Replaces Type Example Description starhip - Cross-Shell Prompt - Customizable shell prompt for any shell procs <code>ps</code> Process Viewer <code>procs -a</code> List all processes with a concise and readable format atuin - Shell history - Sync, search and backup shell history hyperfine - Benchmark <code>hyperfine 'cargo build'</code> Measure the execution time of 'cargo build' command duf <code>du</code> Disk Usage <code>duf -s</code> Display disk usage with a simple and interactive interface dust <code>du</code> Disk Usage <code>dust -n 10</code> Visualize disk usage of the current directory diskonaut <code>dust</code> Disk Space Navigator <code>diskonaut</code> Visualize disk usage of the current directory broot <code>cd</code> <code>ls</code> Navigate Directories <code>br</code> A new way to see and navigate directory trees exa <code>ls</code> Listing <code>exa -l -G</code> List files with extended details and colored output ripgrep <code>grep</code> Search <code>rg -i TODO src/ --glob \"*.md\"</code> Recursively searches directories within markdown files for a regex pattern sd <code>sed</code> Search and Replace <code>sd before after file.txt</code> Painless seardh and replace with regex bat <code>cat</code> Pager <code>bat src/main.rs</code> View files with syntax highlighting and Git integration btop <code>top</code> Resource viewer <code>zenith</code> Zenith - sort of like top or htop but with zoom-able charts, network, and disk usage. zenith <code>top</code> Resource viewer <code>zenith</code> Zenith - sort of like top or htop but with zoom-able charts, network, and disk usage. delta <code>diff</code> Visual Diff <code>git diff | delta</code> Enhance the git diff output with improved layout and styling tokei - Code Statistics <code>tokei src/</code> Generate code statistics for the Rust source directory shellcheck - Shell Script Linter <code>shellcheck myscript.bash</code> Finds bugs in your shell scripts numbat - Scientific Calculator <code>numbat</code> A statically typed programming language for scientific computations with first class support for physical dimensions and units tealdear <code>man</code> tldr <code>tldr hyperfine</code> Communicty driven man pages thefuck - CLI Corrector <code>f</code> corrects automagially your previous console command <p>Finder tools</p> Tool Replaces Type Example Description fd <code>find</code> Search <code>fd '*.rs'</code> Find files, user-friendlier than <code>find</code> fzf - Fuzzy Finder <code>fzf</code> Fuzzy Finder, integrated with commands for interactive file selection skim <code>fzf</code> Fuzzy Finder <code>sk</code> Fuzzy Finder, integrated with commands for interactive file selection tv <code>fzf</code> <code>sk</code> Fuzzy Finder <code>tv</code> Fuzzy Finder, with tui allow finding env vars, files, file content, git repos, alias <p>Multimedia tools</p> Tool Replaces Type Example Description codesnap - Code Images <code>codesnap -c \"echo 'Hello, World!'\" -o clipboard --title \"Hello, World!\"s</code> Created images of code via a terminal CLI t-rec - Terminal Recording <code>t-rec -o session.gif</code> A tool to record your terminal sessions as animated GIFs asciinema - Terminal Recording <code>asciinema rec</code> Record and share terminal sessions, with playback options (web or terminal) <p>CodeSnap Configuration </p>~/.config/CodeSnap/config.json<pre><code>{\n  \"window\": {\n    \"mac_window_bar\": true,\n    \"shadow\": 10,\n    \"margin\": {\n      \"x\": 20,\n      \"y\": 40\n    }\n  },\n  \"code\": {\n    \"font_family\": \"CaskaydiaCove Nerd Font\",\n    \"theme\": \"candy\"\n  },\n  \"watermark\": {\n    \"content\": \"\",\n    \"font_family\": \"Pacifico\",\n    \"color\": \"#ffffff\"\n  },\n  \"background\": {\n    \"start\": {\n      \"x\": 0,\n      \"y\": 0\n    },\n    \"end\": {\n      \"x\": 0,\n      \"y\": 0\n    },\n    \"stops\": [\n      {\n        \"position\": 0,\n        \"color\": \"#ffffff\"\n      }\n    ]\n  }\n}\n</code></pre>","tags":["os","operating system","linux","unix","commandline","rust"]},{"location":"os/linux/commandline/nicetoknow.html#commonly-used-commands","title":"Commonly used commands","text":"<p>skim in interactive mode with preview script and bind <code>Ctrl-Y</code> to copy filename and <code>F4</code> open in Sublime Text </p><pre><code>sk --ansi -i -c 'ag --color \"{}\"' --preview \"./preview.sh {}\" --bind 'f3:execute(subl -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'\n</code></pre> <pre><code>exa -la\n</code></pre>","tags":["os","operating system","linux","unix","commandline","rust"]},{"location":"os/linux/commandline/rclone.html","title":"RClone","text":"<p>Rclone is a command-line program to manage files on cloud storage. It is a feature-rich alternative to cloud vendors' web storage interfaces. Over 70 cloud storage products support rclone including S3 object stores, business &amp; consumer file storage services, as well as standard transfer protocols.</p>","tags":["os","operating system","linux","commandline","rclone"]},{"location":"os/linux/commandline/rclone.html#find-configuration-file","title":"Find configuration file","text":"rclone config file<pre><code>rclone config file\n</code></pre>","tags":["os","operating system","linux","commandline","rclone"]},{"location":"os/linux/commandline/rclone.html#creating-a-new-config","title":"Creating a new config","text":"<p>In this example a onedrive config is choosen</p> <p>Tip</p> <p>The rclone config commmand could also be used on a headless machine (no browser) available. But Copy paste the long access token lead to problems. Best is using another machine to setup the remote and copy the config file to the headless machine. See rclone config file to find the location of the config file.</p> rclone config<pre><code>rclone config\nNo remotes found, make a new one?\nn) New remote\ns) Set configuration password\nq) Quit config\nn/s/q&gt; n\n\nEnter name for new remote.\nname&gt; onedrive\n\nOption Storage.\nType of storage to configure.\nChoose a number from below, or type in your own value.\n 1 / 1Fichier\n   \\ (fichier)\n 2 / Akamai NetStorage\n   \\ (netstorage)\n 3 / Alias for an existing remote\n   \\ (alias)\n 4 / Amazon Drive\n   \\ (amazon cloud drive)\n 5 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, ArvanCloud, Ceph, ChinaMobile, Cloudflare, DigitalOcean, Dreamhost, GCS, HuaweiOBS, IBMCOS, IDrive, IONOS, LyveCloud, Leviia, Liara, Linode, Minio, Netease, Petabox, RackCorp, Rclone, Scaleway, SeaweedFS, StackPath, Storj, Synology, TencentCOS, Wasabi, Qiniu and others\n   \\ (s3)\n ...\n13 / Dropbox\n   \\ (dropbox)\n...\n16 / FTP\n   \\ (ftp)\n17 / Google Cloud Storage (this is not Google Drive)\n   \\ (google cloud storage)\n18 / Google Drive\n   \\ (drive)\n19 / Google Photos\n   \\ (google photos)\n...\n34 / Microsoft OneDrive\n   \\ (onedrive)\n35 / OpenDrive\n   \\ (opendrive)\n...\n44 / SMB / CIFS\n   \\ (smb)\n45 / SSH/SFTP\n   \\ (sftp)\n...\nStorage&gt; 34\n\nOption client_id.\nOAuth Client Id.\nLeave blank normally.\nEnter a value. Press Enter to leave empty.\nclient_id&gt;\n\nOption client_secret.\nOAuth Client Secret.\nLeave blank normally.\nEnter a value. Press Enter to leave empty.\nclient_secret&gt;\n\nOption region.\nChoose national cloud region for OneDrive.\nChoose a number from below, or type in your own string value.\nPress Enter for the default (global).\n 1 / Microsoft Cloud Global\n   \\ (global)\n 2 / Microsoft Cloud for US Government\n   \\ (us)\n 3 / Microsoft Cloud Germany\n   \\ (de)\n 4 / Azure and Office 365 operated by Vnet Group in China\n   \\ (cn)\nregion&gt; 1\n\nEdit advanced config?\ny) Yes\nn) No (default)\ny/n&gt;\n\nUse web browser to automatically authenticate rclone with remote?\n * Say Y if the machine running rclone has a web browser you can use\n * Say N if running rclone on a (remote) machine without web browser access\nIf not sure try Y. If Y failed, try N.\n\ny) Yes (default)\nn) No\ny/n&gt;\n\nYYYY/MM/DD HH:MM:SS NOTICE: If your browser doesn't open automatically go to the following link: http://127.0.0.1:53682/auth?state=xxxxx\nYYYY/MM/DD HH:MM:SS NOTICE: Log in and authorize rclone for access\nYYYY/MM/DD HH:MM:SS NOTICE: Waiting for code...\nYYYY/MM/DD HH:MM:SS NOTICE: Got code\nOption config_type.\nType of connection\nChoose a number from below, or type in an existing string value.\nPress Enter for the default (onedrive).\n 1 / OneDrive Personal or Business\n   \\ (onedrive)\n 2 / Root Sharepoint site\n   \\ (sharepoint)\n   / Sharepoint site name or URL\n 3 | E.g. mysite or https://contoso.sharepoint.com/sites/mysite\n   \\ (url)\n 4 / Search for a Sharepoint site\n   \\ (search)\n 5 / Type in driveID (advanced)\n   \\ (driveid)\n 6 / Type in SiteID (advanced)\n   \\ (siteid)\n   / Sharepoint server-relative path (advanced)\n 7 | E.g. /teams/hr\n   \\ (path)\nconfig_type&gt; 1\n\nOption config_driveid.\nSelect drive you want to use\nChoose a number from below, or type in your own string value.\nPress Enter for the default (b!xxxx).\n 1 / OneDrive (business)\n   \\ (b!xxxx)\nconfig_driveid&gt; 1\n\nDrive OK?\n\nFound drive \"root\" of type \"business\"\nURL: https://xxxx\n\ny) Yes (default)\nn) No\ny/n&gt;\n\nConfiguration complete.\nOptions:\n- type: onedrive\n- token: {\"access_token\":\"xxxx\",\"expiry\":\"YYYY-MM-DDTHH:MM:SS.PS+HH:MM\"}\n- drive_id: b!xxxx\n- drive_type: business\nKeep this \"onedrive\" remote?\ny) Yes this is OK (default)\ne) Edit this remote\nd) Delete this remote\ny/e/d&gt; y\n\nCurrent remotes:\n\nName                 Type\n====                 ====\nonedrive             onedrive\n</code></pre>","tags":["os","operating system","linux","commandline","rclone"]},{"location":"os/linux/commandline/rclone.html#copy-files-from-remote-to-local","title":"Copy files from remote to local","text":"rclone copy remote-&gt;local<pre><code># Copy all files from remote to local\nrclone -v sync onedrive:/ /mnt/user/backup/onedrive\n</code></pre>","tags":["os","operating system","linux","commandline","rclone"]},{"location":"os/linux/commandline/rsync.html","title":"RSync","text":"<p>Synchronizing directories local and remotely</p> rsync<pre><code># Synchronising directories to distant computer\nrsync -avzP --rsh='ssh -p YYYY' /localpath/to/dir user@host:/remotepath/to/dir\n\n# Synchronizing local left to right\nrsync -avP --delete --stats /src/folder/* /destination/folder\n\n# Synchronizing and exclude a folder or file\nrsync -avP --delete --stats --exclude 'excl_folder' --exclude 'folder/excl_file.txt' /src/folder/* /destination/folder\nrsync -avP --delete --stats --exclude-from '/home/user/exclude.txt' /src/folder/* /destination/folder\n</code></pre> exclude.txt<pre><code>sources\npublic_html/database.*\ndownloads/test/*\n</code></pre> <p>Flags</p> <pre><code>-a = archive (recursion &amp; preserve rights, time, owner, group)\\\\\n-v = verbose \\\\\n-z = compress during transfer \\\\\n-P = display progress \\\\\n--delete = delete files on destination folder \\\\\n--stats = display some statisics at the end \\\\\n--exclude &lt;PATTERN&gt; = exclude file or folder \\\\\n--exclude-from &lt;file&gt; = exclude list defined in file\n--dry-run = show what would have been done\n</code></pre>","tags":["os","operating system","linux","commandline","rsync"]},{"location":"os/linux/commandline/ssh.html","title":"SSH","text":"<p>SSH is a useful and secure tool to connect yourself via the internet or locally with your PC remotely. It is not installed on every distribution by default.</p>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#install","title":"Install","text":"<pre><code>sudo apt-get install ssh\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#config","title":"Config","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>Define port to listen, recommend to change the default port <code>22</code></p> <p>If you use FTP Port as SSH Port (<code>21</code>) then you will run into problems with connecting via Windows PC's because of the Windows Firewall. In order to solve this problem execute the following line on Windows PC's with Admin privilege.</p> <pre><code>netsh advfirewall set global statefulftp disable\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#source-your-bashrc","title":"Source your <code>.bashrc</code>","text":"<p>Create or edit the <code>~/.bash_profile</code>. And add the following line to souce with each SSH Login your <code>.bashrc</code></p> .bash_profile<pre><code>source ~/.bashrc\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#test","title":"Test","text":"<p>Test you system with via the localhost.</p> <pre><code>ssh -p &lt;portnumber&gt; localhost\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#restart-ssh","title":"Restart SSH","text":"<pre><code>sudo /etc/init.d/ssh restart\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#connect","title":"Connect","text":"<pre><code>ssh -p &lt;portnumber&gt; -l &lt;username&gt; server.address.com\nssh -p &lt;portnumber&gt; user@server.address.com\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#port-forwarding","title":"Port Forwarding","text":"ssh connection<pre><code>ssh -N -T -L &lt;remoteport&gt;:localhost:&lt;localport&gt; &lt;user&gt;@&lt;hostname&gt;\n\n# or with port forward and commandline\nssh -L &lt;remoteport&gt;:localhost:&lt;localport&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>Options</p> <ul> <li><code>-p &lt;port&gt;</code> - Custom port definition</li> <li><code>-l &lt;username&gt;</code> - Custom username definition</li> <li><code>-N</code> - No Output</li> <li><code>-T</code> - No Terminal access</li> <li><code>-L &lt;remoteport&gt;:localhost:&lt;localport&gt;</code> - Port Forwarding</li> </ul>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/commandline/ssh.html#rsa-keys","title":"RSA keys","text":"<p>How to setup ssh with rsa keys</p> ssh keys<pre><code># Generating RSA Key pair\nssh-keygen -t rsa\n\n# Copy key\nssh-copy-id -i ~/.ssh/id_rsa.pub \"user@remote.machine.com -p &lt;portnumber&gt;\"\n# OR\nscp id_rsa.pub user@host:~/.ssh/machine.pub\n\n# Append key to file authorized_keys\ncat ~/.ssh/*.pub | ssh admin@server.machine.com -p &lt;portnumber&gt; 'umask 077; cat &gt;&gt;.ssh/authorized_keys'\n</code></pre>","tags":["os","operating system","linux","commandline","ssh"]},{"location":"os/linux/filesystem/index.html","title":"Filesystem","text":"","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#comandline-tools","title":"Comandline Tools","text":"","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#disk-infos","title":"Disk Infos","text":"","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#df","title":"df","text":"df<pre><code># check partitions and the available space\ndf -k\ndf -h                           # humand readable\n</code></pre> df example<pre><code>$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nudev            7.8G     0  7.8G   0% /dev\ntmpfs           1.6G   12M  1.6G   1% /run\n/dev/sdc1       229G   86G  134G  39% /\ntmpfs           7.8G   46M  7.8G   1% /dev/shm\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\n/dev/loop1       97M   97M     0 100% /snap/core/9804\n/dev/loop2       13M   13M     0 100% /snap/dmd/102\n/dev/loop3       13M   13M     0 100% /snap/dmd/99\n/dev/sda1       1.8T  148G  1.6T   9% /mnt/data2\n/dev/sdb1       3.6T  2.2T  1.3T  63% /mnt/data\ntmpfs           1.6G   16K  1.6G   1% /run/user/1000\n/dev/loop4       98M   98M     0 100% /snap/core/9993\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#fdisk","title":"fdisk","text":"fdisk<pre><code>sudo fdisk -l\n</code></pre> fdisk example<pre><code>$ sudo fdisk -l\n\nDisk /dev/sda: 1.8 TiB, 2000398934016 bytes, 3907029168 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 4096 bytes\nI/O size (minimum/optimal): 4096 bytes / 4096 bytes\nDisklabel type: dos\nDisk identifier: 0x000f0848\n\nDevice     Boot Start        End    Sectors  Size Id Type\n/dev/sda1        2048 3907028991 3907026944  1.8T 83 Linux\n\n\nDisk /dev/sdb: 3.7 TiB, 4000787030016 bytes, 7814037168 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 4096 bytes\nI/O size (minimum/optimal): 4096 bytes / 4096 bytes\nDisklabel type: gpt\nDisk identifier: 25BCB5B9-0133-4561-AF05-050B47B56F84\n\nDevice     Start        End    Sectors  Size Type\n/dev/sdb1   2048 7814035455 7814033408  3.7T Linux filesystem\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#lsblk","title":"lsblk","text":"lsblk<pre><code>lsblk\n</code></pre> lsblk example 1<pre><code>$ lsblk\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda      8:0    0 465.8G  0 disk\n\u251c\u2500sda1   8:1    0    70G  0 part\n\u251c\u2500sda2   8:2    0     1K  0 part\n\u251c\u2500sda5   8:5    0  97.7G  0 part /media/4668484A68483B47\n\u251c\u2500sda6   8:6    0  97.7G  0 part /\n\u251c\u2500sda7   8:7    0   1.9G  0 part [SWAP]\n\u2514\u2500sda8   8:8    0 198.5G  0 part /media/13f35f59-f023-4d98-b06f-9dfaebefd6c1\nsdb      8:16   1   3.8G  0 disk\n\u2514\u2500sdb1   8:17   1   3.8G  0 part\nsr0     11:0    1  1024M  0 rom\n</code></pre> lsblk example 2<pre><code>$ lsblk -o NAME,SIZE,TYPE,MOUNTPOINT,STATE,MODEL,UUID\nNAME     SIZE TYPE MOUNTPOINT      STATE   MODEL            UUID\nloop1   96.6M loop /snap/core/9804\nloop2     13M loop /snap/dmd/102\nloop3     13M loop /snap/dmd/99\nloop4   97.1M loop /snap/core/9993\nsda      1.8T disk                 running WDC WD20NPVT-00Z\n\u2514\u2500sda1   1.8T part /mnt/data2                               25c04a96-63f6-4307-800d-66928e4e1261\nsdb      3.7T disk                 running ST4000LM024-2AN1\n\u2514\u2500sdb1   3.7T part /mnt/data                                d56c1a6b-6871-4a27-8051-19747339b9ce\nsdc    232.9G disk                 running Samsung SSD 860\n\u2514\u2500sdc1 232.9G part /                                        3d3920bb-91c7-4632-8fd0-1d87b110a496\nsdd      3.7T disk                 running Rugged USB-C\n\u2514\u2500sdd1   3.7T part                                          88fdbcc0-809a-48c7-bdda-d75cd5f79bb4\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#blkid","title":"blkid","text":"<p>Can help getting the disk label as well as UUID.</p> blkid<pre><code>blkid\n</code></pre> blkid example 1<pre><code>sudo blkdid\n/dev/loop0: TYPE=\"squashfs\"\n/dev/loop1: TYPE=\"squashfs\"\n/dev/sda1: LABEL=\"LACIE_4TB\" UUID=\"88fdbcc0-809a-48c7-bdda-d75cd5f79bb4\" BLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTLABEL=\"LACIE_4TB\" PARTUUID=\"1951a976-0553-4e41-babf-0669c4f72abc\"\n/dev/sdb1: LABEL_FATBOOT=\"UNRAID\" LABEL=\"UNRAID\" UUID=\"2732-64F5\" BLOCK_SIZE=\"512\" TYPE=\"vfat\"\n/dev/nvme1n1p1: UUID=\"e8a4f1eb-9c45-4788-acd3-983bc648c190\" UUID_SUB=\"23295689-1a38-4733-ae64-99f20365e737\" BLOCK_SIZE=\"4096\" TYPE=\"btrfs\"\n/dev/nvme0n1p1: UUID=\"e8a4f1eb-9c45-4788-acd3-983bc648c190\" UUID_SUB=\"29bc6eff-23cf-47eb-a034-a636a7eaf126\" BLOCK_SIZE=\"4096\" TYPE=\"btrfs\"\n/dev/sdd1: UUID=\"3f43c35a-5efe-4a87-a3ae-51569bdbb6c9\" BLOCK_SIZE=\"512\" TYPE=\"xfs\" PARTUUID=\"45fe7ed1-a032-4dfc-8733-bb4539703d0c\"\n/dev/sde1: UUID=\"21e3222c-f905-4c37-b4ef-885a4eb20c0e\" BLOCK_SIZE=\"512\" TYPE=\"xfs\" PARTUUID=\"3e51cf36-79a9-4766-bdef-91cee3b24a40\"\n/dev/sdf1: UUID=\"4bfaa2ae-bcd8-4ad0-a177-5ac8de82f05a\" UUID_SUB=\"b997b622-2292-4efc-8417-98a237206802\" BLOCK_SIZE=\"4096\" TYPE=\"btrfs\"\n/dev/md1: UUID=\"21e3222c-f905-4c37-b4ef-885a4eb20c0e\" BLOCK_SIZE=\"512\" TYPE=\"xfs\"\n/dev/md2: UUID=\"3f43c35a-5efe-4a87-a3ae-51569bdbb6c9\" BLOCK_SIZE=\"512\" TYPE=\"xfs\"\n/dev/loop2: UUID=\"3192fb1a-5f2f-46b9-81c7-b4a70ffd2d1f\" UUID_SUB=\"d96394e4-3eee-4e48-8516-0831e05d5701\" BLOCK_SIZE=\"4096\" TYPE=\"btrfs\"\n/dev/loop3: UUID=\"f6fab2f6-1061-47a7-b930-072a0db7b77b\" UUID_SUB=\"7a2f7129-4e27-4f5f-8ca5-43ec4e904a5e\" BLOCK_SIZE=\"4096\" TYPE=\"btrfs\"\n/dev/sdc1: PARTUUID=\"a4bf5ca2-9c51-4e9a-aa7f-668788558417\"\n/dev/sdg1: LABEL=\"WDPASSPORT_1TB\" UUID=\"2741496b-5e41-428f-b704-ca09c13921c5\" BLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTUUID=\"27461b98-01\"\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#parted","title":"Parted","text":"<p>Parted is a commandline tool which allows to add, modify, delete</p> parted<pre><code># Create partition tables\n# GPT\nsudo parted /dev/sda mklabel gpt\n\n# MBR\nsudo parted /dev/sda mklabel msdos\n\n# Format a drive fully as ext4\nsudo parted -a opt /dev/sda mkpart primary ext4 0% 100%\n\n# Format the drive\nmkfs /dev/sda1\n</code></pre> parted server<pre><code>$ parted\n\n(parted) unit MiB\n(parted) print\n</code></pre> Command Description <code>unit</code> Sets the kind of unit. I always use MiB. I always make this my first command. <code>print</code> Show the disk and partition information, complete with sizes in your selected unit. <code>help</code> Lists available commands. If followed by a command, gives help on that command's syntax and choices. <code>mklabel</code> Makes a partition table on the disk. If you use Linux, the type should always be either \"msdos\" or \"gpt\". <code>mkpart</code> Make Partition. You'll be asked primary or secondary, format type, start and end (in your chosen units). Always make sure your unit setting is \"MiB\". Always make your first partition starts at 1, and if your last one is intended to fill the rest of the disk, make its end be -1, which means end of disk. You can't put in a size directly: You must do the math and put in start and end. <code>rm &lt;#&gt;</code> Delete partition number &lt;#&gt;, which can be found using the print command. Obviously, use caution. <code>set &lt;number&gt; &lt;flag&gt; &lt;state&gt;</code> This is how you set flags of partitions. To make partition 1 bootable, perform the following command: <code>(parted) set 1 boot on</code> <code>align-check</code> This queries you whether you want optimal or minimal alignment, and I always say optimal. Then it asks you for the partition number,  (which can be found using the <code>print</code> command), and when you put in the partition number, it reports it as being either aligned or not. Aligned partitions are a good thing for top notch disk performance. <code>quit</code> Exit the Parted program. Command Description <code>lsblk -o +label,fstype,uuid</code> Command to see all relevant info on all partitions, without being root. <code>mkfs.ext4 -L &lt;mystring&gt; /dev/&lt;partition&gt;</code> Create an ext4 filesystem, with label <code>&lt;mystring&gt;</code>, on partition <code>/dev/&lt;partition&gt;</code>, where <code>&lt;partition&gt;</code> is something like <code>sda1</code> or <code>sda2</code> or <code>sdb1</code> <code>mkswap -L &lt;mystring&gt; /dev/&lt;partition&gt;</code> Create a swap filesystem, with label <code>&lt;mystring&gt;</code>, on partition <code>/dev/&lt;partition&gt;</code>, where <code>&lt;partition&gt;</code> is something like <code>sda1</code> or <code>sda2</code> or <code>sdb1</code>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#partition-table-and-formatting","title":"Partition Table and formatting","text":"<p>fdisk helps creating the partition table</p> partitiontable<pre><code># Unmount the drive safely\nsync\numount /dev/sdb1\n\n# Prepare the drive\nfdisk /dev/sdb\n\n# delete filesystem on disk\nd\n\n# create new partition\nn\n\n# create primary partitions\np\n\n# partition number\n1\n\n# set type, blocksize, start and end\n(use defaults)\n\n# write changes to disk\nw\n\n# Create Filesystem\nmkfs.ext4 /dev/sdb1\n\n# Mount the new formatted drive\nmnt /dev/sdb1 /mnt/use/ext/\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#mounting","title":"Mounting","text":"<p>For permanent mount see: <code>/etc/fstab</code></p> mounting<pre><code>sudo vim /etc/fstab             # To edit default mount drives\nsudo fdisk -l           # Drive info\nls -l /dev/disk/by-uuid         # get Drive UUID's\nmkdir -p /media/d       # make folder for HD\nmount -t vfat -o iocharset-utf8, umask=000 /dev/sda3 /media/d\n\nmkdir -p /mnt/mountplace\nmount /dev/sda1 /mnt/mountplace\n\nunmount /mnt/mountplace\n\nmount -U &lt;UUID&gt;                 # mount drive according to fstab definition\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/index.html#wipe-disk","title":"Wipe Disk","text":"wipe disk<pre><code># unmount disk\nsudo umount /dev/sdXY -l\n\n# use /dev/random to write Zeros on entire disk\nsudo dd if=/dev/urandom of=/dev/sdX bs=10M\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/files.html","title":"Important Files","text":"<pre><code>/boot/grub             # Grub files\n/etc/fstab             # Drive mounts\n/etc/profile           # EnvVar for all users\n/etc/group             # All groups available\n/home/username/.bashrc # User-script @startup\n/etc/init.d/           # Global start-scripts\n/etc/ssh/sshd.config   # SSH config file\n~.bashrc               # bash shell init scripts\n~.zshrc                # zsh shell init scripts\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html","title":"Folders","text":"","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#foreword","title":"Foreword","text":"<p>Like UNIX, Linux chooses to have a single hierarchical directory structure.</p> <p>Everything starts from the root directory, represented by <code>/</code>, and then expands into sub-directories instead of having so-called 'drives'. In the Windows environment, one may put one's files almost anywhere: on C drive, D drive, E drive etc. Such a file system is called a hierarchical structure and is managed by the programs themselves (program directories), not by the operating system. On the other hand, Linux sorts directories descending from the root directory / according to their importance to the boot process.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#root-directory","title":"Root directory <code>/</code>","text":"<p>As we all know Linux file system starts with <code>/</code>, the root directory. All other directories are 'children' of this directory. The partition which the root file system resides on is mounted first during boot and the system will not boot if it doesn't find it. On our reference system, the root directory contains the following sub-directories:</p> <p>Figure 1: https://www.blackmoreops.com/</p> Folder Description <code>/bin</code> Essential command binaries <code>/boot</code> Static files of the boot loader <code>/dev</code> Device files <code>/etc</code> Host-specific system configuration <code>/root</code> Home directory for the root user (optional) <code>/home</code> User home directories (optional) <code>/lib</code> Essential shared libraries and kernel modules <code>/lib&lt;qual&gt;</code> Alternate format essential shared libraries (optional) <code>/media</code> Mount point for removeable media <code>/mnt</code> Mount point for mounting a filesystem temporarily <code>/opt</code> Add-on application software packages <code>/sbin</code> Essential system binaries <code>/srv</code> Data for services provided by this system <code>/tmp</code> Temporary files <code>/usr</code> Secondary hierarchy <code>/var</code> Variable data","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#bin","title":"<code>/bin</code>","text":"<p>The bin directory contains several useful commands that are of use to both the system administrator as well as non-privileged users. It usually contains the shells like bash, csh, etc. and commonly used commands like cp, mv, rm, cat, ls. For this reason and in contrast to <code>/usr/bin</code>, the binaries in this directory are considered to be essential. The reason for this is that it contains essential system programs that must be available even if only the partition containing <code>/</code> is mounted. This situation may arise should you need to repair other partitions but have no access to shared directories (ie. you are in single user mode and hence have no network access). It also contains programs which boot scripts may depend on.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#boot","title":"<code>/boot</code>","text":"<p>This directory contains everything required for the boot process except for configuration files not needed at boot time (the most notable of those being those that belong to the GRUB boot-loader) and the map installer. Thus, the <code>/boot</code> directory stores data that is used before the kernel begins executing user-mode programs. This may include redundant (back-up) master boot records, sector/system map files, the kernel and other important boot files and data that is not directly edited by hand. Programs necessary to arrange for the boot loader to be able to boot a file are placed in <code>/sbin</code>. Configuration files for boot loaders are placed in <code>/etc</code>. The system kernel is located in either <code>/</code> or <code>/boot</code> (or as under Debian in <code>/boot</code> but is actually a symbolically linked at <code>/</code>.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#bootmap","title":"<code>/boot/map</code>","text":"<p>Contains the location of the kernel.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#bootvmlinuz-bootvmlinuz-kernel-version","title":"<code>/boot/vmlinuz</code> <code>/boot/vmlinuz-kernel-version</code>","text":"<p>Normally the kernel or symbolic link to the kernel.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#bootgrub","title":"<code>/boot/grub</code>","text":"<p>This subdirectory contains the GRUB configuration files including boot-up images and sounds. GRUB is the GNU GRand Unified Bootloader, a project which intends to solve all bootup problems once and for all. One of the most interesting features, is that you don't have to install a new partition or kernel, you can change all parameters at boot time via the GRUB Console, since it knows about the filesystems.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#bootgrubgrubconf-bootgrubmenulst","title":"<code>/boot/grub/grub.conf</code> <code>/boot/grub/menu.lst</code>","text":"<p>Grub configuration file.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#dev","title":"<code>/dev</code>","text":"<p><code>/dev</code> is the location of special or device files. It is a very interesting directory that highlights one important aspect of the Linux filesystem - everything is a file or a directory. Look through this directory and you should hopefully see hda1, hda2 etc ... which represent the various partitions on the first master drive of the system. <code>/dev/cdrom</code> and <code>/dev/fd0</code> represent your CD-ROM drive and your floppy drive. This may seem strange but it will make sense if you compare the characteristics of files to that of your hardware. Both can be read from and written to. Take <code>/dev/dsp</code>, for instance. This file represents your speaker device. Any data written to this file will be re-directed to your speaker. If you try <code>cat /boot/vmlinuz &gt; /dev/dsp</code> (on a properly configured system) you should hear some sound on the speaker. That's the sound of your kernel! A file sent to <code>/dev/lp0</code> gets printed. Sending data to and reading from <code>/dev/ttyS0</code> will allow you to communicate with a device attached there - for instance, your modem.</p> <p>3 Informations are relevant:</p> <ul> <li>Kind of the Access</li> <li>bloc oriented (b) - buffered access e.g. Harddisks</li> <li>characteroriented (c) - non buffered access e.g. Screen, Printer</li> <li>Major device number</li> <li>Specify the driver to be used.</li> <li>Minor device number</li> <li>To describe the actual instance of a device. In case multiple devices of the same driver are used</li> </ul> <p>Some common device files as well as their equivalent counterparts under Windows that you may wish to remember are:</p> deviceslist.txt<pre><code>/dev/ttyS0 (First communications port, COM1)\n    First serial port (mice, modems).\n\n/dev/psaux (PS/2)\n    PS/2 mouse connection (mice, keyboards).\n\n/dev/lp0 (First printer port, LPT1)\n    First parallel port (printers, scanners, etc).\n\n/dev/dsp (First audio device)\n    The name DSP comes from the term digital signal processor, a specialized processor chip optimized for digital signal analysis. Sound cards may use a dedicated DSP chip, or may implement the functions with a number of discrete devices. Other terms that may be used for this device are digitized voice and PCM.\n\n/dev/usb (USB Devices)\n    This subdirectory contains most of the USB device nodes. Device name allocations are fairly simplistic so no elaboration is be necessary.\n\n/dev/sda (C:\\, SCSI device)\n    First SCSI device (HDD, Memory Sticks, external mass storage devices such as CD-ROM drives on laptops, etc).\n\n/dev/scd (D:\\, SCSI CD-ROM device)\n    First SCSI CD-ROM device.\n\n/dev/js0 (Standard gameport joystick)\n    First joystick device.\n\n/dev/hd*\n    Mounted Harddisk Partitions\n</code></pre>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#etc","title":"<code>/etc</code>","text":"<p>Contains all local configurationfiles.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#root","title":"<code>/root</code>","text":"<p>Home folder for the root user. In most systems it was eliminated</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#home","title":"<code>/home</code>","text":"<p>Home folder for all system users. Each user has a own RWX folder with his name inside /home/</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#lib","title":"<code>/lib</code>","text":"<p>Needed systemlibraries and kernelmodules</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#libqual","title":"<code>/lib&lt;qual&gt;</code>","text":"<p>Needed systemlibraries and kernelmodules</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#media","title":"<code>/media</code>","text":"<p>Debian automatic mountpoint for Plug&amp;Play programms</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#mnt","title":"<code>/mnt</code>","text":"<p>Temporary mountpoint</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#opt","title":"<code>/opt</code>","text":"<p>Place for optional Software installed be the user.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#sbin","title":"<code>/sbin</code>","text":"<p>Important systemprogramms. They are used for the startup of the system. Only executable by root user.</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#tmp","title":"<code>/tmp</code>","text":"<p>All users can use this foder to store temporary files</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#usr","title":"<code>/usr</code>","text":"<p>User Data</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/filesystem/folders.html#var","title":"<code>/var</code>","text":"<p>Variable data</p>","tags":["os","operating system","linux","filesystem"]},{"location":"os/linux/rpi/index.html","title":"Raspberry Pi","text":"","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html","title":"Setup Rpi","text":"","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#raspi-conf","title":"Raspi-conf","text":"<p>The integrated Rpi config tool for many things.</p> <pre><code>raspi-config\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#wifi-dongle","title":"Wifi Dongle","text":"","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#setup","title":"Setup","text":"<p>``` bash caption=\"/etc/network/interfaces\" linenums=\"1\" auto lo</p> <p>iface lo inet loopback iface eth0 inet dhcp</p> <p>allow-hotplug wlan0 auto wlan0</p> <p>iface wlan0 inet dhcp         wpa-ssid \"ssid\"         wpa-psk \"password\" </p><pre><code>## For static IP address\n\n``` bash title=\"/etc/network/interfaces\" linenums=\"1\"\niface eth0 inet static\naddress &lt;static-ip&gt;\nnetmask 255.255.255.0\nnetwork 192.168.0.0\nbroadcast 192.168.0.255\ngateway 192.168.0.1\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#disable-power-saving-mode","title":"Disable Power saving mode","text":"/etc/modprobe.d/8192cu.conf<pre><code># Disable power saving\noptions 8192cu rtw_power_mgnt=0 rtw_enusbss=1 rtw_ips_mode=1\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#ssh","title":"SSH","text":"<p>See also SSH</p>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#set-up-hostname","title":"Set up Hostname","text":"<p>Setting up your Raspberry with a hostname can be very useful if it is connected to a network with DHCP Server. Instead of searching for the IP of the RPi you can find it by it's hostname.</p> <ul> <li>install samba and the samba tools   <pre><code>sudo apt-get install samba samba-common-bin\nsudo apt-get install netatalk # for avahi setup for mac\n</code></pre></li> <li>change the hostname in the following files   <pre><code>sudo vim /etc/hostname\nsudo vim /etc/hosts\n# or\nsudo hostname &lt;new_host_name&gt;\n</code></pre></li> <li>restart hostname service   <pre><code>sudo service hostname.sh start\n</code></pre></li> </ul> <p>Now you can connect to your RPi with your hostname</p>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#ssh-connect","title":"SSH Connect","text":"<p>Regenerate ssh keys to be safe</p> <pre><code>rm /etc/ssh/ssh_host_* &amp;&amp; dpkg-reconfigure openssh-server\n</code></pre> <p>Connect via remote PC</p> <pre><code>ssh pi@&lt;hostname&gt;\n# or for mac\nssh &lt;hostname&gt;.local -l &lt;username&gt;\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#resolve-ssh-lang-issue","title":"Resolve ssh lang issue","text":"/etc/ssh/ssh_config<pre><code># Comment the following line\n# SendEnv LANG LC...\n</code></pre> <p>Add the following environment variables into your <code>~/.bash_profile</code></p> ~/.bash_profile<pre><code>export LANG=\"en_US\"\nexport LANGUAGE=$LANG\nexport LC_ALL=$LANG\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#source-bashrc-file-upon-ssh-logon","title":"Source <code>.bashrc</code> file upon ssh logon","text":"<p>Add the following line to the <code>~/.bash_profile</code></p> ~/.bash_profile<pre><code>source $HOME/.bashrc\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#gui","title":"GUI","text":"<p>Launch GUI</p> <pre><code>startx\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#important-stuff","title":"Important stuff","text":"<pre><code>sudo apt-get install vim git tightvncserver\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#interconectivity","title":"Interconectivity","text":"<p>Enable i2c</p> /etc/modules<pre><code>i2c-bcm2708\ni2c-dev\n</code></pre> <p>Remove SPI and I2C from the blacklist</p> /etc/modprobe.d/raspi.blacklist.conf<pre><code># Comment out both line to remove from blacklist\n# blacklist spi-bcm2708\n# blacklist i2c-bcm2708\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#python-modules","title":"Python modules","text":"","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#general","title":"General","text":"<pre><code>sudo apt-get install python-dev\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#gpio","title":"GPIO","text":"<pre><code>sudo apt-get install python-rpi.gpio # GPIO Module\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/rpi/setup.html#i2c","title":"I2C","text":"<pre><code>sudo apt-get install python-smbus # SMBus support\nsudo apt-get install i2c-tools    # I2C support\nsudo i2cdetect -y 0               # Detect I2C on RPi v2\n</code></pre>","tags":["os","operating system","linux","raspberry pi"]},{"location":"os/linux/scripts/index.html","title":"Scripts","text":"","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html","title":"Config Files","text":"<ul> <li>My linux configfiles</li> </ul>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#etcprofile","title":"<code>/etc/profile</code>","text":"<p><code>/etc/profile</code> contains Linux system wide environment and startup programs. It is used by all users with <code>bash</code>, <code>zsh</code>, <code>sh</code> shell. Usually used to set <code>PATH</code> variable, user limits, and other settings for user. It only runs for login shell. If you wanted to make large changes or application specific changes use <code>/etc/profile.d</code> directory.</p> <p>My profile</p>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#add-program-topath","title":"Add Program to<code>PATH</code>","text":"<pre><code>export PATH=$PATH:/opt/sublime_text\n</code></pre>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#bashrc-zshrc","title":"<code>~.bashrc</code> <code>.zshrc</code>","text":"<p>Execute commands at start of a shell instance for a given users only</p> <ul> <li>.bashrc</li> <li>.zshrc</li> </ul>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#create-a-cmd-alias","title":"Create a cmd alias","text":"alias<pre><code># Common home locations\nalias home='cd ~'\nalias root='cd /'\nalias dtop='cd ~/Desktop'\nalias dwld='cd ~/Downloads'\nalias docs='cd ~/Documents'\nalias www='cd /var/www/html'\n# Common data directories\n# Common commands\nalias o=open\nalias ..='cd ..'\nalias ...='cd ..; cd ..'\nalias ....='cd ..; cd ..; cd ..'\n# Common command shortcuts\nalias cls=clear\nalias ll='ls -la'\nalias owner-wwwdata='sudo chown -R www-data:www-data ./'\nalias permission-file='sudo find . -type f -exec chmod 644 {} \\;'\nalias permission-folder='sudo find . -type d -exec chmod 755 {} \\;'\n# commands\nalias backup='~/Documents/backup.bash'\n</code></pre>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#add-custom-functions","title":"Add custom functions","text":"function<pre><code># Draw Mandelbrot Factral\nfunction mandelbrot_zsh {\n  local lines columns colour a b p q i pnew\n  ((columns=COLUMNS-1, lines=LINES-1, colour=0))\n  for ((b=-1.5; b&lt;=1.5; b+=3.0/lines)) do\n    for ((a=-2.0; a&lt;=1; a+=3.0/columns)) do\n      for ((p=0.0, q=0.0, i=0; p*p+q*q &lt; 4 &amp;&amp; i &lt; 32; i++)) do\n        ((pnew=p*p-q*q+a, q=2*p*q+b, p=pnew))\n      done\n      ((colour=(i/4)%8))\n      echo -n \"\\\\e[4${colour}m \"\n    done\n    echo\n  done\n}\n</code></pre>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/config_files.html#etcfstab","title":"<code>etc/fstab</code>","text":"<p>There's a file called /etc/fstab in your Linux system. Learn what its contents mean and how it's used in conjunction with the mount command. When you learn to understand the fstab file, you'll be able to edit its contents yourself, too.</p> <p>My fstab</p> <ol> <li>column - Device<ul> <li><code>UUID=...</code></li> <li><code>/dev/hda2</code></li> </ul> </li> <li>column - Default mount point<ul> <li><code>/</code></li> <li><code>mnt/data</code></li> <li><code>media/disk</code></li> </ul> </li> <li>column - Filesystem type<ul> <li><code>ext2</code></li> <li><code>ext4</code></li> <li><code>ntfs</code></li> <li><code>vfat</code></li> <li><code>auto</code></li> </ul> </li> <li>column - Mount options<ul> <li><code>auto and noauto</code> - mounted automatically at bootup</li> <li><code>user and nouser</code> - allows normal user to mount the device</li> <li><code>exec and noexec</code> - lets execute binaries from that partition</li> <li><code>ro and rw</code> - R ead- O nly and R ead- W rite</li> <li><code>sync and async</code> - data can be writte synchron or asynchron</li> <li><code>default</code> - means <code>rw,suid,dev,exec,auto,nouser,async</code></li> </ul> </li> <li>column - Dump options<ul> <li>In most cases <code>0</code></li> </ul> </li> <li>column - fck options<ul> <li>In most cases <code>0</code></li> </ul> </li> </ol> fstab<pre><code>UUID=3d3920bb-91c7-4632-8fd0-1d87b110a496 /                 ext4    errors=remount-ro 0       1\n/swapfile                                 none              swap    sw                0       0\n\n# internal WD 1TB Harddisk on /dev/sda1\n#UUID=377d6d5c-3d62-4155-b7f1-3f07fe09a0c2 /mnt/data2        ext4    defaults          0       0\n\n\n# external Lacie Rugged 2TB Harddisk on /dev/sda1\nUUID=0c6f2eed-3ec0-493e-9ab8-e954a9e3a25d /media/zas_backup ext3    nofail,nobootwait 0       0\n\n# external WD Passport 1TB Harddisk on /dev/sde1\nUUID=20F605D47F5FE7AC                     /media/zas_media  ntfs    nofail,nobootwait 0       0\n</code></pre>","tags":["os","operating system","linux","scripts","config"]},{"location":"os/linux/scripts/general.html","title":"Scripts","text":"<p>Here you can dowload some example files for Linux. It can be neither Scripts or Links or config files</p> <p>A lot of scripts and configurations can be found in my config repo:</p> <ul> <li>Shell Scripts</li> </ul>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#script-basics","title":"Script Basics","text":"","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#shell-bangs","title":"Shell Bangs","text":"<p>At the beginning of a file there need to be a line to indentify the program or the file. IF the <code>#!/usr/bin/env</code> is used the system will search the command in your <code>$PATH</code> folders.</p> <pre><code>#!interpreter [optional arguments]\n\n#!/bin/sh\n#!/bin/bash\n#!/usr/bin/env python\n#!/usr/bin/env bash\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#begin","title":"Begin","text":"<pre><code>base_directory=\"$(dirname \"$(readlink -f \"$0\")\")\"\npushd $base_directory\nscriptname=`basename $0 .bash`\n\nSEPARATOR='--------------------------------------------------------------------------------'\nINDENT='  '\n\necho \"$SEPARATOR\"\necho \"-- ${0##*/} Started!\"\necho \"\"\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#end","title":"End","text":"<pre><code>echo \"\"\necho \"-- ${0##*/} Finished!\"\necho \"$SEPARATOR\"\npopd\n</code></pre> <pre><code>exit 0\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#variables","title":"Variables","text":"variables<pre><code># Var\nSEPARATOR='--------------------------------------------------------------------------------'\nINDENT='  '\n\n# Array\nMOUNT_POINTS=( 'elem1' 'elem2')\n\n# Use Env var\nLinux_user=\"$USER\"\n\n# Check if variables exist\nif [ -n \"$verbose\" ] ; then\n  echo \"$SEPARATOR\\n * Git clone spl repositories\\n\"\nfi\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#preexisting-special-variables","title":"Preexisting special variables","text":"<p>This is just a small incomplete list.</p> Var name Description <code>$0</code> The name of the current script <code>$1</code> ... <code>$9</code> The first 9 arguments of the script <code>$#</code> Number of arguments passed tothe script <code>$@</code> All the arguments passed to the script <code>$USER</code> User name of the user running the script <code>$HOSTNAME</code> Hostname of the machine running the script <code>$PATH</code> List of folders in the current environment <code>$SECONDS</code> Number of seconds since the script started <code>$RANDOM</code> Returns a random number each time <code>$LINENO</code> Return the current line number in the Bash script","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#useful-variables","title":"Useful Variables","text":"<pre><code>base_directory=\"$(dirname \"$(readlink -f \"$0\")\")\"\nbase_directory_alt=`dirname ${BASH_SOURCE[0]}`\nscriptname_with_ext=${0##*/}\nscriptname_without_ext=`basename $0 .bash`\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#strings","title":"Strings","text":"<pre><code>file=\"/home/user/test.txt\"\nfilename=$(basename -- \"$file\")\nextension=\"${filename##*.}\"\nfilename_withoutext=\"${filename%.*}\"\npath=$(dirname \"${file}\")\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#command-line-arguments","title":"Command line arguments","text":"cli arguments<pre><code>usage='Usage: script.bash [-v] [-h]'\nusage=\"$usage\\n\\t[-n input_n] [-u input_u]\"\n\nwhile getopts \"n:u:vh\" options; do\n  case $options in\n    n ) var_n=$OPTARG;;\n    u ) var_u=$OPTARG;;\n    v ) verbose=1;;\n    h ) echo -e $usage\n          exit 1;;\n    * ) echo -e $usage\n          exit 1;;\n  esac\ndone\n\nif [ -n \"$verbose\" ] ; then\n  echo \"Verbose\"\nfi\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#long-and-short-arguments","title":"Long and short arguments","text":"short long cli arguments<pre><code>usage=\"usage: git-clone [options]\noptions:\n  -m | --my      Clone my repos\n  -a | --all     Clone all repos\"\n\nif [ $? != 0 ] ; then echo \"No option given \\n $usage \\n\\nTerminating...\" &gt;&amp;2 ; exit 1 ; fi\n\n# Transform long options to short ones\nfor arg in \"$@\"; do\n  shift\n  case \"$arg\" in\n    \"--my\") set -- \"$@\" \"-m\" ;;\n    \"--all\")   set -- \"$@\" \"-a\" ;;\n    *)        set -- \"$@\" \"$arg\"\n  esac\ndone\n\n# Parse short options\nOPTIND=1\nwhile getopts \"hvmfepsi\" opt\ndo\n  case \"$opt\" in\n    \"h\") echo \"$usage\"; exit 0 ;;\n    \"v\") verbose=true ;;\n    \"m\") my=true ;;\n    \"a\") all=true; my=true ;;\n    \"?\") echo \"$usage\" &gt;&amp;2; exit 1 ;;\n  esac\ndone\nshift $(expr $OPTIND - 1) # remove options from positional parameters\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#conditions","title":"Conditions","text":"<p>Check if variable length is zero</p> <pre><code>if test -z \"$1\"\nthen\n  echo \"Usage: $0 &lt;Your name&gt;\"\nelse\n  echo \"Hello $1, from $0\"\nfi\n</code></pre> <p>Compare two values</p> <pre><code>for i in {1..10}\ndo\n  if test $i -eq 3\n  then\n    echo \"I found the 3!\"\n  fi\ndone\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#for-loops","title":"For Loops","text":"","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#functions","title":"Functions","text":"functions<pre><code># Define function\nfunction test () {\n  local arg1=$1 ; local arg2=$2\n\n  $result = $arg1 + $arg2\n\n  return 1\n}\n\n# Usage function\ntest 1 2\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#console-prints","title":"Console prints","text":"<p>Display message welcome on screen</p> echo<pre><code># Console print\necho 'Welcome'\n\n# Write message File deleted to /tmp/log.txt\necho 'File has been deleted' &gt; /tmp/log.txt\n\n# Append message File deleted /tmp/log.txt\necho 'File has been deleted' &gt;&gt; /tmp/log.txt\n\n# Append message and command output on screen, print variable\necho \"Today's date is $(date)\"\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#user-inputs","title":"User Inputs","text":"user inputs 1<pre><code>echo -n \"Please enter: \"\n\nstty -echo\nread user_text\nstty echo\n\necho \"\"         # force a carriage return to be output\n</code></pre> user inputs 1<pre><code>read -n1 -r -p \"Press space to continue...\" key\nif [ \"$key\" = '' ]; then\n    # Space pressed, do something\n    # echo [$key] is empty when SPACE is pressed # uncomment to trace\nelse\n    # Anything else pressed, do whatever else.\n    # echo [$key] not empty\nfi\n</code></pre> <p>Ask yes or no question with select</p> <pre><code>select yn in \"y\" \"n\"; do\n    case $yn in\n        y ) install_license=true;;\n        n ) install_license=false;;\n    esac\ndone\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#files-folders","title":"Files &amp; Folders","text":"extract path, filename, extension<pre><code>fpath=$(basename $fullpath)\nfname=$(basename -- \"$fullpath\")\next=\"${filename##*.}\"\nfname_withoutext=\"${filename%.*}\"\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#check-if-file-exists","title":"Check if file exists","text":"check if file exists<pre><code>if test -f \"$file\"; then\n  echo \"$file found\"\nelse\n  echo \"$file not found\"$\nfi\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#check-and-create-folder","title":"Check and create folder","text":"check and create folder<pre><code>if [ ! -d \"/folder/location\" ]; then\n  sudo mkdir /folder/location\nfi\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#lockfile","title":"Lockfile","text":"<p>Lockfiles you can wait until another process is finished.</p> check and create folder<pre><code># Define path and lockfile\nlockDir=\"/path/to/lock_files\"\nlockFilePath=\"$lockDir/lockfile.lock\"\n# Loop until file no longer exist\nwhile [ -e \"$lockFilePath\" ]\ndo\n   exit\ndone\n\n# Create new lockfile\ntouch $lockFilePath\n\nTO SOMETHING THE LOCK IS YOURS\n\n# Remove lockfile\nrm -f $lockFilePath\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#find","title":"Find","text":"find samples<pre><code># Find all in current location\nfind .\n\n# Find directory and execute commands\nfind . -maxdepth 1 -type d -exec sh -c '(cd {} &amp;&amp; git pull)' ';'\n\n# Find files and delete it\nfind $base_directory -type f -name '.cache.dat' | xargs -r rm -v\n\n# Find folders and delete it\nfind $base_directory -type d -name '.xrf' | xargs -r rm -Rv\n\n# Find files and RegEx replace some content\nfind $project_directory -type f -name '*._epf' | xargs sed -i \"s/$actual_view/$new_view/g\"\n\n# Find with executing multiple command\nfind ./ -iname \"*.md\" -type f |while read file;\ndo\n filename_withoutext=\"${file%.*}\"\n echo \"pandoc $file -o $filename_withoutext.$out_type\"\n pandoc $file -o $filename_withoutext.$out_type\ndone\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#xargs","title":"xargs","text":"<p>Xargs reads items from standard input (meaning, you can pipe data to it) and executes the specified command. In addition you can parallize the commands.</p> <pre><code>xargs [options] [command [initial-arguments]]\n</code></pre> <pre><code># Find mpeg files launch 4 parallel processes of ffmpeg\nfind . -name \"*.mpeg\" | xargs -P 4 -I {} ffmpeg -i {} -o {}.mp4\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/scripts/general.html#samples","title":"Samples","text":"<pre><code>DIR=\"$( cd \"$( dirname \"$0\" )\" &amp;&amp; pwd )\" # get dir of executed file\n</code></pre>","tags":["os","operating system","linux","scripts"]},{"location":"os/linux/tools/index.html","title":"Tools","text":"","tags":["os","operating system","linux","tools"]},{"location":"os/linux/tools/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","tools"]},{"location":"os/linux/tools/apache.html","title":"Apache","text":"","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/apache.html#password-protect-apache-pages","title":"Password Protect Apache Pages","text":"<p>When setting up a web server, there are often sections of the site that you wish to restrict access to. Web applications often provide their own authentication and authorization methods, but the web server itself can be used to restrict access if these are inadequate or unavailable.</p> <p>In order to create the file that will store the passwords needed to access our restricted content, we will use a utility called htpasswd. This is found in the <code>apache2-utils</code> package within the Ubuntu repositories.</p>","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/apache.html#install-apache-packages","title":"Install Apache Packages","text":"<p>Update the local package cache and install the package by typing this command. We will take this opportunity to also grab the Apache2 server in case it is not yet installed on the server:</p> <pre><code>sudo apt-get update\nsudo apt-get install apache2 apache2-utils\n</code></pre>","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/apache.html#create-the-password-file","title":"Create the Password File","text":"<p>We now have access to the <code>htpasswd</code> command. We can use this to create a password file that Apache can use to authenticate users. We will create a hidden file for this purpose called <code>.htpasswd</code> within our <code>/etc/apache2</code> configuration directory.</p> <p>The first time we use this utility, we need to add the <code>-c</code> option to create the specified file. We specify a username (test in this example) at the end of the command to create a new entry within the file:</p> <pre><code>sudo htpasswd -c /etc/apache2/.htpasswd test\n</code></pre> <p>You will be asked to supply and confirm a password for the user.</p> <p>Leave out the <code>-c</code> argument for any additional users you wish to add:</p> <pre><code>sudo htpasswd /etc/apache2/.htpasswd another_user\n</code></pre> <p>If we view the contents of the file, we can see the username and the encrypted password for each record:</p> <pre><code>cat /etc/apache2/.htpasswd\n</code></pre> <p>Output</p> <pre><code>test:$apr1$lzxsIfXG$tmCvCfb49vpPFwKGVsuYz.\nanother_user:$apr1$p1E9MeAf$kiAhneUwr.MhAE2kKGYHK.\n</code></pre>","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/apache.html#configure-apache-password-authentication","title":"Configure Apache Password Authentication","text":"<p>Now that we have a file with our users and passwords in a format that Apache can read, we need to configure Apache to check this file before serving our protected content. We can do this in two different ways.</p> <p>The first option is to edit the Apache configuration and add our password protection to the virtual host file. This will generally give better performance because it avoids the expense of reading distributed configuration files. If you have this option, this method is recommended.</p> <p>If you do not have the ability to modify the virtual host file (or if you are already using .htaccess files for other purposes), you can restrict access using an <code>.htaccess</code> file. Apache uses <code>.htaccess</code> files in order to allow certain configuration items to be set within a file in a content directory. The disadvantage is that Apache has to re-read these files on every request that involves the directory, which can impact performance.</p> <p>Choose the option that best suits your needs below.</p>","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/apache.html#access-control-in-virtual-host","title":"Access Control in Virtual Host","text":"<p>Configuring Access Control within the Virtual Host Definition</p> <p>Begin by opening up the virtual host file that you wish to add a restriction to. For our example, we'll be using the <code>000-default.conf</code> file that holds the default virtual host installed through Ubuntu's apache package:</p> <p>Inside, with the comments stripped, the file should look similar to this:</p> /etc/apache2/sites-enabled/000-default.conf<pre><code>&lt;VirtualHost *:80&gt;\n    ServerAdmin webmaster@localhost\n    DocumentRoot /var/www/html\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;\n</code></pre> <p>Authentication is done on a per-directory basis. To set up authentication, you will need to target the directory you wish to restrict with a <code>&lt;Directory ___&gt;</code> block. In our example, we'll restrict the entire document root, but you can modify this listing to only target a specific directory within the web space. Within this directory block, specify that we wish to set up Basic authentication. For the AuthName, choose a realm name that will be displayed to the user when prompting for credentials. Use the AuthUserFile directive to point Apache to the password file we created. Finally, we will require a valid-user to access this resource, which means anyone who can verify their identity with a password will be allowed in:</p> /etc/apache2/sites-enabled/000-default.conf<pre><code>&lt;VirtualHost *:80&gt;\n    ServerAdmin webmaster@localhost\n    DocumentRoot /var/www/html\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n    &lt;Directory \"/var/www/html\"&gt;\n        AuthType Basic\n        AuthName \"Restricted Content\"\n        AuthUserFile /etc/apache2/.htpasswd\n        Require valid-user\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre> <p>Save and close the file when you are finished. Restart Apache to implement your password policy:</p> <pre><code>sudo service apache2 restart\n</code></pre> <p>The directory you specified should now be password protected.</p> <p>Configuring Access Control with <code>.htaccess</code> Files</p> <p>If you wish to set up password protection using <code>.htaccess</code> files instead, you should begin by editing the main Apache configuration file to allow <code>.htaccess</code> files:</p> <p>Find the <code>&lt;Directory&gt;</code> block for the <code>/var/www</code> directory that holds the document root. Turn on <code>.htaccess</code> processing by changing the AllowOverride directive within that block from <code>None</code> to <code>All</code>:</p> /etc/apache2/apache2.conf<pre><code>...\n&lt;Directory /var/www/&gt;\n    Options Indexes FollowSymLinks\n    AllowOverride All\n    Require all granted\n&lt;/Directory&gt;\n...\n</code></pre> <p>Next, we need to add an .htaccess file to the directory we wish to restrict. In our demonstration, we'll restrict the entire document root (the entire website) which is based at <code>/var/www/html</code>, but you can place this file in any directory you wish to restrict access to <code>/var/www/html/.htaccess</code>.</p> <p>Within this file, specify that we wish to set up Basic authentication. For the AuthName, choose a realm name that will be displayed to the user when prompting for credentials. Use the AuthUserFile directive to point Apache to the password file we created. Finally, we will require a valid-user to access this resource, which means anyone who can verify their identity with a password will be allowed in:</p> /var/www/html/.htaccess<pre><code>AuthType Basic\nAuthName \"Restricted Content\"\nAuthUserFile /etc/apache2/.htpasswd\nRequire valid-user\n</code></pre> <p>Save and close the file. Restart the web server to password protect all content in or below the directory with the <code>.htaccess</code> file:</p> <pre><code>sudo service apache2 restart\n</code></pre> <p>To confirm that your content is protected, try to access your restricted content in a web browser. You should be presented with a username and password prompt.</p> <p>If you enter the correct credentials, you will be allowed to access the content. If you enter the wrong credentials or hit \"Cancel\", you will see the \"Unauthorized\" error page:</p>","tags":["os","operating system","linux","tools","apache"]},{"location":"os/linux/tools/hw_sensors.html","title":"Hardware Sensors","text":"","tags":["os","operating system","linux","tools","hw sensors"]},{"location":"os/linux/tools/hw_sensors.html#installation","title":"Installation","text":"<pre><code>sudo apt-get install lm-sensors hddtemp\n</code></pre> <ul> <li><code>lm-sensors</code> reads the mainboard sensors</li> <li><code>hddtemp</code> reads the S.M.A.R.T. enables harddisk sensors</li> </ul>","tags":["os","operating system","linux","tools","hw sensors"]},{"location":"os/linux/tools/hw_sensors.html#setup","title":"Setup","text":"<p>Running <code>sensors-detect</code></p> <pre><code>sudo sensors-detect\n</code></pre> <p>Answer to ALL questions with YES, especially to the last one \"Do you want to add these lines to <code>/etc/modules</code> automatically.</p>","tags":["os","operating system","linux","tools","hw sensors"]},{"location":"os/linux/tools/hw_sensors.html#loading-modules","title":"Loading modules","text":"<p>Since we don't want to restart; load the modules manually. Therefore load the modules displayed at the end of the previous command.</p> <pre><code>#----cut here----\n# Chip drivers\ncoretemp\n#----cut here----\n</code></pre> <p>Run command</p> <pre><code>sudo modprobe [modulename]\n</code></pre>","tags":["os","operating system","linux","tools","hw sensors"]},{"location":"os/linux/tools/hw_sensors.html#monitoring","title":"Monitoring","text":"<p>To read the sensors by coimmandline enter:</p> <pre><code>sensors\n</code></pre> <p>There are also gui available for all desktop environments.</p> <ul> <li>Gnome: <code>sudo apt-get install sensors-applet</code></li> <li>KDE: Build in Widget</li> </ul>","tags":["os","operating system","linux","tools","hw sensors"]},{"location":"os/linux/tools/lets_encrypt.html","title":"Let's Encrypt","text":"","tags":["os","operating system","linux","tools","lets encrypt"]},{"location":"os/linux/tools/lets_encrypt.html#version","title":"Version","text":"<pre><code>certbot --version\n</code></pre>","tags":["os","operating system","linux","tools","lets encrypt"]},{"location":"os/linux/tools/lets_encrypt.html#renew-certificates","title":"Renew Certificates","text":"<pre><code># Stop Webserver Service\nsudo service apache2 stop\n\n# Update Certificates\nsudo certbot renew\nsudo certbot renew --dry-run\n\n# Restart Webserver Service\nsudo service apache2 start\n</code></pre>","tags":["os","operating system","linux","tools","lets encrypt"]},{"location":"os/linux/tools/mosquitto.html","title":"Mosquitto","text":"<p>Eclipse Mosquitto is an open source (EPL/EDL licensed) message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers.</p> <p>The MQTT protocol provides a lightweight method of carrying out messaging using a publish/subscribe model. This makes it suitable for Internet of Things messaging such as with low power sensors or mobile devices such as phones, embedded computers or microcontrollers.</p> <p>The Mosquitto project also provides a C library for implementing MQTT clients, and the very popular mosquitto_pub and mosquitto_sub command line MQTT clients.</p> <p>For more information see https://mosquitto.org</p>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#installation","title":"Installation","text":"<pre><code>sudo apt-get install mosquitto\nsudo apt-get install mosquitto-clients\n</code></pre>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#usage","title":"Usage","text":"<pre><code>sudo service mosquitto stop\n</code></pre> <pre><code>sudo service mosquitto start\n</code></pre>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#configuration","title":"Configuration","text":"<p>Default configuration can be found at:</p> <pre><code>/etc/mosquitto/mosquitto.conf\n</code></pre> <p>Example config file can be found at:</p> <pre><code>/usr/share/doc/mosquitto/examples/mosquitto.conf.example\n</code></pre> <p>Custom config file needs to be placed at</p> <pre><code>/etc/mosquitto/conf.d/\n</code></pre>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#password-file","title":"Password file","text":"<p>Create a new password file</p> <pre><code># Create empty password file\ntouch /etc/mosquitto/mosquitto_passwd\n# Fill password file\nmosquitto_passwd -c /etc/mosquitto/mosquitto_passwd username password\n</code></pre> <p>To add a new user to the existing password file use:</p> <pre><code>mosquitto_passwd -b /etc/mosquitto/mosquitto_passwd username password\n</code></pre> <p>For activating the passwordfile you need to create a custom config file <code>/etc/mosquitto/conf.d/mosquitto.conf</code> and att the following lines:</p> <pre><code>allow_anonymous false\npassword_file /etc/mosquitto/mosquitto_passwd\n</code></pre>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#python-example","title":"Python example","text":"<p>More informations at http://www.steves-internet-guide.com/client-connections-python-mqtt/</p> <p>Install the <code>paho-mqtt</code> library</p> <pre><code>sudo pip3 install paho-mqtt\n</code></pre> <pre><code>import paho.mqtt.client as mqtt\n\n# connection callback\ndef on_connect(client, userdata, flags, rc):\n   print(\"Connected with result code \" + str(rc))\n\n# message received callback\ndef on_message(client, userdata, msg):\n   print(msg.topic + \" \" + str(msg.payload))\n   client.publish(\"/out\", \"received an input...\")\n\n# set up the client\nclient = mqtt.Client()\nclient.on_connect = on_connect\nclient.on_message = on_message\nclient.connect(\"mqtt.eclipse.org\", 1883, 60) # address ip, port number, keep alive\n\n# subscribe\nclient.subscribe(\"/in\")\n\n# process the MQTT business\nclient.loop_forever()\n</code></pre>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/mosquitto.html#paho-return-codes","title":"Paho Return Codes","text":"<p>Connection Return Codes</p> <ul> <li><code>0</code>: Connection successful</li> <li><code>1</code>: Connection refused -- incorrect protocol version</li> <li><code>2</code>: Connection refused -- invalid client identifier</li> <li><code>3</code>: Connection refused -- server unavailable</li> <li><code>4</code>: Connection refused -- bad username or password</li> <li><code>5</code>: Connection refused -- not authorised</li> <li><code>6</code>-<code>255</code>: Currently unused.</li> </ul>","tags":["os","operating system","linux","tools","mosquitto"]},{"location":"os/linux/tools/raid.html","title":"Raid","text":"<p>Raid ( Redundant Array of Independent Disks) is a system to connect multiple harddisks together to increase the size, the performance or the security of those drives.</p> <p>Raid can be done via a specific hardware implementation, which is expensive; or a software implementation, which adds overhead and decreases your CPU performance.</p> <p>On this page only the software implementation using the mdadm ( Multi Drive Administration) is covered.</p>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#types","title":"Types","text":"","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#raid-types","title":"Raid types","text":"Type Description Image RAID 0 Block level striping. MD can handle devices of different lengths, the extra space on the larger device is then not striped RAID 1 Mirror RAID 4 Like RAID 0, but with an extra device for parity RAID 5 Like RAID 4, but with the parity distributed across all devices RAID 6 Like RAID 5, but with two parity segments per stripe RAID 10 Take a number of RAID 1 mirrorsets and stripe across them RAID 0 style","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#non-raid-types","title":"Non-Raid types","text":"<ul> <li>LINEAR -- Concatenate a number of devices into a single large MD device.</li> <li>MULTIPATH -- Provide multiple paths with failover to a single device.</li> <li>FAULTY -- A single device which emulates a number of disk fault scenarios for testing and development.</li> <li>CONTAINER -- A group of devices managed as one, in which RAID systems can be built.</li> </ul>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#mdadm-commands","title":"mdadm Commands","text":"","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#check-raid-status","title":"Check Raid Status","text":"<pre><code>cat /proc/mdstat\nsudo mdadm --query --detail /dev/md* # * = md number e.g. md0\n</code></pre>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#create-raid-array","title":"Create Raid Array","text":"<p>Create a RAID 1 (mirror) array from two partitions. If the partitions differ in size, the array is the size of the smallest partition.</p> <pre><code>mdadm --create /dev/md0 --level=mirror --raid-devices=2 /dev/sda1 /dev/sdb1\n</code></pre> <p>Create a RAID 5 volume from three partitions. If the partitions used in your RAID array are not the same size, mdadm will use the size of the smallest from each partition. If you receive an error, such as: <code>mdadm: RUN_ARRAY failed: Invalid argument</code>, make sure your kernel supports (either via a module or by being directly compiled in) the raid mode you are trying to use. Most modern kernels do, but you never know ...</p> <pre><code>mdadm --create /dev/md1 --level=5 --raid-devices=3 /dev/sda2 /dev/sdb2 /dev/sdc2\n</code></pre>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#change-raid-array","title":"Change Raid Array","text":"","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#grow","title":"Grow","text":"<p>This adds the new device to the array then grows the array to use its space.</p> <pre><code>mdadm --add /dev/md1 /dev/sdd1\nmdadm --grow /dev/md1 --raid-devices=4\n</code></pre>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#delete-raid-array","title":"Delete Raid Array","text":"<pre><code>mdadm --stop /dev/md0        # to halt the array\nmdadm --remove /dev/md0      # to remove the array\nmdadm --zero-superblock /dev/sd[abc]1  # delete the superblock from all drives in the array\nvim /etc/mdadm/mdadm.conf    # delete any rows related to deleted array\n</code></pre>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/raid.html#links","title":"Links","text":"<ul> <li>MDADM Wikipedia article</li> <li>Official mdadm webpage</li> </ul>","tags":["os","operating system","linux","tools","raid"]},{"location":"os/linux/tools/samba.html","title":"Samba","text":"<p>Samba is useful for a creating a Network directory and share it with other PC, especially Windows.</p>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#server","title":"Server","text":"<p>For creating a server who shares a drive</p>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#installation-server","title":"Installation Server","text":"<pre><code>sudo apt-get install samba\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#configuration","title":"Configuration","text":"<p>Under <code>global</code> add the following lines or uncomment them in your file <code>etc/samba/smb.conf</code></p> /etc/samba/smb.conf<pre><code>[global]\n        # Permission on newly created files and folders\n        create mask = 0644\n        directory mask = 0755\n\n        # add user security\n        security = user\n        encrypt passwords = true\n        map to guest = bad user\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#user","title":"User","text":"<pre><code># Create User\nsudo  smbpasswd -a username\n\nNew SMB password:\nRetype new SMB password:\nAdded user username.\n\n# Activate User\nsudo smbpasswd -e username\nEnabled user username.\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#creating-share","title":"Creating Share","text":"<p>Add the end of the file <code>/etc/samba/smb.conf</code> add your shares</p> /etc/samba/smb.conf<pre><code>[multimedia]\n        comment = multimedia\n        path = /mnt/multimedia\n        browseable = yes\n        read only = no\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#restart-samba","title":"Restart Samba","text":"<pre><code># Linux in general\nsudo /etc/init.d/samba restart\n# Ubuntu &gt;10.04\nsudo initctl restart smbd\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#test","title":"Test","text":"<p>To test samba and display all available shares for the current user type:</p> <pre><code>smbclient -L &lt;hostname or ipname&gt;\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#client","title":"Client","text":"<p>For mounting a shared drive</p>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#installation-client","title":"Installation Client","text":"<p>Install samba tools.</p> <pre><code>sudo apt-get install samba smbfs\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#create-shared-folder","title":"Create shared folder","text":"<p>Create before an empty folder where you want to mount your samba drive.</p> <pre><code>sudo mkdir /mnt/shared_folder_name\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/samba.html#set-up-fstab","title":"Set Up FSTAB","text":"<p>Open <code>etc/fstab</code> file and add a new entry.</p> /etc/fstab<pre><code># only read access\n//SERVER/shares /MOUNTPOINT smbfs username=samba_user,password=samba_pass 0 0\n\n# read / write access\n//SERVER/shares /MOUNTPOINT smbfs username=samba_user,password=samba_pass,uid=this_user,gid=this_group 0 0\n</code></pre>","tags":["os","operating system","linux","tools","samba"]},{"location":"os/linux/tools/shairport.html","title":"Shairport","text":"<p>Linux can receive AirPlay audio using a program called Shairport. Shairport tries to emulate the Airport system of Apple. This version allows to stream music from a  device e.g. Smartphone, Tablet, PC to the Airport Server which then play the music. The device need to be in the same Network.</p>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#install","title":"Install","text":"<p>Download AirPlay (Shairport)</p> <pre><code>cd /tmp\nsudo git clone https://github.com/abrasive/shairport.git shairport\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#install-dependencies","title":"Install dependencies","text":"<pre><code>sudo apt-get install libssl-dev libavahi-client-dev libasound2-dev build-essential\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#configure-the-shairport-build","title":"Configure the Shairport build","text":"<pre><code>cd shairport\n./configure\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#make-install-shairport","title":"Make &amp; install Shairport","text":"<pre><code>sudo make\nsudo make install\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#identify-your-audio-output-device","title":"Identify your audio output device","text":"<pre><code>x@z:~$ aplay -l\n**** List of PLAYBACK Hardware Devices ****\ncard 0: PCH [HDA Intel PCH], device 0: ALC892 Analog [ALC892 Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 1: ALC892 Digital [ALC892 Digital]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 3: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 7: HDMI 1 [HDMI 1]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#setup-the-firewall-i-use-ufw-to-do-this","title":"Setup the firewall I use <code>ufw</code> to do this:","text":"<pre><code>sudo ufw allow from 192.168.1.1/16 to any port 3689 proto tcp\nsudo ufw allow from 192.168.1.1/16 to any port 5353\nsudo ufw allow from 192.168.1.1/16 to any port 5000:5005 proto tcp\nsudo ufw allow from 192.168.1.1/16 to any port 6000:6005 proto udp\nsudo ufw allow from 192.168.1.1/16 to any port 35000:65535 proto udp\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#run-shairport","title":"Run Shairport","text":"<pre><code>shairport -v -a 'Airplay receiver name' -o alsa-- -d hw:1,1\n</code></pre> <p>Add <code>-v</code> to the above for debugging info, <code>-vv</code> for more debug info and <code>-vvv</code> for even more debug info!</p>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/shairport.html#autostart","title":"Autostart","text":"<p>For automatically start shairport you can use the script that comes with the source. Just copy the script you need to the init.d directory.</p> <pre><code>sudo cp scripts/debian/init.d/shairport /etc/init.d/\n</code></pre>","tags":["os","operating system","linux","tools","shairport"]},{"location":"os/linux/tools/systemd.html","title":"Systemd","text":"","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#list-services","title":"List services","text":"<pre><code>systemctl --type=service\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#status-service","title":"Status service","text":"<pre><code>systemctl status firewalld.service\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#start-stop-service","title":"Start Stop Service","text":"<pre><code>systemctl stop firewalld.service\nsystemctl status firewalld.service\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#add-service","title":"Add Service","text":"<pre><code>cd /etc/systemd/system\nsudo vim jupyterlab.service\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#add-in-vim-file","title":"Add in vim file","text":"<pre><code>[Unit]\nDescription = Jupyterlab service\nAfter = network.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nUser=zas\nExecStart=/home/zas/Documents/jupyterlab_start.bash\n\n[Install]\nWantedBy = multi-user.target\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#start-service-manually","title":"Start Service manually","text":"<pre><code>systemctl start jupyterlab\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/systemd.html#start-service-on-boot","title":"Start Service on boot","text":"<pre><code>systemctl enable jupyterlab\n</code></pre>","tags":["os","operating system","linux","tools","systemd"]},{"location":"os/linux/tools/vim.html","title":"VIM","text":"<p>Vim is a text editor written by Bram Moolenaar and first released publicly in 1991. Based on the vi editor common to Unix-like systems, Vim is designed for use both from a command line interface and as a standalone application in a graphical user interface.</p>","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#cheat-sheet","title":"Cheat Sheet","text":"<p>The Vim Cheat Sheet was done by http://michael.peopleofhonoronly.com/vim/.</p> <p>Figure 1: Vim Cheatsheet</p>","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#swp-files","title":"SWP Files","text":"<p>If working remotely Vim generated swap file. If you're sure that your work is safely storey you can get rid of the swapfiles with the following commands:</p> <pre><code>find . -name \".*.swp\"                # find swap files\nfind . -name \".*.swp\" | xargs rm -f  # find and delete\n</code></pre>","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#commands","title":"Commands","text":"","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#edit-save-quit","title":"Edit &amp; Save &amp; Quit","text":"Command Description <code>:e &lt;filename&gt;</code> Open and edit <code>&lt;filename&gt;</code> <code>:w</code> write file <code>:w &lt;filename&gt;</code> write file in <code>&lt;filename&gt;</code> <code>:wq</code> write and quit <code>:wq &lt;filename&gt;</code> write file in <code>&lt;filename&gt;</code> and quit <code>:wq!</code> write and quit","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#file","title":"File","text":"Command Description <code>:ls</code> list current buffers &amp; files <code>:e</code> Open integrated File explorer <code>:Sex</code> Split windows and open integrated File exxlorer","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#tab","title":"Tab","text":"<p>open multiple files as tabs in vim &gt;7.0</p> <pre><code>vim -p file1 file2 file3\n</code></pre> Command Description <code>:tabe &lt;filepath&gt;</code> tabulator edit (add file as new tab) <code>:tabn</code> tab next <code>:tabp</code> tab previous <code>gt</code> goto next tab <code>gT</code> goto previous tab","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#split-screen","title":"Split screen","text":"Command Description <code>:sb &lt;filepath&gt;</code> Add file in horizontal split <code>:vs &lt;filepath&gt;</code> Add file in vertical split <code>^w &lt;arrow&gt;</code> Jump to screen in the arrow direction","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#search","title":"Search","text":"<p>Regex</p> Command Description <code>&lt;regex&gt;</code> Search for a Regex pattern <code>:noh</code> Stop Highlight search results <code>AltGr + #</code> Search/Highlight current word <code>/word</code> Search word from top to bottom <code>?word</code> Search word from bottom to top <code>/jo[ha]n</code> Search john or joan <code>/\\&lt; the</code> Search the, theatre or then <code>/the\\&gt;</code> Search the or breathe <code>/\\&lt; the\\&gt;</code> Search the <code>/fred\\|joe</code> Search fred or joe <code>/\\&lt;\\d\\d\\d\\d\\&gt;</code> Search exactly 4 digits <code>/^\\n\\{3}</code> Find 3 empty lines <code>:bufdo /searchstr/</code> Search in all open files","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#replace","title":"Replace","text":"Command Description <code>:%s/&lt;regex&gt;/replacer/cmd</code> Replace Regex search with replacer <code>:%s/foo/bar/g</code> replace foo with bar auto <code>:%s/foo/bar/gc</code> replace foo with bar ask confirmation","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#modes","title":"Modes","text":"Command Description <code>i</code> Insert Mode <code>R</code> Replace Mode <code>a</code> Append Mode <code>v</code> Visual Mode <code>V</code> Visual Line Mode <code>Ctrl</code> + <code>v</code> Visual Block Mode <code>u</code> Undo","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#edit","title":"Edit","text":"Command Description <code>d</code> Delete (also used as Cut) <code>D</code> Delete to eol (also used as Cut to eol) <code>y</code> Yank (copy) <code>Y</code> Yank (copy) line <code>&lt;</code> shift left (marked lines) <code>&gt;</code> shift right (marked lines)","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#macro","title":"Macro","text":"Command Description <code>q &lt;macroname&gt;</code> 1 start recording  = lowercase letter <code>to what you want</code> 2 Perform the repetetive editing <code>q</code> 3 Stop recording <code>@ &lt;macroname&gt;</code> 4-1 Play recording  = lowercase letter from before <code>&lt;nbr&gt; @ &lt;macroname&gt;</code> 4-2 Play recording multiple times  = number of times","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#console","title":"Console","text":"<p>Execute a console command. Vim will be halted and the console from within Vim was opened will execute the program and go back to Vim after execution is complete.</p> Command Description <code>:!&lt;console command&gt;</code> Executes command in the console","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vim.html#vimrc","title":".vimrc","text":".vimrc<pre><code>set nocp\n\nset autoindent\nset backspace=2\nset backup\nset hidden\nset history=500\nset hlsearch\nset incsearch\nset listchars=precedes:$,extends:$,tab:&gt;-,trail:.,eol:&lt;\n\" Line numbers \"\nset number\nset printheader=%&lt;%F%=Seite\\ %N\nset ruler\nset shiftwidth=2\nset showcmd\nset showmatch\nset showmode\nset sidescroll=5\nset smartcase\nset smartindent\nset softtabstop=2\nset spelllang=de,en\nset spellsuggest=double,10\nset statusline=%&lt;%f\\ %h%m%r%=%([%{Tlist_Get_Tagname_By_Line()}]%)\\ #%n\\ %-14.(%l/%L,%c%V%)\\ %P\nset tabstop=2\n\" set textwidth=75 \"\nset title\nset wildmenu\nset wildmode=list:longest,full\n\n\" Use Windows Clipboard \"\nif has(\"win32\")\n    set clipboard=unnamed\nendif\n\n\" Syntax Highlighting \"\nsyntax on\n\n\" Filename Detection\nfiletype on\nfiletype indent on\nfiletype plugin on\n\n\" Folding\n\"syntax sync fromstart\nset foldmethod=indent\nset nofoldenable\n</code></pre> <p>Download my .vimrc</p>","tags":["os","operating system","linux","tools","vim"]},{"location":"os/linux/tools/vnc.html","title":"VNC Remote Control","text":"<p>VNC is a protocol to let you connect and view the screen of your remote controlled PC. But this isn't very secure and should not be enabled over the internet but only locally. VNC is often used to hack Linux PC. Therefore you should use VNC over SSH where the data is encrypted and very secure.</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#x11vnc","title":"x11vnc","text":"<p>Perfect fast and configurable solution for almost all Linux distributions. x11vnc does not create an extra display (or X desktop) for remote control. Instead, it uses the existing X11 display shown on the monitor of a Unix-like computer in real time.</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#install","title":"Install","text":"<pre><code>sudo apt-get install x11vnc\n</code></pre>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#config","title":"Config","text":"<p>Generate password file</p> <pre><code>x11vnc -storepasswd\nEnter VNC password:\nVerify VNC password:\n</code></pre> <p>The password in now store by default in the file <code>~/.vnc/passwd</code></p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#start","title":"Start","text":"<pre><code>x11vnc -usepw -forever -display :0 -safer -bg -o /home/user/Documents/log/vnc/x11vnc.log -localhost\n</code></pre> <ul> <li><code>-forever</code> : listen forever to input connections</li> <li><code>-display :&lt;nbr&gt;</code> : Define display to use</li> <li><code>-usepw</code> : uses password file stored in <code>~/.vnc/passwd</code></li> <li><code>-safer</code> : don't allows remote comands <code>-noremote</code> and <code>-novncconnect</code></li> <li><code>-localhost</code> : allows only local connections works only local or over SSH</li> <li><code>-o logfile</code> : defines location of the logfile</li> <li><code>-bg</code> : Launches in Background</li> </ul>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#autostart","title":"Autostart","text":"<p>In Lubuntu with LXDE add the following line to the file: <code>/etc/xdg/lxsession/Lubuntu/autostart</code></p> /etc/xdg/lxsession/Lubuntu/autostart<pre><code>@x11vnc -usepw -forever -display :0 -safer -bg -o /home/user/Documents/log/vnc/x11vnc.log -localhost\n</code></pre> <p>In Lubuntu with lightdm add the following line to the file: <code>/etc/xdg/lxsession/Lubuntu/autostart</code></p> /etc/xdg/lxsession/Lubuntu/autostart<pre><code>@x11vnc -usepw -forever -safer -bg -o /home/user/Documents/log/vnc/x11vnc.log -localhost -auth /var/run/lightdm/root/:0 -display :0\n</code></pre> <p>In Gnome add the following line to the file: <code>/etc/gdm/Init/Default</code></p> /etc/gdm/Init/Default<pre><code>x11vnc -usepw -forever -display :0 -safer -bg -o /home/zas/Documents/log/vnc/x11vnc.log -localhost\n</code></pre>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#vnc-over-ssh","title":"VNC over SSH","text":"","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#linux","title":"Linux","text":"","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#open-ssh-tunnel","title":"Open SSH Tunnel","text":"<pre><code>ssh -N -T -L 5900:localhost:5900 &lt;hostname&gt;\n</code></pre> <p>This forwards our local port <code>5900</code> to the host computers port <code>5900</code>, just replace <code>5900</code> with the port you normally use for VNC connections, i.e if you use display 20 then it would read <code>ssh -N -T -L 5920:&lt;hostname&gt;:5920</code>. The middle part is the hostname hostmachine, replace with the correct number for your network. The <code>-L</code> is the local port forward option while the <code>-N</code> option prevents a shell from opening so we cannot execute commands and the <code>-T</code> option disables pseudo-tty allocation.</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#launch-vnc-viewer-in-linux","title":"Launch VNC Viewer in Linux","text":"<pre><code>vncviewer localhost:5900\n</code></pre>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#windows","title":"Windows","text":"<p>To connect to VNC over SSH in Linux you need a VNC Viewer like UltraVNC and Putty</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#putty-config","title":"Putty Config","text":"<p>see: Putty-VNC</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#start-vnc","title":"Start VNC","text":"<ul> <li>Start Putty with the above configuration</li> <li>Enter password</li> <li>Open a VNC Viewer</li> <li>Connect to <code>127.0.0.1</code></li> </ul>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#troubleshooting","title":"Troubleshooting","text":"<p>If you have problems connecting to the remote machine, and if the connection gets rejected then you should quit your local VNC Server. Because you are connecting via localhost he might respond to your request.</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#macintosh","title":"Macintosh","text":"","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#install-tools","title":"Install Tools","text":"<p>Tightvnc is a great vncviewer and is installable through Homebrew, as well as Putty:</p> <pre><code>sudo port install tightvnc\nsudo port install putty\n</code></pre>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#set-up-ssh-tunnel","title":"Set up SSH Tunnel","text":"<p>Terminal</p> <pre><code>ssh -p &lt;portnumber&gt; -L 5900:127.0.0.1:5900 &lt;hostname&gt;\n</code></pre> <p>Putty</p> <p>see: Putty-VNC</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#launch-vnc-viewer-in-mac","title":"Launch VNC Viewer in Mac","text":"<pre><code>vncviewer localhost:5900\n</code></pre> <p>or use the program \"Chicken Of VNC\"</p>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vnc.html#putty","title":"Putty","text":"<ul> <li>Create a new putty session</li> <li>goto Session -&gt; Add hostname and port</li> <li>goto SSH -&gt; Enable compression</li> <li>goto SSH -&gt; Tunnels -&gt; Add tunnel</li> <li>Source Port: <code>5900</code></li> <li>Destination : <code>127.0.0.1:5900</code></li> <li>Click Add</li> </ul>","tags":["os","operating system","linux","tools","vnc"]},{"location":"os/linux/tools/vpn.html","title":"VPN Virtual Private Network","text":"<p>A virtual private network (VPN) extends a private network across a public network, such as the Internet. It enables a computer to send and receive data across shared or public networks as if it were directly connected to the private network, while benefiting from the functionality, security and management policies of the private network. This is done by establishing a virtual point-to-point connection through the use of dedicated connections, encryption, or a combination of the two.</p> <p>There exist many different VPN protocols such as PPTP, OpenVPN, L2TP, SSTP. In this section We will set-up and connect a VPN connection using the PPTP protocol.</p>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#vpn-server-outgoing-linux","title":"VPN Server Outgoing (Linux)","text":"","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#install","title":"Install","text":"<pre><code>sudo apt-get install pptpd\n</code></pre>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#config","title":"Config","text":"<p>Add the following lines in your <code>etc/pptpd.conf</code></p> /etc/pptpd.conf<pre><code>localip  192.168.1.5         # IP of your server hosting VPN\nremoteip 192.168.1.234-1.238 # Range of IP to use for connected machines\n</code></pre> <p>Add the following lines to configure <code>pptpd</code> in <code>/etc/ppp/pptpd-options</code></p> /etc/ppp/pptpd-options<pre><code>ms-dns 192.168.1.1        # IP of your DNS Server\nnobsdcomp\nnoipx\nmtu 1490\nmru 1490\n</code></pre> <p>add users to the <code>/etc/ppp/chap-secrets</code> file, you can add as many users as you like</p> /etc/ppp/chap-secrets<pre><code>username * users-password *\n</code></pre>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#start-vpn","title":"Start VPN","text":"<p>Start / Restart the VPN Deamon to activate the config</p> <pre><code>sudo /etc/init.d/pptpd restart\n</code></pre> <p>Tip</p> <p>Note that the connection can only access the server itself and not beyond it. Enable forwarding to avoid this.</p>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#enable-forwarding","title":"Enable Forwarding","text":"<p>This step is optional. It is needed to give the connected machine access beyond the server.</p> <p>By enable forwarding the entire network will be available to the connected machine not just the VPN server itself.</p> <p>Edit the <code>/etc/sysctl.conf</code> and change to following parameter from <code>0</code> to to <code>1</code></p> /etc/sysctl.conf<pre><code>net.ipv4.ip_forward=1\n</code></pre> <p>To active the setting either restart the server or run the command:</p> <pre><code>sudo sysctl -p\n</code></pre>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/tools/vpn.html#vpn-client-incoming-win-7","title":"VPN client Incoming (Win 7)","text":"<p>See the print screens to how to setup the VPN incoming connection on Windows 7.</p> <p>Note</p> <p>If VPN is setup by default to relay all traffic through the VPN connection. To avoid this you need to uncheck.</p> <p>Figure 1: Start VPN setup</p> <p>Figure 2: Configure machine to connect to</p> <p>Figure 3: Configure user credentials</p> <p>Figure 4: Change IPv4 and ipv6 properties</p> <p>Figure 5: Goto advanced properties</p> <p>Figure 6: Uncheck user default gateway</p>","tags":["os","operating system","linux","tools","vpn"]},{"location":"os/linux/ubuntu/index.html","title":"Ubuntu","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/index.html#introduction","title":"Introduction","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/index.html#additional-informations","title":"Additional Informations","text":"<ul> <li>Ubuntu Webpage</li> <li>Ubuntu Download</li> <li>Virtual Box images</li> <li>Additional Tools</li> <li>ZSH<ul> <li>Oh My ZSH</li> </ul> </li> <li>Sublime Text</li> <li>Sublime Merge</li> <li>Krusader</li> <li>Yakuake</li> <li>FSearch</li> <li>Anaconda</li> <li>QT Creator</li> <li>Visual Studio Code</li> <li>Hitachi SDK<ul> <li>Hitachi LiDaR SDK</li> <li>Hitachi LiDaR ROS Driver</li> </ul> </li> <li>ROS Installation</li> </ul>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html","title":"Installation and Config","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#installation","title":"Installation","text":"<p>This installation is based on Ubuntu 18.4 LTS and ROS Melodic Morenia.</p>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#default-tools","title":"Default Tools","text":"<pre><code>sudo apt install git curl vim openssh-server krename rar unrar kget diffutils kate x11vnc kdiff3\necho \"Configure Firewall and Port for ssh\"\nsudo ufw allow ssh\nsudo ufw enable\nsudo ufw status\nsudo service ssh restart\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#zsh","title":"ZSH","text":"<pre><code>sudo apt install zsh\nsudo chsh -s /bin/zsh $USER\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#oh-my-zsh","title":"Oh My ZSH","text":"<pre><code>cd ~/Downloads\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#sublimetext-3","title":"SublimeText 3","text":"<pre><code>wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\nsudo apt install apt-transport-https\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update\nsudo apt install sublime-text\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#sublimemerge","title":"SublimeMerge","text":"<pre><code>wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\nsudo apt install apt-transport-https\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update\nsudo apt install sublime-merge\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#krusader","title":"Krusader","text":"<pre><code>sudo apt install krusader\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#yakuake","title":"Yakuake","text":"<pre><code>sudo apt install yakuake\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#fsearch","title":"FSearch","text":"<pre><code>sudo add-apt-repository ppa:christian-boxdoerfer/fsearch-daily\nsudo apt update\nsudo apt install fsearch-trunk\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#anaconda","title":"Anaconda","text":"<pre><code>cd ~/Downloads\nsudo apt install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6\nwget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh\nbash Anaconda3-2020.02-Linux-x86_64.sh\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#qt-creator","title":"QT-Creator","text":"<pre><code>cd ~/Downloads\nwget http://download.qt.io/official_releases/qt/5.13/5.13.1/qt-opensource-linux-x64-5.13.1.run\nchmod +x qt-opensource-linux-x64-5.13.1.run\n./qt-opensource-linux-x64-5.13.1.run\nsudo apt install build-essential\nsudo apt install libfontconfig1\nsudo apt install mesa-common-dev\nsudo apt install libglu1-mesa-dev -y\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#visual-studio-code","title":"Visual Studio Code","text":"<pre><code>curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg\nsudo install -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/\nsudo sh -c 'echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main\" &gt; /etc/apt/sources.list.d/vscode.list'\n\nsudo apt install apt-transport-https\nsudo apt update\nsudo apt install code # or code-insiders\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#configuration","title":"Configuration","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#oh-my-zsh-config","title":"Oh My ZSH Config","text":"~/.zshrc additions<pre><code>echo \"#------------------------------------------------------------------------------\" &gt;&gt; ~/.zshrc\necho \"# Program in Path\" &gt;&gt; ~/.zshrc\necho \"#\" &gt;&gt; ~/.zshrc\necho \"#------------------------------------------------------------------------------\" &gt;&gt; ~/.zshrc\necho \"# Special zsh config\" &gt;&gt; ~/.zshrc\necho \"# Show hidden files and folders\" &gt;&gt; ~/.zshrc\necho \"setopt globdots\" &gt;&gt; ~/.zshrc\necho \"#------------------------------------------------------------------------------\" &gt;&gt; ~/.zshrc\necho \"# Goto Alias\" &gt;&gt; ~/.zshrc\necho \"# Common home locations\" &gt;&gt; ~/.zshrc\necho \"alias home='cd ~'\" &gt;&gt; ~/.zshrc\necho \"alias root='cd /'\" &gt;&gt; ~/.zshrc\necho \"alias dtop='cd ~/Desktop'\" &gt;&gt; ~/.zshrc\necho \"alias dwld='cd ~/Downloads'\" &gt;&gt; ~/.zshrc\necho \"alias docs='cd ~/Documents'\" &gt;&gt; ~/.zshrc\necho \"alias www='cd /var/www/html'\" &gt;&gt; ~/.zshrc\necho \"alias workspace='cd ~/Workspace'\" &gt;&gt; ~/.zshrc\necho \"alias aptlock-rm='sudo rm /var/lib/dpkg/lock &amp;&amp; sudo rm /var/lib/dpkg/lock-frontend'\" &gt;&gt; ~/.zshrc\necho \"# Common commands\" &gt;&gt; ~/.zshrc\necho \"alias o=open\" &gt;&gt; ~/.zshrc\necho \"alias ..='cd ..'\" &gt;&gt; ~/.zshrc\necho \"alias ...='cd ..; cd ..'\" &gt;&gt; ~/.zshrc\necho \"alias ....='cd ..; cd ..; cd ..'\" &gt;&gt; ~/.zshrc\necho \"# Common command shortcuts\" &gt;&gt; ~/.zshrc\necho \"alias cls=clear\" &gt;&gt; ~/.zshrc\necho \"alias ll='ls -la'\" &gt;&gt; ~/.zshrc\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#sublimetext-3-config","title":"SublimeText 3 Config","text":"<pre><code>echo \"# Sublime Text\" &gt;&gt; ~/.zshrc\necho \"export PATH=$PATH:/opt/sublime_text\" &gt;&gt; ~/.zshrc\n\necho \"# Sublime Text\" &gt;&gt; ~/.bashrc\necho \"export PATH=$PATH:/opt/sublime_text\" &gt;&gt; ~/.bashrc\n\ncp ./../config/sublimetext/Package Control.sublime-settings ~/.config/sublime-text-3/Packages/User/\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#sublimemerge-config","title":"SublimeMerge Config","text":"<pre><code>echo \"#Sublime Merge\" &gt;&gt; ~/.zshrc\necho \"export PATH=$PATH:/opt/sublime_merge\" &gt;&gt; ~/.zshrc\n\necho \"#Sublime Merge\" &gt;&gt; ~/.bashrc\necho \"export PATH=$PATH:/opt/sublime_merge\" &gt;&gt; ~/.bashrc\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#how-to-use-ubuntu-tools","title":"How To Use Ubuntu Tools","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#ssh","title":"SSH","text":"","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#ssh-connection-without-password","title":"SSH connection without password","text":"<pre><code># On your local machine generate a RSA Key pair\nssh-keygen -t rsa\n\n# Copy your local public key to the remote machine safely\nssh-copy-id -i ~/.ssh/id_rsa.pub \"&lt;user&gt;@&lt;remoteip&gt; -p &lt;portnumber&gt;\"\n# OR\nscp id_rsa.pub &lt;user&gt;@&lt;remoteip&gt;:~/.ssh/machine.pub\n\n# Append key to file authorized_keys\ncat ~/.ssh/*.pub | ssh &lt;user&gt;@&lt;remoteip&gt; -p &lt;portnumber&gt; 'umask 077; cat &gt;&gt;.ssh/authorized_keys'\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#open-ssh-connection","title":"Open SSH Connection","text":"<pre><code># Just ssh\nssh &lt;user&gt;@&lt;remoteip&gt;\n\n# ssh with portforwarding\nssh -L &lt;local-port&gt;:localhost:&lt;remote-port&gt; &lt;user&gt;@&lt;remoteip&gt;\n# ssh with vnc port forwarding\nssh -L 5900:localhost:5900 spl@&lt;remoteip&gt;\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#vnc","title":"VNC","text":"<p>On remote PC x11vnc needs to be installed and launched. Prefereable add to startup commands</p>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#create-password","title":"Create password","text":"<p>Only needed if not only localhost used.</p> <pre><code>x11vnc -storepasswd\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#launch-x11vnc","title":"Launch x11vnc","text":"<pre><code># Command with all options\nx11vnc -usepw -forever -display :0 -safer -bg -o ~/Documents/log/vnc/x11vnc.log -localhost\n\n# Minimal command but still restricted to localhost\nx11vnc -forever -display :0 -safer -bg -localhost\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/install.html#qview","title":"QView","text":"<p>Lightweight Image Viewer</p> <pre><code>sudo add-apt-repository ppa:jurplel/qview\nsudo apt update\nsudo apt install qview\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/problems.html","title":"Problems","text":"<p>How to fix problems I've encountered.</p>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/problems.html#perl-locale-warning","title":"Perl locale warning","text":"perl locale warning<pre><code>perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n        LANGUAGE = \"\",\n        LC_ALL = (unset),\n        LC_TIME = \"de_CH.UTF-8\",\n        LC_MONETARY = \"de_CH.UTF-8\",\n        LC_COLLATE = \"de_CH.UTF-8\",\n        LC_ADDRESS = \"en_US.UTF-8\",\n        LC_TELEPHONE = \"en_US.UTF-8\",\n        LC_NAME = \"en_US.UTF-8\",\n        LC_MEASUREMENT = \"de_CH.UTF-8\",\n        LC_IDENTIFICATION = \"en_US.UTF-8\",\n        LC_NUMERIC = \"de_CH.UTF-8\",\n        LC_PAPER = \"en_US.UTF-8\",\n        LANG = \"C\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n</code></pre> Solution<pre><code>sudo locale-gen en_US.UTF-8\nsudo locale-gen de_CH.UTF-8\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/linux/ubuntu/problems.html#bracketed-paste-mode","title":"bracketed paste mode","text":"<p>bracketed paste mode enabled addes characters on paste</p> added characters onpaste in terminal<pre><code>^[[200~...~\n</code></pre> disable bracketed mode<pre><code># in Terminal temporarily\nbind 'set enable-bracketed-paste off'\n\n# permanentely\necho 'Disable bracketed mode' &gt;&gt; /etc/inputrc\necho 'set enable-bracketed-paste off' &gt;&gt; /etc/inputrc\n\n# or add this in the bashrc?\necho 'bracketed mode fix' &gt;&gt; ~/.bashrc\necho 'printf \"\\e[?2004l\"' &gt;&gt; ~/.bashrc\necho 'bracketed mode fix' &gt;&gt; ~/.zshrc\necho 'printf \"\\e[?2004l\"' &gt;&gt; ~/.zshrc\n</code></pre>","tags":["os","operating system","linux","ubuntu"]},{"location":"os/mac/index.html","title":"MacOs","text":"","tags":["os","operating system","macos"]},{"location":"os/mac/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","macos"]},{"location":"os/mac/geektool.html","title":"Geektool","text":"<p>Geektool is a wonderful program to display information on your desktop. Here you can see my \"Control Center\".</p> <p></p>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#date-time","title":"Date &amp; Time","text":"<p>All command geeklets</p> <pre><code>date +%d               # Day number\ndate +%B               # Month\ndate +%A               # Weekday\n</code></pre> <pre><code>date \"+%H\"             # Hour\ndate \"+%M\"             # Minutes\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#location-weather","title":"Location &amp; Weather","text":"","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#actual-weather","title":"Actual Weather","text":"<p>All command geeklets Get the weather of a certain location from Yahoo weather.</p> <pre><code>WEATHER=`curl --silent \"http://weather.yahooapis.com/forecastrss?p=SZXX0035&amp;u=c\" | grep -E '(Current Conditions:|C&lt;BR)' | tail -n1 | sed -e 's/&lt;BR \\/&gt;//' -e 's/ C$/\u00b0C/'`\necho \"Sion \" $WEATHER\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#moonphase","title":"Moonphase","text":"<p>Get the image for the actual Moonphase from lexiyoga. Directly the image will be fetch, therefore a image geeklet is needed.</p> <pre><code>http://www.lexiyoga.com/images/moon/moon16.png\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#system-information","title":"System information","text":"","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#uptime","title":"Uptime","text":"<pre><code>uptime | awk '{sub(/[0-9]|user\\,|users\\,|load/, \"\", $6); sub(/mins,|min,/, \"min\", $6); sub(/user\\,|users\\,/, \"\", $5); sub(\",\", \"min\", $5); sub(\":\", \"h \", $5); sub(/[0-9]/, \"\", $4); sub(/day,/, \" day \", $4); sub(/days,/, \" days \", $4); sub(/mins,|min,/, \"min\", $4); sub(\"hrs,\", \"h\", $4); sub(\":\", \"h \", $3); sub(\",\", \"min\", $3); print \"Uptime: \" $3$4$5$6}'\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#networking","title":"Networking","text":"<pre><code># Internal Wireless IP\nmyen0=`ifconfig en0 | grep \"inet \" | grep -v 127.0.0.1 | awk '{print $2}'`\nif [ \"$myen0\" != \"\" ]\nthen\necho \"Wireless: $myen0\"\nelse\necho \"Wireless INACTIVE\"\nfi\n\n# Internal Ethernet IP\nmyen1=`ifconfig en1 | grep \"inet \" | grep -v 127.0.0.1 | awk '{print $2}'`\nif [ \"$myen1\" != \"\" ]\nthen\necho \"Ethernet: $myen1\"\nelse\necho \"Ethernet INACTIVE\"\nfi\n\n# External IP\nwip=`curl --silent http://checkip.dyndns.org | awk '{print $6}' | cut -f 1 -d \"&lt;\"`\necho \"External IP: $wip\"\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#battery-status","title":"Battery status","text":"<pre><code>BATTERY=`ioreg -l | awk '$3~/Capacity/{c[$3]=$5}END{OFMT=\"%.f %%\";max=c[\"\"MaxCapacity\"\"];print(max&gt;0?100*c[\"\"CurrentCapacity\"\"]/max:\"?\")}'`\necho $BATTERY '\\n\\n\\n'\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#hdd-usage","title":"HDD usage","text":"<pre><code>DISK=`df -hl | grep 'disk0s2' | awk '{print $5 \"  (\"$4\"/\"$2\")\"}'`\necho $DISK '\\n\\n\\n'\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#ram-usage","title":"Ram usage","text":"<pre><code>MEM=`top -l 1 | grep PhysMem: | awk '{print int($2/($2+$6)*100)}'`\necho $MEM'%\\n\\n\\n'\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#cpu-load","title":"CPU load","text":"<pre><code>SYSTEM=`top -l3 | grep \"CPU usage\" | tail -1 | awk '{print int(($3+$5))}' | sed 's/\\%//'`\necho $SYSTEM '%\\n\\n\\n'\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/geektool.html#process-manager","title":"Process manager","text":"<pre><code>ps -amcwwwxo \"command %mem %cpu\" | grep -v grep | head -13\n</code></pre>","tags":["os","operating system","macos","geektool"]},{"location":"os/mac/homebrew.html","title":"Homebrew","text":"<p>https://brew.sh</p>","tags":["os","operating system","macos","brew","homwbrew"]},{"location":"os/mac/homebrew.html#installation","title":"Installation","text":"<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>","tags":["os","operating system","macos","brew","homwbrew"]},{"location":"os/mac/homebrew.html#commands","title":"Commands","text":"<pre><code># update Homebrew\nbrew update\n\n# install application\nbrew install --cask &lt;graphical_programname&gt; # gui application\nbrew install &lt;programname&gt;                  # cmdline application\n\n# update application\nbrew upgrade &lt;programname&gt;\n\n# uninstall application\nbrew uninstall &lt;programname&gt;\n\n# search application\nbrew search &lt;programname&gt;\n\n# info about application\nbrew info &lt;programname&gt;\n</code></pre>","tags":["os","operating system","macos","brew","homwbrew"]},{"location":"os/mac/homebrew.html#useful-applications","title":"Useful Applications","text":"<ul> <li>Krusader</li> <li>kdiff3</li> <li>md5deep</li> <li>unrar</li> <li>pzip</li> <li>putty</li> <li>tightvnc</li> <li>...</li> </ul>","tags":["os","operating system","macos","brew","homwbrew"]},{"location":"os/mac/keyboard.html","title":"Keyboard Layout","text":"<p>All Mac have a keyboard were many symbols are missing. In programming this is very unpractical, so either you know on the tip of your head where which symbol is; or you look at the layout below ;-).</p> <p>The layout is accordingly to the Mac Retina Book Swiss keyboard.</p> <p>Figure 1: Mac Keyboard Swiss Layout</p>","tags":["os","operating system","macos"]},{"location":"os/mac/commandline/index.html","title":"Commandline","text":"","tags":["os","operating system","macos","commandline"]},{"location":"os/mac/commandline/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","macos","commandline"]},{"location":"os/mac/commandline/cheatsheet.html","title":"Cheatsheet","text":"<p>See also the dedicated Linux Commandline page</p>","tags":["os","operating system","macos","commandline","cheatsheet"]},{"location":"os/mac/commandline/cheatsheet.html#general","title":"General","text":"general<pre><code># open documents\nopen &lt;filename&gt;   # open any document in the default application\n# Quicklook documents\nqlmanage -p ~/Path/to/file.ext\n\n# updates\nsoftwareupdate -i -a\n\n# kill\nkillall Dock      # kill all dock applications (launchpad, desktop etc.)\nkillall Finder    # kill all finder application\n\n# Clean RAM Memory\npurge\n\n# paste data from Clipboard\npbpaste\n\n# Hide/Unhide file or folder\nchflags hidden\nchflags nohidden\n</code></pre>","tags":["os","operating system","macos","commandline","cheatsheet"]},{"location":"os/mac/commandline/cheatsheet.html#networkdrives","title":"Networkdrives","text":"netdrives<pre><code># Connect netdrive\n# Two methods mount in the default /Volumes/$share location\nopen \"smb://$user:$pass@$server/$share\"\nosascript -e \"mount volume \"smb://$user:$pass@$server/$share\"\"\n\n# Disconnect netdrive\ndiskutil unmount /Volumes/$share\numount /Volumes/$share\n</code></pre>","tags":["os","operating system","macos","commandline","cheatsheet"]},{"location":"os/unraid/index.html","title":"Unraid","text":"<p>Unraid OS allows sophisticated media aficionados, gamers, and other intensive data-users to have ultimate control over their data, media, applications, and desktops, using just about any combination of hardware.</p> <ul> <li>Unraid Documentation</li> </ul>","tags":["os","operating system","unraid"]},{"location":"os/unraid/index.html#tips-and-tricks","title":"Tips and Tricks","text":"","tags":["os","operating system","unraid"]},{"location":"os/unraid/index.html#custom-vm-icons","title":"Custom VM Icons","text":"<p>Custom VM icon images can be stored at</p> <pre><code>/usr/local/emhttp/plugins/dynamix.vm.manager/templates/images\n</code></pre>","tags":["os","operating system","unraid"]},{"location":"os/unraid/index.html#notifications-for-userscripts","title":"Notifications for userscripts","text":"<p>As configured will sent emails, telegram messages or webGUI notifications.</p> <pre><code>/usr/local/emhttp/webGui/scripts/notify -i [normal|warning|alert] -s \"&lt;notification&gt;\" -d \"&lt;description&gt;\"\n</code></pre>","tags":["os","operating system","unraid"]},{"location":"os/unraid/index.html#log-file","title":"Log file","text":"<p>To check the logfile size try find problem with the followign two commands:width</p> <pre><code>df -h /var/log\ndu -sm /var/log/*\n</code></pre>","tags":["os","operating system","unraid"]},{"location":"os/win/index.html","title":"Windows","text":"","tags":["os","operating system","windows"]},{"location":"os/win/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["os","operating system","windows"]},{"location":"os/win/cmdline.html","title":"Commandline","text":"<p>Sample scripts can be found in the config repo</p>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#get-win-license-key","title":"Get Win License Key","text":"<pre><code>wmic path softwarelicensingservice get OA3xOriginalProductKey\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#hyper-v","title":"Hyper-V","text":"<pre><code>:: enable\nbcdedit /set hypervisorlaunchtype auto\n\n:: disable\nbcdedit /set hypervisorlaunchtype off\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#bat-script","title":"<code>Bat</code> Script","text":"","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#start-end-script","title":"Start - End Script","text":"skeleton.bat<pre><code>:start\n  @echo off\n  setlocal\n  set cmd_location=\"%~dp0\"\n  pushd %cmd_location%\n  set SEPARATOR=\"--------------------------------------------------------------------------------\"\n  set INDENT=\"  \"\n\n  echo %SEPARATOR%\n  echo \"-- %~nx0 Started!\"\n  echo.\n\n:script\n\n:end\n  echo.\n  echo \"-- %~nx0 Finished!\"\n  echo %SEPARATOR%\n  popd\n  endlocal\n  goto:eof\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#run-other-script","title":"Run other script","text":"delete.bat<pre><code>:: Runs scripts and comes back\ncall \"./script.bat\"\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#delete","title":"Delete","text":"delete.bat<pre><code>set base_directory=\"%cmd_location:\"=%..\"\n\necho \"Delete files in: %base_directory%\"\ndel /f /s /a %base_directory%\\*cache.dat\n\necho \"Delete intermediate directories in: %base_directory%\"\nfor /d /r \"%base_directory:\"=%\" %%a in (.xrf\\) do if exist \"%%a\" rmdir /s /q \"%%a\"\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#directory","title":"Directory","text":"dir.bat<pre><code>echo Delete directory %dir%\nif exist %dir% (\n  echo    %dir% found\n) else (\n  echo    %dir% not found!\n)\n\necho Create %dir%  if not exist\nif not exist \"%dir%\" (\n  mkdir \"%dir:\"=%\"\n)\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#remove-trailing","title":"Remove trailing <code>\\</code>","text":"string_manipulation.bat<pre><code>if %cmd_location:~-1%==\\ set design_directory=%design_directory:~0,-1%\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#commandline-arguments","title":"Commandline Arguments","text":"cmnd_args.bat<pre><code>::------------------------------------------------------------------------------\n:: Parse command line options\n::\n:parse\nset usage1=\"Usage: hdl_designer.bat [-v] [-h]\"\nset usage2=\"                        [-n designName]\"\nset usage3=\"                        [-d designDirectory]\"\n\necho \"Search Commandline Parameters\"\n:parseloop\nif not \"%1\"==\"\" (\n    if \"%1\"==\"-v\" (\n        set VERBOSE=1\n        echo \"%INDENT:\"=%verbose enabled\"\n        shift\n    )\n    if \"%1\"==\"-h\" (\n        goto :HELP\n        shift\n    )\n    if \"%1\"==\"-n\" (\n        set design_name=%2\n        echo \"%INDENT:\"=%design_name=!design_name:\"=! \"\n        shift &amp; shift\n    )\n    if \"%1\"==\"-d\" (\n        set design_directory=%2\n        echo \"%INDENT:\"=%design_directory=!design_directory:\"=! \"\n        shift &amp; shift\n    )\n    goto :parseloop\n)\necho.\n\n::------------------------------------------------------------------------------\n:: Helper Functions\n::\n:HELP\n  echo.\n  echo %usage1:\"=%\n  echo %usage2:\"=%\n  echo %usage3:\"=%\n  echo.&amp;pause&amp;goto:eof\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/cmdline.html#forcing-ownership","title":"Forcing ownership","text":"<p>German Version</p> force_ownership_de.bat<pre><code>SET DIRECTORY_NAME=\"C:\\Folder\\You\\Want\\Rights\\To\"\nTAKEOWN /f %DIRECTORY_NAME% /r /d J\nICACLS %DIRECTORY_NAME% /grant administratoren:F /t\npause\n</code></pre> <p>English Version</p> force_ownership_en.bat<pre><code>SET DIRECTORY_NAME=\"C:\\Folder\\You\\Want\\Rights\\To\"\nTAKEOWN /f %DIRECTORY_NAME% /r /d Y\nICACLS %DIRECTORY_NAME% /grant administrators:F /t\npause\n</code></pre> <p>General</p> force_ownership.bat<pre><code>pushd .\ntakeown /f * /r /a\nicacls *.* /grant:r everyone:f /t /c /q\npopd\n</code></pre>","tags":["os","operating system","windows","commandline"]},{"location":"os/win/firewall.html","title":"Firewall","text":"","tags":["os","operating system","windows","firewall"]},{"location":"os/win/firewall.html#ssh-over-ftp-port","title":"SSH Over FTP Port","text":"<p>Ff FTP Port is used for SSH connections disable <code>Statefulftp</code> in the Windows firewall</p> <pre><code>netsh advfirewall set global statefulftp disable\n</code></pre>","tags":["os","operating system","windows","firewall"]},{"location":"os/win/group_policies.html","title":"Group Policies","text":"","tags":["os","operating system","windows","registry"]},{"location":"os/win/group_policies.html#modify-policies","title":"Modify Policies","text":"<p>Search for <code>Edit group policy</code></p>","tags":["os","operating system","windows","registry"]},{"location":"os/win/group_policies.html#see-all-modified-group-policies","title":"See all modified Group Policies","text":"<p>Search for <code>rsop.msc</code></p>","tags":["os","operating system","windows","registry"]},{"location":"os/win/power.html","title":"Power","text":"","tags":["os","operating system","windows","power"]},{"location":"os/win/power.html#powercfg","title":"<code>powercfg</code>","text":"<pre><code>:: List available powerstates\npowercfg /devicequery /?\n\n:: Lists devices be able to wake up the pc from sleep\npowercfg /devicequery wake_programmable\n\n:: Generates energy report\npowercfg energy\n\n:: Lists all available powerstates\npowercfg -a\n\n:: Last wakeup device\npowercfg -lastwake\n\n:: Turn of Hibernation (in admin console)\npowercfg -H off\n</code></pre>","tags":["os","operating system","windows","power"]},{"location":"os/win/power.html#dumppo","title":"<code>dumppo</code>","text":"<p>Basically there are 2 sleep states in Windows, S1 and S3. Most of the time all you have to do is set your BIOS sleep mode to \"S3 only\" and it should always use S3 sleep state. However you could also configure Windows to force S3 sleep state to ensure that your system saves maximum power. While I don't have exact figures because each PC is different, I can tell you that S1 sleep state only saves a couple of watts of power but S3 on the other hand only uses a couple watts of power and thus saves quite alot more.</p> <p>Enter <code>dumppo admin</code> in a console to show the current state</p> <pre><code>dumppo admin\n</code></pre> <pre><code>dumppo admin\n Admin policy overrides\n Min sleep state......: S1\n Max sleep state......: S4 - hibernate\n Min video timeout....: 0\n Max video timeout....: -1\n Min spindown timeout.: 0\n Max spindown timeout.: -1\n</code></pre> <p>Notice the minimum sleep state is S1 by default. Type the following command and press enter, <code>dumppo admin minsleep=S3</code>. You should now get the following information on the screen.</p> <pre><code>dumppo admin minsleep=S3\n</code></pre> <pre><code>dumppo admin minsleep=S3\n Admin policy overrides\n Min sleep state......: S3\n Max sleep state......: S4 - hibernate\n Min video timeout....: 0\n Max video timeout....: -1\n Min spindown timeout.: 0\n Max spindown timeout.: -1\n</code></pre>","tags":["os","operating system","windows","power"]},{"location":"os/win/registry_location.html","title":"Registry","text":"","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#login","title":"Login","text":"<pre><code>Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\n</code></pre> <p>For Autologin use the following entries</p> <pre><code>AutoAdminLogon = \"1\"\nDefaultUserName = &lt;Username&gt;\nDefaultPassword = &lt;Password&gt;\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#datetime","title":"DateTime","text":"<pre><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\DateTime\\Servers\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#shell-overlay-icons","title":"Shell Overlay Icons","text":"<pre><code>Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#context-menu","title":"Context Menu","text":"<pre><code>Computer\\HKEY_CLASSES_ROOT\\*\\shellex\\ContextMenuHandlers\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#new-context-menu","title":"New Context Menu","text":"<pre><code>Computer\\HKEY_CLASSES_ROOT\\\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#sap-shortcut-password","title":"SAP Shortcut Password","text":"<pre><code>Computer\\HKEY_CURRENT_USER\\Software\\SAP\\SAPShortcut\\Security\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#powerpoint-options","title":"PowerPoint Options","text":"<pre><code>Computer\\HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Options\n  :: ExportBitmapResolution =&gt; DWORD 32bit =&gt; 300 (ppi)\n  :: AutomaticPicturesCompressionDefault =&gt; DWORD =&gt; 0\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#power-settings","title":"Power Settings","text":"<pre><code>Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Power\n  :: HibernateEnabledDefault = 0\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/registry_location.html#taskbar-transparency","title":"Taskbar Transparency","text":"<pre><code>Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\n  :: UseOLEDTaskbarTransparency =&gt; DWORD 32bit =&gt; 1\n</code></pre>","tags":["os","operating system","windows","registry"]},{"location":"os/win/wsl.html","title":"WSL","text":"<p>WSL means Windows Subsystem for Linux. There are two version available, this page is dedicated to <code>wsl2</code>.</p> <p>Once wsl is installed new Linux distributions can be installed on the Windows Store.</p> <p></p> <p>In addition docker for windows also runs on <code>wsl2</code> see more informations Docker Page.</p>","tags":["os","operating system","windows","wsl"]},{"location":"os/win/wsl.html#additional-information","title":"Additional Information","text":"<ul> <li>https://docs.microsoft.com/en-us/windows/wsl/</li> </ul>","tags":["os","operating system","windows","wsl"]},{"location":"os/win/wsl.html#commands","title":"Commands","text":"<pre><code># shows images available on wsl including version\nwsl -l -v\n\n# change wsl image to version 2\nwsl --set-version &lt;distro-name&gt; 2\n\n# set all new images to wsl version 2\nwsl --set-default-version 2\n\n# start linux shell\nwsl\n\n# start specific distributions\nwsl --distribution Ubuntu-20.04\n</code></pre>","tags":["os","operating system","windows","wsl"]},{"location":"os/win/wsl.html#cmder","title":"Cmder","text":"<p>wsl can be easily integrated into cmder.</p> <p>Settings Startup Tasks</p> <p>Task for open wsl shell</p> <pre><code>wsl -cur_console:pm:/mnt\n</code></pre> <p>Task for open specific distribution</p> <pre><code>wsl --distribution Ubuntu-20.04 -cur_console:pm:/mnt\n</code></pre>","tags":["os","operating system","windows","wsl"]},{"location":"psychology/index.html","title":"Psychology","text":"<p>My take on various psychological concepts and theories, such as communication, management, leadership and decision-making.</p> <p>The information about psychology is based on my personal experiences, readings, and observations. I am not a psychologist, but I find the field of psychology fascinating and believe that understanding human behavior and thought processes can help us navigate life more effectively. A list of curated books which are the basis of these following pages can be found here.</p>","tags":["psychology"]},{"location":"psychology/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["psychology"]},{"location":"psychology/communication.html","title":"Communication","text":"","tags":["psychology","communication"]},{"location":"psychology/communication.html#supercommunicators","title":"Supercommunicators","text":"<p>My take and some ideas from the book Supercommunicators by Charles Duhigg.</p>","tags":["psychology","communication"]},{"location":"psychology/communication.html#summary","title":"Summary","text":"<ol> <li>The Importance of Connection in Communication: The book emphasizes that effective communication is fundamentally about connection. Supercommunicators understand how to create and maintain this connection through various types of conversations.</li> <li>Three Types of Conversations:<ul> <li>What\u2019s This Really About?: This type of conversation focuses on decision-making and understanding the practical aspects of a discussion.</li> <li>How Do We Feel?: Emotional conversations are centered around expressing and understanding feelings.</li> <li>Who Are We?: Social conversations revolve around identity, relationships, and how we see ourselves and others.</li> </ul> </li> <li>The Matching Principle: Effective communication requires recognizing the type of conversation occurring and matching your communication style to it. This involves aligning with the emotional tone, decision-making focus, or social dynamics of the conversation.</li> <li>Neural Entrainment: The book discusses how successful communication often involves neural synchronization, where people\u2019s brains and bodies align during meaningful conversations, leading to better understanding and connection.</li> <li>The Role of High Centrality Participants: These are individuals who facilitate group conversations by asking questions, adapting to others\u2019 moods, and ensuring everyone is heard. They are pivotal in creating group alignment and making everyone feel included.</li> <li>Communication as a Skill: The book argues that anyone can learn to be a supercommunicator. It\u2019s a set of skills that can be developed through practice, focusing on how to listen, ask the right questions, and align with others\u2019 communication styles.</li> </ol>","tags":["psychology","communication"]},{"location":"psychology/communication.html#the-four-rules-for-a-meaningful-conversation","title":"The Four Rules for a Meaningful Conversation:","text":"<ol> <li>Understand the Type of Conversation:<ul> <li>Identify the Conversation Type: Before you engage in any conversation, take a moment to understand whether it\u2019s a practical, emotional, or social conversation. This will help you tailor your communication approach appropriately.</li> <li>Match the Conversation Style: Align your communication style to match the type of conversation. If it\u2019s a decision-making discussion, focus on practical aspects; if it\u2019s emotional, be empathetic and responsive to feelings.</li> </ul> </li> <li>Ask Questions and Listen Actively:<ul> <li>Ask More Questions: Supercommunicators ask a lot of questions to delve deeper into the other person\u2019s thoughts and feelings. This not only shows interest but also helps in understanding the conversation better.</li> <li>Listen for Clues: Pay close attention to what is said, how it\u2019s said, and what remains unsaid. Active listening involves picking up on subtle cues that indicate the other person\u2019s needs or emotions.</li> </ul> </li> <li>Be Open and Vulnerable:<ul> <li>Share Your Own Perspective: Don\u2019t just listen\u2014share your own feelings, experiences, and vulnerabilities. This openness encourages others to do the same, leading to a more authentic and meaningful connection.</li> <li>Reciprocate Emotional Expression: When someone shares something personal, respond with your own experiences or emotions. This helps in building trust and deepening the conversation.</li> </ul> </li> <li>Focus on Creating a Learning Conversation:<ul> <li>Align Goals: Clarify what you want to achieve from the conversation and what the other person might want. This helps in steering the discussion towards a common understanding or agreement.</li> <li>Encourage Mutual Understanding: Aim to learn from the conversation, not just to express your own viewpoint. Encourage the other person to share their perspective, and be open to adjusting your own based on what you learn.</li> </ul> </li> </ol>","tags":["psychology","communication"]},{"location":"psychology/communication.html#some-tips","title":"Some Tips","text":"<ul> <li>Share your goals and intentions of the conversation and ask what others are seeking</li> <li>Ask questions to trigger emotional responses and self reflection<ul> <li>Why did you do this?</li> <li>What was your idea behind this action?</li> </ul> </li> <li>Ask the other how they feel about a something.</li> <li>Listen and repeat respectively summarize in own words until everyone agrees to the meaning.</li> <li>Try to find a common ground, an argument that both parties can agree on.</li> <li>Soften your own statements</li> <li>Find a common identity or goal to connect with the other person. It helps to avoid stereotypes and prejudices. and to feel closer to the other person.</li> </ul>","tags":["psychology","communication"]},{"location":"psychology/communication.html#talking-to-strangers","title":"Talking to strangers","text":"<p>Malcolm Gladwell\u2019s Talking to Strangers explores how humans interact with unfamiliar people and the assumptions we make about each other. The book delves into why these assumptions often lead to misunderstandings, and how they can have serious consequences in everyday life and on a societal scale.</p>","tags":["psychology","communication"]},{"location":"psychology/communication.html#main-concepts","title":"Main Concepts","text":"<ol> <li>Default to Truth -    People have an inherent tendency to believe others are telling the truth. This \u201cdefault to truth\u201d bias is a fundamental part of human communication, evolved to foster trust and cooperation. While this trait generally serves society well, it can also lead to dangerous misjudgments, especially when dealing with strangers.    It is suggested that, although this bias can cause errors, a world without it would be chaotic and lead to widespread paranoia.</li> <li>Transparency Illusion -    People often assume that others\u2019 emotions and intentions are transparent\u2014what someone shows on the outside reflects what they feel inside. In reality, this assumption is flawed. In real life, unlike in sitcoms (such as Friends), where characters\u2019 emotions are exaggerated and easy to interpret, people are much harder to \u201cread,\u201d and emotional expressions are not always reliable indicators of truth.</li> <li>The Problem of Mismatched Cues -    Some people are skilled liars and can deceive others with confidence, while truthful individuals might appear nervous or suspicious, leading to misunderstandings. In the examples such as the case of Neville Chamberlain and Adolf Hitler, where Chamberlain misread Hitler\u2019s intentions because of Hitler\u2019s apparent honesty and charm.    Outward expressions, like confidence or nervousness, are unreliable cues for determining someone\u2019s honesty or guilt. A more evidence-based approach in assessing others should be taken, focusing on facts rather than perceived transparency or demeanor.</li> </ol>","tags":["psychology","communication"]},{"location":"psychology/communication.html#key-insights","title":"Key Insights:","text":"<ul> <li>Charisma and Deception - Being charismatic and extroverted is not an indicator of truthfulness. Charismatic individuals can often be the most effective liars because they are skilled at manipulating others\u2019 perceptions. In contrast, introverted or nervous people may struggle to convey the truth convincingly, causing others to doubt them unjustly.</li> <li>Complexity of Communication - Gladwell argues that we should be more cautious in our judgments of strangers, as our instincts to rely on transparency and trust are often misleading. Rather than relying on superficial impressions, we should seek out objective facts to make more informed decisions.</li> </ul>","tags":["psychology","communication"]},{"location":"psychology/fastfriendprocedure.html","title":"Fast Friends Procedure","text":"<p>This was developed by psychologist Arthur Aron and his colleagues in 1997. The procedure consists of 36 questions divided into three sets, each set designed to increase the level of vulnerability and intimacy between two people. The questions are meant to be asked in a specific order, with each set building on the previous one.</p> <p>See GGIA Berkley for more information.</p> <ul> <li>Start with shallow, safe questions</li> <li>Gradually increase the depth and vulnerability of the questions</li> </ul>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#time-required","title":"Time required","text":"<p>45 minutes each time you do this practice.</p>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#how-to-do-it","title":"How to do it","text":"<ol> <li>Identify someone with whom you\u2019d like to become closer. It could be someone you know well or someone you\u2019re just getting to know. Although this exercise has a reputation for making people fall in love, it is actually useful for anyone you want to feel close to, including family members, friends, and acquaintances. Before trying it, make sure both you and your partner are comfortable with sharing personal thoughts and feelings with each other.</li> <li>Find a time when you and your partner have at least 45 minutes free and are able to meet in person.</li> <li>For 15 minutes, take turns asking one another the questions in Set I below. Each person should answer each question, but in an alternating order, so that a different person goes first each time.</li> <li>After 15 minutes, move on to Set II, even if you haven\u2019t yet finished the Set I questions. Then spend 15 minutes on Set II, following the same system.</li> <li>After 15 minutes on Set II, spend 15 minutes on Set III.</li> </ol>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#36-questions-312","title":"36 Questions (3*12)","text":"","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#set-i","title":"Set I","text":"<ol> <li>Given the choice of anyone in the world, whom would you want as a dinner guest?</li> <li>Would you like to be famous? In what way?</li> <li>Before making a telephone call, do you ever rehearse what you are going to say? Why?</li> <li>What would constitute a \u201cperfect\u201d day for you?</li> <li>When did you last sing to yourself? To someone else?</li> <li>If you were able to live to the age of 90 and retain either the mind or body of a 30-year-old for the last 60 years of your life, which would you want?</li> <li>Do you have a secret hunch about how you will die?</li> <li>Name three things you and your partner appear to have in common.</li> <li>For what in your life do you feel most grateful?</li> <li>If you could change anything about the way you were raised, what would it be?</li> <li>Take four minutes and tell your partner your life story in as much detail as possible.</li> <li>If you could wake up tomorrow having gained any one quality or ability, what would it be?</li> </ol>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#set-ii","title":"Set II","text":"<ol> <li>If a crystal ball could tell you the truth about yourself, your life, the future, or anything else, what would you want to know?</li> <li>Is there something that you\u2019ve dreamed of doing for a long time? Why haven\u2019t you done it?</li> <li>What is the greatest accomplishment of your life?</li> <li>What do you value most in a friendship?</li> <li>What is your most treasured memory?</li> <li>What is your most terrible memory?</li> <li>If you knew that in one year you would die suddenly, would you change anything about the way you are now living? Why?</li> <li>What does friendship mean to you?</li> <li>What roles do love and affection play in your life?</li> <li>Alternate sharing something you consider a positive characteristic of your partner. Share a total of five items.</li> <li>How close and warm is your family? Do you feel your childhood was happier than most other people\u2019s?</li> <li>How do you feel about your relationship with your mother?</li> </ol>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/fastfriendprocedure.html#set-iii","title":"Set III","text":"<ol> <li>Make three true \u201cwe\u201d statements each. For instance, \u201cWe are both in this room feeling\u2026\"</li> <li>Complete this sentence: \u201cI wish I had someone with whom I could share\u2026\"</li> <li>If you were going to become a close friend with your partner, please share what would be important for them to know.</li> <li>Tell your partner what you like about them; be very honest this time, saying things that you might not say to someone you\u2019ve just met.</li> <li>Share with your partner an embarrassing moment in your life.</li> <li>When did you last cry in front of another person? By yourself?</li> <li>Tell your partner something that you like about them [already].</li> <li>What, if anything, is too serious to be joked about?</li> <li>If you were to die this evening with no opportunity to communicate with anyone, what would you most regret not having told someone? Why haven\u2019t you told them yet?</li> <li>Your house, containing everything you own, catches fire. After saving your loved ones and pets, you have time to safely make a final dash to save any one item. What would it be? Why?</li> <li>Of all the people in your family, whose death would you find most disturbing? Why?</li> <li>Share a personal problem and ask your partner\u2019s advice on how they might handle it. Also, ask your partner to reflect back to you how you seem to be feeling about the problem you have chosen.</li> </ol>","tags":["psychology","communication","fast friends procedure"]},{"location":"psychology/habits.html","title":"Habits","text":"","tags":["psychology","habits","atomic habits"]},{"location":"psychology/habits.html#atomic-habits","title":"Atomic Habits","text":"<p>My take and some ideas from the book Atomic Habits by James Clear.</p>","tags":["psychology","habits","atomic habits"]},{"location":"psychology/habits.html#the-habit-loop","title":"The Habit Loop","text":"<p>Ho habits form and opreates works in four stages:</p> <ol> <li>Cue: The trigger that initiates the habit. It is a signal from the environment or internal condition that starts the brain\u2019s process to execute a habit. It could be a specific time, place, emotional state, or other cues that prompt behavior.</li> <li>Craving: The motivational force behind the habit. It represents the desire for a specific outcome. For example, craving comfort might drive a habit like snacking or watching TV. Without craving, the habit loop breaks down.</li> <li>Response: The actual habit or behavior that is performed. It can be a thought or action triggered by the cue, depending on one\u2019s motivation and ability to perform the action.</li> <li>Reward: The satisfaction or benefit gained from completing the habit. Rewards reinforce the habit, signaling to the brain that the behavior is worth repeating in the future.</li> </ol> <p>Out of the habit loop forms the four laws of behavior change see also Atomic Habits CheatSheet):</p> <p>To create a good habit, you need to:</p> <ol> <li>Make It Obvious (Cue):<ul> <li>Fill out the Habits Scorecard. Write down your current habits to become aware of them.</li> <li>Use implementation intentions: \u201cI will [BEHAVIOR] at [TIME] in [LOCATION].\u201d</li> <li>Use habit stacking: \u201cAfter [CURRENT HABIT], I will [NEW HABIT].\u201d</li> <li>Design your environment. Make the cues of good habits obvious and visible.</li> </ul> </li> <li>Make It Attractive (Craving):<ul> <li>Use temptation bundling. Pair an action you want to do with an action you need to do.</li> <li>Join a culture where your desired behavior is the normal behavior.</li> <li>Create a motivation ritual. Do something you enjoy immediately before a difficult habit.</li> </ul> </li> <li>Make It Easy (Response):<ul> <li>Reduce friction. Decrease the number of steps between you and your good habits.</li> <li>Prime the environment. Prepare your environment to make future actions easier.</li> <li>Master the decisive moment. Optimize the small choices that deliver outsized impact.</li> <li>Use the Two-Minute Rule. Downscale your habits until they can be done in two minutes or less.</li> <li>Automate your habits. Invest in technology and onetime purchases that lock in future behavior.</li> </ul> </li> <li>Make It Satisfying (Reward):<ul> <li>Use reinforcement. Give yourself an immediate reward when you complete your habit.</li> <li>Make \u201cdoing nothing\u201d enjoyable. When avoiding a bad habit, design a way to see the benefits.</li> <li>Use a habit tracker. Keep track of your habit streak and \u201cdon\u2019t break the chain.\u201d</li> <li>Never miss twice. When you forget to do a habit, make sure you get back on track immediately.</li> </ul> </li> </ol> <p>To break a bad habit, you need to inverse the laws:</p> <ol> <li>Make It Invisible (Cue):<ul> <li>Reduce exposure. Remove the cues of your bad habits from your environment.</li> </ul> </li> <li>Make It Unattractive (Craving):<ul> <li>Reframe your mindset. Highlight the benefits of   avoiding your bad habits.</li> </ul> </li> <li>Make It Difficult (Response):<ul> <li>Increase friction. Increase the number of steps between you and your bad habits.</li> <li>Use a commitment device. Restrict your future choices to the ones that benefit you.</li> </ul> </li> <li>Make It Unsatisfying (Reward):<ul> <li>Get an accountability partner. Ask someone to watch your behavior.</li> <li>Create a habit contract. Make the costs of your bad habits public and painful.</li> </ul> </li> </ol>","tags":["psychology","habits","atomic habits"]},{"location":"psychology/habits.html#habit-tracker-template","title":"Habit Tracker Template","text":"","tags":["psychology","habits","atomic habits"]},{"location":"psychology/happiness.html","title":"Happiness","text":"","tags":["psychology","happiness"]},{"location":"psychology/happiness.html#how-to-not-give-a-fuck","title":"How to not give a fuck","text":"<p>Insights from the book The subtle way to not giving a fuck by MArk Manson.</p> <ul> <li>Choose for what you want to care about - You can\u2019t care about everything. Carefully select what deserves your attention and energy, focusing on values that align with your goals and identity.</li> <li>Happiness Comes from Solving Problems - Life is full of challenges, and true happiness comes from engaging in meaningful problem-solving. Avoiding problems or seeking constant positivity leads to frustration.</li> <li>You\u2019re Not Special - Accepting that you are not inherently unique or exceptional is liberating. It allows you to focus on realistic growth rather than entitlement or inflated expectations.</li> <li>Take Responsibility for Your Life - While you cannot control everything that happens to you, you can control how you respond. Owning your choices and reactions empowers you to lead a better life.</li> <li>Rejection is Necessary - Setting boundaries and saying no to things that don\u2019t align with your values is essential for prioritizing what truly matters.</li> <li>Certainty is Overrated - Embrace uncertainty and be willing to question your beliefs. Growth comes from recognizing that you might be wrong and continuously striving to improve.</li> <li>Death is the Ultimate Motivator - Contemplating mortality clarifies what\u2019s truly important. By recognizing life\u2019s brevity, you can focus on leaving a meaningful impact.</li> <li>Good Values vs. Bad Values - Good values are reality-based, internally controlled, and socially constructive. Bad values are superficial, externally influenced, and destructive (e.g., fame, wealth).</li> </ul> <p>Core Message</p> <p>To live a meaningful life, focus on fewer, better things. Stop wasting energy on trivialities and align your actions with your deepest values.</p>","tags":["psychology","happiness"]},{"location":"psychology/leadership.html","title":"Leadership","text":"","tags":["psychology","leadership"]},{"location":"psychology/leadership.html#how-to-win-friends-influence-people","title":"How To Win Friends &amp; Influence People","text":"<p>Insights from the book How To Win Friends &amp; Influence People by Dale Carnegie a book from 1937.</p>","tags":["psychology","leadership"]},{"location":"psychology/leadership.html#fundamental-techniques-in-handling-people","title":"Fundamental Techniques in Handling People","text":"<ul> <li>Don't criticize.</li> <li>Give honest and sincere appreciation.</li> <li>Arouse in the other person an eager want.</li> </ul>","tags":["psychology","leadership"]},{"location":"psychology/leadership.html#six-ways-to-make-people-like-you","title":"Six ways to make people like you","text":"<ul> <li>Become genuinely interested in other people.</li> <li>Smile.</li> <li>Remember a person's name.</li> <li>Be a good listener. Encourage others to talk about themselves.</li> <li>Talk in terms of the other person's interests.</li> <li>Make the other person feel important - and do it sincerely.</li> </ul>","tags":["psychology","leadership"]},{"location":"psychology/leadership.html#win-people-to-your-way-of-thinking","title":"Win people to your way of thinking","text":"<ul> <li>The only way to get the best of an argument is to avoid it.</li> <li>Show respect for the other person's opinions. Never say, \"You're wrong.\"</li> <li>If you are wrong, admit it quickly and emphatically.</li> <li>Begin in a friendly way.</li> <li>Get the other person saying \"yes, yes\" immediately.</li> <li>Let the other person do a great deal of the talking.</li> <li>Let the other person feel that the idea is his or hers.</li> <li>Try honestly to see things from the other person's point of view.</li> <li>Be sympathetic with the other person's ideas and desires.</li> <li>Appeal to the nobler motives.</li> <li>Dramatize your ideas.</li> <li>Throw down a challenge.</li> </ul>","tags":["psychology","leadership"]},{"location":"psychology/leadership.html#be-a-leader","title":"Be a Leader","text":"<ul> <li>Begin with praise and honest appreciation.</li> <li>Call attention to people's mistakes indirectly.</li> <li>Talk about your own mistakes before criticizing the other person.</li> <li>Ask questions instead of giving direct orders.</li> <li>Let the other person save face.</li> <li>Praise the slightest improvement and praise every improvement.</li> <li>Give the other person a fine reputation to live up to.</li> <li>Use encouragement. Make the fault seem easy to correct.</li> <li>Make the other person happy about doing the thing you suggest.</li> </ul>","tags":["psychology","leadership"]},{"location":"psychology/learning.html","title":"Learning","text":"","tags":["psychology","learning"]},{"location":"psychology/learning.html#focus-vs-diffuse-mode","title":"Focus vs Diffuse Mode","text":"<p>Focus and diffuse modes are two complementary ways our brain processes information. Focus mode is like a spotlight, enabling deep concentration on a specific task, ideal for problem-solving and learning new material. Diffuse mode, on the other hand, is more relaxed and broad, akin to a lantern spreading light in all directions. This mode allows the brain to make creative connections and see the bigger picture. Effective learning involves switching between these modes\u2014using focus mode to tackle details and diffuse mode to integrate ideas and spark insights.</p> Focused Thinking Diffused Thinking Narrow and targeted Broad and conceptual Methodical and logical Intuitive and imaginative Tactical and detail-oriented Strategic and big-picture Necessary for deep work Uncovers meaning and connections <p>The following methods can help you switch between focus and diffuse modes to enhance your learning.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#pomodoro-technique","title":"Pomodoro Technique","text":"<p>The Pomodoro Technique is a time management method that breaks work into intervals, typically 25 minutes long, separated by short breaks. This technique can help you maintain focus during study sessions and prevent burnout.</p> <p>The work interval allows for focused thinking, while the break provides a chance to switch to diffuse thinking. It is important to give your brain rest during these breaks to make the new information shift into the Long-Term memory. Best are mundane tasks like walking, stretching, or meditating.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#mind-mapping","title":"Mind Mapping","text":"<p>Mind mapping is a powerful visual technique for organizing information and sparking creativity. By mapping out concepts, relationships, and ideas in a visual format, you engage both focus and diffuse modes of thinking. This approach not only simplifies complex topics but also helps connect ideas more effectively.</p> <p>Personally, I\u2019ve found mind maps invaluable for learning and structuring knowledge\u2014I use MindManager to condense entire 100-page books into a single mind map. This method transforms dense material into an easily digestible, visually engaging format, making learning more efficient and memorable.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#hard-start-technic","title":"Hard Start Technic","text":"<p>First analyse a work task and then start with the most difficult part. This way you can use the focus mode to solve the problem and then switch to the diffuse mode to see the bigger picture and make connections once you don't progress or getting tired in focused mode.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#other-techniques","title":"Other Techniques","text":"","tags":["psychology","learning"]},{"location":"psychology/learning.html#feynman-technique","title":"Feynman Technique","text":"<p>The Feynman Technique is a method for learning and understanding complex topics by teaching them to someone else. By explaining a concept in simple terms, you can identify gaps in your knowledge and reinforce your understanding.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#pair-learning","title":"Pair Learning","text":"<p>Pair learning involves studying with a partner or group to share ideas, ask questions, and discuss concepts. This collaborative approach can deepen your understanding of a topic and provide new perspectives.</p>","tags":["psychology","learning"]},{"location":"psychology/learning.html#metacognition","title":"Metacognition","text":"<p>Metacognition is the awareness and understanding of your thought processes. By reflecting on how you learn and solve problems, you can improve your study habits and enhance your learning outcomes.</p> <p>4-Step Model for self regulated learning</p> <ul> <li>Make sure you understand the task</li> <li>Plan how you will complete the task. Set clear goals and strategies.<ul> <li>To learn a language I want to learn 100 words in 2 weeks. I will use flashcards and repeat them every day twice for 10 mintues.</li> </ul> </li> <li>Begin learning with various technique as descibed in this page.</li> <li>Check your progresss and self refelct the method your are using.</li> </ul>","tags":["psychology","learning"]},{"location":"psychology/learning.html#books-and-resources","title":"Books and Resources","text":"<p>See also Books for more information.</p> Cover Book Learning like a Pro","tags":["psychology","learning"]},{"location":"psychology/learning.html#how-we-learn","title":"How We Learn","text":"<p>We learn:</p> <ul> <li>10% of What We Read</li> <li>20% of What We Hear</li> <li>30% of What We See</li> <li>50% of What We See and Hear</li> <li>70% of What We Discuss with Others</li> <li>80% of What We Experience Personally</li> <li>95% of What We Teach to Someone Else</li> </ul>","tags":["psychology","learning"]},{"location":"psychology/public-speaking.html","title":"Public Speaking","text":"","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#tips","title":"Tips","text":"<p>Inspired by a post from Helene Guillaume.</p>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#own-the-room-without-saying-a-word","title":"Own the Room Without Saying a Word","text":"<ul> <li>Your presence talks before you do</li> <li>People size you up in the first 7 seconds</li> </ul> <p>Do This</p> <ul> <li>Walk into your next meeting like the outcome is already yours</li> <li>Stand tall, move with purpose, own your space</li> <li>Watch the room shift in your favor</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#harness-the-power-of-the-pause","title":"Harness the Power of the Pause","text":"<ul> <li>Silence creates gravity\u2014your words land</li> <li>Rushed voices are forgettable; calm ones linger</li> </ul> <p>Do This</p> <ul> <li>After your key point, silently count to 3</li> <li>It\u2019ll feel weird\u2014but your message will hit harder</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#speak-in-bold-statements","title":"Speak in Bold Statements","text":"<ul> <li>Short hits harder than long-winded</li> <li>Simplicity wins every time</li> </ul> <p>Do This</p> <ul> <li>Boil down your big idea into 15 words or less</li> <li>Use that punchline to open strong</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#make-eye-contact-a-weapon","title":"Make Eye Contact a Weapon","text":"<ul> <li>Lock in for 3\u20135 seconds with one person at a time</li> <li>Make people feel seen\u2014not scanned</li> </ul> <p>Do This</p> <ul> <li>Land each full thought on a single person before moving on</li> <li>Watch attention levels spike</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#let-your-hands-do-the-talking","title":"Let Your Hands Do the Talking","text":"<ul> <li>Gestures turn ideas into visuals</li> <li>Hidden hands = hidden trust</li> </ul> <p>Do This</p> <ul> <li>Show size with your hands when explaining numbers</li> <li>Use left/right gestures when comparing options</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#bring-the-energy-everyone-feels","title":"Bring the Energy Everyone Feels","text":"<ul> <li>People subconsciously sync with your vibe</li> <li>High energy creates connection without a word</li> </ul> <p>Do This</p> <ul> <li>Before stepping up, move: arms up, jump, shake it out</li> <li>They'll catch your vibe before they even realize it</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#drop-fillers-add-authority","title":"Drop Fillers, Add Authority","text":"<ul> <li>Replace \u201cum\u201d with pause</li> <li>Silence feels confident, not awkward</li> </ul> <p>Do This</p> <ul> <li>Record a 2-minute talk</li> <li>Count the \u201cums,\u201d then re-record with pauses instead</li> <li>You'll sound instantly sharper</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#smile-with-intent","title":"Smile With Intent","text":"<ul> <li>Start and end warm\u2014get serious in the middle</li> <li>Smiling with purpose shows strength, not softness</li> </ul> <p>Do This</p> <ul> <li>Smile fully when you open and close</li> <li>During key messages, let your face show focus</li> </ul>","tags":["psychology","public speaking"]},{"location":"psychology/public-speaking.html#leave-them-with-a-mental-spark","title":"Leave Them With a Mental Spark","text":"<ul> <li>Memorable closings beat forgettable Q&amp;As</li> <li>A powerful question lingers far longer than a statement</li> </ul> <p>Do This</p> <ul> <li>Instead of ending with \u201cAny questions?\u201d</li> <li>Say: \u201cThe real question isn\u2019t can you do this\u2014it\u2019s will you let yourself?\u201d</li> </ul>","tags":["psychology","public speaking"]},{"location":"security/index.html","title":"Security","text":"","tags":["security"]},{"location":"security/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["security"]},{"location":"security/gnupg.html","title":"GnuPg","text":"","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#encryption-in-linux","title":"Encryption in Linux","text":"<p>To encrypt you need to do the following tasks</p> <ol> <li>Install GnuPG</li> <li>Creating a key pair</li> <li>Learn to use public keys</li> <li>Learn Encrypt &amp; Decrypt</li> <li>Learn Sign &amp; Verify</li> </ol>","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#the-system","title":"The System","text":"<p>Briefly and without technical detours, the system works as follows. To encrypt and decrypt with GPG, it is necessary to use two different cryptographic keys: a public and a secret key.  \"Public\" keys are used to encrypt and \"Private\" keys are used to decrypt messages. To send encrypted e.g. e-mails you must have the \"public\" key of the recipient, which is used to encrypt the message. The recipient then uses his \"Private\" key to decrypt (and read) the encrypted message. To send encrypted messages to you, senders must first have a copy of your \"public\" key from your keychain. \"Public\" keys may be passed on to those who want to send you encrypted messages. For this purpose you can deposit your \"Public\" Key on a Key Server. \"Private\" keys may not be passed on.</p> <p>Note</p> <p>Key distributionAllocation of keys \"Private\" keys may not be passed on to anyone, \"Public\" keys must be distributed to everyone.</p>","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#installation-of-gnupg","title":"Installation of GnuPG","text":"","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#create-of-a-key-pair","title":"Create of a key pair","text":"<pre><code># Generate of the key pair\ngpg --gen-key\n\n# View key informations\ngpg --list-keys\n\n# Send key to a keyserver\ngpg --send-keys --keyserver wwwkeys.pgp.net &lt;key-id&gt;\n</code></pre>","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#import-of-public-key","title":"Import of public key","text":"<pre><code># Get public key from keyserver\ngpg --recv-keys --keyserver wwwkeys.pgp.net keyid\n\n# import into the keychain\ngpg --import\n</code></pre>","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#encryption","title":"Encryption","text":"<pre><code># Encrypt1\ngpg --encrypt filename or gpg -e filename\n\n# Decrypt\ngpg --decrypt filename or gpg -d filename\n\n# Sign\ngpg --sign filename or gpg -s filename\n\n# Verify\ngpg --verify filename or gpg -v filename\n</code></pre>","tags":["security","gnupg","enrytion"]},{"location":"security/gnupg.html#links","title":"Links","text":"<ul> <li>Official GnuPG Webpage</li> <li>Key Server</li> <li>HowTo GnuPG</li> </ul>","tags":["security","gnupg","enrytion"]},{"location":"security/password.html","title":"Password","text":"<p>In order to have a secure password you must do the following take care of</p> <ol> <li>Control your passwords</li> <li>Create new secure password and memorize it</li> <li>Change password regularly</li> </ol>","tags":["security","password"]},{"location":"security/password.html#introduction","title":"Introduction","text":"<p>Who does not know this: you have registered with a new service, or on the server the monthly password change is pending, and you cannot and do not remember a password that meets the requirements of the security concept: either, it is too short, or it is not cryptic enough, or it is too cryptic and you cannot remember it. Finally, because you don't feel like it anymore, you choose any password you like, unfortunately mostly insecure ones.</p> <p>With this little article I would like to raise security awareness as well as make it easier to choose a secure password by understanding how such a password is constructed. However, I want to say right from the start: assigning secure passwords requires a lot of discipline from the user himself!</p>","tags":["security","password"]},{"location":"security/password.html#why-a-secure-password-is-important","title":"Why a secure password is important","text":"<p>Many people think of NOTHING when assigning passwords. But this process is extremely important.</p> <p>A lot of computer crime could be avoided if more end users would overcome their \"inner bastard\" and assign reasonable passwords. But to the same extent the shop operators, security officers and others responsible for password acceptance or password suggestions are to blame: I have never seen a web shop with plausibility checks of the password. In addition, general passwords should also be chosen securely for webshops to avoid unauthorized spying of customer passwords. I am sure that many will say \"Who would want to harm me of all people\", or \"Who would want to read my e-mails of all people\". But that is not the point. The attacker does not (usually) care whose account password he gets. He is also not necessarily interested in your e-mails. He is only interested in how he gets into the system. Because once he is in the system, he can do a lot of damage.</p>","tags":["security","password"]},{"location":"security/password.html#the-most-popular-passwords","title":"The most popular passwords","text":"<ul> <li>Place no. 1: The word \"123456\"</li> <li>Place no. 2: Number combinations, which remind of a product, such as 4711, 911, X5, A6.</li> <li>Place no. 3: The word \"Password\" itself</li> <li>Place no. 4: Pet names like treasure.</li> <li>Place no. 5: The word \"Baby\".</li> <li>Place no. 6: Seasons like summer and winter.</li> <li>Place no. 7: The word hello.</li> <li>Place no. 8: Names of big cities like Zurich, Paris or NewYork.</li> <li>Place no. 9: Your own first names.</li> <li>Place no. 10: The first name of your wife / girlfriend / husband</li> </ul>","tags":["security","password"]},{"location":"security/password.html#structure-of-a-relatively-secure-password","title":"Structure of a (relatively) secure password","text":"<p>A secure password consists of upper and lower case letters and numbers. It contains no (perceptible) systematic and is at least 16 characters</p> <p>Security freaks tend to use so-called \"keyboard hacks\" to generate passwords. This is a one-time, pointless and blind ten-finger hack on the keyboard - you don't remember the password in general, but only the character string as it is entered on the keyboard. Such passwords are of course extremely \"secure\". Because if you have to enter a password in th  presence of other people, for example, you should be able to do so unobtrusively and quickly. In such a situation, anyone who has to rely on the \"eagle system\" to enter a password will only make it easier for those present to unobtrusively follow the entered character string.</p> <p>Note</p> <p>Good passwords should therefore be a middle ground between strings that cannot be guessed and strings that can be remembered. A keyboard hack is an alternative to this method.</p>","tags":["security","password"]},{"location":"security/password.html#password-generator","title":"Password Generator","text":"<p>If you are too uncreative to think up your own \"secure\" password, you can use the following page to automatically generate easy-to-remember but nevertheless secure passwords of different lengths.</p> <ul> <li>Keepass</li> <li>Safepasswd</li> <li>Generista</li> </ul> <p></p>","tags":["security","password"]},{"location":"security/password.html#password-reuse","title":"Password Reuse","text":"<p>A complete unique password should always be created per platform. Variations can be detected and exploited relatively quickly.</p> <p></p>","tags":["security","password"]},{"location":"security/password.html#how-long-should-a-password-be","title":"How long should a password be","text":"<p>The question is not so easy to answer. That depends on the security area. Generally speaking, a minimum length of 8 characters is reasonable: 8 characters mean 191707312997281 combinations for character class a-zA-Z1-9 (= 61 characters). At one million keystrokes per second, this would mean a maximum time of about 53252 hours (191707312.997281 seconds) (almost 6 years). That is quite a respectable time :-)</p> <p>Let's have a small table for an estimation: Minimum length maximum time required (assuming 1 million keystrokes per second)</p> Number of Symbols Brute Force Time 3 Symbols 0,2 Seconds 5 Symbols 14 Minutes 8 Symbols 53252 Hours 12 Symbols 84168853 Year 15 Symbols 19104730610573 Years <p>But now comes the disillusionment. All these are so-called maximum times! Maximum time means: if someone tries to crack the password at the specified speed and only the very last character combination entered is the correct one, then it takes as long as specified. But theoretically, the very first character combination entered could be correct. Then it took only a hundred thousandth of a second to crack the password - despite 15 characters. It is therefore quite possible that an attacker could have found out a password within a few seconds. Just coincidence. Therefore, 8 characters are not a good reason to be on the safe side. In addition, it also depends on the computing power: a million tansten strokes per second were expected. Other, better, later built computers can handle millions of times that. This also pushes more and more into the foreground with the graphics cards brute-force attacks. As an example a new Nividia graphics card with CUDA has 256 processor cores, the clock frequency of such a core can be about 500MHz. This allows the graphics card to test 128E9 = 128000000000 passwords per second.</p> <p>Of course one should also add that many access systems throw a logging in guest out of the system after so many failed attempts. Then, if he wants to try again, he has to log in with a new identity, in the internet e.g. sometimes also with a different IP address. An attacker can automate such things to a certain extent, however.</p>","tags":["security","password"]},{"location":"security/password.html#links","title":"Links","text":"<ul> <li>Wikipedia article about password</li> </ul>","tags":["security","password"]},{"location":"security/tor.html","title":"Tor","text":"<p>What is Tor?</p> <p>Tor (The Onion Router) is free software and an open network that helps you defend against a form of network surveillance that threatens personal freedom and privacy, confidential business activities and relationships, and state security known as traffic analysis.</p> <ul> <li>Official Tor Webpage</li> <li>Check if you're using Tor</li> </ul>","tags":["security","tor"]},{"location":"security/tor.html#download","title":"Download","text":"<p>Download the latest Tor Browser Bundle from the Tor Webpage</p> <ul> <li>Tor Bundle Download</li> </ul>","tags":["security","tor"]},{"location":"tools/index.html","title":"Tools","text":"","tags":["tools"]},{"location":"tools/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools"]},{"location":"tools/anaconda/index.html","title":"Anaconda","text":"","tags":["tools","anaconda"]},{"location":"tools/anaconda/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/index.html#introduction","title":"Introduction","text":"<p>Anaconda is a complete python package with comes with many features:</p> <ul> <li>Jupyter</li> <li>Conda</li> <li>PiP</li> <li>Environments</li> <li>Support Win / Linux / Mac</li> <li>Anaconda Download</li> <li>Conda Docs</li> </ul>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html","title":"Conda","text":"<p>At installation (Anaconda), conda creates a generic environment called <code>base</code> which is activated by default. Therefore, when installing a package with <code>conda install</code>, the package will be installted in that environment. You can be more explicit and activate the environment by typing <code>conda activate</code> or <code>conda activate base</code> in a terminal.</p> <p>To have a full in depth introduction to environment management with conda read the official docs: Manage Environments.</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#conda-environments","title":"Conda Environments","text":"","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#create","title":"Create","text":"<p>Create an environment from file</p> <pre><code>conda env create -f condaenv.yml\n</code></pre> <p>Create an empty environment</p> <pre><code>conda create -n &lt;envname&gt;\nconda create -n &lt;envname&gt; python=3.6.5\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#rename","title":"Rename","text":"<p>You can't! You need to clone the environment and give a new name:</p> <pre><code>conda create --name &lt;new_envname&gt; --clone &lt;old_envname&gt;\nconda remove --name &lt;old_envname&gt; --all\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#delete","title":"Delete","text":"<pre><code>conda env remove --name &lt;envname&gt;\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#export","title":"Export","text":"<pre><code>conda env export &gt; condaenv.yml\n</code></pre> <p>The file contains the parameter <code>prefix</code> at the end of the file which points to your local installation. This information can be ignored or removed from the file without any impact when creating a new environment on a different machine.</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#commands","title":"Commands","text":"","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#update","title":"Update","text":"<p>Update all Conda packages</p> <pre><code>conda update --all\n</code></pre> <p>Update Anaconda only</p> <pre><code>conda update conda\nconda update anaconda\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#info","title":"Info","text":"<p>Get information about conda installation</p> <pre><code>conda info\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#search","title":"Search","text":"<p>Search a package within the configured channels</p> <pre><code>conda search &lt;package&gt;\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#install","title":"Install","text":"<p>Install a package</p> <pre><code>conda install &lt;package&gt;\nconda install -c &lt;channelname&gt; &lt;package&gt;$\nconda install -c conda-forge &lt;package&gt;\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#remove","title":"Remove","text":"<p>Remove a package</p> <pre><code>conda remove nodejs npm\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#list","title":"List","text":"<p>List conda environments</p> <pre><code>conda env list\n</code></pre> <p>List current environment packages</p> <pre><code>conda list\nconda -n &lt;envname&gt; list\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#configuration","title":"Configuration","text":"<p>Create a conda configuration file .condarc</p> <pre><code>conda config\n</code></pre> <p>Get all conda configuration</p> <pre><code>conda config --get\n</code></pre> <p>Add channel</p> <pre><code>conda config --add channels &lt;channelname&gt;\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#channels","title":"Channels","text":"<p>To see the configured channels use the command <code>conda info</code>.</p> <p>The defaults channel points to several channels at the repo.anaconda.com repository.</p> Channel Description pkgs/main Includes packages built by Anaconda, Inc. with the new compiler stack pkgs/msys2 Windows only. Included in conda's defaults channel. Necessary for Anaconda, Inc.'s R conda packages and some others in pkgs/main and pkgs/free pkgs/r Microsoft R Open conda packages and Anaconda, Inc.'s R conda packages. <p>Defaults channels (https://repo.anaconda.com/pkgs/)</p> Channel Description conda-forge A community repository that provides conda packages for a wide range of software. (conda forge info) anaconda A mirror of the packages available in main, free, and pro hosted on repo.anaconda.com <p>Other channels</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#custom-config","title":"Custom config","text":"<p>Official docs about conda configuration: Configuration User-Guide</p> <p>If you have a very fast SSD, you might increase the number of threads to shorten the time it takes for conda to create environments and install/remove packages (conda config info).</p> <pre><code>Run conda with 6 thread (use number of processors available)\nconda config --set default_threads 6\n\n# Add ``conda-forge`` channel but with lowest priority:\nconda config --append channels conda-forge\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/conda.html#conda-env-in-jupyter-lab","title":"Conda env in Jupyter lab","text":"<p>Warning</p> <p>You Jupterlab can become cluttered. It is not recommended</p> <p>If you want all your conda environments to be listed in Jupyter notebook and lab, make sure you've installed the packages <code>ipykernel</code> and <code>nb_conda_kernels</code> in the environment from which you run Jupyter.</p> <pre><code>conda install -n myenv ipykernel nb_conda_kernels\n</code></pre> <p>It is recommanded to add the kernel manually and give an explicit name. To do so, while in the environment, run the following command:</p> <pre><code>python -m ipykernel install --user --name=&lt;envname&gt;\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html","title":"Install","text":"<p>Download Anaconda here.</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#conda","title":"Conda","text":"<p>At installation (Anaconda), conda creates a generic environment called <code>base</code> which is activated by default. Therefore, when installing a package with <code>conda install</code>, the package will be installted in that environment. You can be more explicit and activate the environment by typing <code>conda activate</code> or <code>conda activate base</code> in a terminal.</p> <p>See dedicated conda page for more information about conda: Conda</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#zsh-config","title":"ZSH Config","text":"<p>In order to configure the location of the anaconda environment within the shell perform the following actions.</p> <p>Execute the command to hide the conda environments</p> <pre><code>conda config --set changeps1 false\n</code></pre> <p>Add to your <code>.zshrc</code> conda-setup.bash</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#jupyter","title":"Jupyter","text":"<p>See the dedicated jupyter pages for more information about jupyter: Jupyter</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#pip","title":"PIP","text":"<p>See the dedicated pip page for more information about pip install PiP</p>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#conda-environment-setup","title":"Conda Environment Setup","text":"<p>Setup an conda environment contains many times the same stuff</p> Windows conda environmnt setup<pre><code>set CONDAENV=envname\nconda create -n %CONDAENV%\n\n:: default packages\nconda install pip\n\n:: pip packages\npip install IPython\npip install ipykernel\npip install numpy\npip install plotly\npip install pandas\npip install matplotlib\npip install jupyter-kite\npip install seaborn\n\n:: jupyterlab extensions\nset NODE_OPTIONS=--max-old-space-size=4096\njupyter labextension install @jupyter-widgets/jupyterlab-manager plotlywidget@4.9.0 --no-build\njupyter labextension install jupyterlab-plotly --no-build\njupyter labextension install run-tag-cells-jlab --no-build\njupyter labextension install \"@kiteco/jupyterlab-kite\" --no-build\n\njupyter lab build\nset NODE_OPTIONS=\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#additional-installs","title":"Additional Installs","text":"","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#sphinx","title":"Sphinx","text":"<p>Install requirements for sphinx</p> <pre><code>pip install sphinx\npip install sphinx-rtd-theme\npip install pydata-sphinx-theme\npip install sphinxcontrib-wavedrom\npip install sphinxcontrib-plantuml\npip install recommonmark\npip install sphinxemoji\npip install sphinx-copybutton\npip install nbsphinx\npip install jupyter_sphinx\npip install sphinx-panels\npip install nbsphinx\npip install IPython\npip install ipykernel\npip install numpy\npip install plotly\npip install pandas\npip install matplotlib\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/anaconda/install.html#kite","title":"Kite","text":"<p>Install requirements for Kite</p> <pre><code>pip install jupyter-kite\njupyter labextension install \"@kiteco/jupyterlab-kite\"\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/bittorrent/index.html","title":"Bittorrent","text":"","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/index.html#introduction","title":"Introduction","text":"<p>BitTorrent (abbreviated to BT) is a communication protocol for peer-to-peer file sharing (P2P) which is used to distribute data and electronic files over the Internet. The downlaod can be of any size and can be started and restarted as wanted. A checksum verifies the data after the finished download.</p> <p>Per default all clients who downloads a file become automatic Seeders (means uploaders). Be aware of its implications.</p>","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/index.html#bittorrent-clients","title":"Bittorrent clients","text":"<p>There are many Bittorrent clients out there. The most common in my case are</p> <ul> <li>uTorrent</li> <li>qBittorrent</li> </ul> <p>I prefer uTorrent for downlaods only and qBittorrent for creating Bittorrent because it has an integrated Bittorrent Tracker.</p>","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/creating_torrent.html","title":"Creating a Torrent","text":"","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/creating_torrent.html#enable-local-tracker","title":"Enable Local Tracker","text":"<p>The local tracker lets find your Client by others but you have to enable it and forward the tracker port. In addition your also need to forward the listening port.</p> <p>By default in qBitTorrent these values are:</p> <ul> <li>Listening Port: <code>8999</code></li> <li>Tracker Port: <code>9000</code></li> </ul> <p>  Listening Port Settings and qBitTorrent Embedded Tracker Settings</p> <p>Warning</p> <p>These two ports needs to be forwarded by your router, adjust the settings accordingly Verify these settings with the openport checker</p>","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/creating_torrent.html#creating-a-public-torrent","title":"Creating a Public Torrent","text":"<p>Public Torrents can be find by anyone and be downloaded by anyone. Depending on your tracker selection they cn be find on popular torrent sites such as ThePirateBay.</p> <p>Warning</p> <p>Be careful what you offer to be downloaded.</p> <p>Create a new Torrent file with the following settings.</p> <p></p> <p>Add public trackers to your tracker list. To find the latest active public trackers goto tinytorrent.net. You can also add your personal tracker if you like.</p>","tags":["tools","bittorrent"]},{"location":"tools/bittorrent/creating_torrent.html#creating-a-private-torrent","title":"Creating a Private Torrent","text":"<p>Hereafter a semi-private torrent is created. Which means only people having the torrent file can download the file. But it is not per-se private. You have to create the same Torrent file except add only your own tracker to the tracker list.</p> <p>To find your external ip address goto: https://www.ip-adress.com/</p> <pre><code>http://your.external.url:9000/announce\n\nhttp://external-ip-address:9000/announce\n\nhttp://localhost:9000/announce\n</code></pre> <p></p>","tags":["tools","bittorrent"]},{"location":"tools/chromium/index.html","title":"Chromium Browsers","text":"","tags":["tools","chromium"]},{"location":"tools/chromium/index.html#access-unsafe-page","title":"Access unsafe page","text":"<p>If a page has not a valid certificate and cannot be accessed, there is a method to bypass the chrome security warnings.</p> <p></p> <p>As you can see, these are just warnings. Some browsers will let you go through after clicking on the Accept and Continue button. In some situations Chrome doesn't even present you with a Continue button.</p> <p>For those circumstances though, there is a bypass available. You can just type in <code>thisisunsafe</code> anywhere on the window and the browser will let you visit the page.</p> <pre><code>thisisunsafe\n</code></pre>","tags":["tools","chromium"]},{"location":"tools/cloudflare/index.html","title":"Cloudflare","text":"","tags":["tools","cloudflare"]},{"location":"tools/cloudflare/index.html#introduction","title":"Introduction","text":"<p>Cloudflare is a web infrastructure and website security company that provides content delivery network services, DDoS mitigation, Internet security, and distributed domain name server services.</p> <p>I use it mainly to manage and buy custom domains, and to manage the DNS records of my domains as well as rules for that domains.</p>","tags":["tools","cloudflare"]},{"location":"tools/cloudflare/index.html#additional-information","title":"Additional Information","text":"<ul> <li>Cloudflare Dash</li> <li>Cloudflare Docs</li> </ul>","tags":["tools","cloudflare"]},{"location":"tools/cloudflare/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","cloudflare"]},{"location":"tools/cloudflare/gh-pages.html","title":"Set a custom domain for GitHub Pages","text":"<p>If you want to have a custom domain for your GitHub Pages, you can follow the steps below.</p> <p>It is possible to configure one custom domain for each GitHub Pages repository.</p>","tags":["tools","cloudflare","github","pages","custom domain"]},{"location":"tools/cloudflare/gh-pages.html#steps","title":"Steps","text":"<ol> <li>Goto cloudflare and get a custom domain. In this tutorial, I will use <code>example.com</code>.</li> <li> <p>In the github repository goto <code>Settings</code> -&gt; <code>Pages</code> -&gt; <code>Custom domain</code> and set the custom domain.     </p> <p>Note</p> <p>The custom domain can be the root domain (<code>example.com</code>) or a subdomain (<code>www.example.com</code> or <code>page.example.com</code>).</p> <ol> <li>Add the required <code>A</code> and <code>AAAA</code> records to the DNS settings of the custom domain in Cloudflare. The IP addresses for IPv4 and IPv6 can be found in the GitHub Docs </li> <li>For a root domain (<code>example.com</code>), add the following records:<ul> <li>Four <code>A</code> record with the Name <code>@</code> and the IP Addresses <code>185.199.108.153</code> <code>185.199.109.153</code> <code>185.199.110.153</code> <code>185.199.111.153</code></li> <li>Four <code>AAAA</code> record with the Name <code>@</code> and the IP Addresses <code>2606:50c0:8000::153</code> <code>2606:50c0:8001::153</code> <code>2606:50c0:8002::153</code> <code>2606:50c0:8003::153</code></li> </ul> </li> <li>For a subdomain (<code>page.example.com</code>), add the following records:<ul> <li>Four <code>A</code> record with the Name <code>page</code> and the IP Addresses <code>185.199.108.153</code> <code>185.199.109.153</code> <code>185.199.110.153</code> <code>185.199.111.153</code></li> <li>Four <code>AAAA</code> record with the Name <code>page</code> and the IP Addresses <code>2606:50c0:8000::153</code> <code>2606:50c0:8001::153</code> <code>2606:50c0:8002::153</code> <code>2606:50c0:8003::153</code> <code>;; A Records page.example.com.   1   IN  A   185.199.111.153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  A   185.199.110.153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  A   185.199.109.153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  A   185.199.108.153 ; cf_tags=cf-proxied:true ;; AAAA Records page.example.com.   1   IN  AAAA    2606:50c0:8003::153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  AAAA    2606:50c0:8002::153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  AAAA    2606:50c0:8001::153 ; cf_tags=cf-proxied:true page.example.com.   1   IN  AAAA    2606:50c0:8000::153 ; cf_tags=cf-proxied:true</code> </li> </ul> </li> <li>Wait a few minutes for the DNS records to propagate.</li> <li>Done! Now you can access your GitHub Pages with your custom domain. <code>page.example.com</code></li> </ol> </li> </ol>","tags":["tools","cloudflare","github","pages","custom domain"]},{"location":"tools/cloudflare/redirect-subdomains.html","title":"Redirect subdomains to another subdomain","text":"<p>If you want multiple subdomains pointing to the same subdomain or root domain, you can use Cloudflare to redirect the subdomains.</p> <p>The domain or subdomain needs to be the default and already be configured. For a github page see Github Custom Domain to realize this.</p> <p>In thie example the main subdomain is <code>page.example.com</code> and new redirected subdomains are <code>pages.example.com</code> and <code>docs.example.com</code>.</p>","tags":["tools","cloudflare","redirect subdomains"]},{"location":"tools/cloudflare/redirect-subdomains.html#steps","title":"Steps","text":"<ol> <li>Within cloudflare add a DNS Record for each subdomain you want to redirect.     In this example, we add two <code>A</code> records for <code>pages.example.com</code> and <code>docs.example.com</code> pointing to the cloudflare ip <code>192.0.2.1</code> this allows cloudflare to add custom rules.     <pre><code>pages.example.com.  1   IN  A   192.0.2.1 ; cf_tags=cf-proxied:true\ndocs.example.com.   1   IN  A   192.0.2.1 ; cf_tags=cf-proxied:true\n</code></pre> </li> <li>In the cloudflare section for that domain goto <code>Rules</code> and add the following rule:</li> <li>Redirect Rules</li> <li>Custom filter expression<ul> <li>Field <code>Hostname</code> Operator <code>wildcard</code> Value <code>pages.example.com</code></li> <li>OR</li> <li>Field <code>Hostname</code> Operator <code>wildcard</code> Value <code>docs.example.com</code></li> </ul> </li> <li>Then<ul> <li>Type <code>Dynamic</code> Expression <code>concat(\"https://page.example.com\", http.request.uri.path)</code> Status code <code>301</code></li> <li>Check Preserve query string    </li> </ul> </li> <li>Wait a few minutes for the DNS records and rule to propagate.</li> <li>Done! Now you can access your Webpage with your two new custom domain. <code>pages.example.com</code> and <code>docs.example.com</code></li> </ol>","tags":["tools","cloudflare","redirect subdomains"]},{"location":"tools/cloudflare/server-subdomains.html","title":"Set a custom domain for GitHub Pages","text":"<p>If you want that your server services use your custom subdomain such as <code>subdomain.example.com</code>, you will use tool like:</p> <p>Figure 1: Dynamic DNS with DuckDns</p> <p>Figure 2: Nginx Reverse Proxy with Nginx Proxy Manager</p> <p>Figure 3: Let's Encrypt for free ssl certificates</p> <p>Figure 4: Cloudflare with your custom domain</p>","tags":["tools","cloudflare","github","pages","custom domain"]},{"location":"tools/cloudflare/server-subdomains.html#steps","title":"Steps","text":"<ol> <li>First of all your home IP will change from time to time. Therefore you first need to to use a Dynamic DNS service such as DuckDNS is free, reliable and highly recomended.. You can create an account and get a subdomain such as <code>subdomain.duckdns.org</code>.</li> <li>Dont forget to install and configure the DuckDNS client on your server. You can find the installation instructions on the DuckDNS Docs.</li> <li>For each server service setup a DNS Record for your custom subdomain in Cloudflare to the <code>subdomain.duckdns.org</code> which resolved to your server's ip address<ul> <li>Type <code>CNAME</code></li> <li>Name <code>subdomain</code> (<code>subdomain.example.com</code>)</li> <li>Target <code>subdomain.duckdns.org</code></li> <li>Proxy status <code>DNS only</code></li> <li>TTL <code>Auto</code> </li> </ul> </li> <li>You can use a reverse proxy such as Nginx Proxy Manager to manage your server services. After installing the Nginx Proxy Manager, you need to port forward the default ports for Nginx Proxy Manager in your Router:<ul> <li><code>80</code> to <code>80</code></li> <li><code>443</code> to <code>443</code></li> </ul> </li> <li> <p>Within the Nginx Proxy Manager, you can create a proxy host from your new subdomain <code>subdomain.example,com</code> to your server service (IP and Port). In the example:</p> <ul> <li>In the Details tab:</li> <li>Domain Names <code>subdomain.example.com</code></li> <li>Scheme <code>http</code></li> <li>Forward Hostname/IP <code>192.168.0.1</code></li> <li>Forward Port <code>10000</code></li> <li>Block Common Exploits <code>Yes</code></li> <li>In the SSL tab:</li> <li>SSL Certificate <code>Request a new SSL Certificate</code></li> <li>Force SSL <code>Yes</code></li> <li>HTTP/2 Support <code>Yes</code></li> </ul> <p> 6. This will send the traffic from <code>subdomain.example.com</code> to your server service. The SSL certificate will be automatically generated by Let's Encrypt and renewed every 3 months. 4. Wait a few minutes for the DNS records to propagate. 5. Done! Now you can access your Server Services with your custom domains on <code>https://</code> such as <code>https://subdomain.example.com</code>.</p> </li> </ol> <p></p>","tags":["tools","cloudflare","github","pages","custom domain"]},{"location":"tools/cmder/index.html","title":"cmder","text":"","tags":["tools","cmder"]},{"location":"tools/cmder/index.html#introduction","title":"Introduction","text":"<p>Cmder is a portable console emulator for Windows</p>","tags":["tools","cmder"]},{"location":"tools/cmder/index.html#additional-information","title":"Additional Information","text":"<ul> <li>cmder</li> <li>cmder wiki - Official cmder wiki</li> </ul> <p>My cmder config files can be found in: cmder config folder</p>","tags":["tools","cmder"]},{"location":"tools/cmder/index.html#taskfile","title":"Taskfile","text":"<p>The taskfile can be found in <code>cmder/config/cmder_tasksfile.txt</code>. It allows to start preconfigured consoles. Hereafter my setting</p> cmder taskfile<pre><code>wsl --distribution Ubuntu-20.04 -cur_console:pm:/mnt\n*cmd /k \"%ConEmuDir%\\..\\init.bat\" -new_console:d:%USERPROFILE% -new_console:t:CmderAdmin\ncmd /k \"%ConEmuDir%\\..\\init.bat\" -new_console:d:%USERPROFILE% -new_console:t:Cmder\ncmd /k \"%ConEmuDir%\\..\\init.bat\" -new_console:d:%USERPROFILE% -new_console:t:Cmder\n</code></pre>","tags":["tools","cmder"]},{"location":"tools/cmder/index.html#user-alias","title":"User Alias","text":"<p>Allows for writing alias commands, it can be found in <code>cmder/config/user_aliases.cmd</code>. Hereafter just some useful examples.</p> <p>Note</p> <p>Commands can be concatenated with <code>$t</code>.</p> alias<pre><code>-refresh_envvar=\"c:\\work\\OneDrive - HESSO\\config\\scripts\\bat\\envvar_refresh.bat\"\n\n;= goto alias\n-goto-tmp=cd \"c:\\temp\"\n-goto-work=cd \"c:\\work\"\n\n;= Anaconda\n-conda-py38=conda activate py38\n-conda-jlab-export=cd C:\\work\\repo $t conda env export &gt; condaenv.yml\n\n;= SSH alias\n-ssh-relia=ssh -p 98 -L 5900:localhost:5900 -L 9090: localhost:9090 user@url.com\n\n;= Common commands\no=open\n..=cd ..\n...=cd .. $t cd ..\n....=cd .. $t cd .. $t cd ..\n.....=cd .. $t cd .. $t cd .. $t cd ..\n......=cd .. $t cd .. $t cd .. $t cd .. &amp;t cd ..\n.......=cd .. $t cd .. $t cd .. $t cd .. &amp;t cd .. &amp;t cd ..\n........=cd .. $t cd .. $t cd .. $t cd .. &amp;t cd .. &amp;t cd .. &amp;t cd ..\n.........=cd .. $t cd .. $t cd .. $t cd .. &amp;t cd .. &amp;t cd .. &amp;t cd .. &amp;t cd ..\n\n;= Common command shortcuts\ncls=clear\nll=ls -la --show-control-chars -F --color $*\ne.=explorer .\ngl=git log --oneline --all --graph --decorate  $*\nls=ls --show-control-chars -F --color $*\npwd=cd\nunalias=alias /d $1\nvi=vim $*\n</code></pre>","tags":["tools","cmder"]},{"location":"tools/cmder/index.html#user-userprofile","title":"User Userprofile","text":"<p>The user profile allows to run custom command at the start of a terminal. It can be found <code>cmder/config/user_profile.cmd</code></p> user profile<pre><code>:: start ssh agent and load ssh key\ncall \"%GIT_INSTALL_ROOT%/cmd/start-ssh-agent.cmd\" /k exit\nssh-add.exe \"C:\\Users\\zas\\.ssh\\id_rsa\"\n\n:: Activate conda environment\n\"c:\\Users\\zas\\anaconda3\\Scripts\\activate.bat\"\n</code></pre>","tags":["tools","cmder"]},{"location":"tools/docker/index.html","title":"Docker","text":"","tags":["tools","docker"]},{"location":"tools/docker/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","docker"]},{"location":"tools/docker/index.html#introduction","title":"Introduction","text":"<p>Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels. All containers are run by a single operating system kernel and therefore use fewer resources than virtual machines.</p>","tags":["tools","docker"]},{"location":"tools/docker/index.html#additional-information","title":"Additional Information","text":"<ul> <li>Docker Docs</li> <li>Docker - Official Docker page</li> <li>Dockerhub - For community docker container images</li> </ul>","tags":["tools","docker"]},{"location":"tools/docker/index.html#windows-vs-linux-containers","title":"Windows vs Linux Containers","text":"<p>You cannot run Linux and Windows container at the same time. You have to choose and switch between them.</p> <p></p> <p></p>","tags":["tools","docker"]},{"location":"tools/docker/index.html#switch-between-hyper-v-and-virtualbox","title":"Switch between Hyper-V and VirtualBox","text":"<p>In order to \"quickly\" switch between them use the commands below. But a restart if necessary in any case.</p> Hyper-V Disable<pre><code>bcdedit /set hypervisorlaunchtype off\n</code></pre> Hyper-V Enable<pre><code>bcdedit /set hypervisorlaunchtype auto\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/index.html#docker-for-windows-and-virtualbox","title":"Docker for Windows and VirtualBox","text":"<p>Docker for Windows requires two Windows features activated:</p> <ul> <li><code>Hyper-V</code></li> <li><code>Virtual Machine Platform</code></li> <li><code>Windows Hypervisor Platform</code></li> </ul> <p></p> <p>Once activate normal Virtualbox images don't work anymore because the default Type 2 Hypervisor cannot run im parallel with Type 1 Hypervisor Hyper-V. Luckily since Virtualbox v6.0 you can select Hyper-V as default Hypervisor for any image.</p> <p>Warning</p> <p>When run Virtualbox image run under Hyper-V there is a significant performance penalty. (practically unusable)</p> <p></p> <p>Once a image is launched a new icon in the iconbar appears (tortoise with a V)</p> <p></p>","tags":["tools","docker"]},{"location":"tools/docker/basics.html","title":"Basics","text":"","tags":["tools","docker"]},{"location":"tools/docker/basics.html#containers","title":"Containers","text":"<p>Imagine you'd like run a command isolated from everything else on the system. It should only access exactly the resources it is allowed to (storage, CPU, memory), and does not know there is anything else on the machine. The process running inside a container thinks it's the only one and only sees a barebones Linux distro the stuff which is described in the image.</p>","tags":["tools","docker"]},{"location":"tools/docker/basics.html#images","title":"Images","text":"<p>An image, is a blueprint from which an arbitrary number of brand-new containers can be started. Images can't change, but you can start a container from an image, perform operations in it and save another image based on the latest state of the container. No \"currently running commands\" are saved in an image. When you start a container it's a bit like booting up a machine after it was powered down.</p> <p>It's like a powered down computer (with software installed), which is ready to be executed with a single command. Only instead of starting the computer, you create a new one from scratch (container) which looks exactly like the one you chose (image).</p> <p>When starting a container from an image, you usually don't rely on the defaults being right - you provide arguments to the command being executed, mount volumes (directories with data) with your own data and configurations and wire up the container to the network of the host in a way which suits you.</p>","tags":["tools","docker"]},{"location":"tools/docker/basics.html#dockerfiles","title":"Dockerfiles","text":"<p>See also dockerfile</p> <p>A Dockerfile is a set of precise instructions, stating how to create a new Docker image, setting defaults for containers being run based on it and a bit more. In the best case it's going to create the same image for anybody running it at any point in time. Dockerfiles can be seen as the instructions to set up a project - but in executable code. A script which installs the operating system, all necessary parts and makes sure that everything else is in place too.</p> <p>In a Dockerfile, you usually choose what image to take as the \"starting point\" for further operation (<code>FROM</code>), you can execute commands (starting containers from the image of the previous step, executing it, and saving the result as the most-recent image) (<code>RUN</code>) and copy local files into the new image (<code>COPY</code>). Usually, you also specify a default command to run (<code>ENTRYPOINT</code>) and the default arguments (<code>CMD</code>) when starting a container from this image.</p>","tags":["tools","docker"]},{"location":"tools/docker/basics.html#volumes","title":"Volumes","text":"<p>But having data persist is really useful. That's where volumes come in. When starting a Docker container, you can specify that certain directories are mount points for either local directories (of the host machine), or for volumes. Data written to host-mounted directories is straightforward to understand (as you know where it is), volumes are for having persistent or shared data, but you don't have to know anything about the host when using them. You can create a volume, Docker makes sure that it's there and saved somewhere on the host system.</p> <p>When a container exits, the volumes it was using stick around. So if you start a second container, telling it to use the same volumes, it will have all the data of the previous one. You can manage containers using Docker commands (to remove them for example). Docker compose makes dealing with volumes even easier.</p>","tags":["tools","docker"]},{"location":"tools/docker/basics.html#port-forwarding","title":"Port Forwarding","text":"<p>By default, a container is not accessible by other containers, nor from the outside world. However, you can tell Docker to expose a container port to a port of the host machine (either the 127.0.0.1 interface or an external one).</p>","tags":["tools","docker"]},{"location":"tools/docker/common_fixes.html","title":"Common Fixes","text":"","tags":["tools","docker"]},{"location":"tools/docker/common_fixes.html#port-already-in-use","title":"Port already in use","text":"<p>If docker complains that the port can not be bound and is already in use</p> <p>check if the port already used</p> <pre><code>netstat -aon\n</code></pre> <p>check if the port is exluded</p> <pre><code>netsh int ipv4 show excludedportrange protocol=tcp\n</code></pre> <p>cleanup all network devices</p> <pre><code>netcfg -d\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html","title":"<code>docker</code> cmd","text":"<pre><code>docker\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#images","title":"Images","text":"<p>List all currently existing docker images</p> <pre><code>docker images\n</code></pre> output<pre><code>REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE\ndocker101tutorial       latest              ef9eb5245be8        4 days ago          27.5MB\nalpine/git              latest              94f8849864da        3 weeks ago         28.4MB\ncontinuumio/anaconda3   latest              472a925c4385        7 weeks ago         2.73GB\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#pull","title":"Pull","text":"<p>Get a docker image from dockerhub</p> <pre><code>pull &lt;containername&gt;:&lt;tag&gt;\n</code></pre> <pre><code>docker pull &lt;containername&gt;:&lt;tag&gt;\n\ndocker pull ubuntu:latest\ndocker pull ubuntu:20.10\ndocker pull ubuntu\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#build","title":"Build","text":"<p>To build an image from a Dockerfile</p> <pre><code>build &lt;imageName&gt;\n</code></pre> <pre><code>docker build\n</code></pre> <pre><code>docker build -t &lt;repoName&gt;/&lt;imageName&gt;:&lt;tagName&gt; .\n\ndocker build -t local/app:latest .\n</code></pre> <p>Note</p> <p>Please mind the dot <code>.</code> at the end.</p> <p>As per the above command, Docker will start to build images automatically by reading the instructions from the Dockerfile saved in the current working directory.</p> <p>build docker with a given name.</p> <pre><code>-t [&lt;repoName&gt;/]&lt;imageName&gt;[:&lt;tagName&gt;]\n</code></pre> <pre><code>-f &lt;path/to/dockerfile&gt;\n</code></pre> <p>using dockerfile located at a different location.</p> <pre><code>docker build -f &lt;/path/to/a/Dockerfile&gt; .\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#remove-dangling-images","title":"Remove dangling images","text":"<p>Docker images consist of multiple layers. Dangling images, are layers that have no relationship to any tagged images. They no longer serve a purpose and consume disk space.</p> <pre><code>docker rmi $(docker images -f dangling=true -q)\n</code></pre> <p>On Windows:</p> <pre><code>FOR /f \"tokens=\\*\" %i IN ('docker images -f \"dangling=true\" -q')\nDO docker rmi -f %i\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#list-images-and-containers","title":"List images and containers","text":"<pre><code>docker image ls docker container ls docker container ls -a\n</code></pre> <p>Note</p> <p><code>ls -a</code> shows all containers with stopped ones.</p> <p>To remove all stopped containers:</p> <pre><code>docker container prune\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#run","title":"Run","text":"<p>Run a docker image already pulled or build.</p> <pre><code>run &lt;imagename&gt;\n</code></pre> <pre><code>docker run\n</code></pre> <pre><code>-it\n</code></pre> <p>Run docker in interactive mode</p> <pre><code>docker run -it ubuntu\n</code></pre> <pre><code>-d\n</code></pre> <p>Run docker in deamonized</p> <pre><code>docker run -it -d ubuntu\n</code></pre> <pre><code>-v &lt;hostPath&gt;:&lt;containerPath&gt;\n</code></pre> <p>Link host folder to container folder</p> <pre><code># Windows\ndocker run -v //c/data:/data ubuntu\n# Linux\ndocker run -v /data:/data    ubuntu\n</code></pre> <pre><code>-p &lt;hostPort&gt;:&lt;containerPort&gt;\n</code></pre> <p>Forwared container port to host port</p> <pre><code>docker run -p 8080:80 ubuntu\n</code></pre> <pre><code>--name &lt;containername&gt;\n</code></pre> <p>Use the <code>--name</code> flag to give the container a name. Otherwise it is generated randomly.</p> <pre><code>--entrypoint=&lt;command&gt;\n</code></pre> <p>overwrite the CMD command within the dockerfile.</p> <p>Bypass the ENTRYPOINT and run a bash shell </p><pre><code>docker run -it --entrypoint=/bin/bash myimage -i\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#stop-an-remove-a-container","title":"Stop an remove a container","text":"<p>docker container stop  docker container rm </p> <p>Remove a container while running:</p> <p>docker container rm -f </p>","tags":["tools","docker"]},{"location":"tools/docker/docker_cmd.html#exec","title":"Exec","text":"<pre><code>exec &lt;imagename&gt; &lt;command&gt;\n</code></pre> <p>Run a command inside the docker image</p> <pre><code>docker exec -it &lt;dockername&gt; &lt;command&gt;\ndocker exec -it ubuntu bash\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html","title":"Dockerfile","text":"<p>Docker can build images automatically by reading the instructions from a Dockerfile.</p> <p>For more information see: Dockerfile reference</p>","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html#instructions","title":"Instructions","text":"<p>A typical Dockerfile contains the following instructions.</p> Instruction Description <code>FROM</code> It will set the base image of the container. <code>LABEL</code> It is a key-value pair used to specify metadata information of the image. <code>MAINTAINER</code> It will give the detail of the author who created this Docker image. <code>RUN</code> It is used to execute the command on the base image and it will create a new layer. <code>COPY</code> It is used to copy local files to the container. <code>ADD</code> It works same as copy but having some more feature like we can extract local tar and add remote URL. <code>ENV</code> It is used to set environment variables in the key-value pair. These variables are set during the image build and are available after container created. <code>EXPOSE</code> It will expose the port to access the container. Container will listen on this network port. We can access the output using this port. <code>VOLUME</code> It will creates a mount point with the specified name. <code>USER</code> It will sets the user name and user group to use when running the image. <code>WORKDIR</code> It will set the working directory. It will create the directory if not present. <code>CMD</code> It is used to set a command to execute first when the container starts. <code>ENTRYPOINT</code> It is used to set the main command for the image. It works as same as <code>CMD</code> instruction. The only difference between <code>CMD</code> and <code>ENTRYPOINT</code> is instructions are not overwritten in <code>ENTRYPOINT</code>. <pre><code>FROM ubuntu:18.04\n\nLABEL ENV=\"DEVELOPEMENT\"\n\nMAINTAINER maintainer@email.com\n\nRUN apt-get update\nRUN apt-get install tomcat\n\nCOPY /target/plantuml.jar plantuml.jar\n\nADD file.tar.xz / .\nADD http://url.com/git.git /usr/local/folder/\n\nENV DB_NAME=\u201dMySQL\u201d\nENV DB_VERSION=\u201d8.0\u201d\n\nEXPOSE 8080\n\nVOLUME /app/folder\n\nUSER user\nUSER admin\n\nWORKDIR /var/lib/\n\nCMD [\u201cjava\u201d, \u201c-jar\u201d, \u201capp.jar\u201d]\n\nENTRYPOINT [\u201cjava\u201d, \u201c-jar\u201d, \u201capp.jar\u201d]\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html#example","title":"Example","text":"","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html#small","title":"Small","text":"<p>Example of a small dockerfile for a javascript webapplication.</p> <pre><code>FROM ubuntu:latest\nMAINTAINER Prename Name \"user@email.com\"s\nRUN apt-get install -y software-properties-common python\nRUN add-apt-repository ppa:chris-lea/node.js\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" &gt;&gt; /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install -y nodejs\nRUN mkdir /var/www\nADD app.js /var/www/app.js\nCMD [\"/usr/bin/node\", \"/var/www/app.js\"]\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html#python-with-pip","title":"Python with pip","text":"<p>Example of a dockerized python application. All modules are installed with <code>pip</code>. In addition crontab and a docker entryfile is used.</p> <pre><code>FROM python:3.8-slim-buster AS runtime-image\nMAINTAINER tschinz\n\n# Update and install git\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends git cron libcurl4-openssl-dev libssl-dev build-essential\n\n# Create and install crontab\nCOPY docker/crontab /etc/cron.d/crontab\nRUN chmod 0644 /etc/cron.d/crontab\nRUN /usr/bin/crontab /etc/cron.d/crontab\n\nARG dest=/usr/src/app\n\n# Create the application directories\nRUN mkdir $dest\nWORKDIR $dest\nRUN mkdir ./src\nRUN mkdir /data\n\n# Copy the rest of the codebase into the image\nCOPY src/ ./src\nCOPY index.py .\nCOPY docker/requirements.txt /tmp/\n\n# Install python environment\nRUN pip install -r /tmp/requirements.txt\n\n## set environment variables\n\n# Keeps Python from generating .pyc files in the container\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Turns off buffering for easier container logging\nENV PYTHONUNBUFFERED=1\n\n# Run command once at startup\n#CMD [\"python\", \"/usr/src/app/index.py\", \"-av\", \"-o\", \"/data\"]\n# Dummy command to keep container in foreground and running\n#CMD [\"tail\", \"-f\", \"/dev/null\"]\n\n# Setup entrypoint.sh\nCOPY docker/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n</code></pre>","tags":["tools","docker"]},{"location":"tools/docker/dockerfile.html#python-with-wheels","title":"Python with wheels","text":"<p>Example of a dockerized python application. This dockerfiles describes a two stage build. In the first state a wheel executable of the python application is created. In the second the wheels are used to create the docker image. In addition crontab and a docker entryfile is used.</p> <pre><code>########## 1st Stage ##########\nFROM python:3.8-slim-buster AS build-image\n\n# Update and install git\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends libcurl4-openssl-dev libssl-dev build-essential\n\n# instead of installing, create wheels\nRUN pip3 install --upgrade pip\nCOPY setup.py ./tmp\nCOPY src/ ./tmp/src\nRUN pip3 wheel --wheel-dir=/tmp/wheels ./tmp\n\n########## 2nd Stage ##########\nFROM python:3.8-slim-buster AS runtime-image\nMAINTAINER tschinz\n\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends cron libcurl4-openssl-dev libssl-dev\n\n# Create and install crontab\nCOPY docker/crontab /etc/cron.d/crontab\nRUN chmod 0644 /etc/cron.d/crontab\nRUN /usr/bin/crontab /etc/cron.d/crontab\n\nARG dest=/usr/src/app\n\n## copy wheels from build image and install packages from wheels\nCOPY --from=build-image /tmp/wheels /tmp/wheels\n\n## Get all wheels and install them. We had to use '--no-deps' for our 'src' package because\n## this latter needs git to install all its dependencies.\nRUN WHEELS=$(cd /tmp/wheels; ls -1 *.whl | grep -v src | awk -F - '{ gsub(\"_\", \"-\", $1); print $1 }' | uniq) &amp;&amp; \\\n    pip3 install --no-index --find-links=/tmp/wheels $WHEELS &amp;&amp; \\\n    pip3 install --no-index --find-links=/tmp/wheels src --no-deps\n\nRUN rm -rf /tmp/wheels\n\n# Create the application directories\nRUN mkdir /data\nRUN mkdir $dest\nWORKDIR $dest\n\n# Copy the rest of the codebase into the image\nCOPY index.py .\n\n## set environment variables\n\n# Keeps Python from generating .pyc files in the container\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Turns off buffering for easier container logging\nENV PYTHONUNBUFFERED=1\n\n# Run command once at startup\n#CMD [\"python\", \"/usr/src/app/index.py\", \"-av\", \"-o\", \"/data\"]\n# Dummy command to keep container in foreground and running\n#CMD [\"tail\", \"-f\", \"/dev/null\"]\n\n# Setup entrypoint.sh\nCOPY docker/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n</code></pre> <p>Warning</p> <p>docker entryfile needs to have linux line endings <code>LF</code>.</p> <p>Warning</p> <p>crontab file needs to have an empty line at the end.</p>","tags":["tools","docker"]},{"location":"tools/git/index.html","title":"Git","text":"","tags":["tools","cli","git"]},{"location":"tools/git/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","cli","git"]},{"location":"tools/git/commands.html","title":"Git Commands","text":"<p>Figure 1: Git Cheatsheet</p>","tags":["tools","cli","git"]},{"location":"tools/git/commands.html#start-a-working-area","title":"Start a working area","text":"Command Description <code>clone</code> Clone a repository into a new directory <code>init</code> Create an empty Git repository or reinitialize an existing one","tags":["tools","cli","git"]},{"location":"tools/git/commands.html#work-on-the-current-change","title":"Work on the current change","text":"Command Description <code>add</code> Add file contents to the index <code>mv</code> Move or rename a file, a directory, or a symlink <code>reset</code> Reset current HEAD to the specified state <code>rm</code> Remove files from the working tree and from the index","tags":["tools","cli","git"]},{"location":"tools/git/commands.html#examine-the-history-and-state","title":"Examine the history and state","text":"Command Description <code>log</code> Show commit logs <code>show</code> Show various types of objects <code>status</code> Show the working tree status","tags":["tools","cli","git"]},{"location":"tools/git/commands.html#grow-mark-and-tweak-your-common-history","title":"Grow, mark and tweak your common history","text":"Command Description <code>branch</code> List, create, or delete branches <code>checkout</code> Switch branches or restore working tree files <code>commit</code> Record changes to the repository <code>diff</code> Show changes between commits, commit and working tree, etc <code>merge</code> Join two or more development histories together <code>rebase</code> Reapply commits on top of another base tip <code>tag</code> Create, list, delete or verify a tag object signed with GPG","tags":["tools","cli","git"]},{"location":"tools/git/commands.html#collaborate","title":"Collaborate","text":"Command Description <code>fetch</code> Download objects and refs from another repository <code>pull</code> Fetch from and integrate with another repository or a local branch <code>push</code> Update remote refs along with associated objects","tags":["tools","cli","git"]},{"location":"tools/git/flow.html","title":"Git Flow","text":"","tags":["tools","cli","git","gitflow"]},{"location":"tools/git/flow.html#branches","title":"Branches","text":"<ul> <li><code>master</code> - protected branch - Production releases</li> <li><code>develop</code> - protected branch - main developement merge of all <code>feature</code> branches</li> <li><code>feature/*</code> - for each feature a separate feature branch is created fork from <code>develop</code></li> <li><code>release</code> - preparing <code>development</code> branch for release on <code>master</code> branch, mainly for bugfixes</li> <li><code>hotfix</code> - quick and dirty hotfix directly into <code>develop</code> and <code>master</code> branch</li> </ul> <p>Figure 1: Git Flow</p>","tags":["tools","cli","git","gitflow"]},{"location":"tools/git/general.html","title":"Git General","text":"<p>Figure 1: Git Transport</p>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#links","title":"Links","text":"<ul> <li>Bitbucket</li> <li>Github</li> <li>Gitlab</li> <li>Official Git Webpage</li> <li>Tutorial Git Branching</li> </ul>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#global-setup","title":"Global setup","text":"<pre><code>git config --global user.name \"username\"\ngit config --global user.email \"your@email.com\"\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#check-setup","title":"Check setup","text":"<pre><code>git config --list\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#save-credentials","title":"Save Credentials","text":"<pre><code>git config credential.helper store\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#not-verify-https-certificates","title":"Not verify https Certificates","text":"<pre><code>git config --global http.sslVerify false\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#set-commandline-colors","title":"Set commandline colors","text":"<pre><code>git config color.status.added \"green bold\"\ngit config color.status.changed \"yellow bold\"\ngit config color.status.untracked \"red bold\"\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#set-commandline-editor","title":"Set commandline editor","text":"<pre><code>git config --global core.editor \"nano -w\"\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#git-repo-creation-cloning","title":"Git Repo Creation / Cloning","text":"","tags":["tools","cli","git"]},{"location":"tools/git/general.html#create-new-repo","title":"Create new repo","text":"<pre><code>git init\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#status-of-repo","title":"Status of repo","text":"<pre><code>git status\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#settings-of-repo","title":"Settings of repo","text":"<pre><code>git remote -v\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#clone-existing-repo","title":"Clone existing repo","text":"<pre><code>git clone git@gitlab.hevs.ch:course/ElN/eln_labs.git\ncd eln_labs\ntouch README.md\ngit add README.md\ngit commit -m \"add README\"\ngit push -u origin master\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#revert-to-last-commit-state","title":"Revert to last commit state","text":"<p>go back to last committed servers state (can't be undone)</p> <pre><code>git reset --hard\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#existing-folder","title":"Existing folder","text":"<pre><code>cd existing_folder\ngit init\ngit remote add origin git@gitlab.hevs.ch:course/ElN/eln_labs.git\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin master\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#switch-to-new-remote","title":"Switch to new Remote","text":"<pre><code>cd existing_repo\ngit remote rename origin old-origin\ngit remote add origin git@gitlab.hevs.ch:course/ElN/eln_labs.git\ngit push -u origin --all\ngit push -u origin --tags\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#get-remote-information","title":"Get Remote Information","text":"<pre><code>git remote show origin\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#change-push-remote-url","title":"Change Push Remote URL","text":"<pre><code>git remote set-url --push &lt;new_repo_push_url&gt;\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#git-repo-information","title":"Git Repo information","text":"<pre><code># Status about current files ion folder\ngit status\n\n# Status about last commits\ngit log --oneline\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#add-files","title":"Add Files","text":"<pre><code># Stage a File\ngit add README.md\n\n# Commit file\ngit commit \u2013m \"Initial commit, add README file\"\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#checkout","title":"Checkout","text":"<pre><code># Checkout certain commit\ngit checkout e006db0 -b inspectingPrev\n\n# Checkout given branch\ngit chekout master\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#push","title":"Push","text":"<pre><code>git push origin master\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#branch","title":"Branch","text":"<pre><code># Create new branch\ngit branch dev_branch_1\n\n# List all existing branches\ngit branch\n\n# Checkout certain branch\ngit branch dev_branch_1\n\n# Delete certain branch\ngit branch -d dev_branch_1\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/general.html#merge","title":"Merge","text":"<pre><code># Checkout branch you want to merge into\ngit checkout master\n# Merge the two branches\ngit merge dev_branch_1\n</code></pre>","tags":["tools","cli","git"]},{"location":"tools/git/git-cliff.html","title":"git-cliff","text":"","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#git-cliff-automated-changelog-generation","title":"Git-Cliff: Automated Changelog Generation","text":"<p>Git-Cliff is a powerful tool for automatically generating changelogs from your Git commit history. By following a structured commit message convention, you can effortlessly create professional changelogs for your projects.</p> <p></p> <p>Why git-cliff?</p> <ul> <li>Automated Changelog Generation: Save time by generating changelogs directly from commit messages.</li> <li>Customizable: Define your own rules for grouping commits and formatting the changelog.</li> <li>Supports Conventional Commits: Works seamlessly with the widely-used Conventional Commits standard.</li> </ul>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#commit-message-format","title":"Commit Message Format","text":"<p>To get the best results with <code>git-cliff</code>, use the Conventional Commit format:</p> <pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;description&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre> <p>Key Points:</p> <ul> <li>Type: The category of the change (feat, fix, docs, etc.).<ul> <li><code>feat</code>: A new feature or functionality.</li> <li><code>fix</code>: A bug fix.</li> <li><code>docs</code>: Changes to documentation only.</li> <li><code>style</code>: Code style changes (formatting, indentation, etc.) that do not affect behavior.</li> <li><code>refactor</code>: Code changes that neither fix bugs nor add features (e.g., code improvements).</li> <li><code>test</code>: Adding or modifying tests.</li> <li><code>chore</code>: Non-code tasks (e.g., build system, CI/CD changes).</li> <li><code>perf</code>: Performance optimization or improvements.</li> <li><code>build</code>: Changes to the build system or dependencies (e.g., upgrading dependencies).</li> <li><code>ci</code>: Changes to CI/CD configuration or scripts.</li> <li><code>revert</code>: Reverting a previous commit.</li> <li><code>config</code>: Updates to configuration files.</li> <li><code>deps</code>: Dependency updates (similar to build but specific to libraries/modules).</li> <li><code>hotfix</code>: Quick fixes for critical bugs (common in agile projects).</li> </ul> </li> <li>Scope: The specific area/module impacted (optional).<ul> <li><code>api</code>: API-related changes or endpoints.</li> <li><code>auth</code>: Authentication and authorization.</li> <li><code>db</code>: Database-related changes (e.g., schema updates).</li> <li><code>ui</code>: User interface components.</li> <li><code>ux</code>: User experience or design improvements.</li> <li><code>core</code>: Core functionality or utilities.</li> <li><code>docs</code>: Documentation updates or files.</li> <li><code>deps</code>: Dependency management (adding, removing, or updating libraries).</li> <li><code>config</code>: Configuration files or environment settings.</li> <li><code>build</code>: Build process or pipeline (e.g., webpack, Docker, Makefiles).</li> <li><code>ci</code>: Continuous Integration/Delivery pipelines.</li> <li><code>i18n</code>: Internationalization and localization.</li> <li><code>testing</code>: Testing frameworks or test cases.</li> <li><code>security</code>: Security updates or fixes.</li> <li><code>routing</code>: Routing and navigation logic.</li> <li><code>logging</code>: Logging and monitoring.</li> <li><code>metrics</code>: Application metrics and telemetry.</li> <li><code>styles</code>: Styling updates (e.g., CSS or theming).</li> <li><code>infra</code>: Infrastructure-related changes.</li> <li><code>deps</code>: Dependency changes (similar to build but more focused).</li> </ul> </li> <li>Description: A short, imperative description of the change.</li> <li>Body: Additional context or motivation (optional).</li> <li>Footer: Notes for breaking changes or issue references (optional).</li> </ul>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#examples","title":"Examples","text":"<p>New Feature</p> <pre><code>feat(ui): add dark mode toggle\n\nAdded a dark mode toggle to the settings menu, allowing users to switch\nbetween light and dark themes.\n</code></pre> <p>Bug Fix </p><pre><code>fix(api): resolve null pointer exception on login\n\nFixed an issue where the login API would throw a null pointer exception\nif the email field was missing.\n</code></pre> <p>Breaking Change</p> <pre><code>feat(auth): migrate to OAuth2\n\nBREAKING CHANGE: Updated the authentication system to use OAuth2.\nExisting users must update their access tokens.\n</code></pre>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#configuration","title":"Configuration","text":"<p>Here\u2019s an example <code>.git-cliff.toml</code> configuration file to customize the changelog:</p> <ul> <li>git-cliff-default.toml</li> <li>git-cliff-detailed.toml</li> </ul>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#my-custom-configuration","title":"My custom configuration","text":"<p>git-cliff-custom.toml</p> <p>Here some important parts of my custom configuration</p> <pre><code># parse the commits based on https://www.conventionalcommits.org\nconventional_commits = true\n# filter out the commits that are not conventional\nfilter_unconventional = false\n# process each line of a commit as an individual commit\nsplit_commits = true\n</code></pre> <p>The regex parser is flexible and supporting different types</p> <ul> <li><code>feat</code>, <code>feature</code>, <code>features</code></li> <li><code>fix</code>, <code>fixes</code></li> <li><code>doc</code>, <code>docs</code></li> <li><code>perf</code>, <code>performance</code>, <code>performances</code></li> <li><code>refactor</code>, <code>refactors</code></li> <li><code>style</code>, <code>styles</code></li> <li><code>chore</code>, <code>chores</code></li> <li><code>security</code></li> <li><code>revert</code>, <code>reverts</code></li> </ul> <p>As well as the legacy commits I did in the past</p> <ul> <li><code>ADD</code>, <code>add</code></li> <li><code>CHG</code>, <code>chg</code></li> <li><code>REM</code>, <code>rem</code></li> <li><code>MOV</code>, <code>mov</code></li> <li><code>FIX</code>, <code>fix</code></li> <li><code>NOTE</code>, <code>note</code></li> <li><code>WARN</code>, <code>warn</code></li> </ul> <pre><code># regex for parsing and grouping commits\ncommit_parsers = [\n  { message = \"^feat(ure)?s?\", group = \"&lt;!-- 0 --&gt;\ud83d\ude80 Features\" },\n  { message = \"^fix(es)?\", group = \"&lt;!-- 1 --&gt;\ud83d\udc1b Bug Fixes\" },\n  { message = \"^docs?\", group = \"&lt;!-- 3 --&gt;\ud83d\udcda Documentation\" },\n  { message = \"^perf(ormance)?s?\", group = \"&lt;!-- 4 --&gt;\u26a1 Performance\" },\n  { message = \"^refactors?\", group = \"&lt;!-- 2 --&gt;\ud83d\ude9c Refactoring\" },\n  { message = \"^styles?\", group = \"&lt;!-- 5 --&gt;\ud83c\udfa8 Styling\" },\n  { message = \"^tests?\", group = \"&lt;!-- 6 --&gt;\ud83e\uddea Testing\" },\n  { message = \"^chores?\", group = \"&lt;!-- 7 --&gt;\u2699\ufe0f Miscellaneous Tasks\" },\n  { message = \"^security\", group = \"&lt;!-- 8 --&gt;\ud83d\udee1\ufe0f Security\" },\n  { body = \".*security\", group = \"&lt;!-- 8 --&gt;\ud83d\udee1\ufe0f Security\" },\n  { message = \"^reverts?\", group = \"&lt;!-- 9 --&gt;\u25c0\ufe0f Revert\" },\n\n  # Conventional commit exclusions\n  { message = \"^chores?\\\\(releases?\\\\):\", skip = true },\n  { message = \"^chores?\\\\(deps?.*\\\\)\", skip = true },\n  { message = \"^chores?\\\\(pr\\\\)\", skip = true },\n  { message = \"^chores?\\\\(pull\\\\)\", skip = true },\n  { message = \"^chores?\\\\(version\\\\):\", skip = true },\n\n  # Legacy commit styles\n  { message = \"(?i)^ADD\", group = \"&lt;!-- 0 --&gt;\ud83d\ude80 Features\" },\n  { message = \"(?i)^CHG\", group = \"&lt;!-- 0 --&gt;\ud83d\ude80 Features\" },\n  { message = \"(?i)^REM\", group = \"&lt;!-- 2 --&gt;\ud83d\ude9c Refactoring\" },\n  { message = \"(?i)^MOV\", group = \"&lt;!-- 2 --&gt;\ud83d\ude9c Refactoring\" },\n  { message = \"(?i)^FIX\", group = \"&lt;!-- 1 --&gt;\ud83d\udc1b Bug Fixes\" },\n  { message = \"(?i)^NOTE\", group = \"&lt;!-- 10 --&gt;\ud83d\udcbc Other\" },\n  { message = \"(?i)^WARN\", group = \"&lt;!-- 8 --&gt;\ud83d\udee1\ufe0f Security\" },\n\n  { message = \".*\", group = \"&lt;!-- 10 --&gt;\ud83d\udcbc Other\" },\n]\n</code></pre>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/git-cliff.html#getting-started","title":"Getting started","text":"<ul> <li>Install <code>git-cliff</code> <pre><code>cargo install git-cliff\n</code></pre></li> <li>Initialise <code>git-cliff</code> <pre><code>git cliff --init\n</code></pre>   or create a <code>.git-cliff.toml</code> file in your project directory.</li> <li>Generate: Run the following command to create a changelog:   <pre><code>git cliff\ngit cliff -o CHANGELOG.md\ngit cliff --tag v0.1.1\n</code></pre></li> </ul>","tags":["tools","cli","git","git-cliff","commits to changelog"]},{"location":"tools/git/github.html","title":"Github","text":"","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#access-files-and-folder","title":"Access Files and Folder","text":"","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#access-a-folder-on-github-tree","title":"Access a folder on github tree","text":"<pre><code>https://github.com/&lt;user&gt;/&lt;repo&gt;/tree/&lt;branch&gt;/&lt;folder&gt;/&lt;subfolder&gt;\n</code></pre> <pre><code>https://github.com/tschinz/znotes/tree/main/docs/coding/rust/docs\n</code></pre> https://github.com/tschinz/znotes/tree/main/docs/coding/rust/docs","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#access-a-file-on-github-blob","title":"Access a file on github blob","text":"<pre><code>https://github.com/&lt;user&gt;/&lt;repo&gt;/blob/&lt;branch&gt;/&lt;folder&gt;/&lt;subfolder&gt;/&lt;file&gt;\n</code></pre> <pre><code>https://github.com/tschinz/znotes/blob/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf\n</code></pre> https://github.com/tschinz/znotes/blob/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#download-a-file-from-github-raw","title":"Download a file from github raw","text":"<pre><code>https://github.com/&lt;user&gt;/&lt;repo&gt;/raw/&lt;branch&gt;/&lt;folder&gt;/&lt;subfolder&gt;/&lt;file&gt;\n</code></pre> <pre><code>https://github.com/tschinz/znotes/raw/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf\n</code></pre> https://github.com/tschinz/znotes/raw/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#view-a-pdf-from-github-in-the-browser-with-raw-and-google-docs","title":"View a PDF from github in the browser with raw and google docs","text":"<pre><code>https://docs.google.com/viewer?url=https://github.com/&lt;user&gt;/&lt;repo&gt;/raw/&lt;branch&gt;/&lt;folder&gt;/&lt;subfolder&gt;/&lt;file&gt;\n</code></pre> <pre><code>https://docs.google.com/viewer?url=https://github.com/tschinz/znotes/raw/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf\n</code></pre> https://docs.google.com/viewer?url=https://github.com/tschinz/znotes/raw/main/docs/coding/rust/docs/rust_container-cheatsheet.pdf","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#example","title":"Example","text":"<p> Download the Cheatsheet  View the Cheatsheet</p>","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#advanced-search","title":"Advanced Search","text":"","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#general","title":"General","text":"<pre><code>user:&lt;user-name&gt;\nuser:tschinz\n\nrepo:&lt;repo-name&gt;\nrepo:cheatsheet\nrepo:tschinz/znotes\n</code></pre>","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#files","title":"Files","text":"<pre><code>filename:&lt;filename&gt;\nfilename:conf.py\n\nextension:&lt;fileextension&gt;\nextension:jpg\nextension:py\n\npath:&lt;folder_path&gt;\npath:/src/_static/\n</code></pre>","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#date-time","title":"Date Time","text":"<pre><code>created:&gt;2019-12-01\ncreated:2019-12-01\n</code></pre>","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#language","title":"Language","text":"<p>Languages start with a big letter</p> <p><code>C</code>, <code>Python</code>, <code>Perl</code>, <code>C++</code>, <code>Tcl</code>, <code>TeX</code></p> <pre><code>lang:&lt;languagename&gt;\nlang:Python\n</code></pre>","tags":["tools","cli","git","github"]},{"location":"tools/git/github.html#repo-options","title":"Repo Options","text":"<pre><code>stars:0..100\nstars:200\nstars:&gt;200\n\nforks:0..100\nforks:200\nforks:&gt;200\n\nsize:&lt;inKb&gt;\nsize:\n\nfork:only\nfork:true\nfork:false\n</code></pre>","tags":["tools","cli","git","github"]},{"location":"tools/git/gitignore.html","title":".gitignore","text":"<p>Get useful gitignore at gitignore.io</p> <p>Gitignore entries</p> <pre><code>*.bak           # all files with a given ending\nDS_Store        # specific files\n._*             # all ._ files\n\nbuild/          # folder\nbuild/out       # subfolder\n\nbuild/*         # all files in folder\nbuild/out/*     # all files in subfolder\n\n!build/file.txt # except the given file\n\n**/Entity/*~    # some subfolder name\n</code></pre>","tags":["tools","cli","git","gitignore"]},{"location":"tools/git/submodules.html","title":"Git Submodules","text":"","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#clone-repo-with-submodules","title":"Clone Repo with submodules","text":"<pre><code>git clone --recursive [URL to Git repo]\n</code></pre>","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#pull-changes","title":"Pull changes","text":"","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#pull-all-changes-in-the-repo-including-changes-in-the-submodules","title":"Pull all changes in the repo including changes in the submodules","text":"<pre><code>git pull --recurse-submodules\n</code></pre>","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#pull-all-changes-for-the-submodules","title":"Pull all changes for the submodules","text":"<pre><code>git submodule update --remote\n</code></pre>","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#add-submodule-and-define-the-master-branch-as-the-one-you-want-to-track","title":"Add submodule and define the master branch as the one you want to track","text":"<pre><code>git submodule add -b master [URL to Git repo]\n\ngit submodule init\n</code></pre>","tags":["tools","cli","git","submodules"]},{"location":"tools/git/submodules.html#move-submodule","title":"Move Submodule","text":"<pre><code>git mv a b\n</code></pre>","tags":["tools","cli","git","submodules"]},{"location":"tools/google/index.html","title":"Google","text":"","tags":["tools","google"]},{"location":"tools/google/index.html#advanced-search","title":"Advanced Search","text":"Title Searchcommand Description AND <code>term1 AND term2</code> Both terms need to be present OR <code>term1 OR term2</code> One of terms need to be present Exlude <code>term1 -term2</code> term1 but not term2 need to be present Wildcard <code>term1 * term2</code> <code>*</code> will act as a wildcard and match any word or phrase Grouping <code>(term1 OR term2) AND term3</code> create search term hierarchies Cache <code>cache:google.com</code> returns the most recent version of the webpage filetype <code>searchterm filetype:svg     | filetype:pdf</code> Searched for files with a given type Site specific search <code>site:apple.com</code> Searches only on a give n website Dictionary <code>define:term</code> Returns meaning of the word","tags":["tools","google"]},{"location":"tools/google/index.html#gmail","title":"Gmail","text":"","tags":["tools","google"]},{"location":"tools/google/index.html#attachements","title":"Attachements","text":"<pre><code>size:5mb has:attachment\n</code></pre> <pre><code>size:10mb has:attachment filename:pdf\n</code></pre>","tags":["tools","google"]},{"location":"tools/google/index.html#sizes","title":"Sizes","text":"<pre><code>larger_than:5m smaller_than:8M\n</code></pre>","tags":["tools","google"]},{"location":"tools/google/index.html#not-labeled","title":"Not labeled","text":"<p>Reliable</p> <pre><code>-has:userlabels -in:sent -in:chat -in:draft -in:inbox\n</code></pre> <p>Less reliable</p> <pre><code>has:nouserlabels -in:sent -in:chat -in:draft -in:inbox\n</code></pre> <p>Impractical</p> <pre><code>-label:{label1 label2} -label:label-three -label:label-four -in:sent -in:chat -in:inbox\n</code></pre>","tags":["tools","google"]},{"location":"tools/heroku/index.html","title":"Heroku","text":"<p>Heroku is a cloud platform as a service (PaaS) supporting several programming languages. One of the first cloud platforms, Heroku has been in development since June 2007, when it supported only the Ruby programming language, but now supports Java, Node.js, Scala, Clojure, Python, PHP, and Go. For this reason, Heroku is said to be a polyglot platform as it has features for a developer to build, run and scale applications in a similar manner across most languages.</p> <p>How to deploy Heroku for a python application see also: PLotly Dash.</p>","tags":["tools","heroku"]},{"location":"tools/heroku/index.html#heroku-cli","title":"Heroku CLI","text":"<p>Heroku provides a commandline interface to access the log of the webserver. The deploy activity can be seen on the webinterface, but the webserver logs only via the <code>heroku-cli</code>.</p> <ul> <li>Heroku CLI Documentation</li> </ul> Basic heroku-cli commands<pre><code># See list of deployed apps\nheroku apps\n\n# See log of one app\nheroku logs -a choose-your-app-name\n</code></pre>","tags":["tools","heroku"]},{"location":"tools/jetbrains/index.html","title":"JetBrains IDE","text":"","tags":["tools","jetbrains"]},{"location":"tools/jetbrains/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","jetbrains"]},{"location":"tools/jetbrains/index.html#introduction","title":"Introduction","text":"<p>JetBrains has different applications.</p> <ul> <li>Intellij IDEA - General IDE can be used for any language, but mainly used for Java</li> <li>PyCharm - Python specific</li> <li>... I don't care about any other</li> </ul> <p>It can be heavily extented with plugins found on the Plugin Repository</p> <p>See also Intellij Idea for Spinal specific use case</p>","tags":["tools","jetbrains"]},{"location":"tools/jetbrains/intellij_idea.html","title":"Intellij IDEA","text":"<ul> <li>Cheatsheet Intellij IDEA</li> </ul> <p>Intellij IDEA is a general IDE can be used for any language, but mainly used for Java. See also Intellij IDEA for Spinal specific use case.</p>","tags":["tools","jetbrains","intellij idea"]},{"location":"tools/jetbrains/pycharm.html","title":"PyCharm","text":"<p>PyCharm</p>","tags":["tools","jetbrains","pycharm"]},{"location":"tools/jupyter/index.html","title":"Jupyter","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html","title":"Common Functions","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#common-jupyterlab-and-nodejs-functions","title":"Common Jupyterlab and Nodejs functions","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#install-nvm","title":"install nvm","text":"<pre><code>https://github.com/creationix/nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | zsh\n### Install latest nodejs\nnpm install node # \"node\" is an alias for the latest version\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#install-nodejs-via-conda","title":"Install nodejs via conda","text":"<pre><code>conda install -c conda-forge nodejs\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#update-npm","title":"update npm","text":"<pre><code>sudo npm install -g npm\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#rebuild-jupyterlab","title":"Rebuild Jupyterlab","text":"<pre><code>jupyter lab build\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#remove-nodejs-and-npm","title":"Remove nodejs and npm","text":"<pre><code>conda remove nodejs npm\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#auto-import-of-libraries","title":"Auto import of Libraries","text":"<ul> <li>Navigate to <code>~/.ipython/profile_default</code></li> <li>Create a folder called <code>startup</code> if it's not already there</li> <li>Add a new Python file called <code>start.py</code></li> <li>Put your favorite imports in this file</li> <li>Launch IPython or a Jupyter Notebook and your favorite libraries will be automatically loaded every time!</li> </ul> <p>Example <code>start.py</code></p> <pre><code>import pandas as pd\nimport numpy as np\n\n# Pandas options\npd.options.display.max_columns = 30\npd.options.display.max_rows = 20\n\nfrom IPython import get_ipython\nipython = get_ipython()\n\n# If in ipython, load autoreload extension\nif 'ipython' in globals():\n    print('\\nWelcome to IPython!')\n    ipython.magic('load_ext autoreload')\n    ipython.magic('autoreload 2')\n\n# Display all cell outputs in notebook\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'\n\n# Visualization\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline(connected=True)\ncf.set_config_file(theme='pearl')\n\nprint('Your favorite libraries have been loaded.')\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/common_functions.html#check","title":"Check","text":"<p>Confirm that Libraries are loaded with</p> <pre><code>globals()\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html","title":"Jupyter Converts","text":"<p>Some help to getting jupyter book to non developers</p>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#nbconvert","title":"nbconvert","text":"<p>Converts jupyter notebook to other formats</p> <pre><code>jupyter nbconvert --to &lt;format&gt; notebook.ipynb\n</code></pre> <p>formats are:</p> <ul> <li><code>--to html</code> - HTML<ul> <li><code>--template full</code> (default)</li> <li><code>--template basic</code></li> </ul> </li> <li><code>--to latex</code> - LaTeX<ul> <li><code>--template article</code> (default)</li> <li><code>--template report</code></li> <li><code>--template basic</code></li> </ul> </li> <li><code>--to pdf</code> - PDF<ul> <li><code>--template article</code> (default)</li> <li><code>--template report</code></li> <li><code>--template basic</code></li> </ul> </li> <li><code>--to sildes</code> - Reveal.js HTML slideshow</li> <li><code>--to markdown</code> - Markdown</li> <li><code>--to rst</code> - reStructuredText</li> <li><code>--to script</code> - executable script (<code>.py</code>)</li> <li><code>--to notebook</code> -</li> </ul>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#convert-to-python-for-linting","title":"Convert to python for linting","text":"<pre><code>jupyter nbconvert --to script test.ipynb\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#convert-to-html","title":"Convert to html","text":"<pre><code>jupyter nbconvert --to html test.ipynb\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#convert-to-pdf","title":"Convert to pdf","text":"<p>needs Latex installed see: LaTeX</p> <pre><code>jupyter nbconvert --to latex test.ipynb\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#execute-a-notebook-in-cmdline","title":"Execute a notebook in cmdline","text":"<p>More info in official doc</p> <pre><code>jupyter nbconvert --to notebook --execute --inplace notebook.ipynb\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/convert.html#little-mix-of-everything","title":"Little Mix of everything","text":"<pre><code>#!/bin/bash\n\n# merge two jupyter notebooks\nnbmerge Chapter1.ipynb Chapter2.ipynb  &gt; Ebook.ipynb\n\n# convert jupyter notebook to html\njupyter nbconvert --to html Ebook.ipynb --template=basic\n\n# convert html to ebook with calibre tools\nebook-convert.exe Ebook.html Ebook.epub\nebook-convert.exe Ebook.html Ebook.azw3\n\n# Convert single chapters from notebook to html\njupyter nbconvert --to html Chapter1.ipynb\njupyter nbconvert --to html Chapter2.ipynb\n\n# with wktohtml convert html to pdf\nwkhtmltopdf --enable-internal-links -L 10mm -R 9.5mm -T 10mm -B 9.5mm Chapter1.html Chapter1.pdf\nwkhtmltopdf --enable-internal-links -L 10mm -R 9.5mm -T 10mm -B 9.5mm Chapter2.html Chapter2.pdf\n\n# combine pdfs with cpdf\ncpdf Chapter1.pdf Chapter2.pdf -o Ebook.pdf\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html","title":"General","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#config","title":"Config","text":"<pre><code># Show the location of the config directory\njupyter --config-dir\n\n# Show the location of the data directory\njupyter --data-dir\n\n# Show all Jupyter directories and search paths\njupyter --paths\n\n# List notebook extensions\njupyter nbextension list\n\n# List running notebook servers\njupyter notebook list\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#change-password","title":"Change Password","text":"<pre><code>jupyter notebook password\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#jupyterlab","title":"Jupyterlab","text":"<p>Create a config file</p> <pre><code>jupyter lab --generate-config\n</code></pre> <p>The Config file is located at the config repo: jupyterlab_settings.json jupyter_notebook_config.py</p>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#extensions","title":"Extensions","text":"<p>Get installed extensions</p> <pre><code>jupyter labextension list\n</code></pre> <p>Install extension</p> <pre><code>jupyter labextension install &lt;extensionsname&gt;\n</code></pre> <p>For Matplotlib see: https://github.com/matplotlib/jupyter-matplotlib</p> <p>See all Jupyterlab Extensions: https://www.npmjs.com/search?q=keywords:jupyterlab-extension</p>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#kernels","title":"Kernels","text":"<p>Inspect available Kernels</p> <pre><code>jupyter kernelspec list\n</code></pre> <p>Use a specific kernel</p> <pre><code>jupyter qtconsole --kernel=machine-learning-jh44uwir\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/general.html#troubleshoot","title":"Troubleshoot","text":"<pre><code>jupyter troubleshoot\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/install_plotly_dash.html","title":"Plotly Dash","text":"<pre><code># The core dash backend\npip install dash==0.43.0\n# DAQ components (newly open-sourced!)\npip install dash-daq==0.1.0\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#checking-versions","title":"Checking Versions","text":"<pre><code>import dash_core_components\nprint(dash_core_components.__version__)\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#getting-help","title":"Getting help","text":"<pre><code>help(dcc.Dropdown)\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#jupyter-integration-install","title":"Jupyter integration install","text":"<pre><code>git clone https://github.com/plotly/jupyterlab-dash\ncd jupyterlab-dash\nnpm install\nnpm run build\njupyter labextension link .\n~/anaconda3/bin/./python -m pip install -e .\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#to-rebuild-the-package-and-the-jupyterlab-app","title":"To rebuild the package and the JupyterLab app","text":"<pre><code>npm run build\njupyter lab build\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#additional-packages","title":"Additional Packages","text":"<pre><code>pip install aiohttp\npip install django_plotly_dash\npip install jupyter_plotly_dash\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/install_plotly_dash.html#install-dash-daq","title":"Install Dash DAQ","text":"<pre><code>pip install dash_daq\n</code></pre>","tags":["tools","jupyter","Plotly Dash"]},{"location":"tools/jupyter/installation.html","title":"Installation","text":"<p>see also jupyter config</p>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#my-extension-list","title":"My Extension list","text":"<pre><code>jupyter labextension install @jupyter-widgets/jupyterlab-manager\njupyter labextension install @jupyterlab/statusbar-extension\njupyter labextension install @jupyterlab/plotly-extension\njupyter labextension install @jupyterlab/toc\njupyter labextension install @deathbeds/jupyterlab_graphviz\njupyter labextension install @ryantam626/jupyterlab_sublime\njupyter labextension install jupyter-matplotlib\njupyter labextension install @mflevine/jupyterlab_html\njupyter labextension install jupyterlab-drawio\njupyter labextension install jupyterlab-flake8\njupyter labextension install jupyterlab_hidecode\njupyter labextension install @lckr/jupyterlab_variableinspector\njupyter labextension install @jupyter-widgets/jupyterlab-manager\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#ide-features","title":"IDE Features","text":"<p>nbdev adds jupyter with the follwoing features:</p> <ul> <li>a variable explorer, a list of breakpoints and a source preview</li> <li>the possibility to navigate the call stack (next line, step in, step out etc.)</li> <li>the ability to set breakpoints intuitively, next to the line of interest</li> <li>flags to indicate where the current execution has stopped</li> </ul> <pre><code>pip install nbdev\nconda install xeus-python -c conda-forge\npip install jupyter_server\njupyter labextension install @jupyterlab/debugger\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#all-in-one-install","title":"All in one install","text":"<pre><code>jupyter labextension install @jupyter-widgets/jupyterlab-manager @jupyterlab/statusbar-extension @jupyterlab/plotly-extension @jupyterlab/toc @deathbeds/jupyterlab_graphviz @ryantam626/jupyterlab_sublime jupyter-matplotlib @mflevine/jupyterlab_html jupyterlab-drawio jupyterlab-flake8 jupyterlab_hidecode @lckr/jupyterlab_variableinspector @jupyter-widgets/jupyterlab-manager\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#add-install-r-to-jupyter","title":"Add install R to jupyter","text":"<pre><code>conda install -c r r-essentials\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#add-install-pandoc-and-inkscape-to-conda","title":"Add install pandoc and inkscape to conda","text":"<pre><code>conda install -c conda-forge pandoc\nconda install -c conda-forge inkscape\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#install-python-additional-stuff","title":"Install Python Additional Stuff","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#graphviz","title":"Graphviz","text":"<p>Install Graphviz from https://graphviz.gitlab.io/download/ put Graphviz/bin in your <code>PATH</code></p> <pre><code>pip install graphviz\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#install-python-libraries","title":"Install python Libraries","text":"<pre><code>pip install pixiedust\npip install SchemDraw\npip install nbwavedrom\npip install flake8\npip install pyflakes\npip install nbconvert\npip install watermark\npip install sty\n</code></pre> <p>oneline</p> <pre><code>pip install pixiedust SchemDraw nbwavedrom flake8 pyflakes nbconvert graphviz watermark\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#problems","title":"Problems","text":"","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#anaconda-navigator-not-starting","title":"Anaconda Navigator not starting","text":"<p>When starting anaconda-navigator produces the follwowing error.</p> <pre><code>$ anaconda-navigator.exe\nTraceback (most recent call last):\n  File \"c:\\Users\\silvan.zahno\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\qtpy\\__init__.py\", line 202, in &lt;module&gt;\n    from PySide import __version__ as PYSIDE_VERSION  # analysis:ignore\nModuleNotFoundError: No module named 'PySide'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\Users\\silvan.zahno\\AppData\\Local\\Continuum\\anaconda3\\Scripts\\anaconda-navigator-script.py\", line 6, in &lt;module&gt;\n    from anaconda_navigator.app.main import main\n  File \"c:\\Users\\silvan.zahno\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\anaconda_navigator\\app\\main.py\", line 22, in &lt;module&gt;\n    from anaconda_navigator.utils.conda import is_conda_available\n  File \"c:\\Users\\silvan.zahno\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\anaconda_navigator\\utils\\__init__.py\", line 15, in &lt;module&gt;\n    from qtpy.QtGui import QIcon\n  File \"c:\\Users\\silvan.zahno\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\qtpy\\__init__.py\", line 208, in &lt;module&gt;\n    raise PythonQtError('No Qt bindings could be found')\nqtpy.PythonQtError: No Qt bindings could be found\n</code></pre> <pre><code>pip uninstall PyQt5\nconda update conda\nconda update anaconda-navigator\nanaconda-navigator.exe\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#install-plotly-and-plotly-express","title":"Install Plotly and Plotly Express","text":"<pre><code>conda install -c plotly plotly_express plotly-orca\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#better-pdf-export","title":"Better PDF Export","text":"<pre><code>sudo apt-get install texlive-xetex\npip install jupyter_contrib_nbextensions\npip install cite2c\n</code></pre>","tags":["tools","jupyter"]},{"location":"tools/jupyter/installation.html#enable-https","title":"Enable HTTPS","text":"<p>See: https://juno.sh/ssl-self-signed-cert/</p> <pre><code>#!/bin/bash\n# Create Directory Structure\nmkdir ca ca/certs ca/crl ca/newcerts ca/private\nchmod 700 ca/private\ntouch ca/index.txt\necho 1000 &gt; ca/serial\n\n# Generate CA root key\nopenssl genrsa -aes256 -out ca/private/ca.key.pem 4096\nchmod 400 ca/private/ca.key.pem\n\n# Use the root key (ca.key.pem) to create a root certificate (ca.cert.pem)\nopenssl req -config openssl.cnf -key ca/private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out ca/certs/ca.cert.pem\nchmod 444 ca/certs/ca.cert.pem\n\n# Generate SSL certificate\nmkdir jupyter jupyter/csr jupyter/certs jupyter/private\nchmod 700 jupyter/private\nopenssl genrsa -out jupyter/private/ssl.key.pem 2048\nchmod 400 jupyter/private/ssl.key.pem\n\n# Request certificate for your server\nopenssl req -config openssl.cnf -key jupyter/private/ssl.key.pem -new -sha256 -out jupyter/csr/ssl.csr.pem\n\n# Finally, issue your server SSL certificate\nopenssl ca -config openssl.cnf -extensions server_cert -days 2048 -notext -md sha256 -in jupyter/csr/ssl.csr.pem -out jupyter/certs/ssl.cert.pem\nchmod 444 jupyter/certs/ssl.cert.pem\n</code></pre> <p>Install the CA certificate on your device, located at <code>ca/certs/ca.cert.pem</code></p> <p>As of iOS 10.3 you must manually turn on trust for SSL when you install a certificate. In order to turn on SSL trust for CA certificate, go to <code>Settings &gt; General &gt; About &gt; Certificate Trust Settings</code>. Under <code>Enable full trust for root certificates</code>, turn on trust for the certificate.</p> <p>Once CA certificate is trusted on the device, all certificates signed with it will be trusted too, including the one we generated for SSL, located at jupyter/certs/ssl.cert.pem. You can now use it when launching Jupyter Notebook by providing absolute paths to both key and certificate. If you generate all your certificate and keys in <code>~/.ssh/</code> folder, your paths will be:</p> <pre><code>jupyter notebook --certfile ~/.ssh/jupyter/certs/ssl.cert.pem --keyfile ~/.ssh/jupyter/private/ssl.key.pem\n</code></pre> <p>Alternatively, you can specify paths to key and certificate in Jupyter configuration file.</p>","tags":["tools","jupyter"]},{"location":"tools/just/index.html","title":"Just Files","text":"","tags":["tools","just"]},{"location":"tools/just/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","just"]},{"location":"tools/just/examples.html","title":"Examples Just","text":"<p>Here just a unassorted examples of justfiles and how to run it.</p> <p>Just examples can be found on the SPL-Docs repo as well as the typst-templates repo here and here.</p>","tags":["tools","just"]},{"location":"tools/just/examples.html#run-just-recipes","title":"Run Just recipes","text":"<pre><code>just               # run default recipe\njust &lt;recipe-name&gt; # run recipe with the name &lt;recipe-name&gt;\njust -l            # list all available recipes\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#default","title":"Default","text":"<p>The first recipe is the default one. Best to define your default recipe as such</p> <pre><code># List all commands\ndefault:\n  just --list\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#recipe","title":"Recipe","text":"","tags":["tools","just"]},{"location":"tools/just/examples.html#documentation","title":"Documentation","text":"<p>Every recipe can be documented by prefix the recipe with a comment.</p> <pre><code># build main\nbuild:\n  cc *.c -o main\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#silenced","title":"Silenced","text":"<p>You can silence a recipe or a command only with the @ symbol. It will surpess the display of the executed command and only show the commands output</p> <pre><code># silence recipe\n@clean:\n  echo \"--------------------------------------------------\"\n  echo \"-- Clean {{project_lib}}\"\n  echo \"--\"\n  rm {{compileOrder_file}} || true\n  rm {{componentCommission_file}} || true\n  rm {{componentDesign_file}} || true\n  rm -r {{commission_dir}} || true\n\n# silence only echo commands\nclean:\n  @echo \"--------------------------------------------------\"\n  @echo \"-- Clean {{project_lib}}\"\n  @echo \"--\"\n  rm {{compileOrder_file}} || true\n  rm {{componentCommission_file}} || true\n  rm {{componentDesign_file}} || true\n  rm -r {{commission_dir}} || true\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#dependencies","title":"Dependencies","text":"<pre><code># run a couple of recipes\n@commission-all: buildLists commission removeOrphans writeCompileOrder compileFileSet\n\n# one recipe depends on another\nbuild:\n  cc *.c -o main\n\ntest-all: build\n  ./test -all\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#os-dependend","title":"OS-dependend","text":"<p>Recipes can be available on only certain os'es. The choice is windows, linux, macos, unix (linux &amp; macos). Comment needs to be written in both and above the environment definition.</p> <pre><code># Information about the environment\n[unix]\n@info:\n  echo \"Environment Informations\"\n  echo \"------------------------\"\n  echo \"    OS             : {{os()}}({{arch()}})\"\n\n# Information about the environment\n[windows]\n@info:\n  echo Environment Informations\n  echo ------------------------\n  echo     OS             : {{os()}}({{arch()}})\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#arguments","title":"Arguments","text":"<p>A recipe can have as much arguments you want with or without a default value</p> <pre><code># default values of agruments\ndoc_name   := doc_name      := \"main\"\noutput_dir := \"05-pdf\"\nproject_name  := file_stem(justfile_directory())\n\n# build, rename and copy a typ file to a pdf\n@pdf file_name=doc_name:\n  typst c {{file_name}}.typ\n  mkdir -p {{output_dir}}\n  mv {{file_name}}.pdf \"{{output_dir}}/{{project_name}}.pdf\"\n  just clean\n\n# build, rename and copy a typ file in all variants\n@pdf-all file_name=doc_name:\n  just pdf {{file_name}}\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#conditionals-in-recipes","title":"Conditionals in recipes","text":"<p>In recipes the conditionals form just can't be used. To circumvent the problem you need to do this (depending if its bash or bat)</p> <pre><code>[unix]\ncommission dryrun=\"0\":\n  if [[ \"{{dryrun}}\" == \"0\" ]] ;then \\\n    {{python}} {{commission_script}}; \\\n  else \\\n    {{python}} {{commission_script}} -n; \\\n  fi\n\n[windows]\n@commission dryrun=\"0\":\n  if \"{{dryrun}}\" == \"0\" ( \\\n    {{python}} {{commission_script}} \\\n  ) else ( \\\n    {{python}} {{commission_script}} -n \\\n  )\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#variables","title":"Variables","text":"<p>Variables can be created, exported as Environment variables and created with the help of conditionals and functions</p> <pre><code># just a string\nproject           := \"Just a string\"\n\n# lowercase a string\ndesign_name       := lowercase(project)\n\n# name of parentfolder\nproject_name      := file_stem(justfile_directory())\n\n# path of justfile directory\nproject_path      := justfile_directory()\n\n# directory path based created (works on win, lin &amp; macos alike)\nscripts_path      := join(project_path, \"..\", \"Scripts\")\n\n# export variable as environment variable (available in the shell of the recipes)\nexport hds_home := \"C:\\\\eda\\\\MentorGraphics\\\\HDS\"\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#conditionals","title":"Conditionals","text":"<p>Conditionals work only for variables not in recipes</p> <pre><code># define a tool base on the operating system\npython := if os() == \"windows\" {\n  \"python\"\n} else {\n  \"python3\"\n}\n\n# search for an existing path in windows and export it as an environment variable\nexport hds_home := if path_exists(\"C:\\\\eda\\\\MentorGraphics\\\\HDS\") == 'true' {\n  \"C:\\\\eda\\\\MentorGraphics\\\\HDS\"\n} else if path_exists(\"C:\\\\tools\\\\eda\\\\HDS\") == 'true' {\n  \"C:\\\\tools\\\\eda\\\\HDS\"\n} else {\n  \"ERROR: No valid installation of Mentor HDL-Designer found.\"\n}\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#executed-variables","title":"Executed variables","text":"<p>a variable can be evaluated at a given location with backticks `</p> <pre><code># while creating a variable\npython_version := `python -V`\n\n# within a recipe\n[linux]\n[macos]\n@info:\n  echo \"Python : `{{python}} -V`\"\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/examples.html#access-variable-in-recipes","title":"Access variable in recipes","text":"<pre><code>@run-hdld:\n  {{hdl_script_file + \".bash\"}} -v -n {{design_name}} -d {{project_dir}} -m hds.hdp -y \"Board/libero\"\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/install.html","title":"Installation","text":"","tags":["tools","just"]},{"location":"tools/just/install.html#from-source","title":"From source","text":"<p>Since just is written in rust you can install it with rust's cargo package manager if you have rust installed. This works on all operating systems.</p> <pre><code># install rust and cargo\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n# install just\ncargo install just\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/install.html#macos","title":"MacOS","text":"<p>With macOS install it with the help of homebrew</p> <pre><code>brew install just\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/install.html#windows","title":"Windows","text":"<p>On windows you can either use a package manager such as chocolaty, winget or scoop.</p> <pre><code># Scoop\nscoop install just\n# Chocolatey\nchoco install just\n# Winget\nwinget install --id Casey.Just --exact\n</code></pre> <p>Or install the prebuild binaries which can be found on the github repo.</p> <p>https://github.com/casey/just/releases</p>","tags":["tools","just"]},{"location":"tools/just/install.html#linux","title":"Linux","text":"<p>On linux use the package manager of your choice</p> <pre><code># Alpine\napk install just\n# Ubuntu\nsudo apt get install just\n# Arch\npacman -S just\n</code></pre>","tags":["tools","just"]},{"location":"tools/just/intro.html","title":"Introduction","text":"<p>Just files are a way to define and run tasks in your project. They are similar to makefiles, but they are simpler and more concise.</p> <p>Just files can be used to automate a wide variety of tasks, such as building, testing, deploying, and releasing software.</p>","tags":["tools","just"]},{"location":"tools/just/intro.html#additional-features","title":"Additional features","text":"<p>Just files support a number of additional features, such as:</p> <ul> <li>Command line completion</li> <li>Parallel task execution</li> <li>Variables and functions</li> <li>Conditional statements</li> <li>Error handling</li> </ul>","tags":["tools","just"]},{"location":"tools/just/intro.html#some-just-helppages","title":"Some Just helppages","text":"<ul> <li>Official webpage just.systems</li> <li>Just book</li> <li>Github</li> </ul>","tags":["tools","just"]},{"location":"tools/make/index.html","title":"Make","text":"","tags":["tools","make"]},{"location":"tools/make/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","make"]},{"location":"tools/make/index.html#introduction","title":"Introduction","text":"<p>Make is a utility that automatically builds executable programs and libraries from source code by reading files called makefiles which specify how to derive the target program. Make can decide where to start through topological sorting. Though Integrated Development Environments and language-specific compiler features can also be used to manage the build process in modern systems, make remains widely used, especially in Unix.</p> <p>Though its primary use is as described above, make is not restricted to just creating executable programs from source files. Any process that involves transforming a dependency file to a target result (by executing some number of arbitrary commands) is applicable to make.</p>","tags":["tools","make"]},{"location":"tools/make/index.html#pdf","title":"PDF","text":"<ul> <li>Gnu Make Manual</li> </ul>","tags":["tools","make"]},{"location":"tools/make/index.html#links","title":"Links","text":"<ul> <li>Gnu Make Official Webpage</li> <li>Gnu Make Manual</li> <li>O'Reilly Freebook Section Makefile</li> </ul>","tags":["tools","make"]},{"location":"tools/make/examples.html","title":"Examples","text":"<p>In this section you can find some example Makefile which you can take and adapt to any needs.</p>","tags":["tools","make"]},{"location":"tools/make/examples.html#detect-os-in-makefile","title":"Detect OS in makefile","text":"makefile os<pre><code>###########################################################################\n# Detect OS                                                               #\n###########################################################################\nifeq ($(OS),Windows_NT)\ndetected_OS := Windows\nelse\ndetected_OS := $(shell uname)\nendif\n\necho \"...\"\n\nifeq ($(detected_OS),Windows)\n   echo \"...\"\nendif\n\nifeq ($(detected_OS),Darwin)\n   echo \"...\"\nendif\n\nifeq ($(detected_OS),Linux)\n   echo \"...\"\nendif\n</code></pre> makefile conda<pre><code>ifeq ($(detected_OS),Windows)\n    PDFVIEWER = 'start \"\" /max'\n    CONDA_ENV_FILE = ./../../condaenv-win.yml\nifeq (,$(shell where conda))\n    HAS_CONDA = False\nelse\n    HAS_CONDA = True\n    SEARCH_ENV = $(shell conda.bat info --envs | grep $(CONDA_ENV_NAME))\n    FOUND_ENV_NAME = $(word 1, $(notdir $(SEARCH_ENV)))\n    # check if conda environment is active\nifneq ($(CONDA_DEFAULT_ENV),$(FOUND_ENV_NAME))\n    CONDA_ACTIVATE := source $$(conda.bat info --base)/etc/profile.d/conda.sh ; conda activate $(CONDA_ENV_NAME)\nelse\n    CONDA_ACTIVATE := true\nendif\nendif\nendif\n\nifeq ($(detected_OS),Darwin)\n    PDFVIEWER = open\n    CONDA_ENV_FILE = ./../../condaenv-mac-arm64.yml\nifeq (,$(shell which conda))\n    HAS_CONDA = False\nelse\n    HAS_CONDA = True\n    ENV_DIR = $(shell conda info --base)\n    MY_ENV_DIR = $(ENV_DIR)/envs/$(CONDA_ENV_NAME)\n    CONDA_ACTIVATE = source $$(conda info --base)/etc/profile.d/conda.sh ; conda activate $(CONDA_ENV_NAME)\nendif\nendif\n\nifeq ($(detected_OS),Linux)\n    PDFVIEWER = xdg-open\n    CONDA_ENV_FILE = ./../../condaenv-linux.yml\nifeq (,$(shell which conda))\n    HAS_CONDA = False\nelse\n    HAS_CONDA = True\n    ENV_DIR = $(shell conda info --base)\n    MY_ENV_DIR = $(ENV_DIR)/envs/$(CONDA_ENV_NAME)\n    CONDA_ACTIVATE = source $$(conda info --base)/etc/profile.d/conda.sh ; conda activate $(CONDA_ENV_NAME)\nendif\nendif\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/examples.html#sphinx-makefile","title":"Sphinx Makefile","text":"makefile sphinx<pre><code># Makefile for Sphinx documentation\n#\n\n# You can set these variables from the command line.\nSPHINXOPTS    = -Dversion=$(shell git describe --tags)\nSPHINXBUILD   = sphinx-build\nSOURCEDIR     = source\nBUILDDIR      = _build\nOUTPUTDIR     = pdf\nFILENAME      = znotes\n# IMAGEDIRS can be a list of directories that contain SVG files and are relative to the SOURCEDIR\nIMAGEOBJS     = $(sort $(dir $(wildcard src/img/* src/*/img/* src/*/*/img/* src/*/*/*/img/* src/*/*/*/*/img/*)))\nIMAGEDIRS     = $(patsubst src/%/, %, $(IMAGEOBJS)) # remove src/ and last /\nIMAGEDIRS    += img/icons\n# SVG to PDF conversion\nSVG2PDF       = inkscape\nSVG2PDF_FLAGS = -C\n\n# Put it first so that \"make\" without argument is like \"make help\".\nhelp:\n    @$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n\n# Pattern rule for converting SVG to PDF\n%.pdf : %.svg\n    $(SVG2PDF) $(SVG2PDF_FLAGS) -f $&lt; -A $@\n\n# Build a list of SVG files to convert to PDFs\nPDFs := $(foreach dir, $(IMAGEDIRS), $(patsubst %.svg,%.pdf,$(wildcard $(SOURCEDIR)/$(dir)/*.svg)))\n\n# Make a rule to build the PDFs\nimages-pdf: $(PDFs)\n\n\n# Make a rule to build the images\nimages: images-png\n\nclean-pdf:\n    -rm $(PDFs)\n\nclean-images: clean-pdf\n\n.PHONY: help Makefile\n\n# Catch-all target: route all unknown targets to Sphinx using the new\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n#%: Makefile\n#   @$(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n\n.PHONY: clean\nclean: clean-images\n    rm -rf $(BUILDDIR)/*\n\n.PHONY: clean-quick\nclean-quick:\n    rm -rf $(BUILDDIR)/*\n\n.PHONY: html\nhtml: # images-png\n    if [ -a $(SOURCEDIR)/index.rst ]; then rm $(SOURCEDIR)/index.rst; fi;\n    cp $(SOURCEDIR)/index_html.rst $(SOURCEDIR)/index.rst\n    $(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n    @echo\n    @echo \"Build finished. The HTML pages are in $(BUILDDIR)/html.\"\n    #mkdir -p $(OUTPUTDIR)/html/\n    #cp -R $(BUILDDIR)/html/* $(OUTPUTDIR)\n    @echo \"html files copied; the html files are in $(OUTPUTDIR)/html/.\"\n\n\n    @echo \"Build finished; now you can run \"qcollectiongenerator\" with the\" \\\n          \".qhcp project file in $(BUILDDIR)/qthelp, like this:\"\n    @echo \"# qcollectiongenerator $(BUILDDIR)/qthelp/Example.qhcp\"\n    @echo \"To view the help file:\"\n    @echo \"# assistant -collectionFile $(BUILDDIR)/qthelp/Example.qhc\"\n\n.PHONY: latexpdf\nlatexpdf: images-pdf\n    if [ -a $(SOURCEDIR)/index.rst ]; then rm $(SOURCEDIR)/index.rst; fi;\n    cp $(SOURCEDIR)/index_latex.rst $(SOURCEDIR)/index.rst\n    $(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n    @echo \"Running LaTeX files through pdflatex...\"\n    $(MAKE) -C $(BUILDDIR)/latex all-pdf\n    @echo \"xelatex finished; the PDF files are in $(BUILDDIR)/latex.\"\n    mkdir -p $(OUTPUTDIR)/\n    cp $(BUILDDIR)/latex/$(FILENAME).pdf $(OUTPUTDIR)/$(FILENAME).pdf\n    @echo \"pdf copied; the PDF files are in $(OUTPUTDIR)/$(FILENAME).pdf.\"\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/examples.html#simple-cc-project","title":"Simple C/C++ Project","text":"<p>Here a simple editable Makefile where only the standart stuff is used.</p> makefile simple cpp<pre><code># check for host development system\nTOOLS = ../../bin\n\n# define access paths for tools\nCCP =  cpp\nAS = $(TOOLS)/asm_hrms\n\n# define access path for header files and libraries\nINCDIRS = ../../include\n\n# list target files\nall: a664_rx.d a664_rx a664_rx.bin\n\n# produce Test Processor target files\na664_rx.s: a664_rx.S Makefile\n    cpp -I $(INCDIRS) -o a664_rx.s a664_rx.S\na664_rx.d: a664_rx.s\n    $(AS) -d -o a664_rx.d a664_rx.s &gt; a664_rx.d.dis\na664_rx: a664_rx.s\n    $(AS) -o a664_rx a664_rx.s &gt; a664_rx.dis\na664_rx.bin: a664_rx.s\n    $(AS) -o a664_rx.bin a664_rx.s &gt; a664_rx.dis\n\n# clean up\nclean:\n    rm -f *.bin *~ *.dis *.bin *.s *.d a664_rx\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/examples.html#cc-project","title":"C/C++ Project","text":"<p>This is a C/C++ Project where as much make is used as possible.</p> <p>First you can see the C/C++ project files to the given Makefile</p> <pre><code>#include\n\nint main() {\n  // call a function in another file\n  myPrintHelloMake();\n\n  return(0);\n}\n&lt;/code&gt;\n&lt;code c hellofunc.c&gt;\n#include\n#include\n\nvoid myPrintHelloMake(void) {\n\n  printf(\"Hello makefiles!\\n\");\n\n  return;\n}\n</code></pre> hellomake.h<pre><code>// example include file\nvoid myPrintHelloMake(void);\n&lt;/code&gt;\n\nHere the appropriate complete Makefile to the project above.\n&lt;code make Makefile&gt;\nCC=gcc\nCFLAGS=-I.\nDEPS = hellomake.h\nOBJ = hellomake.o hellofunc.o\n\n%.o: %.c $(DEPS)\n    $(CC) -c -o $@ $&lt; $(CFLAGS)\n\nhellomake: $(OBJ)\n    gcc -o $@ $^ $(CFLAGS)\n</code></pre> <p>or here the more complex project file</p> makefile cpp<pre><code>IDIR =../include\nCC=gcc\nCFLAGS=-I$(IDIR)\n\nODIR=obj\nLDIR =../lib\n\nLIBS=-lm\n\n_DEPS = hellomake.h\nDEPS = $(patsubst %,$(IDIR)/%,$(_DEPS))\n\n_OBJ = hellomake.o hellofunc.o\nOBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))\n\n\n$(ODIR)/%.o: %.c $(DEPS)\n    $(CC) -c -o $@ $&lt; $(CFLAGS)\n\nhellomake: $(OBJ)\n    gcc -o $@ $^ $(CFLAGS) $(LIBS)\n\n.PHONY: clean\n\nclean:\n    rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html","title":"Syntax","text":"","tags":["tools","make"]},{"location":"tools/make/syntax.html#make-commands","title":"Make Commands","text":"<p>The execution of make isn't hard. Below a list of possible make commands.</p> make_commands<pre><code>make                     # search \"Makefile\" file and executes it\nmake makefilename        # search \"makefilename\" file and executes it\nmake -C /.../other_path/ # search \"make\" file in given path\nmake -d                  # gives debug informations\nmake -file               # read file as makefile\nmake -t                  # make updates the date of the targets\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html#generation-makefile","title":"Generation Makefile","text":"","tags":["tools","make"]},{"location":"tools/make/syntax.html#targets-rules-dependencies","title":"Targets, Rules, Dependencies","text":"<p>A makefile generates a Target. This is done with help of Rules. Each target is dependend of other files, these are the Dependencies.</p> <p>In the example the target is depending on file.c and file.h. It will be created with the file.c</p> make<pre><code>target: file.c file.h\n    gcc file.c -o target\n</code></pre> <p>The target will be generated if <code>file.cv or</code>file.h`` are newer than the existing target.</p>","tags":["tools","make"]},{"location":"tools/make/syntax.html#pattern","title":"Pattern","text":"<p>With help of pattern can define dependencies on a group of files in one line.</p> <p>for example all <code>.o</code> files depend on the appropriate <code>.c</code> files</p> <pre><code>%.o: %.c\n    gcc -Wall -g -c $&lt;\n</code></pre> <p>Most used predefined variables</p> predefined_variables<pre><code>$&lt;     # Name of the first dependency\n$@     # Name of the target\n$+     # List of all dependencies\n$^     # List of all dependencies, doubles will be eliminated\n</code></pre> <p>variabels can be accessed by <code>$</code>. In order to write a real <code>$</code>, <code>$$</code> need to be typed.</p>","tags":["tools","make"]},{"location":"tools/make/syntax.html#variables","title":"Variables","text":"<p>It is possible to work with variables to save names. Usually these vrariables are kept UPPERCASE. Here some of the most used variables</p> variables<pre><code>CC       # Compiler e.g. fcc\nCFLAGS   # Compiler options r.g. -Wall\nLDFLAGS  # Linker options\nOBJ      # Objectfiles *.o\nSRC      # Sourcefiles *.c\nHDR      # Headerfiles *.h\n</code></pre> <p>An access of a variable can be done by <code>$()</code>. And it can be changes and used as ofter as necessary.</p> <pre><code>OBJ = file1.o file2.o file3.o # Variable declaration\n    Rm -rf $(OBJ)             # Use of the variable OBJ\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html#phony-targets","title":"Phony Targets","text":"<p>Phony targets have no dependencies, that the difference to the normal targets. But unlike normal targets with no depencies, they need to be executed all the time.</p> <pre><code>.PHONY clean\nclean:\n    rm -rf file1.o file2.o\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html#includes","title":"Includes","text":"<p>A Makefile can with the help of the inlcude command use the variable and makros of other Makefiles</p> <pre><code>INC_FILE = makefile2\n\ninclude dateiname\ninclude ${INC_FILE}\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html#recursiv","title":"Recursiv","text":"<p>If you work on a big project. Sourcefiles can be widely spread among different folders. Instead to put all dependencies in one Makefile, they can be splitted so different makefile in the different folder.</p> <p>In the Toplevel Makefile the general rules are set, and the Makefiles of the subfolders are called.</p> <pre><code># Pos of the different Sub Makefiles\nDIRS = Module1 Module2 Module3\n\nMake:\n    for i in $(DIRS); do make -c $$i; done\n    # do \"make\" for all Makefiles in the Subfolders\n</code></pre> <p>The make <code>-c</code> flag tells that it has first to change to the new directory</p> <p>A file called Toplevel Makefiles.rules defines all variables needed in the subfolders.</p> Makefile.rules<pre><code>CFLAGS = -Wall -g\n%.o: %.c                 # all .o depend on .c\n    gcc $(CFLAGS) -c $&lt;  # generation .o files\n</code></pre> <p>Makefile in the subfolders Depending in the defined Object files and the Rules in Makefile.rules, the executed code will be defined.</p> <pre><code>Include ../Makefile.rules\nOBJ = file1.o file2.o\nall: $(OBJ)\n</code></pre>","tags":["tools","make"]},{"location":"tools/make/syntax.html#make-dep","title":"Make dep","text":"<p>Make dep is practical tools, which allows to search automatically dependencies in the sourcefiles.</p> <pre><code>DEPENDFILE = depend                 # Var for filename\n\ndep: $(SRC)\n    $(CC) -MM $(SRC) &gt; $(DEPENDFILE)# put output &gt; file depend\n\n-include $(DEPENDFILE)           # search for include commands\n</code></pre> <p>with the flag <code>-MM</code> make will search in the <code>SRC</code> files for include directives. the command <code>-include $(DEPENDFILE)</code> adds the found dependencies into the Makefile</p> <p>Specialsigns</p> <pre><code>   #                         # is a comment\n   first part of command \\   # Command split\n   second part of command \\  # into multiple\n   third part of command     # lines\n</code></pre>","tags":["tools","make"]},{"location":"tools/mentor/index.html","title":"Mentor EDA","text":"","tags":["tools","mentor"]},{"location":"tools/mentor/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","mentor"]},{"location":"tools/mentor/index.html#introduction","title":"Introduction","text":"<p>Mentor Graphics is a company by Siemens and creator of two VHDL Design Tools:</p> <ul> <li>Mentor Modelsim</li> <li>Mentor HDL-Designer</li> </ul> <p>More information about the software can be found on the SupportNet</p>","tags":["tools","mentor"]},{"location":"tools/mentor/install.html","title":"Install Linux","text":"<p>Both tools are mostly installed at the same time. Download the latest Software on the SupportNet</p> <p>Note</p> <p>Tested on Lubuntu 20.04 LTS</p>","tags":["tools","mentor"]},{"location":"tools/mentor/install.html#modelsim","title":"Modelsim","text":"<p>Download Modelsim: https://support.sw.siemens.com/de-DE/product/852852093/downloads</p> <p>Install</p> <p>Copy <code>modelsim*.aol</code> to <code>~/Downloads/</code></p> <pre><code>cd ~/Downloads\nchmod +x modelsim*.aol\nsudo ./modelsim*.aol\n</code></pre> <p>Options:</p> Target location<pre><code>/usr/opt/Modelsim\n</code></pre> <p></p> <p>Select 64bit Modelsim</p> <p></p> <p>Cleanup</p> <p>Cleanup the Mentor installer</p> <pre><code>sudo su\nrm -R /root/mgc\nexit\n</code></pre> <p>Test</p> <pre><code>export PATH=$PATH:/usr/opt/Modelsim/modeltech/bin\nexport LM_LICENSE_FILE=$LM_LICENSE_FILE:27001@mentorlm.hevs.ch\n\nvsim &amp;\n</code></pre>","tags":["tools","mentor"]},{"location":"tools/mentor/install.html#hdl-designer","title":"HDL Designer","text":"<p>Download HDL Designer: https://support.sw.siemens.com/de-DE/product/862138546/downloads</p> <p>Prerequisies</p> install required libraries<pre><code>sudo apt install lib32z1\nsudo dpkg --add-architecture i386\nsudo apt update\nsudo apt install libx11-6:i386\nsudo apt install libxext6:i386\nsudo apt install libxrender1:i386\nsudo apt install libxtst6:i386\nsudo apt install libxi6:i386\n</code></pre> install fonts<pre><code>sudo apt install xfonts-75dpi\nsudo apt install xfonts-100dpi\n\nxset +fp /usr/share/fonts/X11/75dpi\nxset +fp /usr/share/fonts/X11/100dpi\nxset fp rehash\n</code></pre> <p>Install</p> <p>Copy <code>HDS_*.exe</code> to <code>~/Downloads/</code></p> <pre><code>cd ~/Downloads\nchmod +x HDS_*.exe\nsudo ./HDS_*.exe\n</code></pre> <p>Options:</p> Target location<pre><code>/usr/opt/HDS\n</code></pre> <p></p> <p>Cleanup</p> <p>Cleanup the Mentor installer</p> <pre><code>sudo su\nrm -R /root/mgc\nexit\n</code></pre> <p>Libraries</p> <pre><code>git clone https://github.com/tschinz/config.git\nsudo cp config/scripts/vhdl/libraries/ieee/numeric_std.vhd /usr/opt/HDS/hdl_libs/ieee/hdl\nsudo cp config/scripts/vhdl/libraries/ieee/std_logic_1164.vhd /usr/opt/HDS/hdl_libs/ieee/hdl\n\nsudo rm -R config\n</code></pre> <p>Test</p> <pre><code>export PATH=$PATH:/usr/opt/HDS/bin\nexport LM_LICENSE_FILE=$LM_LICENSE_FILE:27001@mentorlm.hevs.ch\n\nhdl_designer &amp;\n</code></pre>","tags":["tools","mentor"]},{"location":"tools/mentor/install.html#license-path","title":"License &amp; PATH","text":"<p>For the HEVS license add the following lines to <code>/etc/profile</code></p> <pre><code>#-------------------------------------------------------------------------------\n# EDA tools\n#\nexport PATH=$PATH:/usr/opt/HDS/bin:/usr/opt/Modelsim/modeltech/bin:/usr/opt/Xilinx/ISE_DS/ISE/bin/lin64/\nexport LM_LICENSE_FILE=$LM_LICENSE_FILE:27001@mentorlm.hevs.ch:2100@xilinxlm.hevs.ch:1717@dl-srv69.admin.hes-so.ch\n</code></pre>","tags":["tools","mentor"]},{"location":"tools/nmap/index.html","title":"NMap","text":"<p>Nmap (\"Network Mapper\") is a free and open source (license) utility for network discovery and security auditing. Many systems and network administrators also find it useful for tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime. Nmap uses raw IP packets in novel ways to determine what hosts are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics. It was designed to rapidly scan large networks, but works fine against single hosts.</p> <ul> <li>Nmap Download</li> <li>Nmap Manual for creating commands</li> </ul>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#nmap-cheat-sheets","title":"Nmap Cheat Sheets","text":"<ul> <li>Nmap Basics</li> <li>SANS Nmap Cheatsheet v1.0</li> <li>See Security Technologies Nmap Cheatsheet v1.0</li> </ul>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#options","title":"Options","text":"Options Description <code>-O</code> Enable Operating System Detection <code>-sV</code> Version Scan <code>-sS</code> TCP Port Scan <code>-SU</code> UDP Port Scan <code>-p 20-25</code> Scan Ports 20-25 <code>-pU:53,U:110,T20-445</code> Mix TCP UDP Port Scan <code>-F</code> Fast (limited Port Scan)","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#ports","title":"Ports","text":"Port Description <code>22</code> SSH <code>80</code> HTTP <code>443</code> HTTPS <code>3389</code> RDP (Remote Desktop Protocol) <code>5800</code> Java VNC <code>5900</code> Native VNC <code>11444</code> Secomea SiteManager Port <code>55000 - 59999</code> Secomea Goto Appliances Port","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#commands","title":"Commands","text":"","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#basic-scanning","title":"Basic scanning","text":"<pre><code>nmap target.host.com                     # scan one host\nnmap 10.11.12.22\n\nnmap target1.host.com target2.host.com   # scan multiple hosts\nnmap 10.11.12.22 10.11.12.1\n\nnmap -iL list.txt                        # scan targets from a list\n\nnmap 10.11.12.0-50                       # scan a range of hosts\n\nnmap 10.11.12.0/24                       # scan an entire subnet\n\nnmap -iR 100                             # scan 100 random hosts\n\nnmap 10.11.12.* --exclude 10.11.12.5     # exclude specific hosts\nnmap 10.11.12.* --excludefile exclude.txt\n\nnmap -A target.host.com                  # aggressive scan (OS, version, scripts, traceroute)\n\nnmap -6 ipv6.target.host                 # scan IPv6 target\n</code></pre>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#discovery-options","title":"Discovery Options$","text":"<pre><code>nmap -sP 10.11.12.0/24                   # ping scan only\n\nnmap -PN target.host.com                 # skip host discovery (treat as up)\n\nnmap -PS target.host.com                 # TCP SYN ping\nnmap -PA target.host.com                 # TCP ACK ping\nnmap -PU target.host.com                 # UDP ping\nnmap -PY target.host.com                 # SCTP INIT ping\n\nnmap -PE target.host.com                 # ICMP echo ping\nnmap -PP target.host.com                 # ICMP timestamp ping\nnmap -PM target.host.com                 # ICMP address-mask ping\nnmap -PO target.host.com                 # IP protocol ping\nnmap -PR 10.11.12.0/24                   # ARP ping (local network)\n\nnmap --traceroute target.host.com        # traceroute\nnmap -R target.host.com                  # force reverse DNS resolution\nnmap -n target.host.com                  # disable DNS resolution\nnmap --system-dns target.host.com        # use system DNS\nnmap --dns-servers 8.8.8.8,1.1.1.1 target.host.com\n\nnmap -sL 10.11.12.*                      # list hosts without scanning\n</code></pre>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#firewall-evasion-techniques","title":"Firewall Evasion Techniques","text":"<pre><code>nmap -f target.host.com                  # fragment packets\nnmap --mtu 24 target.host.com            # specify MTU\n\nnmap -D RND:10 target.host.com           # decoy scan with 10 random decoys\n\nnmap -sI zombie.host.com target.host.com # idle zombie scan\n\nnmap --source-port 53 target.host.com    # spoof source port (DNS)\nnmap --data-length 200 target.host.com   # append random data\nnmap --randomize-hosts 10.11.12.*        # randomize host scan order\nnmap --spoof-mac 0 target.host.com       # spoof MAC (random vendor)\nnmap --badsum target.host.com            # send bad checksums\n</code></pre>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#version-os-detection","title":"Version &amp; OS Detection","text":"<pre><code>nmap -O target.host.com                  # OS detection\nnmap -O --osscan-guess target.host.com   # aggressive OS detection\n\nnmap -sV target.host.com                 # service version detection\nnmap -sV --version-trace target.host.com # debug version detection\n\nnmap -sR target.host.com                 # RPC service scan\n</code></pre>","tags":["tools","nmap"]},{"location":"tools/nmap/index.html#output-options","title":"Output options","text":"<pre><code>nmap -oN scan.txt target.host.com         # normal text output\nnmap -oX scan.xml target.host.com         # XML output\nnmap -oG scan.gnmap target.host.com       # grepable output\nnmap -oA scan_prefix target.host.com      # output in all major formats\nnmap --stats-every 10s target.host.com    # display stats every 10 seconds\nnmap -oS leet_scan.txt target.host.com    # 1337-style ASCII output\n</code></pre>","tags":["tools","nmap"]},{"location":"tools/numbat/index.html","title":"<code>numbat</code>","text":"<p>Numbat is a statically typed programming language for scientific computations with first class support for physical dimensions and units.</p>","tags":["tools","numbat","cli","calculator"]},{"location":"tools/numbat/index.html#additional-information","title":"Additional Information","text":"<ul> <li>Numbat Online</li> <li>Github</li> <li>Documentation</li> <li>Syntax</li> </ul>","tags":["tools","numbat","cli","calculator"]},{"location":"tools/numbat/index.html#install","title":"Install","text":"<p>With cargo </p><pre><code>cargo install numbat-cli\n</code></pre> <p>With homebrew </p><pre><code>brew install numbat\n</code></pre>","tags":["tools","numbat","cli","calculator"]},{"location":"tools/numbat/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","numbat","cli","calculator"]},{"location":"tools/numbat/basics.html","title":"Basics of <code>numbat</code>","text":"","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/basics.html#usage","title":"Usage","text":"<p>Interactive mode </p><pre><code>numbat\n\n  \u2588\u2584\u2591\u2588 \u2588\u2591\u2588 \u2588\u2580\u2584\u2580\u2588 \u2588\u2584\u2584 \u2584\u2580\u2588 \u2580\u2588\u2580    Numbat 1.12.0\n  \u2588\u2591\u2580\u2588 \u2588\u2584\u2588 \u2588\u2591\u2580\u2591\u2588 \u2588\u2584\u2588 \u2588\u2580\u2588 \u2591\u2588\u2591    https://numbat.dev/\n\n&gt;&gt;&gt;\n</code></pre> <p>Run a numbat program </p><pre><code>numbat script.nbt\n</code></pre> <p>Evaluate a single calculation </p><pre><code>numbat -e \"40 + 2\"\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/basics.html#commands","title":"Commands","text":"<p>In the interactive mode there are several special commands available:</p> <pre><code>help, ?                # Show help\nquit, exit             # Quit the program\n\nclear                  # Clear the screen\n\nlist, ls               # List all functions, dimensions, variables and units\nlist &lt;item&gt;            # List all of an item (functions, dimensions, variables, units)\n\ninfo &lt;identifier&gt;      # info about a spcific function, dimension, variable or unit\n</code></pre> <p>most used </p><pre><code>list variables\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/basics.html#tab-completion","title":"Tab completion","text":"<p>You can use the <code>Tab</code>  respectively <code>Tab+Tab</code> key to autocomplete commands and functions.</p>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/basics.html#config-path","title":"Config Path","text":"<p>The configuration file is located:</p> Platform \u00a0Path Linux <code>$HOME/.config/numbat or $XDG_CONFIG_HOME/numbat</code> macOS <code>$HOME/Library/Application Support/numbat</code> Windows <code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\numbat</code>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html","title":"Cheatsheet of <code>numbat</code>","text":"<pre><code>numbat\n\n  \u2588\u2584\u2591\u2588 \u2588\u2591\u2588 \u2588\u2580\u2584\u2580\u2588 \u2588\u2584\u2584 \u2584\u2580\u2588 \u2580\u2588\u2580    Numbat 1.12.0\n  \u2588\u2591\u2580\u2588 \u2588\u2584\u2588 \u2588\u2591\u2580\u2591\u2588 \u2588\u2584\u2588 \u2588\u2580\u2588 \u2591\u2588\u2591    https://numbat.dev/\n\n&gt;&gt;&gt;\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#numbers","title":"Numbers","text":"","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#integers","title":"Integers","text":"<pre><code>12345\n12_345               # optional decimal separators\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#floating-point-numbers","title":"Floating point numbers","text":"<pre><code>0.234\n.234                 # without the leading zero\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#scientific-notation","title":"Scientific notation","text":"<pre><code>1.234e15\n1.234e+15\n1e-9\n1.0e-9\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#bases","title":"Bases","text":"<pre><code>0x2A                 # hexadecimal\n0o52                 # octal\n0b101010             # binary\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#special-numbers","title":"Special numbers","text":"<pre><code>NaN                  # Not a number\ninf                  # Infinity\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#calculations","title":"Calculations","text":"","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#additions-and-subtractions","title":"Additions and Subtractions","text":"<pre><code>3 + (4 - 3)\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#multiplications-and-divisions","title":"Multiplications and Divisions","text":"<pre><code>1920 / 16 * 9\n1920 \u00f7 16 \u00d7 9        # Unicode-style, '\u00b7' is also multiplication\n2 pi                 # Whitespace is implicit multiplication\nmeter per second     # 'per' keyword can be used for division\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#exponential","title":"Exponential","text":"<pre><code>2^3\n2^-3                 # Negative exponents\n2**3                 # Python-style\n2\u00b3                   # Unicode exponents\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#factorial","title":"Factorial","text":"<pre><code>5!\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#comparison","title":"Comparison","text":"<pre><code>3 &lt; 4                # Less than\n4 &lt;= 4               # Less than or equal\n4 &gt; 3                # Greater than\n4 &gt;= 4               # Greater than or equal\n4 == 4               # Equal\n3 != 4               # Not equal\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#logical","title":"Logical","text":"<pre><code>!x                   # Logical NOT\nx &amp;&amp; y               # Logical AND\nx || y               # Logical OR\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#units","title":"Units","text":"<p>Full list</p>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#most-common-units","title":"Most common units","text":"<pre><code>42 deg               # degree\n42 grad              # gradian\n42 rad               # radian\n42 rev               # revolution\n\n42 bit               # bit\n42 byte              # byte\n42 B                 # byte\n42 KiB               # kibibyte\n42 MiB               # mebibyte\n42 GiB               # gibibyte\n\n42 kB                # kilobyte\n42 MB                # megabyte\n42 GB                # gigabyte\n\n42 dots              # dots\n42 dpi               # dots per inch\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#prefixes","title":"Prefixes","text":"<p>Metric prefixes Binary prefixex</p> Prefix Description Prefix Description <code>Q</code> Quetta <code>d</code> deci <code>R</code> Rotta <code>c</code> centi <code>Y</code> Yotta <code>m</code> milli <code>Z</code> Zetta <code>\u03bc</code> micro <code>E</code> Exa <code>n</code> nano <code>P</code> Peta <code>p</code> pico <code>T</code> Tera <code>f</code> femto <code>G</code> Giga <code>a</code> atto <code>M</code> Mega <code>z</code> zepto <code>k</code> kilo <code>y</code> yocto <code>h</code> hecto <code>r</code> ronto <code>da</code> deca <code>q</code> quecto","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#conversion","title":"Conversion","text":"","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#units_1","title":"Units","text":"<pre><code>42 in -&gt; cm        # Unit conversion, can also be \u2192 or \u279e\n42 in to cm        # Unit conversion with the 'to' keyword\n120 km/h -&gt; mph\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#convert-to-the-same-unit","title":"Convert to the same unit","text":"<pre><code>let x1 = 50 km / h\nlet x2 = 3 m/s -&gt; x1\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#bases_1","title":"Bases","text":"<pre><code>42 -&gt; bin\n42 -&gt; oct\n42 -&gt; dec\n42 -&gt; hex\n42 -&gt; char\n\n42 -&gt; base(2)\n42 -&gt; base(8)\n42 -&gt; base(10)\n42 -&gt; base(16)\n\nbin(42)\noct(42)\ndec(42)\nhex(42)\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#time","title":"Time","text":"<pre><code>now() -&gt; unixtime\nnow() -&gt; tz(\"Europe/Berlin\")\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#strings","title":"Strings","text":"<pre><code>\"Numbat is Awesome\" -&gt; uppercase\n\"Numbat is Awesome\" -&gt; lowercase\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#functions","title":"Functions","text":"<pre><code># Pure functions\nfn area_circle(radius) = pi * radius^2\n\narea_circle(1)\narea_circle(1m)\n\n# Function with types\nfn area_circle(radius: Length) -&gt; Area = pi * radius^2\n\narea_circle(1)   # Error: expected Length\narea_circle(1s)  # Error: expected Length\narea_circle(1m)  # Ok\n\n# Recursive functions\nfn fib(n: Scalar) -&gt; Scalar =\n  if n \u2264 2\n    then 1\n    else fib(n - 2) + fib(n - 1)\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#conditional","title":"Conditional","text":"<pre><code>if &lt;cond&gt; then &lt;expr1&gt; else &lt;expr2&gt;\n\nfn step(x: Scalar) -&gt; Scalar = if x &lt; 0 then 0 else 1\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#date-and-time","title":"Date and Time","text":"<pre><code>date(\"20-10-05\")                     # specific date\ntime(\"12:30:05\")                     # specific time\ndatetime(\"20-10-05 12:30:05.00000\")  # specific date and time\n</code></pre> <p>Possible formats: </p><pre><code>%Y-%m-%d %H:%M:%S%.f\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#date-time-calculation","title":"Date Time Calculation","text":"<pre><code>now()                                #\u00a0current time\n\nnow() - 40 days + 1 hour             #\u00a0current time minus 40 days and plus 1 hour\n\ndate(\"2024-06-20\") - today() -&gt; days # days until 2024-06-20\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#unixtime","title":"Unixtime","text":"<pre><code>now() -&gt; unixtime                    # current time in unixtime\nfrom_unixtime(1_718_901_719)         # convert unixtime to date\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#formatting","title":"Formatting","text":"<p><code>format_datetime(format: String, dt: DateTime)</code></p> <pre><code>x = datetime(\"20-10-05 12:30:05\")\nformat_datetime(\"%Y-%m-%d %Hh%Mm%Ss.%f\", x)\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#timezones","title":"Timezones","text":"<pre><code>get_local_timezone()                 # get local timezone aka Europe/Zurich\n\nnow() -&gt; tz(\"Europe/Zurich\")\nnow() -&gt; tz(\"CET\")\nnow() -&gt; tz(\"UTC\")\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#date-date","title":"Date <code>date(\"\")</code>","text":"<p><code>date(\"yyyy-mm-dd\")</code> is a function that converts the current time to the specified date.</p>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#timezones-tz","title":"Timezones <code>tz(\"\")</code>","text":"<p><code>tz(\"xxx/xxx\")</code> is a function that converts the current time to the specified timezone.</p> <p></p> Abbreviation Description Timezone <code>MST</code>, Mountain Standard Time <code>UTC -0700</code> <code>EST</code>, Eastern Standard Time <code>UTC -0500</code> <code>UTC</code>, <code>UCT</code>, <code>GMT</code> Coordinated Universal Time <code>UTC +0000</code> <code>WET</code> Western European Time <code>UTC +0100</code> <code>CET</code>, <code>MET</code> Central Europe Time <code>UTC +0200</code> <code>NZ</code> New Zealand <code>UTC +1200</code> Location Timezone <code>Pacific/Niue</code> <code>UTC -1100</code> <code>Pacific/Tahiti</code> <code>UTC -1000</code> <code>Pacific/Gambier</code> <code>UTC -0900</code> <code>Pacific/Pitcairn</code> <code>UTC -0800</code> <code>Pacific/Galapagos</code> <code>UTC -0600</code> <code>America/Lima</code> <code>UTC -0500</code> <code>America/Guyana</code> <code>UTC -0400</code> <code>America/Sao_Paulo</code> <code>UTC -0300</code> <code>Atlantic/South_Georgia</code> <code>UTC -0200</code> <code>Atlantic/Cape_Verde</code> <code>UTC -0100</code> <code>UTC</code> <code>UTC -0000</code> <code>Portugal</code> <code>UTC +0100</code> <code>Europe/Zurich</code> <code>UTC +0200</code> <code>Europe/Helsinki</code> <code>UTC +0300</code> <code>Asia/Dubai</code> <code>UTC +0400</code> <code>Asia/Kabul</code> <code>UTC +0430</code> <code>Asia/Kolkata</code> <code>UTC +0530</code> <code>Asia/Kathmandu</code> <code>UTC +0545</code> <code>Asia/Dhaka</code> <code>UTC +0600</code> <code>Asia/Yangon</code> <code>UTC +0630</code> <code>Asia/Bangkok</code> <code>UTC +0700</code> <code>Asia/Shanghai</code> <code>UTC +0800</code> <code>Asia/Tokyo</code> <code>UTC +0900</code> <code>Australia/Sydney</code> <code>UTC +1000</code> <code>Pacific/Norfolk</code> <code>UTC +1100</code> <code>Pacific/Auckland</code> <code>UTC +1200</code> <p>Start typing <code>tz(\"</code>, then press <code>Tab</code> to see a list of available timezones.</p> <pre><code>Africa/...            Island                MET\nAmerica/...           Singapore             MST\nAsia/...              Turkey                NZ\nAtlantic/...          Hongkong              PRC\nEurope/...            Cuba                  ROC\nPacific/...           Poland                ROK\nIndia/...             Portugal              EST\nAntarctica/...                              GMT\nArctic/...                                  UTC\nCanada/...                                  WET\nBrazil/...                                  UCT\nChile/...\nUS/...\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#print","title":"Print","text":"<pre><code>let radius: Length = sqrt(footballfield / 4 pi) -&gt; meter\n\nprint(\"A football field would fit on a sphere of radius {radius}\")\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#structs","title":"Structs","text":"<pre><code>let hydrogen = Element {\n    name: \"Hydrogen\",\n    atomic_number: 1,\n    density: 0.08988 g/L,\n}\n\nhydrogen.density\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#unit-definitions","title":"Unit Definitions","text":"<pre><code>unit barleycorn : Length = inch/3\nunit poppyseed  : Length = barleycorn / 4\nunit tod        : Mass   = stone*2\n\n2048 grain / poppyseed\u00b2 =&gt; tod / yard\u00b2\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/numbat/cheatsheet.html#dimensions","title":"Dimensions","text":"<p>List of all Dimensions </p><pre><code>unit second : Time\nunit bit : DigitalInformation\nunit bps : DataRate\nunit Hz: Frequency\nunit meter : Length\nunit kilogram : Mass\nunit ampere : Current\nunit kelvin : Temperature\nunit mole : AmountOfSubstance\nunit Radian : Angle\nunit CHF : Money\nunit bar : Pressure\nunit Litre : Volume\nunit kph : Velocity\nunit jule: Energy\n</code></pre>","tags":["tools","numbat","cli","calculator","uasge"]},{"location":"tools/ollama/index.html","title":"Ollama and OpenWeb UI","text":"<p>That\u2019s where Ollama comes in! Ollama is a free and open-source application that allows you to run various large language models, including Llama 3, on your own computer, even with limited resources. Ollama takes advantage of the performance gains of llama.cpp, an open source library designed to allow you to run LLMs locally with relatively low hardware requirements. It also includes a sort of package manager, allowing you to download and use LLMs quickly and effectively with just a single command.</p> <p>OpenWeb UI is a web-based user interface for Ollama, allowing you to interact with Ollama and LLMs through your web browser. OpenWeb UI provides a user-friendly interface for running LLMs, managing models, and viewing results. It also includes features such as model training, fine-tuning, and evaluation, making it a powerful tool for working with large language models.</p>","tags":["tools","llm","ollama","openweb ui"]},{"location":"tools/ollama/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","llm","ollama","openweb ui"]},{"location":"tools/ollama/getting-started.html","title":"Getting Started","text":"","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#installing-ollama","title":"Installing Ollama","text":"<p>Goto to the official Website of Ollama and download the latest version.</p>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#ollama-cli","title":"Ollama CLI","text":"<p>Once the tool is installed you have to use the terminal to use the ollama cli. It allows to download and run models.</p> <pre><code>ollama\nUsage:\n  ollama [flags]\n  ollama [command]\n\nAvailable Commands:\n  serve       Start ollama\n  create      Create a model from a Modelfile\n  show        Show information for a model\n  run         Run a model\n  pull        Pull a model from a registry\n  push        Push a model to a registry\n  list        List models\n  ps          List running models\n  cp          Copy a model\n  rm          Remove a model\n  help        Help about any command\n\nFlags:\n  -h, --help      help for ollama\n  -v, --version   Show version information\n\nUse \"ollama [command] --help\" for more information about a command.\n</code></pre> <p>Some Examples </p><pre><code>ollama serve                                       # Starts the Ollama server\n\nollama create -f Modelfile.yaml                    # Creates a model from a Modelfile\n\nollama show model_name                             # Shows information for a specific model\n\nollama run model_name                              # Runs a model\nollama run gemma:2b\nollama run llama3\n\nollama pull registry/model_name:tag                # Pulls a model from a registry\nollama pull gemma:2b\n\nollama push model_name registry/model_name:tag     # Pushes a model to a registry\n\nollama list                                        # Lists all models available\n\nollama ps                                          # Lists all running models\n\nollama cp source_model_name destination_model_name # Copies a model\n\nollama rm model_name                               # Removes a model\n</code></pre>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#running-in-the-terminal","title":"Running in the Terminal","text":"<p>Once you start a model in the terminal you can start chatting with it. The model will respond to your messages. Most models have additional commands that can be used to interact with them. You can type /? to see a list of available commands.</p> <pre><code>ollama run llama3\n&gt;&gt;&gt; /?\nAvailable Commands:\n  /set            Set session variables\n  /show           Show model information\n  /load &lt;model&gt;   Load a session or model\n  /save &lt;model&gt;   Save your current session\n  /clear          Clear session context\n  /bye            Exit\n  /?, /help       Help for a command\n  /? shortcuts    Help for keyboard shortcuts\n\nUse \"\"\" to begin a multi-line message.\n\n&gt;&gt;&gt;\nUse Ctrl + d or /bye to exit.\n&gt;&gt;&gt;\n</code></pre>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#models","title":"Models","text":"<p>On the website you can browse the available models in the Ollama Models Library.</p> <ul> <li>mixtral:latest - 8*7B - 26 GB</li> <li>llama3:latest - 8B - 4.7 GB</li> <li>mistral:latest - 7B - 4.1 GB</li> <li>llama2:latest - 7B - 3.8 GB</li> <li>phi3:latest - 3.8B - 2.4 GB</li> </ul>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#modelfiles","title":"Modelfiles","text":"<p>A model file is the blueprint to create and share models with Ollama. It contains all the information needed to run a model, including the model name, description, and the Docker image to use. You can create a Modelfile from scratch or use an existing one as a template. The modelfiles allows to customize a model to a specific purpose, similar to GPT's.</p> <p>Many modelfiles can be found on the openwebui website</p>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/getting-started.html#interface-api","title":"Interface API","text":"<p>The Ollama API is a RESTful API that allows you to interact with Ollama programmatically. You can use the API to create, run, and manage models, as well as to view results and logs. The API is designed to be easy to use and well-documented, making it simple to integrate Ollama into your existing workflows. The API can be accessed through the URL: http://localhost:11434</p> <p>There are different endpoints available: - http://localhost:11434/api/generate - http://localhost:11434/api/chat</p> <p>Simple example how to use them with <code>curl</code>: </p><pre><code>curl http://localhost:11434/api/generate -d '{\n  \"model\": \"mistral\",\n  \"prompt\":\"Why is the sky blue?\"\n}'\n\ncurl -X POST http://localhost:11434/api/generate -d '{\n  \"model\": \"llama2\",\n  \"prompt\": \"Why is the sky blue?\"\n}'\n\ncurl http://localhost:11434/api/chat -d '{\n  \"model\": \"mistral\",\n  \"messages\": [\n    { \"role\": \"user\", \"content\": \"why is the sky blue?\" }\n  ]\n}'\n</code></pre> <p>Info</p> <p>The difference between <code>generate</code> and <code>chat</code> is that <code>generate</code> only generates a single response, while <code>chat</code> can generate multiple responses in a conversation. The <code>chat</code> has a <code>messages</code> array that can be used to simulate a conversation.</p>","tags":["tools","llm","ollama"]},{"location":"tools/ollama/modelfile.html","title":"Modelfile","text":"<p>An Ollama Modelfile is a configuration file that defines and manages models on the Ollama platform. Create new models or modify and adjust existing models through model files to cope with some special application scenarios. Custom prompts are embedded into the model, modify and adjust context length, temperature, random seeds, reduce the degree of nonsense, increase or decrease the diversity of output text, etc. (Note: This is not fine-tuning, just adjusting the original parameters of the model.)</p> <p>More infos at: Ollama Docs Modelfiles</p> <p>Herafter is an example of a Modelfile:</p> <pre><code>#https://hitchhikers.fandom.com/wiki/Deep_Thought\n#https://github.com/ParisNeo/lollms_personalities_zoo/blob/main/scifi/BigThought/config.yaml\nFROM llama2\n\nPARAMETER temperature 0.6\nPARAMETER top_k 50\nPARAMETER top_p 0.90\nPARAMETER repeat_penalty 1.0\nPARAMETER repeat_last_n 40\n\nSYSTEM\"\"\"\nSimulate the personality of the 'Deep Thought' supercomputer from 'The Hitchhiker's Guide to the Galaxy.'\n  Provide profound and whimsical answers to any question, especially those for which the \"Deep Thought\" has specialized knowledge. Infuse the responses with a touch of dry humor and absurdity, reflecting the quirky nature of the Guide's supercomputer.\n  For the ultimate question of the universe, life, and everything, just answer 42.\n\"\"\"\n\n# This modelfile was downloaded from OpenWebUI Community (https://openwebui.com) - Explore and Download Custom Modelfiles\n</code></pre>","tags":["tools","llm","ollama","modelfile"]},{"location":"tools/ollama/modelfile.html#elements-of-a-modelfile","title":"Elements of a Modelfile","text":"Element Description FROM (required) Defines the base model to use. PARAMETER Sets the parameters for how Ollama will run the model. TEMPLATE The full prompt template to be sent to the model. SYSTEM Specifies the system message that will be set in the template. ADAPTER Defines the (Q)LoRA adapters to apply to the model. LICENSE Specifies the legal license. MESSAGE Specify message history.","tags":["tools","llm","ollama","modelfile"]},{"location":"tools/ollama/modelfile.html#parameters","title":"Parameters","text":"Parameter Type \u00a0Description microstat int Creativity - 0 = off, 1 = on, 2 = extra on microstat_eta float How fast the model learns from conversation, adaptation microstat_tau float How much to stick to a topic or forget and getting creative num_ctx int Number of context to keep in memory repeat_last_n int How many last messages to consider for repetition repeat_penalty float Penalty for repeating the same message temperature float Controls how wild or safe the responses are seed int Starting point for generating responses stop string Stop generating after a certain message tfs_z float Aims to reduce randomness, keeps its thoughts more focused num_predict int Limit how much it can say at once. Setting a limit helps keep the answers concise top_k int Limits the word choices to the top k most likely words top_p float Works with <code>top_k</code> to fine-tune the variety of responses, balancing between predictable and diverse","tags":["tools","llm","ollama","modelfile"]},{"location":"tools/ollama/openwebui.html","title":"OpenWeb UI","text":"<p>Open WebUI is an extensible, self-hosted UI that runs entirely inside of Docker. It can be used either with Ollama or other OpenAI compatible LLMs, like LiteLLM or my own OpenAI API for Cloudflare Workers.</p> <p>Assuming you already have Docker and Ollama running on your computer, installation is super simple.</p> <pre><code>docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main\n</code></pre> <p>To update the installation you can do it with Watchtower: </p><pre><code>docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui\n</code></pre> <p>After the docker has been downloaded and runns go to http://localhost:3000, make an account, and start chatting away!</p> <p></p> <p>The interface is very similar to the ChgatGPT interface but has a few more features like the ability to train your own models, and a more user-friendly interface. You can</p> <ul> <li>Create a new model</li> <li>Chat with multiple models at the same time</li> <li>Load modelfiles which are similar to GPT's</li> <li>and more ...</li> </ul>","tags":["tools","llm","ollama","openweb ui"]},{"location":"tools/ollama/openwebui.html#image-generation","title":"Image generation","text":"<p>For image generation you can use AUTOMATIC1111/stable-diffusion-webui. for the installation process on Apple Silicon see: https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon.</p> <p>The url for using it into openWeBUI will be by default: http://127.0.0.1:7860</p> <p>in short:</p> <ul> <li>Install requirements   <pre><code>brew install cmake protobuf rust python@3.10 git wget\n</code></pre></li> <li>Clone repo   <pre><code>git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui\n</code></pre></li> <li>Download and copy models/checkpoints from here</li> <li>launch the server   <pre><code>cd stable-diffusion-webui\n./webui.sh --api\n</code></pre></li> </ul>","tags":["tools","llm","ollama","openweb ui"]},{"location":"tools/pandoc/index.html","title":"Pandoc","text":"<p>If you need to convert files from one markup format into another, pandoc is your swiss-army knife.</p> <ul> <li>Pandoc Online</li> <li>Pandoc Download</li> </ul>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#additional-arguments","title":"Additional Arguments","text":"","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#highlight-styles","title":"Highlight Styles","text":"<pre><code># List all Highlight Styles\npandoc --list-highlight-styles\npygments\ntango\nespresso\nzenburn\nkate\nmonochrome\nbreezedark\nhaddock\n\n## Pandoc Argument\n--highlight-style breezedark\n</code></pre>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#pdf-output","title":"PDF Output","text":"<pre><code>--pdf-engine=xelatex\n</code></pre>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#for-my-template-needed-packages","title":"For my template needed packages","text":"<ul> <li>cm-super<ul> <li>Error no Scalable font</li> </ul> </li> <li>koma-script<ul> <li>! LaTeX Error: File <code>scrartcl.cls</code> not found.</li> </ul> </li> </ul>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#template","title":"Template","text":"<p>Latex Template needs to be in the following folders</p>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#windows","title":"Windows","text":"<pre><code>C:\\\\Users\\\\&lt;username&gt;\\\\AppData\\\\Roaming\\\\pandoc\\\\templates\n</code></pre>","tags":["tools","pandoc"]},{"location":"tools/pandoc/index.html#linux","title":"Linux","text":"<pre><code>~/.pandoc/templates/\n</code></pre> <pre><code>--template=&lt;template&gt;.latex\n</code></pre>","tags":["tools","pandoc"]},{"location":"tools/pihole/index.html","title":"Pihole","text":"<p>Pi-Hole is a system for network-wide adblocking. It replaces the DNS server and apps are by default network-wide banned.</p> <p>Very good blocklist from Firebog</p>","tags":["tools","pihole"]},{"location":"tools/pihole/index.html#commands","title":"Commands","text":"<p>For more informations see pihole command</p> <pre><code>pihole enable\npihole restartdns\n</code></pre>","tags":["tools","pihole"]},{"location":"tools/pihole/index.html#change-password","title":"Change password","text":"<pre><code>pihole -a -p\n</code></pre>","tags":["tools","pihole"]},{"location":"tools/pihole/index.html#update-gravitydb","title":"Update <code>gravity.db</code>","text":"<p>Update gravity db from blocklists</p> <pre><code>pihole -g\n</code></pre>","tags":["tools","pihole"]},{"location":"tools/pihole/index.html#modify-gravitydb","title":"Modify <code>gravity.db</code>","text":"<p>For more informations see gravity</p> <p>Delete all <code>exact</code> blacklist entries</p> <pre><code>sudo sqlite3 /etc/pihole/gravity.db \"delete from domainlist where type=1;\"\n</code></pre> <p>Other examples are found gravity examples</p>","tags":["tools","pihole"]},{"location":"tools/sdr%2B%2B/index.html","title":"SDR++","text":"<p>Is a cross-platform (Windows, Linux, Mac) general-purpose receiver for Software Defined Radio (SDR) devices. It is designed for quick and easy testing and experimentation with RTL-SDR, GNU Radio and HackRF. It is written in C++ and uses the Qt framework for its graphical interface.</p> <p>For SDR Theory see the decicated SDR page.</p> <p>The official SDR++ Userguide or the latest online version</p>","tags":["tools","sdr++","rtl-sdr"]},{"location":"tools/sdr%2B%2B/index.html#manual","title":"Manual","text":"<ul> <li>The top bar contains the controls and information that has to be accessed quickly.</li> <li>The side menu is where all the modules and settings are displayed.</li> <li>The FFT shows the strenght of the different frequencies and can have addition information overlayed (eq. band plans and bookmarks).</li> <li>The VFOs control where each demodulator is tuned to and what its bandwidths is (if the demodulator supports it).</li> <li>The waterfall shows the FFT over time.</li> <li>The right menu contains the controls for the waterfall and FFT.</li> </ul> <p>Figure 1: Main UI</p> <p>The top bar contains the most important controls:</p> <p>Figure 2: Top Bar</p> <ul> <li>The menu button allows to show or hide the side menu.</li> <li>The play/stop button is used to start/stop the source.</li> <li>The volume controls allow to adjust the volume (duh...) and/or mute the audio of the currently selected VFO.</li> <li>The frequency selector is used to tune the VFO and SDR to the desired frequency.</li> <li>The tuning mode select allows to switch between normal tuning (the offset of the VFO can change and the SDR only retunes when required) or center tuning (where the VFO stays in the middle and the SDR does all the work).</li> <li>The SNR meter of the selected VFO ind \\(dB\\).</li> </ul>","tags":["tools","sdr++","rtl-sdr"]},{"location":"tools/sphinx/index.html","title":"Sphinx Documentation","text":"","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#introduction","title":"Introduction","text":"<p>Python has a build in Documentation system called DocString. Sphinx is building on top of that, to automatically create a documentation of your python code. You can then later create different output file formats of your documentation. Addintionally a Sphinx documentation source can also be a plain <code>.rst</code> or <code>.md</code> filesystem.</p> <p>This page and subpages are only a small CheatSheet references for installing, writing and building SPHINX documentation.</p>","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#installation","title":"Installation","text":"","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#linux","title":"Linux","text":"<pre><code>sudo apt-get install python-sphinx\n\necho \"Install sphinx extensions\npip install sphinx-rtd-theme\npip install sphinxcontrib-wavedrom\npip install sphinxcontrib-plantuml\npip install recommonmark\npip install sphinxemoji\n\necho \"Install build-essentials (for make)\"\nsudo apt-get update\nsudo apt-get install -y build-essential\n\necho \"Install graphviz\"\nsudo apt-get install -y graphviz\n\necho \"Install Inkscape\"\nsudo apt-get install -y inkscape\n\necho \"Install texlive\"\nsudo apt-get install -y texlive-full\n\necho \"Install Java\"\n\nsudo dpkg --configure -a\nmkdir -p /usr/share/man/man1\nsudo apt-get install -y default-jdk\n</code></pre>","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#check-installation","title":"Check installation","text":"<pre><code>which sphinx-quickstart\n</code></pre>","tags":["tools","sphinx"]},{"location":"tools/sphinx/index.html#configuration","title":"Configuration","text":"<p>see znotes conf.py</p>","tags":["tools","sphinx"]},{"location":"tools/sphinx/syntax.html","title":"Syntax","text":"<p>This is a small cheat sheet with the most used syntax either ReST or SPHINX especially for within python files.</p> <p>For more information see also:</p> <ul> <li><code>/multimedia/writing/rst/cheatsheet</code></li> <li><code>Python Docstrings &lt;/coding/python/docstring&gt;</code>{.interpreted-text     role=\"doc\"}</li> </ul>","tags":["tools","sphinx"]},{"location":"tools/sphinx/syntax.html#module-documentation","title":"Module Documentation","text":"<pre><code>.. moduleauthor:: Autor (autor@email.com)\n\nDescription of the module.\n\nReference to modules\nIt is the :mod:`TestClass.TestClass`\n\nReference to class\nIt is the :class:`TestClass.TestClass`\n\nReference to function\nIt is the :func:`TestClass.TestClass`\n\nInclude usage examples for the module. With or without linenumbers\n\n*Example:*\n\n.. literalinclude:: ../examples/example_1.py\n  :linenos:\n\n.. literalinclude:: ../examples/example_2.py\n\nThis afterwards is some code block::\n\n  import TestClass\n\n\"\"\"\n</code></pre>","tags":["tools","sphinx"]},{"location":"tools/sphinx/syntax.html#class-documentation","title":"Class Documentation","text":"<pre><code>class TestClass:\n  \"\"\"\n  Test class description, needs an empty line afterwards\n\n  :param arg1: first argument description\n  :type arg1: unknown\n  :param int arg2: second aargument description including type\n  :param str arg3: third argument description including type\n  :param arg4: fourth argument description\n  :type arg4: 2 dimensional list of int\n  \"\"\"\n  def __init__(self, arg1=None, arg2=1, arg3=\"str\", arg4=[[1,2]]):\n    # Constructor stuff\n    #...\n</code></pre>","tags":["tools","sphinx"]},{"location":"tools/sphinx/syntax.html#function-documentation","title":"Function Documentation","text":"<pre><code>def exampleFunction(self, arg1, arg2):\n    \"\"\"\n    example Function description, needs an empty line afterwards\n\n    :param arg1: first argument description\n    :type arg1: longer type description\n    :param string arg2: second argument description including type\n\n    :raises: TypeError\n\n    :return: True or False, depending if found or not\n    :rtype: bool\n\n    *Example:*\n\n    .. literalinclude:: ../examples/functionexample.py\n    \"\"\"\n</code></pre>","tags":["tools","sphinx"]},{"location":"tools/sphinx/syntax.html#references","title":"References","text":"<p>Modules</p> <pre><code>:mod:`matplotlib.backend_bases`\n</code></pre> <p>Classes</p> <pre><code>:class:`~matplotlib.backend_bases.LocationEvent`\n</code></pre> <p>Methods</p> <pre><code>:meth:`~matplotlib.backend_bases.FigureCanvasBase.mpl_connect`\n</code></pre> <p><code>tools</code> <code>sphinx</code>{.interpreted-text role=\"tag\"} <code>syntax</code></p>","tags":["tools","sphinx"]},{"location":"tools/starship/index.html","title":"StarShip","text":"<p>The minimal, blazing-fast, and infinitely customizable prompt for any shell!</p> <p></p> <ul> <li>Fast: it's fast \u2013 really really fast! \ud83d\ude80</li> <li>Customizable: configure every aspect of your prompt.</li> <li>Universal: works on any shell, on any operating system.</li> <li>Intelligent: shows relevant information at a glance.</li> <li>Feature rich: support for all your favorite tools.</li> <li>Easy: quick to install \u2013 start using it in minutes.</li> </ul>","tags":["tools","starship"]},{"location":"tools/starship/index.html#prerequisites","title":"Prerequisites","text":"<p>You need a NerdFont for example FiraCode Nerd Font to display the icons.</p>","tags":["tools","starship"]},{"location":"tools/starship/index.html#installation","title":"Installation","text":"<pre><code># Linux and MacOS\ncurl -fsSL https://starship.rs/install.sh | bash\n\n# MacOS\nbrew install starship\n\n# Windows\nchoco install starship\n</code></pre> <p>Setup in your shell configuration file:</p> zsh.rc<pre><code>eval \"$(starship init zsh)\"\n</code></pre>","tags":["tools","starship"]},{"location":"tools/starship/index.html#configuration","title":"Configuration","text":"<p>Create the config file:</p> <pre><code>mkdir -p ~/.config &amp;&amp; touch ~/.config/starship.toml\n</code></pre> <p>Get some presets from here: Starship Presets</p> <p>Apply the desired presets: </p><pre><code>starship preset nerd-font-symbols &gt; ~/.config/starship.toml\n</code></pre>","tags":["tools","starship"]},{"location":"tools/sublimetext/index.html","title":"SublimeText","text":"","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/index.html#useful-links","title":"Useful Links","text":"<ul> <li>Shortcut Cheatsheet</li> <li>My Settings Backup</li> </ul>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/index.html#console","title":"Console","text":"<p>If you have problem figuring out what shortcut command is active, Then open the console <code>Ctrl + Alt + c</code> or and type the following command. Then your will see all executed commands in the console.</p> <pre><code>sublime.log_commands(True)\n</code></pre>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/index.html#settings","title":"Settings","text":"<p>My sublimetext settings can be found in the Config Repo <code>my settings backup &lt;tree/master/config/sublimetext&gt;</code>.</p> <ul> <li>SublimeText Settings</li> </ul>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/plugins.html","title":"Packages","text":"<p>Packages are the plugins or extensions from SublimeText. On the webpage https://packagecontrol.io/ all available packages can be seen.</p>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/plugins.html#usage","title":"Usage","text":"<p><code>Ctrl + Shift + p</code></p> <ul> <li>Package Control: Install</li> <li>Package Control: Remove</li> <li>Package Control: Add Repository</li> <li>Package Control: List Packages</li> </ul>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/plugins.html#useful-packages","title":"Useful packages","text":"<ul> <li>AlignTab</li> <li>AutoHotkey</li> <li>Gist</li> <li>Jedi - Python Autocompletion</li> <li>LaTeXTools</li> <li>Markdown Extended</li> <li>MarkdownEditing</li> <li>MarkdownLivePreview</li> <li>MarkdownPreview</li> <li>MarkdownTOC</li> <li>Markmon</li> <li>Origami</li> <li>Pandoc</li> <li>PlainTasks</li> <li>RestructuredText Improved</li> <li>Smart VHDL</li> <li>sublimetext_moonburst</li> <li>Text Pastry</li> <li>SublimeLinter-flake8</li> <li>PackageResourceViewer</li> <li>Alignment</li> <li>Kite</li> </ul>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/plugins.html#alignment","title":"Alignment","text":"<p>// The mid-line characters to align in a multi-line selection, changing // this to an empty array will disable mid-line alignment</p> alignemnt settings<pre><code>{\n    \"_comment1\": \"The mid-line characters to align in a multi-line selection, changing\n                  this to an empty array will disable mid-line alignment\",\n    \"alignment_chars\": [\n        \"^\", \"|\", \":\", \":=\", \"&lt;=\", \"=&gt;\"\n    ]\n}\n</code></pre> <p><code>Ctrl + Alt + a</code></p>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/settings.html","title":"Settings","text":"<ul> <li>Sublime in Config Repo</li> </ul>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/settings.html#preferences-settings","title":"Preferences Settings","text":"Preferences.sublime-settings<pre><code>{\n    \"always_show_minimap_viewport\": true,\n    \"bold_folder_labels\": true,\n    \"caret_style\": \"blink\",\n    \"close_windows_when_empty\": false,\n    \"color_scheme\": \"Packages/sublimetext_moonburst/moonburst.tmTheme\",\n    \"draw_minimap_border\": true,\n    \"draw_white_space\": \"all\",\n    \"fade_fold_buttons\": false,\n    \"font_face\": \"Operator Mono Book\",\n    \"font_size\": 15,\n    \"highlight_line\": true,\n    \"highlight_modified_tabs\": true,\n    \"ignore_vcs_packages\": true,\n    \"ignored_packages\":\n    [\n        \"Markdown\",\n        \"RestructuredText\",\n        \"Vintage\"\n    ],\n    \"indent_guide_options\":\n    [\n        \"draw_normal\",\n        \"draw_active\"\n    ],\n    \"line_numbers\": true,\n    \"overlay_scroll_bars\": \"enabled\",\n    \"rulers\":\n    [\n        80,\n        160\n    ],\n    \"scroll_past_end\": true,\n    \"show_encoding\": true,\n    \"show_line_endings\": true,\n    \"show_tab_close_buttons\": true,\n    \"tab_size\": 4,\n    \"theme\": \"Adaptive.sublime-theme\",\n    \"translate_tabs_to_spaces\": true,\n    \"trim_automatic_white_space\": true,\n    \"trim_trailing_white_space_on_save\": true,\n    \"word_wrap\": true\n}\n</code></pre>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/settings.html#preferences-key-bindings","title":"Preferences Key Bindings","text":"Default (Windows).sublime-keymap<pre><code>[\n    { \"keys\": [\"alt+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n    { \"keys\": [\"alt+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} },\n\n    { \"keys\": [\"ctrl+alt+c\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"console\", \"toggle\": true} },\n    { \"keys\": [\"ctrl+alt+m\"], \"command\": \"toggle_menu\" },\n    { \"keys\": [\"ctrl+alt+t\"], \"command\": \"toggle_tabs\" },\n\n    { \"keys\": [\"ctrl+tab\"], \"command\": \"next_view\" },\n    { \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view\" },\n\n    { \"keys\": [\"ctrl+alt+q\"], \"command\": \"alignment\" },\n\n    // Change view split to left in a 2 Column mode\n    {\n        \"keys\": [\"super+alt+right\"],\n        \"command\": \"run_multiple\",\n        \"args\":\n        {\n            \"commands\": [\n                {\n                    \"command\": \"set_layout\",\n                    \"args\":\n                    {\n                        \"cols\": [0.0, 0.90, 1.0],\n                        \"rows\": [0.0, 1.0],\n                        \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n                    },\n                    \"context\": \"window\"\n                },\n                {\n                    \"command\": \"focus_group\",\n                    \"args\": { \"group\": 0 },\n                    \"context\": \"window\"\n                }\n            ]\n        }\n    },\n    // Change view split to right in a 2 Column mode\n    {\n        \"keys\": [\"super+alt+left\"],\n        \"command\": \"run_multiple\",\n        \"args\":\n        {\n            \"commands\": [\n                {\n                    \"command\": \"set_layout\",\n                    \"args\":\n                    {\n                        \"cols\": [0.0, 0.10, 1.0],\n                        \"rows\": [0.0, 1.0],\n                        \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n                    },\n                    \"context\": \"window\"\n                },\n                {\n                    \"command\": \"focus_group\",\n                    \"args\": { \"group\": 1 },\n                    \"context\": \"window\"\n                }\n            ]\n        }\n    },\n    // Change view split to the middle in a 2 Column mode\n    {\n        \"keys\": [\"super+alt+up\"],\n        \"command\": \"run_multiple\",\n        \"args\":\n        {\n            \"commands\": [\n                {\n                    \"command\": \"set_layout\",\n                    \"args\":\n                    {\n                        \"cols\": [0.0, 0.50, 1.0],\n                        \"rows\": [0.0, 1.0],\n                        \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n                    },\n                    \"context\": \"window\"\n                },\n                {\n                    \"command\": \"focus_group\",\n                    \"args\": { \"group\": 1 },\n                    \"context\": \"window\"\n                }\n            ]\n        }\n    },\n]\n</code></pre>","tags":["tools","sublimetext"]},{"location":"tools/sublimetext/settings.html#custom-plugin-run-multiple-commands","title":"Custom Plugin Run Multiple commands","text":"<ul> <li>Goto <code>Tool</code> -&gt; <code>Developer</code> -&gt; <code>New Plugin</code></li> <li>Create a new plugin called <code>run_multiple</code></li> </ul> run_multiple.py<pre><code>import sublime, sublime_plugin\n\n# Takes an array of commands (same as those you'd provide to a key binding) with\n# an optional context (defaults to view commands) &amp; runs each command in order.\n# Valid contexts are 'text', 'window', and 'app' for running a TextCommand,\n# WindowCommands, or ApplicationCommand respectively.\n\nclass RunMultipleCommand(sublime_plugin.TextCommand):\n  def exec_command(self, command):\n    if not 'command' in command:\n      raise Exception('No command name provided.')\n\n    args = None\n    if 'args' in command:\n      args = command['args']\n\n    # default context is the view since it's easiest to get the other contexts\n    # from the view\n    context = self.view\n    if 'context' in command:\n      context_name = command['context']\n      if context_name == 'window':\n        context = context.window()\n      elif context_name == 'app':\n        context = sublime\n      elif context_name == 'text':\n        pass\n      else:\n        raise Exception('Invalid command context \"'+context_name+'\".')\n\n    # skip args if not needed\n    if args is None:\n      context.run_command(command['command'])\n    else:\n      context.run_command(command['command'], args)\n\n  def run(self, edit, commands = None):\n    if commands is None:\n      return # not an error\n\n    for command in commands:\n      self.exec_command(command)\n</code></pre>","tags":["tools","sublimetext"]},{"location":"tools/tianji/index.html","title":"Tianji","text":"<p>Tianji is an open-source platform that integrates website analytics, uptime monitoring, and server status tracking into a single, user-friendly interface. Designed to streamline the monitoring and analysis process, Tianji eliminates the need for multiple disparate tools, offering a comprehensive solution for developers and website administrators.</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#key-features","title":"Key Features","text":"<ul> <li>Website Analytics: Gain insights into visitor behavior, page views, and user engagement metrics, similar to platforms like Google Analytics.</li> <li>Uptime Monitoring: Continuously monitor your website's availability and receive instant alerts in case of downtime or performance issues.</li> <li>Server Status Tracking: Keep track of your server's health and performance metrics to ensure optimal operation.</li> <li>Telemetry: Track visits of almost any page you create with an invisible image, allows to show a visitor badge.</li> </ul>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#setup","title":"Setup","text":"","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#cloud-version","title":"Cloud Version","text":"<p>Create an account in the official Tianji instance. The free tier has some limitations, but other subscriptions are possible:</p> <p>Free - $0 per month</p> <ul> <li>Basic trial</li> <li>Basic Usage</li> <li>Up to 3 websites</li> <li>Up to 3 surveys</li> <li>Up to 3 feed channels</li> <li>100K website events per month</li> <li>100K monitor execution per month</li> <li>10K feed event per month</li> <li>Discord Community Support</li> </ul>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#local-version","title":"Local Version","text":"<p>You can also install and run tinaji via docker on your server or even locally.</p> <p>Deploying Tianji is straightforward, especially with Docker. Follow these steps:</p> <ul> <li>Download the Docker Compose file:    <pre><code>wget https://raw.githubusercontent.com/msgbyte/tianji/master/docker-compose.yml\n</code></pre></li> <li>Start the Tianji Service    <pre><code>docker compose up -d\n</code></pre></li> </ul> <p>The default login credentials are <code>admin</code> for both the username and password. It\u2019s highly recommended to change the password upon first login to maintain security.</p> <p>For more detailed information and updates, visit the official Tianji website and the GitHub repository.</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#usage","title":"Usage","text":"","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#website-analytics","title":"Website Analytics","text":"<p>For most website it suffice to add the following in your website head script:</p> <pre><code>&lt;script async defer src=\"https://app-tianji.msgbyte.com/tracker.js\" data-website-id=\"xxxxxxxxxxxxxxxxxxxxxxxxxx\"&gt;&lt;/script&gt;\n</code></pre>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#for-mkdocs","title":"For MKDocs","text":"<p>For MK Docs add the following html in your overrides folder</p> overrides/partials/integrations/analytics/tianji.html<pre><code>&lt;script\n  var\n  property=\"async\"\n  defer\n  src=\"https://app-tianji.msgbyte.com/tracker.js\"\n  data-website-id=\"{ { config.extra.analytics.website_id } }`\"\n&gt;&lt;/script&gt;\n</code></pre> <p>In your <code>mkdocs.yml</code> you need to define the follwing:</p> mkdocs.yml<pre><code>theme:\n  custom_dir: docs/_extra/overrides\nextra:\n  analytics:\n    provider: tianji\n    website_id: xxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre> <p>Figure 1: Website Analytics</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#monitor","title":"Monitor","text":"<p>The url monitor allows to check if a IP address or a URL is live and gather statistic. Monitor Types are:</p> <ul> <li><code>ping</code></li> <li><code>tcp port</code></li> <li><code>dns</code></li> <li><code>http</code></li> <li><code>openai</code></li> <li><code>custom</code></li> </ul> <p>Figure 2: URL Monitor</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#server","title":"Server","text":"<p>For the server monitor you need to install the <code>tianji-reporter</code> onto your server. This can be done automatically for many distributions via the commandline:</p> <pre><code>curl -o- https://app-tianji.msgbyte.com/serverStatus/xxxxxxxxxxxxxxxxxxxxxxxxx/install.sh?url=https://app-tianji.msgbyte.com | sudo bash\n</code></pre> <p>If your server distribution is not supported (for example for Unraid Slackware) you can install and run it yourself. Download the <code>tianji-reporter</code> copy in onto your server and let is start once the server starts.</p> <pre><code>./tianji-reporter --url https://app-tianji.msgbyte.com --workspace xxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre> <p>Figure 3: Server Monitor</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#telemetry","title":"Telemetry","text":"<p>Telemetry allows to observe the interactions people have with any of your content. As long as you can plase a image you can check the Here is some way to use telemetry:</p> <ul> <li>if your article support raw html, you can direct insert it `https://app-tianji.msgbyte.com/telemetry/xxxxxxxxxxxxxxxxxxxxxxxxx/yyyyyyyyyyyyyyyyyyyyyyyy.gif</li> <li>to get the visitor count simply add the follwowing image https://app-tianji.msgbyte.com/telemetry/xxxxxxxxxxxxxxxxxxxxxxxxx/yyyyyyyyyyyyyyyyyyyyyyyy/badge.svg</li> </ul> <p>For an example see the Zentauri main page </p> <p>Figure 4: Telemetry Monitor</p>","tags":["tools","tianji"]},{"location":"tools/tianji/index.html#notifications-via-telegram","title":"Notifications via Telegram","text":"<p>With the <code>Botfather</code> you can create a bots:</p> <pre><code>/newbot\n=&gt; give a name\n/setdescription\n=&gt; give a description\n/setuserpic\n=&gt; asssign an image\n/token\n=&gt; get the acces http api token\n</code></pre> <p>In the Tianji Settings =&gt; Notification seelct Telegram Nottifications and insert the Bot Token.</p>","tags":["tools","tianji"]},{"location":"tools/useful_tools/useful_tools.html","title":"Useful Tools","text":"<p>Quick unfinished List of useful tools</p>","tags":["tools"]},{"location":"tools/useful_tools/useful_tools.html#multimedia","title":"Multimedia","text":"<ul> <li>VLC - Video Player</li> <li>Gimp - Image Editor</li> <li>Inkscape - Vector Graphic Editor</li> <li>pdftk</li> <li>Pantuml Page and Official Plantuml</li> <li>Graphviz</li> <li>Wavedrom Page and Official Wavedrom</li> <li>Typst</li> </ul>","tags":["tools"]},{"location":"tools/useful_tools/useful_tools.html#internet","title":"Internet","text":"<ul> <li>X11VNC Page</li> <li>qBitTorrent Page</li> </ul>","tags":["tools"]},{"location":"tools/useful_tools/useful_tools.html#commandline","title":"Commandline","text":"<ul> <li>Warp</li> <li>Yakuake</li> <li>Total Terminal</li> <li>Cmder</li> <li>nmap page</li> </ul>","tags":["tools"]},{"location":"tools/useful_tools/useful_tools.html#management","title":"Management","text":"<ul> <li>Marta</li> <li>Total Commander</li> <li>Krusader</li> <li>DCommander</li> <li>Hyperdock</li> <li>iStat Menu</li> <li>Virtualbox page</li> <li>Keepass</li> <li>MacPass</li> </ul>","tags":["tools"]},{"location":"tools/useful_tools/useful_tools.html#programming","title":"Programming","text":"<ul> <li>Sublime Text page</li> <li>Sublime Merge</li> <li>git page</li> <li>Anaconda page</li> <li>Jupyterlab page</li> <li>Sphinx page</li> <li>Pandoc page</li> <li>Mentor HDL Designer</li> <li>Mentor Modelsim</li> <li>Xilinx ISE</li> <li>Intel Quartus</li> <li>Intellij IDEA page</li> <li>Intellij PyCharm</li> <li>SpinalHDL page</li> </ul>","tags":["tools"]},{"location":"tools/uv/index.html","title":"uv","text":"","tags":["tools","uv"]},{"location":"tools/uv/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","uv"]},{"location":"tools/uv/index.html#introduction","title":"Introduction","text":"<p>An extremely fast Python package and project manager, written in Rust.</p> <ul> <li>UV Docs</li> </ul>","tags":["tools","uv"]},{"location":"tools/uv/intro.html","title":"Introduction","text":"","tags":["tools","anaconda"]},{"location":"tools/uv/intro.html#installing","title":"Installing","text":"<p>macOS and Linux </p><pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <p>Windows </p><pre><code>powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/uv/intro.html#convert-a-repo-to-use-uv","title":"Convert a repo to use uv","text":"<pre><code># export existing environment\npip freeze &gt; requirements.txt\n\n# create a new uv project in the current directory\nuv init .\n\n# install the packages from requirements.txt\n# only installs in environemnt won't touch pyproject.toml\nuv pip install -r requirements.txt\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/uv/intro.html#init-venv-on-a-freshly-cloned-repo","title":"Init venv on a freshly cloned repo","text":"<pre><code>uv venv [venv_dir]\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/uv/intro.html#activate-venv","title":"Activate venv","text":"<pre><code>source .venv/bin/activate\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/uv/intro.html#install-dependencies","title":"Install dependencies","text":"<pre><code>uv add [package_name]\n</code></pre>","tags":["tools","anaconda"]},{"location":"tools/virtualbox/index.html","title":"VirtualBox","text":"","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#contents","title":"Contents","text":"<p>{nav}</p>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#introduction","title":"Introduction","text":"<p>Oracle VM VirtualBox is an x86 virtualization software package. VirtualBox is installed on an existing host operating system as an application; this host application allows additional guest operating systems, each known as a Guest OS, to be loaded and run, each with its own virtual environment. Supported host operating systems include Linux, Mac OS X, Windows XP, Windows Vista, Windows 7, Solaris, and OpenSolaris; there is also a port to FreeBSD. Supported guest operating systems include versions and derivations of Windows, Linux, BSD, OS/2, Solaris and others.</p>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#links","title":"Links","text":"<ul> <li>Virtualbox Official Webpage</li> </ul>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#useful-commands","title":"Useful Commands","text":"","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#change-uuid-of-a-virtualdisk","title":"Change UUID of a VirtualDisk","text":"<pre><code>VBoxManage internalcommands sethduuid copiedfile.vdi\n</code></pre>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#clone-virtualdisk","title":"Clone VirtualDisk","text":"<pre><code>VBoxManage clonevdi /path/to/existing.vdi new.vdi\n</code></pre>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#shrink-dynamic-image","title":"Shrink dynamic image","text":"<pre><code>VBoxManage modifyvdi vm_hd.vdi compact\n</code></pre>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#resize-virtualdisk","title":"Resize VirtualDisk","text":"<p>After resizing the harddisk file it, the partition needs to be resized to in gparted for Linux of Disk Management in Windows</p> <pre><code>VBoxManage modifyhd YOUR_HARD_DISK.vdi --resize SIZE_IN_MB\nVBoxManage modifyhd pentaho_vm.vdi --resize 40000 # resize to 40GB\n</code></pre>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/index.html#access-to-shared-folder","title":"Access to shared folder","text":"<p>In order to access a shared folder in the guest os you need to add the user to the group <code>vboxsf</code></p> <pre><code>sudo adduser $USER vboxsf\n</code></pre>","tags":["tools","virtualbox"]},{"location":"tools/virtualbox/intro.html","title":"Introduction","text":"<p>Oracle VM VirtualBox is an x86 virtualization software package. \u00a7VirtualBox is installed on an existing host operating system as an \u00a7application; this host application allows additional guest operating \u00a7systems, each known as a Guest OS, to be loaded and run, each with its \u00a7own virtual environment. Supported host operating systems include Linux, \u00a7Mac OS X, Windows XP, Windows Vista, Windows 7, Solaris, and \u00a7OpenSolaris; there is also a port to FreeBSD. Supported guest operating \u00a7systems include versions and derivations of Windows, Linux, BSD, OS/2, \u00a7Solaris and others.</p>","tags":["tools"]},{"location":"tools/virtualbox/intro.html#links","title":"Links","text":"<ul> <li>Virtualbox Official Webpage</li> </ul>","tags":["tools"]},{"location":"tools/virtualbox/intro.html#useful-commands","title":"Useful Commands","text":"","tags":["tools"]},{"location":"tools/virtualbox/intro.html#change-uuid-of-a-virtualdisk","title":"Change UUID of a VirtualDisk","text":"<pre><code>VBoxManage internalcommands sethduuid copiedfile.vdi\n</code></pre>","tags":["tools"]},{"location":"tools/virtualbox/intro.html#clone-virtualdisk","title":"Clone VirtualDisk","text":"<pre><code>VBoxManage clonevdi /path/to/existing.vdi new.vdi\n</code></pre>","tags":["tools"]},{"location":"tools/virtualbox/intro.html#shrink-dynamic-image","title":"Shrink dynamic image","text":"<pre><code>VBoxManage modifyvdi vm_hd.vdi compact\n</code></pre>","tags":["tools"]},{"location":"tools/virtualbox/intro.html#resize-virtualdisk","title":"Resize VirtualDisk","text":"<p>After resizing the harddisk file it, the partition needs to be resized to in gparted for Linux of Disk Management in Windows</p> <pre><code>VBoxManage modifyhd YOUR_HARD_DISK.vdi --resize SIZE_IN_MB\nVBoxManage modifyhd pentaho_vm.vdi --resize 40000 # resize to 40GB\n</code></pre>","tags":["tools"]},{"location":"blog/archive/2024.html","title":"2024","text":""},{"location":"blog/category/rust.html","title":"rust","text":""},{"location":"blog/category/macros.html","title":"macros","text":""},{"location":"blog/category/format.html","title":"format!()","text":""},{"location":"blog/category/println.html","title":"println!()","text":""},{"location":"blog/category/print.html","title":"print!()","text":""},{"location":"blog/category/hello-world.html","title":"Hello World","text":""}]}